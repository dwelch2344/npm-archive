{
  "_id": "@serverless/platform-client",
  "_rev": "175-2a11d8176c21e14421cb9e294bd23358",
  "time": {
    "0.0.1": "2020-01-24T08:04:43.173Z",
    "created": "2020-01-24T08:06:05.306Z",
    "0.0.2": "2020-01-24T08:06:05.698Z",
    "modified": "2023-11-16T17:26:43.995Z",
    "0.0.3": "2020-01-24T23:46:11.989Z",
    "0.0.4": "2020-01-25T21:02:37.443Z",
    "0.0.5": "2020-01-26T01:31:16.578Z",
    "0.0.6": "2020-01-26T01:31:40.625Z",
    "0.1.0": "2020-01-26T02:30:55.584Z",
    "0.1.1": "2020-01-26T02:41:52.083Z",
    "0.1.2": "2020-01-26T02:42:05.102Z",
    "0.1.3": "2020-01-26T03:10:37.988Z",
    "0.1.4": "2020-01-26T04:40:16.192Z",
    "0.2.0": "2020-01-26T06:43:47.733Z",
    "0.3.0": "2020-01-26T10:07:05.379Z",
    "0.4.0": "2020-01-28T00:17:49.524Z",
    "0.5.0": "2020-01-28T07:45:13.224Z",
    "0.6.0": "2020-02-03T17:48:32.005Z",
    "0.7.0": "2020-02-03T20:54:41.809Z",
    "0.8.0": "2020-02-04T20:50:06.284Z",
    "0.9.0": "2020-02-05T09:37:47.351Z",
    "0.10.0": "2020-02-09T05:10:22.079Z",
    "0.10.1": "2020-02-10T01:51:23.013Z",
    "0.11.0": "2020-02-10T07:35:41.950Z",
    "0.12.0": "2020-02-10T07:43:23.114Z",
    "0.13.0": "2020-02-10T07:58:05.808Z",
    "0.14.0": "2020-02-10T08:09:46.638Z",
    "0.14.1": "2020-02-10T09:31:15.866Z",
    "0.14.2": "2020-02-10T09:36:20.689Z",
    "0.15.0": "2020-02-11T09:08:17.708Z",
    "0.15.1": "2020-02-11T09:19:53.877Z",
    "0.15.2": "2020-02-12T23:47:21.965Z",
    "0.15.3": "2020-02-12T23:57:33.888Z",
    "0.15.4": "2020-02-13T00:01:18.490Z",
    "0.15.5": "2020-02-13T00:08:55.533Z",
    "0.15.6": "2020-02-13T00:59:55.608Z",
    "0.15.7": "2020-02-13T01:23:45.654Z",
    "0.15.8": "2020-02-13T02:50:47.420Z",
    "0.15.9": "2020-02-13T02:54:28.250Z",
    "0.15.10": "2020-02-13T03:00:39.391Z",
    "0.15.11": "2020-02-13T04:27:50.034Z",
    "0.15.12": "2020-02-13T07:00:29.732Z",
    "0.15.13": "2020-02-13T17:27:47.442Z",
    "0.15.14": "2020-02-13T17:31:27.582Z",
    "0.15.15": "2020-02-13T17:34:26.477Z",
    "0.15.16": "2020-02-13T17:43:21.198Z",
    "0.15.17": "2020-02-13T17:47:55.561Z",
    "0.15.18": "2020-02-13T17:50:08.384Z",
    "0.15.19": "2020-02-13T19:04:15.976Z",
    "0.15.20": "2020-02-13T19:26:46.243Z",
    "0.15.21": "2020-02-13T19:47:20.703Z",
    "0.15.22": "2020-02-13T20:05:04.164Z",
    "0.15.23": "2020-02-13T20:30:49.041Z",
    "0.15.24": "2020-02-14T08:10:25.245Z",
    "0.15.25": "2020-02-14T08:40:47.933Z",
    "0.15.26": "2020-02-14T08:50:21.220Z",
    "0.15.27": "2020-02-16T22:54:18.508Z",
    "0.15.28": "2020-02-17T13:22:08.593Z",
    "0.16.0": "2020-02-20T11:58:38.247Z",
    "0.17.0": "2020-02-20T19:31:12.818Z",
    "0.17.1": "2020-02-20T19:42:33.654Z",
    "0.17.2": "2020-02-20T19:46:31.855Z",
    "0.17.3": "2020-02-21T03:22:19.478Z",
    "0.18.0": "2020-02-22T00:46:02.706Z",
    "0.18.1": "2020-02-22T00:50:30.796Z",
    "0.19.0": "2020-02-22T01:38:43.522Z",
    "0.19.1": "2020-02-22T19:57:50.309Z",
    "0.20.0": "2020-02-23T21:40:08.973Z",
    "0.21.0": "2020-02-23T21:46:20.400Z",
    "0.22.0": "2020-02-23T21:50:20.679Z",
    "0.22.1": "2020-02-24T23:58:33.901Z",
    "0.23.0": "2020-02-25T06:00:11.058Z",
    "0.24.0": "2020-03-12T21:22:50.790Z",
    "0.25.0": "2020-03-31T15:17:24.946Z",
    "0.25.1": "2020-04-01T02:50:22.423Z",
    "0.25.2": "2020-04-01T09:28:36.931Z",
    "0.25.3": "2020-04-01T09:29:37.537Z",
    "0.25.4": "2020-04-01T09:30:33.276Z",
    "0.25.5": "2020-04-09T18:33:53.618Z",
    "0.25.6": "2020-04-26T01:29:01.486Z",
    "0.25.7": "2020-04-29T14:20:48.048Z",
    "0.25.8": "2020-05-18T05:16:23.182Z",
    "0.25.9": "2020-05-18T06:13:03.949Z",
    "0.25.10": "2020-05-18T10:38:37.166Z",
    "0.25.11": "2020-05-19T23:08:20.278Z",
    "0.25.12": "2020-05-20T00:45:43.932Z",
    "0.25.13": "2020-05-20T03:30:39.216Z",
    "0.25.14": "2020-05-20T04:47:01.224Z",
    "0.26.0": "2020-06-08T15:27:25.134Z",
    "1.0.0": "2020-06-22T16:29:30.954Z",
    "1.0.1": "2020-06-24T00:46:48.829Z",
    "1.0.2": "2020-06-25T18:20:06.337Z",
    "1.0.3": "2020-06-26T17:19:20.387Z",
    "1.0.4": "2020-06-29T14:29:46.592Z",
    "1.0.5": "2020-07-01T16:05:42.203Z",
    "1.0.6": "2020-07-07T15:01:50.126Z",
    "1.0.7": "2020-07-07T16:49:52.543Z",
    "1.0.8": "2020-07-07T19:19:46.560Z",
    "1.0.9": "2020-07-09T22:55:37.074Z",
    "1.0.10": "2020-07-14T12:05:33.800Z",
    "1.1.0": "2020-07-27T21:27:40.175Z",
    "1.1.1": "2020-07-29T01:38:18.561Z",
    "1.1.2": "2020-08-13T14:41:03.688Z",
    "1.1.3": "2020-08-17T17:50:48.427Z",
    "1.1.4-beta.0": "2020-08-20T10:13:24.753Z",
    "1.1.4-beta.1": "2020-08-20T12:01:08.907Z",
    "1.1.4": "2020-08-25T01:41:53.308Z",
    "1.1.5": "2020-08-25T15:12:21.759Z",
    "1.1.6": "2020-08-25T15:31:23.652Z",
    "1.1.7": "2020-08-26T17:22:11.906Z",
    "1.1.8": "2020-08-27T19:49:46.538Z",
    "1.1.9-beta": "2020-09-01T21:09:36.205Z",
    "1.1.9-beta.0": "2020-09-01T21:09:53.113Z",
    "1.1.9": "2020-09-08T18:16:08.139Z",
    "1.1.10": "2020-09-08T20:33:12.653Z",
    "2.0.0": "2020-09-10T14:07:19.714Z",
    "2.0.1": "2020-09-16T18:11:41.539Z",
    "2.0.2": "2020-09-17T14:28:19.758Z",
    "2.0.3-beta.0": "2020-09-21T10:00:13.232Z",
    "2.0.3": "2020-09-21T21:21:54.953Z",
    "2.0.4": "2020-09-23T19:51:04.422Z",
    "2.1.0": "2020-09-25T08:23:42.654Z",
    "3.0.0-beta.0": "2020-10-05T16:51:58.154Z",
    "3.0.0-beta.1": "2020-10-07T14:12:56.263Z",
    "3.0.0-beta.2": "2020-10-07T14:17:00.362Z",
    "3.0.0": "2020-10-07T15:01:57.254Z",
    "3.1.0": "2020-10-10T15:26:27.141Z",
    "3.1.1": "2020-10-14T16:14:10.616Z",
    "3.1.2": "2020-10-15T12:52:40.056Z",
    "3.1.3": "2020-12-01T18:51:05.092Z",
    "3.1.4": "2020-12-03T21:18:26.484Z",
    "3.1.5": "2021-01-06T18:31:31.505Z",
    "3.2.0": "2021-01-11T16:20:00.209Z",
    "3.3.0": "2021-01-11T16:45:06.876Z",
    "3.4.0": "2021-01-13T17:44:50.257Z",
    "3.5.0": "2021-01-19T01:46:51.502Z",
    "3.6.0": "2021-01-19T01:54:25.855Z",
    "3.6.1": "2021-01-19T20:04:05.959Z",
    "3.7.0": "2021-01-20T08:12:43.654Z",
    "3.7.1": "2021-01-20T18:51:29.132Z",
    "3.8.0": "2021-01-21T01:07:46.469Z",
    "3.8.1": "2021-01-21T17:17:59.776Z",
    "3.9.0": "2021-01-25T08:42:16.293Z",
    "3.9.1": "2021-01-25T17:38:37.141Z",
    "3.9.2": "2021-01-29T20:44:12.183Z",
    "3.10.0": "2021-02-01T16:56:52.710Z",
    "3.11.0": "2021-02-03T18:46:10.673Z",
    "3.11.1": "2021-02-15T12:03:29.708Z",
    "4.0.0": "2021-02-15T16:56:20.535Z",
    "4.1.0": "2021-02-19T16:45:25.610Z",
    "4.2.0": "2021-02-24T10:50:39.131Z",
    "4.2.1": "2021-03-19T10:46:39.319Z",
    "4.2.2": "2021-03-22T12:07:58.587Z",
    "4.2.3": "2021-06-02T09:55:52.929Z",
    "4.2.4": "2021-07-13T17:11:10.894Z",
    "4.2.5": "2021-07-16T14:36:33.763Z",
    "4.2.6": "2021-07-27T14:48:22.787Z",
    "4.3.0": "2021-08-23T10:42:28.146Z",
    "4.3.1": "2022-02-01T21:26:27.130Z",
    "4.3.2": "2022-03-01T09:51:34.166Z",
    "4.4.0": "2023-09-15T21:01:43.106Z",
    "4.5.1": "2023-11-16T17:26:43.741Z"
  },
  "name": "@serverless/platform-client",
  "dist-tags": {
    "latest": "4.5.1",
    "beta": "3.0.0-beta.2"
  },
  "versions": {
    "0.0.2": {
      "name": "@serverless/platform-client",
      "version": "0.0.2",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.0.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-bVxMVYca0rkmlCHJjCvTU1jquqNGkMxRYoMk94YJnbFe+PoxGneEi5JtGZyWIY90xQTwCTS4MaiI3SwVPpV6uA==",
        "shasum": "a798ac99f7cfc607211fcf596767941b9c550968",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.0.2.tgz",
        "fileCount": 5,
        "unpackedSize": 9319,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKqVtCRA9TVsSAnZWagAA4y4QAKLmzPw8IfJKoIm6xOIK\nbb5zOlpPxLdleruKOfqeyLPy59nh/JEw4EM63cQucRE+NA28aAm4aZZSwrDr\nDkZEuBQj7BUkq9mcMdVQ5dthw809ZA5xgftuw+vq57MisoYovAT7EqNlVH0Q\n0P55rqkLEYLVqDJMZNjr6ga6v+pzFj82LUfAQjv+oXNXRRdkW2iHaF+HqfWB\n/5NKhI6Xh29cLagUxAyA8KcYL8ws3iA5eUbSHKsqybKl5dMxTNp/5f7eBFQC\nWoSxu+a+6kmYrdCLzR2n6wCJGClEVh/6Y738KoovrdZAjrtxj2e07o1wTQut\ncDezZ4md3SD7fQS9mmixuADAjxMfmNitY/DDOpmZw3TYtuMq2X24scGy8+IP\n63kkqYY0hP9zjlxtcPO1hsA9j/bvAKeRzme8mkI7vuXVJm5mxB1kgxitAdO+\naHHIZbfj4KhaClDuK/kdA4GP76oTohiJHsw24XHTgwFn1xrx7lbSYbdQyowr\nu2qPVwFYoVOl8oc0djXsrQZ7GkwQWZNP+Mu99NnTx00FiFXWZLmqZzC52IDr\neG+AN2C0ZK9nBOLNiqeWuGWYy5iJ15pAN5CPoV4hsYaM89Ztz0KE+hQn6K2H\nMjAZ+eycExZBdI4ehoe3A+4//WGJfsAe/qqrCU3p0CELzsT36VsTzZtKAWAh\nUqx8\r\n=FcRP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDuOhc7v0Ex2eOEdHwIl94Itgjv1on9f+sovVyLsyCmBQIgSW1QS9JI7J3WzjQ2Sz7D6BbDNaR5KbTTS91hTf5ecPY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.0.2_1579853165540_0.5510048315672025"
      },
      "_hasShrinkwrap": false
    },
    "0.0.3": {
      "name": "@serverless/platform-client",
      "version": "0.0.3",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.0.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-4ny2MFSyqbUSsoGh8XJqezuJ78/N++rw4lAdHft7MBZsxZwOnUUj5pMf0QyEfcP4v6DFsxrPOqntcbumKMXR8w==",
        "shasum": "3e451dae10df287854273f8c518dca90c4fa9786",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.0.3.tgz",
        "fileCount": 5,
        "unpackedSize": 9314,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeK4HECRA9TVsSAnZWagAAuMUP/1piLv5dsC4G4hScC88A\nAlg9q31q/AfeToigpGeVOl3PoUFt0rFtIrKEht97YnkjS+Z3373Ic2C02tgq\nzBk2+3kn5gIxvQplx6NzzNau8LmwN6LErjECzBEmrbHk3EqACCDjaljKPu5F\nlOK4ukVcN6DT+2E/AFPz0FEZINyaVcAUjSmF1OtbfvUCCj7b6APiE0nghwQo\njE4ZTJM5KmFoIp1PzEiMJOzFrLzhVQzLcVncxlxLWVIrRzLk+HyTv74p0f9s\nFWoat0shBf7o6TA0+aryLScWkg9XI2vQ72hBPUYtXzuO9uYNeaP+vIcJmB2M\nHmzsUuiMYF41M2QvvJLPfhqAbUHf6IervlrIHN+14su+bWQIaZzVaNlNzPbT\n087hHlDlZE0YnvrMsr4qEiZ2nETCoNa8RggHN/2sKNR1eNUpGt09qr01QCX/\nDjtF68DBcB0gpDXLqGBFuc1Fi8ajOe12L1JCLI7t3trKBOjcvIJYG/jSOEWK\ngnTVXDdOPMmoSDDZ2FTr/D8vNyW0uMaDE1bi8w4UllPduoisfkEIUX33trLP\nDVVWEbeaHW7GByT7OERj1tjzC0H/SJHLzjbhOqkaYOFnuHUSmeL/SqnzKQBx\nZ8vMtqZlzHKN0BqWRiw+WEf5bucuSpYcOreeag/+7Txkrq9rgFB6vnnBt6vN\nIVoA\r\n=Eopq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFUboMOlqETZmhYDk/fLMASAKPsVoKfsEFZINLhYsPjPAiALWO8iE0XuUXLQLbofxRBsAmKsvx1BTIt8Q38WWmwwUg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.0.3_1579909571865_0.8992240772297597"
      },
      "_hasShrinkwrap": false
    },
    "0.0.4": {
      "name": "@serverless/platform-client",
      "version": "0.0.4",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.0.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ME/pVS0POmaLsORqsfqXvNQxiKNdXp1DXj9J3SnJFkfMKX4QHA2/1ewgVehWnl+b60eFHAcI77GvAdfYFGCgEA==",
        "shasum": "109e6b644be3b5bd276a63671b3245bf99406ce5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.0.4.tgz",
        "fileCount": 5,
        "unpackedSize": 9588,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLKztCRA9TVsSAnZWagAA8TYP/2Sz01pjdiAn3JshuOq3\nzyi+/S6D1fpbFWqCmlgLzqTZdnQ8lDFDlw8youY2QlIA6GOmyoAtleKQxqrR\nQK3zgI1xvySNO+cOue4CSIRBUebdCS1TXz422adpGcQoUApCl2kYDXZ9kphV\nixosJVNd9gS8TKNfp87lTQJIT4UbdzivoBBjPcBf3F8vylHTyvJQhQBZBFIv\n3ry4b9BhYL+kU6jq0APsr/LgDKbyGg+fyVTH341JeFCmhNVSF2MG0gbMMlKx\nuBsrWCGkhM804DmzzQJ5DC2dOPCVcM9s4CNj5S/CYkWnhulXxQr58x0ltzLI\n479cSUONmzXkPYBIU9a4zXGWtmFbp4K21JWn30QJ3e/XBKY3/kUzYPBTbAND\niykqp5TBnn/w2QsnVEa4e8SMHs42uOaOwvKWargf+dT2MGC7OGRB2BGFGNg7\nq59wyU1agjg3XP4EGVtd7cW6dJsnaxz53MQ3hJb5t4eRTFllXZ5qr+aZgwyG\n71u4/q5iqpxtbMSUHOvplYJ+ghM2doAqE1BWmSO+O27GbC7aL8v5sv1qIgQN\nZhy1O+Zk2OG2W1CzPmLawbQqAvbwi7N+VvG/tejdc3o2hjuDOUs9b2r3xVba\nBT6Pqi0Oxv90D45aP5DdSr4bXtYqoYZ4O5INtCt/oVf0inNCe66QWWD7EOZv\nLKRl\r\n=2SYU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB+ychFVWkzN5xIH6xMv4VyiIj8XswG5+aCNR+6O2yzsAiEA4eln7Kgn0utA2KSdW6r++Op7BASW62c3ecpaNLB3A3g="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.0.4_1579986157301_0.6112500420549685"
      },
      "_hasShrinkwrap": false
    },
    "0.0.5": {
      "name": "@serverless/platform-client",
      "version": "0.0.5",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.0.5",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-0kbr9eKJpXBroq98soou1Y+mqaG9vkQC4Vcfu9KQhl0Pr/P5d4vU2smHvXWzB1n7g+cYZNZHsdBTtI1nCqS1gQ==",
        "shasum": "14beae15d526560fa8d05fd5b53c4f3bb5cdf568",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.0.5.tgz",
        "fileCount": 5,
        "unpackedSize": 9605,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLOvkCRA9TVsSAnZWagAAdZAP/0/mQZBYcn5UrWrEdTqP\niiDj28ujTqDcISxNMKO9Y1WQqDauJg17KSyxCzQBKW1sN8DZn1Cy8POH0X8U\ndUNRo8+XTPbdubVb9J84SMAJ4mnKhjGr8nDt66BPFnClZNoMwQ4+ggQHqIY/\nT3eh6pwR1ciShktLspunvGjhhyXaH0yBqdAuZIuCj4OS2hyU4EO5ltCcSJKM\nc5j1r9QqwcDfU2XudufpIqhZ5xCk+1k7UJQD7iNulY5+5RJ7omvBR04HG2cQ\nUcTpsdMu88lKJqEQSs/zuxE8jquzgseWMtuzgh4SSP9lI9WHqIvVWvY9KZMB\n3GVDEgHh/WSjA8kXP0ozce6J8Mo8tyKAHMPusVuBtyvyJrMnOJUznogZHjJR\nJI/dZVB6AEeDTgsA9bvME9+QpJ54P+fnvsmOP36dle3YKDGJ1SSmpjPi+Alo\nHNRMNMfy48Z/1gX1/BW8OfkJuoRshcdbdEF/3AyzoVOcffhz7ictdQVOuiMP\nzh0pZcHE8ozpCjb8AIKAu25sKqPI9Zbc9mps5KRXDaQQU5vRYzDLtP2NnQCB\nPMtcfJRhx/bWh8+aK5nF4yd1v+9TR6b9tifZYf9bh2S0JKw9sFAquT7mjJ7S\nwOzeYAwbfEbVo8O/gcSxUNrSCZxggdKfWXqVdfM9mxAtiBzvlUlS5NCGPy11\nwX3s\r\n=ErdH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCMTrdRN8XSIAUspfTckmi7PN04wqy3j8qyicIaElTyrAIgObJ4LBRd99jbdcrdUo04gaPdFSXjhSAqd3vWg+pB6DE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.0.5_1580002276415_0.023738769536526982"
      },
      "_hasShrinkwrap": false
    },
    "0.0.6": {
      "name": "@serverless/platform-client",
      "version": "0.0.6",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.0.6",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-LA/EhOy8g9iVMZfTxNAmC8IiVEhwCZOJ8+DuK079N05kT5Rnso41MtFWYvnEMZRo009PHI6X1qEcroif8meo2Q==",
        "shasum": "0f40398e1c237506b8e3b7811785653bd82af034",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.0.6.tgz",
        "fileCount": 5,
        "unpackedSize": 9605,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLOv8CRA9TVsSAnZWagAA7XAP/jwvpFrd0mX/qoHY6LJU\n68MclmU3ICiRwUgyfFmo0WRT7tNCcHrmxYAMVUAq7ZTzhJ32Q86Azp72UEeg\n+QVxMaP7BIfbGNTyTpDSec2ctvtFSIZGhbg7GJv7v288XOGGpCJF4fxZlLa1\ni8uovPGZ5jsDJDkgVKmErQDb4BW33lWWFkFjPq8zLoz/jMkvXJ6Eb5YPrtrS\n0iJwioc0BDi+SC5moPQ1VAeqN0ax3clBykifnmAVSxjiyXCuQTq360oZtmvR\njTnlk/meGHN1ACWnS+hb63WdFcHGAa+b81H2yltpiFddHOhdmb+KEvf17q2c\n0ECoT6gj4Qd29ltgVCy1ujHmkhwPV1CdWmLPBTWGG4duPmHja1mrnn/tAOKZ\njMnllRYMlFOYJbCgKN5+JhadtOzfshfcdv8cLBflNdn26g04pL0coSXLNV51\nfrKG8HF5S+Qet9mfkeiTU22Pi/pVLtGoT+SlefGQxXmQGQaM4DwuSz8Ostpv\noGAa+HIq+fneyzNWiCzTmaF4UYoS75Ii8hoMtXzj8In1np+oMsnS5Ct+G0rB\ngTBzTEr0HtNeVilHRYCjdMpJliTACNtZ+hQN7laDXQHTWkThMIB4lFGVFgzs\nbIAp2KC9foFkZDhdopenwPT9Z6n+DmB6qrXG3CkbCXS6wvw7/3B3VKLUMamJ\nVhBl\r\n=Yedk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF1wRQqIqM0GAb+B++HYtOPTdgzSiuRezm384u1emJt3AiEA6491XDa0A+DWORZ8eQ4oF00UA6B09I7U0IIcJh6EjZ8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.0.6_1580002300476_0.16035808352574032"
      },
      "_hasShrinkwrap": false
    },
    "0.1.0": {
      "name": "@serverless/platform-client",
      "version": "0.1.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.1.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-5DhLZDgMvos5G7j88YbYtpXi63qYcfH+4lEO9i6ef3lYzJzbLkNTC1IuzI9Rws53LfUvMaU4rZucDoTBFeUtDA==",
        "shasum": "760164353c3d342d066b37dbbff9f35aa69113b9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.1.0.tgz",
        "fileCount": 5,
        "unpackedSize": 10600,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLPnfCRA9TVsSAnZWagAA1LAP/if2Zye1cAOvuvISj76+\nXSUl2YhIx6SeQx37OrG6F0wnGd2Ksg4ZaF/yOuH+/0jimMxdyy+u4aTP+fpS\nVvFiG2Xcw/AP+6fTN9mK3C20bEmaj7zQvTQAFrTDa46e7IDV+36M3M9qE86P\n7Ouyadc3x6CvZpEivH8oZXTjii/srDZILL5+LLyXbZSlc20onQQRyz0Nujrv\nTCK1dyxtTr2uhV+i6hW0JK4Ka7GGqKS0kT3Y1gG6bGS018SvdJZ+Ntizsii0\ngc61r3bm2gU53Om3OAS5/GkmpZ3QlAUgxJBdcYgc6iYfCVdyJ/BVYAjvt3cO\nsx9/n5szD1JfEBpf915uWPuZgB4bwYLFDg3VIkuJ0UeneDw5twbDdNlIe8MW\n9Wkf3cZ3avBeZUhIc5H1eTn3/VtUvHnav9kd5w6LBFBON6gMG2kU9nsEbj/w\nQR+T/EJomdjIyPS7RRfnrH8VV9mw+RgDuYLPL5XXVfJwQqaVxdkKiADfpapb\neaZzuiXDsxJ5r3deEqu1vlJf9HsvCstBsypLXFNQ1+S3jXSvX7RlEw2O4eeX\nqZhK1zQolVBBe+xNBGN9mTlhhJX4bRD8iC+L5JiI6lrZJVDkXH9Z0wVkcE6/\nxuPLFPj414FPqEzgCoowzocpsaqEoBSE1WvpVqq7NUdqj1X1SItlhRGGcjkQ\n2sAz\r\n=DAWF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICBuwV06sV+44NbXd3094dGsV60XXwqslHJVkYfLYV5cAiEA/lpURosQSE2lLQazMd4rp1JTarxNT66tbM/u5V2Y/1o="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.1.0_1580005855471_0.31383240565356685"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "@serverless/platform-client",
      "version": "0.1.1",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.1.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-6EliUFWS00omkLKS5+do0WLlY3frwt0I8Qs9jv/T9QVqAZLc8Ov/V6EJ0qmF0o+USQTuOISpuU94KUpncuabAw==",
        "shasum": "6bfacad34b9a617a871ce0e6d0fd010721378572",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.1.1.tgz",
        "fileCount": 5,
        "unpackedSize": 10829,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLPxwCRA9TVsSAnZWagAAlLgP+gP0bASlZwyDFc4EJVfY\n0tAcLLkNyr/yzorpa1zRtaibwmngwkS0OdQpQzhKJmVVxAvyzB42LfXOOBKo\n8tMEP+0F+Opww3E7O0MfxIaVsfNCIftoPtzBbVdjGn6Vj6PSOmh442HRVByg\nxZXecBVrtQVf06cjJeHvoLV/KpBgZFp295jZGBn3krI/8EULGLoaFoC2urSI\nFl0+ydyltAqe16lW+zKC7jJA1Ix583/5yg1KO1nno63Ysu7tBFt85dwz8SyP\n5BS42DK5pAfcN4iQjWakp9Bzmx+WikfQz0fJX3WOBolhO2B24bWu5/BdBr/j\nbx27GKGPo+O0y1T1vRFy/05hGVm2rth7ybz92RgnKeab/xeRSW2xXLBXpaoF\nry4020PZt1Mlz+wy8h48lN2VSXF/7WjFUFHo9Yc0fHnQF8MGH+nel09fmOUe\n9d2wCRUFrJ7I8GETY/7line0OxRLxINL9Njq1fkSd3ngVRWPSFgH8gDyjlWM\ntZ+dyDf9v7b/YtCqtWa6xDCTRvKYr6kyV/Y55xq7QzP3ZWDvJuk7tuQp0H0F\naYLSdOfaq9G1gHRTSpj6C1Uih8QUJSti2wGAyapPAiHc3bDxW7TzdHCUf1wJ\nEu/vpQjMaR+UNYDdnkIvaln4kFBSG6MSAZlLfaFsROsDeFf+Bw651rbL2lNF\n3S+/\r\n=m9Sh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD08FNVia7fjJLhTiwTHM0Q5D0V/dYvVbYINFXPpGiGUgIgA6cTLgIG7wJA8CBfTWvnshsK2Ngbpg2vto1acBJTtnM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.1.1_1580006511885_0.47073655744936915"
      },
      "_hasShrinkwrap": false
    },
    "0.1.2": {
      "name": "@serverless/platform-client",
      "version": "0.1.2",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.1.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-DlvMnzye+4mL8n8Q8PyqZYBqcSn6wWgYn5x6KRNFnshuXVV56SKsethHMORQwNZFQxysZELZ+Wwvws6Rb/G8qw==",
        "shasum": "53f0bb3c96fdac12f23d306424fe6b304da15e3d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.1.2.tgz",
        "fileCount": 5,
        "unpackedSize": 10829,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLPx9CRA9TVsSAnZWagAAnZcP/A2Qs3jKGymNOcs/eke6\nzPiJa6pq25B1UJiAviXmEj77mENs8IW86aBrEaTyGAon6m+5ngzSAHltnfAS\n07vcpDYu+YrB6fxbi1xhc8H/8F4pZqckhZgm/uBA0RDOIsK3DYZiwhCWo94T\nRAySE59jRYxT1GSKhWx6I6Rgsjomdx6shsm1LxMyxjJhYOLdTiYHnpuRuZdT\noKKRNPDLcYx0arumlHQTYPCO5BgwEPh6u4JKHh0EOHUwhQ2HrX15Syi0Xed0\nvB8KeQJ/16udK3/pEwpz7rDHr1bVSP1ukuXtzkYVrFjAwqonW2HIAN8wlWoj\nYlULGLWlmcnyTJs67xBFDGOGfP2qO/u19owaO1DBUjSalI31kKjaY88eZF2O\nNQf6RD44fklo0WPTW+X4NE2gaLbfCrMwGnR4hEkOCHDJlZsgZXszXvFmRvOL\nqA1URN86Nn5MJzGcdZR15i6hrBm4pyl6yW7JUAeKx1raMSfW8A+kEFbrcdtN\nBYpPKVdlA0Vz2DQUS4Tz6vsHYI23NTL8H137iZ3lmAFHdMVgRtQcymY6lwga\nZCX8imFDVLam+C6YJqvPiwLzPWjjpL1jD+FrbzYQjs0cd/YegthITSvavfyI\nHrhZgHnKmjAFqSIognreX/RvEX37m+KIwlf73awCWA/5nMNAFps22NySQn7T\nPjOh\r\n=Dq1D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDP4cATP3Ay9i5aSYWLjs/YooJDB2j+FVou5P/gqsUSpQIgXMhJcmvr2017D4XSJ1yq6p2DeTa0jJVw1TiIzx0+vQ8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.1.2_1580006524921_0.9474160780085294"
      },
      "_hasShrinkwrap": false
    },
    "0.1.3": {
      "name": "@serverless/platform-client",
      "version": "0.1.3",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.1.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-eZqmBP/7fAnA6KWWnSb+bgWS3nSUCr2dTlufGtu68TM02RNjCFnP01Dvv0h0n5s5wzf+dPMDxqDmxtIVv1L1FA==",
        "shasum": "e1a2786c24b388f4a5648c51ba680667b44eaf6d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.1.3.tgz",
        "fileCount": 5,
        "unpackedSize": 10942,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLQMuCRA9TVsSAnZWagAATJAP/1WiucCBx8luC76X2UYR\nivBtdhkxHc3c985I6c/OUgRGAurghmr7zxzaZfoPjdFnDULa8j/wQMgroTjO\n8CK6L40jiPuDlxNGvxoGgGWn5CVZOIuUztuiMSxzl+HssuSMLWYLiAhdFe7L\nDnyFLT3XZSuXTMXc9MD9sSmyhqDj3NFDAJFyBT8VDgdMCLApgnYlJzMXXCXu\n2AZMQd3FYG77XF2P5hU/DO2klLy8kJAO6iYTriepLWGONdXMI9ZJXIfsOtjq\npGAO6JZORoysKXxO32DcrmVeTZazIq3V2Mb1QUs0ZKffNacdMcPF790NFj6V\nJFrIu9ZFNXKJI2bS+1nuhs5zMwtgS2IwOaOXCxBJ4918I63q2zb+HmSVgIVi\nfpWJ7TjE/jjCy3zwpqwdI0Xn48cO4FAKl9mKQt7M85KEC1wVpEzbjn13wHW/\nL8OBr4OwQiRFAtvlaORplcYMjtvqlSoMuFkBKME4OeEkz+2icef3CwM32SDu\nIOvcc9nQnbUEQox99/hdtGW23UoQhrSRuEVc9dvpJATKCTssPlY9bXXJcq2U\namV6FFniCnijAlpprR9wHS6RrS/OCj2UsrhGWkIskat0JkPOUB/nz4hHS0hG\n7DLNCdmWPn8PRXNciyv7GWS2nWiRCWGU4xftEFsDcQH3mBHlZ8yJ0CK5nB0C\npKxf\r\n=Bk2h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCIH0emdDylOawQUDEhCMgpEEf3SC60vkWAv+MsXL8JxTiAh95aUMk+ynjuewSq5Fp5WQT0XsUnLzK4m1GkkyNGVr5"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.1.3_1580008237770_0.6593705320503096"
      },
      "_hasShrinkwrap": false
    },
    "0.1.4": {
      "name": "@serverless/platform-client",
      "version": "0.1.4",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.1.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-v4G5w8lUf1YhA9hII7Jb+nj3xS2qJoYEMggf/+gac9An/XEDkznnVhp+sJbnNOT7+NaDiSNQkpE++vkLOur6pg==",
        "shasum": "1d56412656532fa2a7a86cb1cea2863f28a42b23",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.1.4.tgz",
        "fileCount": 5,
        "unpackedSize": 11259,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLRgwCRA9TVsSAnZWagAABvYP/2GGGDojiWcmb3UjDVyI\nw99IkyNB+6T8600oeYl5UYLNnD2SeNSXDbPV4426sloSp5nblp7OlYXaC3sQ\nUmxhvEtixq9S8bUxqPSTzMGqZJExAnZqYhR7LBl5o75Zr1DQDf98QpwyRaZU\nwDrSNWXY78Dv7AYcpLVGj4At65jV2xa7sp/4nh+du2FmeMhcYzphYWPqWokp\nAnreCHlbVttauXyeywVQ+kJNG+uCDRCkjKuB8T2lmTO01RCO/aq5SzJS2ie9\nVmvdibo7OBmeLBfpWDflVFOGV3+4+wpbt0vl0M9O3zkO4xs+D3sP3uj0xyuy\ndpV7CFSzF37FlJ48FDJFi9A9eVss/WAeI3x7YeUZJweYDh9mJeltrAMSxP92\nM/PMyD80DsQWcnZjNg2IyFZR+MdFM568fj9TimCsFm5U5FQyNwe9DCisJqoa\ntzYm7bGfKE9TvS2gIMklC1fo4M2BUKwLGb/cLTDMrmzBrFxScLUB7hze2nIg\n3N9Fr0qg1jLgUj6OeJLokUo18MwMEcM0irP6o4rqz5Q7GSJFew4y26Wf4aNy\nLcihjCpTtr/uMW+r5pCqGPn9Is1nNm3CrEQXlJtvdRpQsOtXAAAwxwxhOV3V\n3KpBtIbnVSYepxFNLuUm44skjaQMu5ul4c39S9wdtWDjwfTpj09QEq+sH+EQ\nbCXA\r\n=qy9k\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDzjDMzYG+rbOjJqRay+bgTWZEgeb4jjMHCgcWjLBsRoAIhALfoE62DCcG4OGKs7UZbU+Tl4Z3I1dgDFJ9EHyhhtXsi"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.1.4_1580013616088_0.6058710526625903"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0": {
      "name": "@serverless/platform-client",
      "version": "0.2.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.2.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-RaX/hSqJ3dg5fWkbRhf5KtYVOEtiiEPnP9uQ+fYSYNCKspJIIr7NyfgtY+MS+B2fAjoZ9GU8qdqF8u6irGDWMw==",
        "shasum": "5dc1f074fd311befbfbafb39d3b8f9d5caf822a0",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.2.0.tgz",
        "fileCount": 5,
        "unpackedSize": 11088,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLTUkCRA9TVsSAnZWagAApt8P/jdGnu5vmsBHPlAYHyN8\nLnlOIso+V5VbTm0TB28WkvWnDZQZ2wheYASgYrpQB6OxBDU6NZWo7YxYEB43\nHkMACuqersheAOX1QeKaAEkqVjOsbRi28eBSTTB+fULajBw5HfYDJmgNQbly\nNQAD/d9qJhNe/qZI8E6FUyYhOx9bZJRe9z3ZysyHqvQYbVvyDpC8TzmCeaR/\notBXjWal4GePWBGy2YpT4FkPAFGTdrIDTDBI4AFP0zPH0NkjAONM07Sh4lub\nKqx6kO6FNoiq7EFIf6xZ/zrzcXp7rFX3Gaz21JUolfQSaVGOK+FXSh1fn/kA\ntrsdCg5MfYZj119MKOria3ZVgCXChFK6vhqycbGMalVlfTNXgxnEq19LlBRf\nn2BX7h6LBhUY/rvQw2ZFmZn7eNGo1el8svPXnAshvD74lfMRBoLwa0Xte6TA\nBVog+t+645d0pmkR60jthqPD6NzuTblhBESjQ49xnVrj1HJfLIJreRfvzgQw\nPrFLztYH65ZL6NRGEAhCPngO+vPQY4CrRagzqcwR0o4j/dP3VH1Y8B69byPe\nId1Cy4UsuP5xD1IcNa4CNjfngMxXDlvnyl/4nG5ailhSKCj7c8rVYaL1ghjJ\nOYuHnin1r3d/6uCbTYZsapjhCxkg5zuxL7SzTomjuDf0dtVf3zPosDuVgAqi\nrUtk\r\n=Im7J\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDiGVP6AJuQc04ghqAtfkhXQMLf6F6qyKUAi41GavJJKwIhAPvgRN0D37xQblKWIARVdPXegEDlz0hplKrOgGQwPc/T"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.2.0_1580021027558_0.9584260557518569"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0": {
      "name": "@serverless/platform-client",
      "version": "0.3.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.3.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-4W3ATaKBWQzAMwvluVzYGq+USNbcV4iaddSVIBIVBovxpln9QiWPPOHr/J45mkOX6wp34cxWeD+kotoV8LXfBg==",
        "shasum": "205b10dbe80cb2da79ed25056f3649041566f67a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.3.0.tgz",
        "fileCount": 5,
        "unpackedSize": 11160,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLWTJCRA9TVsSAnZWagAAaFcQAISZfMvO64Ty8/jpD+o4\nUy48SOqSfjMrY/22li+7BfdkxGfpY5SvlI7mDg8cScog8fg+1IxSaP6r65wP\nuttiUDvhQiUTkdNO+2mOBaiYLnhiafLAq36TX2pHuoEHRNff4UoMZPxvS6Fg\n0rOhFuvpFlJxxgUErYE7MWaaGYz6BCSLW35AbpxOTF6GCqhedMhJfb7CAsuY\nESyJJFT6IolxP1fF4pCwgSdtvw1hUoA1oZmBRVQCiAOMUFgDwSTdc5Nqa8C6\nRnibbeHXAyIIAq2o5o+2lM+uyn6P/2LYSv7J/0yHVnJK1zrMsEYEYpqdNVsJ\nC7qlX1I9mo4Z39ivI0bwGYiIoOAYtRPoXDpcaUoUtrAg6JpGFvAkZT1DAFjP\nGZHusJ0FCtOCXCG2Hdwy6CDafy35olVtYLp4TXvsivSKM8eqkvWbyyZmjYG/\n64TLWWlKsZFGBHzAfMje7sCjwTxPcPZqE3R4X29MGNjDSW+KKpEbI57DU/+c\nwrWrMjDm3gBUDom1yQtJCuK4tMpA67AA8FQW33H0TAT3kHcmXCuywz1tEXT9\n+zmgqGICQ0uySyUtQXmCYXfBO5U1+9KHI2Uk4gEN4vM9RtudWEACq0paR6Ky\nEr7GSFE8rV38IliwfXCx+nwMYDTFjeFCHtcNCKXbx1SPr+oC9Rsfj3dUTo8C\nju8a\r\n=4UAT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHvKyBnlZnETy2FC+HuygHXgCj2/MCP5w8X8085M9REvAiEAsaBOzrjGeFLHiZC/sG22AYwPGEWL/FHg9a8UTf4zKJA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.3.0_1580033225130_0.9567525664100252"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0": {
      "name": "@serverless/platform-client",
      "version": "0.4.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.4.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-rBFZmBz7eE/5qv/T/Py6qqrr79Y3Ur7H6lp1ErVWm/nmEbJV3MC1IeDxHmwJaYYW2rw/3Ifb8kl1cs3FYOghXQ==",
        "shasum": "b50ea1cadc83b7d9e532bec4a736e765a0d638f8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.4.0.tgz",
        "fileCount": 6,
        "unpackedSize": 11414,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeL32tCRA9TVsSAnZWagAARXoP/ijx+EhUp6Q1qtTmwqAS\nzBJqO+hFPPQlNG8zQMTVJfOD922n2WPt9PHyEdJzrhaJzpWcQODJO6k99Hk/\nMpHVMbSJbFDoWkoxWsEAo+Cn809zDpLH3eh/a6pPUAf49PtF4tOfao6g7O6L\n0NSlbO4aNGBU6kCCb6GrZIssiuIVCasanl0GSkzjbn5/VsNDRHziw2lkRkTC\nsXW5wb7l4AYtnA7sCslZE7QYEU/L8PhSLNtdfmkm2oT2rG3iZisEtsAyEYN6\nWTDo1vqJeMqLmRdZ8Sp325BopL9NoKpPGC8yMAZCkTcFC6UE1Il98CFCCady\npTWAaXJsuOx8XMhWk2da3BJ6QhrypM8V1d7dPUWmB2+zoGOfjF4D3Lq0K8la\nizFOy2f5pBqP/OdmdoVym009Rh1KUVhjIvy2K/t9W3ReXbMP+IZiZay5Kb4R\nn3K+3TkI73LEmmigp+coD78vFb+DT3wkeCcbEqIEgKCisjgPlpbZ3K/P9jwY\nGkr4DImIdvvcguYXOWILdcep4eYwOxvec6RDiz4kD1qj8DQUWSanqfr1S3fr\nkA6GNFgA1QOflMpwwSSHNfnCUu0IWY9HegA/8fCjBRquSXZXSzKpNvcYDrnC\nYm1CRKXrEAiIgdUieUkR8WF3Uh2c6XvaeSsZQ9xvW9LLp7Y5Qm3cQZoHRR9q\nMVBQ\r\n=YiNm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIQCzg2r9Gg7DTnCr5hLKAPJKyqVT8AB3XP/hILom11jxdgIffk64PzNqmbWHD6dNxgYGk+ak8BZn298MO9zPmBKVpQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.4.0_1580170669362_0.49546010117097383"
      },
      "_hasShrinkwrap": false
    },
    "0.5.0": {
      "name": "@serverless/platform-client",
      "version": "0.5.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.5.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-xI7ts05YntnSpESBygDpkIHh5YFOsMW7edWG4ahraCawsl/7wTh/vxzcIcDQvjNNtNgKvve9cEkKqK6P7jV6sg==",
        "shasum": "9e5828a26481efce66f153ca754b27cdf439f563",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.5.0.tgz",
        "fileCount": 6,
        "unpackedSize": 11652,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeL+aJCRA9TVsSAnZWagAAfpAP/RXIys1OJKIA6ZpytVcW\nQFx9OlWka313dE3aMIBvVrINA/XG1O2YnXocgBjSXOl8dV+gzm3jhG+kBuvW\nXEQwqqiw93hIyXTdvyxBdz1Pjnq82b6qP0DmQTTU6tcuQoBQFxwuNaoHHAtk\n+8Z3dry0etFntNsYFK9xtTlH25exb8aPPmrkgg8vPyCzLnl+/iJB2DFVGrxU\nDR7BVNFzdkckGorJ4BMMe9tI295ZEn6FZRmEh94w7UuHjhe0cT9Ba+zK4GiR\nm9yc0iFC+onjFHIgYpoomWCVDn/MiW4jDSz6DvuUU84L2Mv0SW2x7ppUFZAv\nLNj5JCO5crvitT+Sc/y++oacTFxOjZ6WpA2GeDWj4O+CzM09PoaGdL8BzHWL\numL1QDvXHc3J5kRkMffeSRqjIWKnwarruvHugsCr0OlxfUDF933trOq4C1q1\nwghpNR9dnAItzQTLzPn2OtbUPIm0m/HjMNtL+S608+1dhGMgLHL2k0sSKWUQ\nMj/l607c+pA9265s9LMesNE/CluoDnCxtqi6k7VOnXZmp+XWy6lBC1q7AqFY\nmWM/uPlfzSj5ibMJXkteX626DduG1QLCtxmKpcW+PVOBgUfcHik20lrT5d87\nBOd5pvtatgt+pkKhHL91/cxLzzGf1vLVAQSIDOuD2E4m98DgoZy1QCJ8qpsR\nfnrN\r\n=TT4O\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDTVfVWpbzhgJ8sHX5aHKBr3swJAgym9CupZOJPyvrz3wIgU8SsqvfiDGMZ3ODvy1ru9kyegfKpv9DtUA2e5sg/KHE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.5.0_1580197513108_0.2252428390104666"
      },
      "_hasShrinkwrap": false
    },
    "0.6.0": {
      "name": "@serverless/platform-client",
      "version": "0.6.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.6.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-6R4HeJyh/+w4Tfgp4mqHSt64g7sun5xULqXZNlhzVgMypoZvJfB5ZQ1SdX8KHcaoFO+HH9IXYoqzBOsg5g8JpA==",
        "shasum": "20e34e39e94dbd935e0c780ebe55f757a0651091",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.6.0.tgz",
        "fileCount": 6,
        "unpackedSize": 11990,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOFzwCRA9TVsSAnZWagAAUIkP/iTCC8jCN9mkvTDX/W87\nQNcuwEwnlzIWzsGl13jyjm21GJbKanpB+8uIm+UtLWkf3hCkGK+S7TaXT3m7\n5/TaegT5qVd726Q/Ho/k25k1CZrNGstselUwRhuTmR5bbEsh4YwC3TckLNuA\njhACHTdQjNHIlLoURZBR38OuzKz6y1i9ShqAT7y0cx3xeG/dlFLXS02py/bx\nmGhAZ9TVOefGmNWlso1mRgQyIUVthfz7pjd1M/wjrErCbRt1Ns+Ygok3RKCH\nGKsdZ99ayegxQjYCINYfPLzQ4KyCbdJ6/vMlRVh627fj2YufIzA2glpcryTU\ncBcwxSUD49M3Miym/24OLE6GyiHOF3/bsh1BIFlHQk+EIpcO4O/cfGAmuQCP\ns8ylx3BpXw6UNO2qFLQDLTD/JXM3N2Hibw2DZQziUjm8w9zNdwXYz0qYWLOb\nSzVYdoAMjdvANT4n7nZI+kysnCD+Bikxdi426HZ/JBYHGoQzPc1r+rdWjjbU\nFdwomy8EPon46zun/MVliuWF3nDSOzuEvdfjS/MNegK9BayU273zg9UaXy7M\nz/W9Q6RiJeQUcFF0rlw2SrEnebnBkR/At+UfhAq7K9g7rXjArk4/1KdWEUTo\nSqqAOMK/JRDfPQKnhUKu6dShi83Ycn0RTcidFGad0rwYe1ksPiyQhrxiIhwQ\nDNhy\r\n=FD0K\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCb40fdmBFi6y2OQiVdh8zLo72/N2setng7TlHMPjm4PQIgL6wzqA59sU25kL/Pz8hvmXBI3Zz+Ut7ZbBlH2nxWdjI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.6.0_1580752111865_0.8628708806000309"
      },
      "_hasShrinkwrap": false
    },
    "0.7.0": {
      "name": "@serverless/platform-client",
      "version": "0.7.0",
      "description": "",
      "main": "index.js",
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "_id": "@serverless/platform-client@0.7.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-s/4swbv310EusLYx4R+JxZ+ecs2hFhfQBhK4q7p1uhyDeI+AifbiYKra7QIkqMSch9/ULTloo68VgYpwRKnSRQ==",
        "shasum": "6132d19a42d32c12583a70c287faecae32ef5310",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.7.0.tgz",
        "fileCount": 6,
        "unpackedSize": 12201,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOIiSCRA9TVsSAnZWagAAKj0P/AvyeYHolIyFebcwzMru\nToi5lUQGphcrDdo+OhRX7VkXVijSXfBHLXL7K/h2eMfyg8PkcONSE/Fekphm\ndnQaSqaZrE+4uyakS06U5vsVakMRsf5/PIxBX7KwegJrK+7DuPsIsGt/Ehtr\nUVCIE/OjzmIfJutm+HaLb9+NYmPp5tySsYH2/KF4UzpXZX6B3mXOTCHh0qNb\njjU0M/PkVaRmPGKW/jBFJi1/GmtrdpjyOZWdAZlJV2Afrf2T/rnaQ3hJQzS0\nrpOgH61gfrU+twRjlFUhVz5QNFRzmak/8jLf30iNt1mTzSwGICobv/CG3vLm\np7KSbCqUPNUpMOuFDegQgUFeONEqOMGViuFUOudIv8Id/+4sjdus9okPFl3v\nGejdEyRFR9W5ftmZ5lvEx5IXP8YDgUikMiKPWXdZFOnmmQ5wV692eWl/FTIF\nWTgxdUk70AhEysazFR8tISokEAd4Z/q0z/pIPlfnM4EVe/gLYicKUpnHY7dA\ncFTCIcgfm8JKSIRVox1DmLrkZYxtBsZm6Kbgy07C/mF5EUNiH88vNAIrcL14\nmnxxQJykR9XZet0z9w1OAMsR5S3GCHzUTDh7HxFbzFYmyQpND31FoQTttigb\nBsmM56ndEvpS95mx5tpgw8vi7PnuT2fnmzaAKV10tINRrUMpC4lY4OFRGZ1+\nZCMl\r\n=rQIi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDgVcLjpXImB05HhUgCKNCscoG9fBcUI+RJVzYbFpSHVwIgQB8NCumcj1Sv0zA+xnlcwTrzVx1phD7b01agr+kqPPo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.7.0_1580763281699_0.9822359909672231"
      },
      "_hasShrinkwrap": false
    },
    "0.8.0": {
      "name": "@serverless/platform-client",
      "version": "0.8.0",
      "description": "This light-weight SDK is designed to be used anywhere (CLI, Front-End, Back-End Services, etc.) and make it easy to interact with the Serverless Platform and perform operations on it.  It's really just a wrapper around the Serverless Platform Services, wi",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.8.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-HxXGrye3OcXpO4JfFbSYqMS1qbO6yrSxWRRsrIlG9dYP+nwLXLbZGaKaBjPDbGLz9EsE+Yn3CtM9ONJdrggXCQ==",
        "shasum": "4758c418faae55efea14434453931aea46fbb036",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.8.0.tgz",
        "fileCount": 8,
        "unpackedSize": 29565,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOdj+CRA9TVsSAnZWagAANOYP/RnPH+O+VExZcybwMFxl\n3biXDrEGssrCt7moy6lrf87SQMSDr1M4gvcjeGKXoNxKm6qIpMDPRBdHsLZi\nv6cho4OXXjpLbWon0IFLTdsqRE2+SONlHSWNRKmodqui2LywQCrq+MJTjb9s\ncVwNiw8JmWlX/6tLvaInznniAo7y6oqY3jiDDBNbeD3/3m2XXE93WZXL8wEW\n+qqtJ6DBesJGMEGkUJt5+IyAuPiP/K2EL2GGIrDVdMnYVqqzeaatBCjOHEij\n2kcnd12wN4t9U7tVHOcUy9TJf4t6WAX+IrZ3JtjSEUjW2/bGwAi17GQd9b26\no1fDvjh8NN3l1iRBeSTkXdqmLazRo77dgj2ZUNO4wg1gZNCvYbKnt+VsxOHD\nBRM4wqrYdIeHqBtz07/yNREg5zkv7zG5G3DFSaG8y0OYn2hgFiE6YiYmczL9\nZ0/+VBEbGDcsgNR5Bswas4uXH1IYr4J/0yRurd2/p3qO6MwaoGFO4C9q5x0n\n1juBbYznarwfu1ogpMDjUMzfuBMyr3JLoG2/8qtIt6sV/M6DEc9jRkpiBBCq\n0ayWrJW72QRKFGwrmUVCz3QglZe+LBbUzSZneR41/dTs1j6o1nZitPjTRypL\nJqz/JGsvHSHfdN0xZCc/FwRInmooo7L5yIL1p1DMH6YCuLQ7ubq3EOoaLTDe\n1XAQ\r\n=BSiI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDq2q206mRHY8N5zQ+fad90M0rmdx/C3T6J/U/EupeenAiB6JU0CSLY9QtMTlcMVhK6nxDxnFqCXKL/yD8V9NjWnLA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.8.0_1580849406135_0.9467011363452744"
      },
      "_hasShrinkwrap": false
    },
    "0.9.0": {
      "name": "@serverless/platform-client",
      "version": "0.9.0",
      "description": "This light-weight SDK is designed to be used anywhere (CLI, Front-End, Back-End Services, etc.) and make it easy to interact with the Serverless Platform and perform operations on it.  It's really just a wrapper around the Serverless Platform Services, wi",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.9.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-a/gDZxq/gocHVYZTKwHRgRXebpiqHcFLpbQANl+KN5tyhmWo46ycG9vEGPAZjy5cO18JjRfEypmoDHbA1qP/+w==",
        "shasum": "10eca4e0b288373c79cb230b3cc9eaf8318da9dd",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.9.0.tgz",
        "fileCount": 8,
        "unpackedSize": 29677,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeOozrCRA9TVsSAnZWagAAFX8P+QCRW5lUnWNvOCJT8AmM\n50JCp4JNO2p9P7A6EcmdnxOiETbJbaPzu0yIzuSmjMUZnlYHmQJY9rQQ96s1\nvrUCZzb/QrKqZiY4kk+eisgNZapXgMi1BJWw2Lx5lkwGxpB8k8gg3u8+LJhm\nr18bY61oKkYviMkH9NulWIUrECGQn6y/tML1HIbegwuDNdzksQBnJOvHSsAu\n9/og5xKNyZdXcd+jfC8BBG9YCiXzQ9qHecCguaI0+r8998N2zqoT4Ek5NgLi\n5dxCdnyqilGimplCvttPZwP5wh3tQEyNQAOzADJtoLOBMGYZLsTYpCWt5iI7\n0DcSXLhlHdIeiqc8lSoObQiCmRJhBI9lOEAHGahgzJ/n+Q5E1cYUjfPpIxvC\n3IkjR+hK0CBJSyWk/Rm3RSXoBh+qXTnE6GduOnoq4F4hwAlaexbauA1/vjVD\nZqwbzJf5kQVR21jhRu0ZTMe4Af8pOhLpuH2ftmmzcVrdcfRFcX9ZEnfMlcnX\ng3unvSvpqNenGPF4F75EV0d0/ssbx7oJp0i5IjTFrj1IizyItjaZ8kuo0oFY\nIPJebWJmdDOfDC8bfsca8r5toWSgwgjyx1V/0YAcYN/DqYSQDu33HPvlmTAY\nkUcGM2KU+lQwxORyIPjcnSCLa5qNk6FTLMWqR4W4P1OG/tXQrABNOZZMjOVa\ncWFM\r\n=EZNP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH65K6alzIDo0AGIFA1CoqU0aB1M+KwJKnW398+QZAvGAiAXQyA9WJcgEXnJZJZYsWcJzlETmNNRW53qoCmTnAWtRQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.9.0_1580895467233_0.5107126122193333"
      },
      "_hasShrinkwrap": false
    },
    "0.10.0": {
      "name": "@serverless/platform-client",
      "version": "0.10.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.10.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-7qGhYs1wjyA0WzlAGaWGP4QFAe/6hWn0AeaX5hyxK3p0OZ73xwMuZyC1W34Ub/YSDa18Jopv+tVzoATJ2oZLQw==",
        "shasum": "88180bf1cb901d68a316f7e9fdfc83eb9d1c44e6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.10.0.tgz",
        "fileCount": 10,
        "unpackedSize": 52705,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeP5Q+CRA9TVsSAnZWagAAnicP/1iwRizJwDuK/AmRwhmp\n4kI6EidWTUtxSW8aFZxWYWUVjUh03/8lB6AOblBdYpbD4b3IqBlM+nYPQBoR\nsDNx3+Pcfg8I1qTg1Xx/M8XWoXV4PuHygDB0AfJKapFW3skLZzoHNciwKZiL\nN17KWxEmq2YLfa6GrivfKvUTrqHuklCWxtghjEotw8qBUPLhx+dqghi4lOI/\nwJLWoTQB9tvTBAi0gSwD2XI//22UO72FE/yrva6Oi+Iavgan4soo1Umow8Ip\nav+QqbfPQRMwmaqBAcEdxAqg6GZBJ0nenu6gesNy14UIzb34NsNkdR9eeYss\nhMBlDTCui81tBhSAaWialggCOPzv48VVAj5pQyePWh05vX14W8tzoUqCZOii\n8PjD/yAjVhq8fqwCb4fiP/ZMmbDpXHuskTOHYZcEcvFrjdcE7nfYcfmrQwuD\n+9qDavAMAirFl4zR1KTSy57POvPImZxn7z69C8i5msDhcb6z8KzqssX5PZaE\nCrNuOsW4lf0q5ReNEZMUUaZFi90CEchE5vD5q1p8VqObU/U99LjELbKxzQf6\nSK0EYOwID3rzdFQzBCBD9NWxWy7LS53qwXgKIKglLC+AP1WiDT+vd6crWepk\nFeoc5jtHAqdc4/msNHT4HHsqjjZfYXTSr4/LBKG9kyBLhtkapr9jhtvUT88f\nIeck\r\n=/+R4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDkRkX0IgMu0GKl0P9l97yGlcig5+8zc0PAci8JZraO7wIhAJNgipzbejJH8JE0Y5uNPfcTqUbLuYPCWT2J0N69Fv7Y"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.10.0_1581225021911_0.8047039669885212"
      },
      "_hasShrinkwrap": false
    },
    "0.10.1": {
      "name": "@serverless/platform-client",
      "version": "0.10.1",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.10.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-haodgpUq6SDKDchyJ5JuSvPro7coFa4EREkdFGfOBCmbCU21M1i4Bc6U3ipyJWn9IgGY3/ZPaUOQklS5QgxIuA==",
        "shasum": "6631f6c0e0c21df7cd0b96eb30c58162ef004851",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.10.1.tgz",
        "fileCount": 10,
        "unpackedSize": 52705,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQLcbCRA9TVsSAnZWagAA1ewP/2t+Au6+9rTxJdhfOH25\nIwfsyfA2DSocsQe29BVoe2zArdtOyXfWrASdhEFOT9xk9wjy+n/MMRNsMy+9\nLsRUqEkWzmmGEkD8odFDv0mJuDL0hVdjwvUuJX5JtKjTsNynEPH4Z0UdqucN\n9Nt1LEHnEDGPE9mD0rAsHw7JUkf1ZX1LhadJ4yA2541TaepIzIEBhSXyac8z\n06Kc1Okp2zNHrpwnP1QZH6F3mdy0BUGC31r1/viTZ23hxWjOM5FUO0tP6cxQ\nKy/dqali1G7A2/ieiqLH+8WUKAhTBFuSQQXj9CFG89Cc9Qp4IiL1pt9xU/mx\nmQnOE/mnnpfGn1BHyJW7wPqSCYTGGwLz5wHZwgpMUeN5n9Ky9V9kK/xBhS+M\ndWSirA4kXoZXkkm2kSObCr8mrBS0dEZbucQ6zb2LMwIl/UcrM0XNcHBm9uSp\nIGuxrTznnj7QlsMVisOWSVJ9U0aIhd8TWGzQgdXjc3+RgnEKUbFx9Kab80Kz\n7sWqiSs5DwJA0O4RMYF/GMfYej1ssCVcG5SW/IYwVAuN3QolejL5dRkDnx5Q\nCWQkI6XqRFneBaTPmdpl/z6xQLOKsyVXD7EI7p94hZRG5zH+e7BLCMGFOfNv\n6I6UVf0D7zWrWnZrAQiXbuIWD6Twmp5jEvbQtotT17SE+vNRRghnouFCyrsZ\nRpSh\r\n=LGnw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGGPfFpof8vAg6YgZ7yQxE/bsnoLNT0IYkM+dk1GNzVLAiBkaJhUE/2sNltQCd8sq//86B4wKN7dYPqqNhKI996IpQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.10.1_1581299482900_0.34074320353794585"
      },
      "_hasShrinkwrap": false
    },
    "0.11.0": {
      "name": "@serverless/platform-client",
      "version": "0.11.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.11.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-sN7p6GX3Fms7R+bvK7BxstfmpH9VbF8Rpf2Ak04vqj8lc66LJE3GPOfpQJcVK3NztGxw80ni1Bc/AM2nJ2fbgA==",
        "shasum": "0fee8bdfc0f84b6292edf36cb1addd2b20421e78",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.11.0.tgz",
        "fileCount": 10,
        "unpackedSize": 54916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQQfOCRA9TVsSAnZWagAAwjwP/Ak5CnLCayKlhTaRwcY4\nnytFf7clIp23NuPLV64OB+TTtxc2TyhdTJQ1efUdw/zVcoCErPJknAmxohWd\nffTmYZrEnH+D4bLU1a07DyaCh7SS0Jm8CeKN4gouCIofIPTwZnyEEMUjmFx9\nUKnlKHpnSigP39mgHp4VQVD7PJfQ2jSM2+JC5Jpx+mJsnJlEo+VWf03nXrGz\nKagn8mlR3NlkfHTQnf8xlEneJFd7ACLkkfoqUw4Mply22+nW3tVKybs8Rlae\nLwepl9nCJjazrzZF9dfuBFUWebbZvbOzVyl3tatAL0cfLM9xLbA4JmdXjZen\n1ii7hVfEZrHJR6g8qnjrG5Ijrb8KTvFOA5Z8bp852VnCb8F6/2Y1W00C8a2o\n+DtTZNy3uumD+vDD1OQWuuSh570ztG9VHDjuLdFJ2eCxlmcLKVxym5H/Dc9G\nIj2IR3NtCl6gfL8vCWh8fnDNxhFBfV1dr0Dj/Sc3LBkJ26F1DN1Z5rf4cfjb\nGYCKgcC23alyo02NmU0mD42fNQTFC9ow6TCRSeJZ1Xb93mow3DeCu7lX7IQi\nme96So7tVVuSijX+PGVUgEo3OlrVNguOOYcZt19ejWTSVXA0Kmr7IC+ymkGt\nABzxPQDIEa8MoldzD43Q6b/Tnf22atutLeYFK2dfW/wypu8tyC+glWd0MHtM\nRnFB\r\n=BGC3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFThEDBVF7PGhcZc1scyltGelXrChPYuvqz1EcMESAeRAiBtqauBhd1F+KAPs4BRaPpqsDqihjtDGgS7+t0I45h93A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.11.0_1581320141828_0.0035692627124439547"
      },
      "_hasShrinkwrap": false
    },
    "0.12.0": {
      "name": "@serverless/platform-client",
      "version": "0.12.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.12.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-+OsTPjF+l7UDSkwMowB8HO2zf8CJFCpMHgpbj8MNrT+NkFCFLOnVLA4fkZLoMpv9KksOMOq/SRruWdaJsmrNOg==",
        "shasum": "ca9a18a0f37f5d20eb6fe391a4a99f4173281d4e",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.12.0.tgz",
        "fileCount": 10,
        "unpackedSize": 57506,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQQmbCRA9TVsSAnZWagAAnKIQAJsHPrkhNJAdlOFwB3nw\nLGLU/pKHVCCqL9/0nopXTsbFCCRtOdPPp4vZqynx2AFMLjznJWOIW0JEaujO\nJkDsKuQ/Uunv4c9fLSTK2sOJ7gXnXrnRsXu/xSnq23YOD3Guv0KJ0J+R+RYk\nEpj9lMELaVSuJMHJxfcPrDFFTqt8X1fNberLfcBjTS83tXKk86rjqpfW2u5y\nL8p1McRgEf4hWunZXRUvzus7x9IzT2NG4GZexvIwAoNxVMnuJZE+58yQya8Q\nZPp/i/Lm24gHQ+L81+FRTrJmHmfv98GuAfi5xjddJRRjOrx2l2lSHz+v3yGz\nRltCiV60sBSA+mN27sWSdIuRql7yokzJaGZaiGZd38mVTL8Vae6Yj7ZyIHZE\nNynRyQU2WMXaUPPNpH5GcDUeZMVLhQldVK6tSsJlmCbsDLs0mDZiDVD0P6bN\nTAiDIJmtL6UeDG/LkPC3/tDVkvSFyd4TXuyfjHpJ1OFnqYGW05EO4+4/Ba3m\nShRbScW+2Eo1m5+slbnT8rZYkh6FBq5eJ8dGsppvk0qiRbl6E0eU5auvwqlw\n83kxInM5Vvf0z7kO+VyJGsp1iAFSuePEUgtb9Dbywjfh/xG7DXP5HSgyWuJ2\nMdb2DY3eWD9JnWjHhKywO+JvbybxUh39C8NdjdwyR7HUGVXyReoBr6e6rOSH\nm1fs\r\n=VSIq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC3ZRJn+MIhAQWpnniTYrsJhbhdeW/tCoSQzGfOmlw46wIgSIsbLw5lNOSsjjMPwvJC/tS6XtHdA66MLHj6pryBZ94="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.12.0_1581320603008_0.36016260641195363"
      },
      "_hasShrinkwrap": false
    },
    "0.13.0": {
      "name": "@serverless/platform-client",
      "version": "0.13.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.13.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-AZKRVjYkm2WRngkLTcGY2HNeDB8iL1HsBmr5LHdnK+gxTI3CUvsuFuBsI2DKIOHdnAx00j3G+QtbE18jdaX8bA==",
        "shasum": "f7e778dc6cc056b5d64c2c433213b725ac2ac14b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.13.0.tgz",
        "fileCount": 10,
        "unpackedSize": 58543,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQQ0OCRA9TVsSAnZWagAA5qYP/3L6sjO5POCdzeEXhMnW\n3HD6eR/Q21uVQeaIp3kUTI8knM+swVullIjlrWCMnpHiYhl/hdlPJlNKgZ2d\nQNTJMThH95aGxxMcpiF1OlIhqkTHksiyX5ZY7fAPfvEYXRs2dyqaBRB0lZmM\nrUUSjcQXFmfATJbsivhW/tg/W+VsrVqGYxpctfandP2WQ455ikQAh4lmDMLX\nvD9i9VnpkN+3mnWz9cefCVnh+TXf4lZxXrF2sgBQtByhv21qJfbY9gvKc3kx\ni7hvgEfr/xP5tq/VLJZ0l7ZLck2omVx3RJQz0R/JAauQvlEnK9O/wBzuFxyC\nG8XTNMEgV9KRFNB/Owvt/YZRtPmxvavsRM/u4DUKvmAUlMjLxjOvQzBHj8eR\nBLkJzHLz7aNW1dgOJcHLpspkJGvE+vZmT4ruDv35zk2oMd/ITbOXyn20SHDv\n5o+Xy5UIMhQI4xW5GipOMha3Zf8ADgskG0CV3NCDaHHR1IoOHoBc01MkVKvk\nVK8AbnRMGmH4P0PXJV83myzGF9V/T4DdHJ4kQ8n42gCxkSoo9zJZlIQr2UhW\nl5zQnLWXfYI73oKOMEv2sF1AEFH08J/89O3fBGNMlo+TpxcYjGLQOoyHcNeB\nMA/zyKu3Uq64UfHj5OMzGd7RuePpOTGnbDZ/FB+W65EKtgpn5UfKmJW633jP\n/Wqi\r\n=Hfrx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFURatPPoZKnQbhqcyp3Ad6TZIbcE0d/fLlDRqJdUte7AiBZk7/p87pgYJyuaXHFynMYLpDmdYRTqUXbVdevHxr7Iw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.13.0_1581321485689_0.7554804245184283"
      },
      "_hasShrinkwrap": false
    },
    "0.14.0": {
      "name": "@serverless/platform-client",
      "version": "0.14.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.14.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-PWMP2ISVkq1PJgZrGpHgOAUXSx2iTIPe0tMrsaluMDQe1vqmTKGNiRvU8ff5LieLaHc9GnLbA5cZk7kR05awBA==",
        "shasum": "0d8e4207222676fd380dd45dd9b5084367e66a42",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.14.0.tgz",
        "fileCount": 10,
        "unpackedSize": 57262,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQQ/KCRA9TVsSAnZWagAA1uwP/jhlyS+bPechijGT1QmA\nhgI700PWIvz6sVa6bomcmy2LqCG5dKZoB/OOptsX1Ggq5HIkLi7VlrLdEp/Z\nSBYwOlgLabVZBfamgTT8bHE3jUi8VvTIsq4E8BqbC9299ZMFkyWs0fx9/CTE\nimT+VcXKW96kG1m4gbozGDU5Ta3ptz9R645DzOzf5UvefSihNyrOWXAomC0f\nWi+VKq+rKUY1FjkXlpE74osEHGHZJE19vO/VooM9z8PwmOXrHVxwuV4IKlEV\nZbFTuLwMdyrL9e2GCFPcNp9Nce6ZbKEtyp8n5sHanjyCc7XKMMcUWgoCM0W9\nmjkESQuFPOC3BdBPHzeeXag1/pwLZCmROxom6fcUoKdbXHdJtp6qMrgqgM93\nfh3wKUBrtB07o44nUC4zqXUncpYbtaCD4natZ8jJO1TdeXm+Xe99C5ppJ8TL\ngskscqNQFX0NC9ji4JMYYJBIG6+Zy0Gc200AAfNZS0FbbwT+/QjnLq+31DDl\nSfF5aTk9NV0Prop8R+9pxyJoAQb5l1Jn1k56XMsYdWhDX1tVAFATgEHmNd+Q\na8tPZaGJFkTp14toXClNsOUiNoPFYSRJlE4KLqkDYq45PDQgR4o/hZIucslt\nR/cEdtDZ1j3LDhZvvWTVIXoRdkL/nzhUXqFFML5HJqRhUiXXVqLM9K7b/0q+\ns43l\r\n=iouJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCskuBo4mQjfUJshncZqQX7CbIxhwsTk+Th7xsz0qbIJAIhAIAQu9bDp8bVMnCEdt43RGTrQlhgnviwX9O4oMmbQAYY"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.14.0_1581322186511_0.24792529434939148"
      },
      "_hasShrinkwrap": false
    },
    "0.14.1": {
      "name": "@serverless/platform-client",
      "version": "0.14.1",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.14.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-1hkfsf9ODqVmQmrAvJUCvVAD6VP0u4X6QHsPDQlfu7n+s9HbXHiy/jne0zH9PCvJcw1zw1ViD+NAyndgNF7+tg==",
        "shasum": "1ff668a72fa44cf7424262596afb9a235b92684f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.14.1.tgz",
        "fileCount": 10,
        "unpackedSize": 56750,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQSLkCRA9TVsSAnZWagAAXS0P/jI8QCcKMA1yjchUWHE3\nk093ul1BGh0QaIoOUJEmR7hZMPUpNuqTEkvyk9iZktUaO+qzPIuoHrATejkP\nkPUoS5Ak99+sLjS2mi9k8TeKHpkBTwB66xcGk8fujAD1kafPWEd7oL7ugcyz\nuwUraBVVrWNWZNGTRVkhKWABBxUU8BiA2wDpEg6+69smYlqOkT7n+Edz0Hv1\nL3ERJmSCNehHqAXdraxyvoSXa+otYV+J4G88dCdIOa3yv7tbkisTqd3nUReM\nZ5JOkrRARWjW8PVwB26UjIAHGSCttmQKCsobqjALyaYFiomrl6FK69bBaPG8\nreaJpnwF1nwDPyhluxd46B+U8/wvdythA3GpLfoFBzQLCfeea8aTT22bdSK0\nlgiGCxK9Y3lgvCeWaWOfEsVjoBSwwLyJfbnCUoqj3dDro5FIPnMgIXxZ9CaD\nnwtOOiItatiaxThlGMfq0GmW0LzgikJmd8SHmtXUdu5891BtSi7/wAGft6t/\nNoDM3yqFj/yaobqXCiE7j9UkmaU2bDuZ0X+j7GnLpA1CkW3Rca6I70VE2rG3\ngcaCE8xiLCZkH9u/iagtebLeKUnf3oJtAFYQTPZ9cPKk3XItbWAbNfyt8GsB\nkXFefSAgRE+CYHqrZuMfk+/tP9RvBBTY6Hn6iWdP77uVRUf3R60EQ+JgBZHM\nFnAw\r\n=p7b4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCnpiLBgZeQ0BQ221yyK7GHPwo6LkVSkNC8fFFczTlADAIhAM1d2jYj4LzXH7P0wSrHqnTUUohE0DIUhBVVN8LV/0pO"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.14.1_1581327075695_0.9886194902329204"
      },
      "_hasShrinkwrap": false
    },
    "0.14.2": {
      "name": "@serverless/platform-client",
      "version": "0.14.2",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.14.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-nuh5f1XQKbFaEsdXdKO5ufLyzG0vGkyvneQJCnHTC+GM9FMzJ48vaLdg/THMnepCN15HAqxygB1GKro6MVgaFQ==",
        "shasum": "044423df8e82cd6b1af956901a740b62b558e745",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.14.2.tgz",
        "fileCount": 10,
        "unpackedSize": 56768,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQSQVCRA9TVsSAnZWagAAriUP/0eUFxsv8Yvy3u2bIm92\nHr0/cWUraCpacvWQLUvGl44zsHrSHdGlpNSqD7W+OJ7uMkqLkeGsrvTPHdca\nJbmm7VkqOmBEgs99NIsbLFpAbPTMbwDaYR8AVtsXORGx3WmmJ+xmIUWeQKUa\nR1ipDVL7CNdO9vpy5C9XXdOLVctx1dG0AtfrZW+4BW/Vkpf1P6sK0f+l6AfE\nsk0rUCEtkSYGUBPt+RwEtOLXeGNnlbMP34LngenSimhLnA5SOwdu1OgkGCH/\nnFMKJbySATQ4HsiPpjkD+bFoWhhJ+aecSH4/EEyjJhpt3RkZuTxMWvT1Vx5z\niSZDWRoXSSrHcLHOv46ByT5PBCYmdD+o6I1PxkbR9EPnL9KDoRTlha56V4CK\nSxJxFzyaYim9GyyJ4AuuHyR56V0X65Lw7WhNah6iqfhc+/mOUQkMxEA+jazh\nbwG5Y6pHsbEZhr3f7fexEir6dg1EzR/OqLZghGEQmIdUHfqJKGfs04z6XxQB\nhwS8sQDtyNVWIMZ2e91Rh2+GF7NZiljd6CWuKTYG4a2og9sL43ixwdaNRGmX\nxWLX5T0WVsffNylE7DRTy9rzBu4SHA8gFNUBpUj2TbpAcO8M9RSUajEEmTkL\nAKPsdKyljHi6qCgab7wNB/awfY38nhUUT5dapgbN4QXxUtfRsi4blgRe9PIV\noi7N\r\n=yprq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCg/2L0C4HezuXyMsa5KSQ9t74Zq0+vlr0uUWJD5G8mtAIhAPajoofcqj+fhP8Ek3qGKeSt0XgZiq6ljQ0sjvrvsWfF"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.14.2_1581327380522_0.3776546062080366"
      },
      "_hasShrinkwrap": false
    },
    "0.15.0": {
      "name": "@serverless/platform-client",
      "version": "0.15.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-Ye6dA2pz+2qHHn8Icop2izatP5bfadOHgYjXQdtnN/UPE1+XrFyfkRiM6hEWud+YM+YdLNq08uzGuhENqyGKbw==",
        "shasum": "35d8ec853d507be4331c669c88478fbd199991b0",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.0.tgz",
        "fileCount": 10,
        "unpackedSize": 61873,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQm8CCRA9TVsSAnZWagAAlscP/1fuyu+42/dcVCiu+XLO\nFdC5kLxyfBUoKigoQK9HYvEuR8qp3maoqA12rNDObaHB9tkYYIdDs6YQ27ht\nyh5FH/JAyTyfLdLhZkRo1actkfKmHjLpIn/Avt62Bp6GUWTDsjwDJiQ+29Th\nQT+fxOhdnas+9uGQnfGQnWAH/0LrCSIcIxVdbAju/sBHfquIU1D1BIxEkT2R\nebpskYMuzlrq4cUK0z+966Jw5UZViFhuJQ5Cjkr6a+TOBKloQ1trXeWD65A7\nWitoiymadxNmw4IgK/DT9DWAuCWdZwDFfkFFoi+APAKo+e6u1U6EOvZEieHX\nHZ/3xj33GRr8AaS5nQZ90jg98P8o8gDO1YONEgzsAHDyE0G8lwhd3CAh0bvB\nd1yFyp1bx4zn9pH2Gt1YYnYgsOeV9NiBVmTxV6Mm+S2glqHNO6bKokv69Bsr\n7Egu1m7NOVzeU/6LjYRjPpFUkrgJh1ZFxbNKSjTVj8b2EPmbq3aw+u5QFOVM\nl8FairsCeSvHYUjXeyiBKexAxcXoKxD8/uode7i2M/RImH7lsFrsto/9kMCf\nJfVSAchexMMLdADUrgy2X1PB40JbxIjN3i2NvrtFi6BXfgJ2WgieOuc9Rikn\n2SEwl3o9tCJTylFtbNrzvzAcMMM6HmSoosmPNBpDBwVCARi438S57cAbp7Eo\nlvNz\r\n=gn12\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCwloIzrR2Oyg6GefGjrgOobuyCK3YgrEJBF9Ufu/nIKwIgaXhDAb80A6SqjaYXGzJIaZVzrnRn9YLhFDPl+GHOVfo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.0_1581412097521_0.41326960197666773"
      },
      "_hasShrinkwrap": false
    },
    "0.15.1": {
      "name": "@serverless/platform-client",
      "version": "0.15.1",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-CACO8DUSBn9CWmQKntP5gwl9V+HjBIiXy2mK4dEr8/fc9KvfoqEeH0qaODkW3dDUeXc+DC/gbYnxhgkmmEfvLQ==",
        "shasum": "28e870069351caac0f5cba105bfa04d47467e641",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.1.tgz",
        "fileCount": 10,
        "unpackedSize": 61873,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeQnG6CRA9TVsSAnZWagAAACAP/jJjVRUi7WlmIcjg8vT6\nxERAvLgFrcfG7sndSQ6nID2l0T8a3K5GNBruM+BROl3Fr1Vr1si06gLj8wUE\nYrDaDuSavdVxkbarJacssHHUTfIxT7H7swFXnNrL0peBvOYESyHCl0zYs8zo\n6bXDowW/OyEN4R1aKH+4A3ZfznVaUHNU2hGrl9ULl4HOVA8HsZm5BC/J6e8p\nUOB1twwi0ZeTUCIi+ArxJiKlCiHC/1BWIWbS8deUoAQN6rCwSvERvh+Vs4Mk\nf14drtkVNpAv0LdnlFCW6Xp1uZsNXowpHptzj7+0e463e/1wO5Y5YTJxTP2y\n2IIKT84lAmRlNu0XmTQ186tPBWjs1dt1F9FtJ38SZ7TLN3/L0UtzY8CPrrRr\nHJOjsOqN8AV2QPYPAVgIZEvN4ypqFmlS3izh+9XEVm2DSkk/n+bnqq3v3fA6\nP+F8ftZpzik9l1nPEZ32D211ScdrZ5C3iELAiqHgxckjXQtC+VTQNnmc6xkB\n4v/NQW+sCpBblkAWqAcRqwMG13QTn/FzOEJQ0GO27kvyAylIZSTpT+XVfLVV\nx0ecDm1qRN8ocbCNyRZodby32uSqLtTNJiCGzqFfaYifn2TQ+aEaZ74UN5Pt\nbS+9zK1+KyEjzXK0ubyIzHC0p47df3EG2h6WfZdLS6NY6/BL4zQN3ALscSIF\n/sPW\r\n=stQ/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDlqUpj08ReXLO6jomHBQtWTzpF71JasbVglqbiCXY1kAIgM/Pj1/JrTD2MskvKIrEvg6ba/gDLqKQ72Bi3G7pdaXc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.1_1581412793696_0.28976187162287315"
      },
      "_hasShrinkwrap": false
    },
    "0.15.2": {
      "name": "@serverless/platform-client",
      "version": "0.15.2",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-VnK4SuxspcVAgRzvNawov64+0xJqUHuMtokrVIzRY+NzxBH+CEsDPRbf0/9dOV7GZJKm/SxHe2myFirM0jkzSg==",
        "shasum": "494f871ebd6ffd7f375c4280511d6bea63d3da1c",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.2.tgz",
        "fileCount": 10,
        "unpackedSize": 64484,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRI6KCRA9TVsSAnZWagAAtbMP/jjQ86SveXCwRjH3Xgyp\npQ246Eq1Etex2g4kNnwNqkXo1C+gvtgfK14/BkfxMLhX7VbEZWRQFmpe6XaV\nRFfk/ITyQmH7ick0WriBrGENyFjkxrXc9El//sHSbaAJndmwtu+JAVXzPF0s\nhI6AKDFp+ZSes4ZAEzKnyr+MYkMnuO51AwBD9eG2UIiZZF2AybV+QjlswORj\ntVZ5vr1ky1duc4dPmbD2NU4If3f3LeRuneihia69O3c38iAqoa/dqHRZh5Yg\npnKrsbrWTC9gZzvL7tDh5FNv9RY/P3OPLL3GllBUvPlOU5U8Y+zqv31e1yGP\nbH81m/CkR1KEF+wZ38nmcBcQf4yo8dTEsAMK0HlTkinsESTlY5/iyg+sz8YU\nt8vrEYTbJxAnYztl05dgoxcvHRGXcamUcwi2RXynUsiC2m2Ie0cHrp7ZoYe5\nV9FMfoe0/dVMtgAEbGjdZjC0FUVK9ycQ4eghIq/+fHqQx/h0Zhr1b4kttZIM\nI2UyFZYG7eQq3sC8/2jF1c6nMtfbZAhCVE0+levBY8pxNdBmaFBcH2MhErUb\nYjHgOWXNFWbNGrlhMJYvbSnaukhkt2E6SsU+xP9IA9+IpECAb/fdiSSlfc5u\nllABhgk//Zt0dBHiZL35l9ZMtb7cFMCB27wHqtXCkqoecW0PaRD6Rwh4nKfs\nu+0X\r\n=/63E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIERheqksQhxY43fkL7J71+HYtltL5htJXZCXRYkHHJJbAiAw45RVNTxObu6tOdxiVVkGx28SlmR8I1xOiIyUNvpH6A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.2_1581551241852_0.4610451903290489"
      },
      "_hasShrinkwrap": false
    },
    "0.15.3": {
      "name": "@serverless/platform-client",
      "version": "0.15.3",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-c86bWaL8stM4RqlKd7wU4zuG8AdVrnMKPrtq5O+GrlyUgRglNuUabcZOuQiHidIYwIcTEkKcWjiLlI+0a1G+iw==",
        "shasum": "4a4ff3310a5b37dd70c7bde28fb22edf026bd215",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.3.tgz",
        "fileCount": 10,
        "unpackedSize": 64477,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRJDuCRA9TVsSAnZWagAAlToP/2AT7YJkqLnlN5vugIpK\npPYX4OTxGTlsjDecssPfyaDPoUYMDEG+p/MydriagierjE1TWQzndrmvfp07\ne8BETqrobDS5P/6HyInbzmZElbI3G9Jwj4IZxjYytukdF6363UixJBKFMJ8Z\n5cfaNZQLiZ3unIDGV0eAU6C+L/G/wVp/6trMsEWH3H87VD8M5k10JR2wwpFk\nXNdTXdS9igbpkykCgkrbpm4ClVRVOo+WlqSLXjNJC4QsGIWAv6ySurXOiCDI\npPi9yYOhRlPhSFAMEHBwYk84BMk0qbqZRkbCInBeXsEb/llr9OTqj002l+DY\nsrsLUBxTDPusI+7vcxLdJZb8bam++iKMJ5Jm/McLDwZuxVNoYOE3t4+Gr2s0\nNBRg7+AoZFU9kNZQV3hcPIapVkS2AoCe6ER0s9KT3RwRK6VD6W1h6qb+FNzb\nmEoFqAG8zIfw0zGiuYYUlkVjhVN8mAfY8UERDMsG6MqvvIZEEjnlW7bQneMf\nKEfC38WP9Mne5TaDLasLwAWLtvl0QWvuMhHuOcQ+UYZF/oYIA2hZZ8MHtseQ\neK0eqUQMyamvepTvhzsWKcsX8bDdqQdcM6wLMx0kRd0hVuc1+u9f8DbMDqfJ\n1R5tAQ4XnglvJw9RYN7YsOmQSsYzmDYIZobZYUfdt6UPStc0uZCmAuYyyMFP\nWPZu\r\n=R4Ky\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDo1tV1xcevqLACXVd6L9xbeiu9kkZ5KwQj+kYgOmdm8wIgaiq3rRuaMeUEpQQj3o1kByYw1dvjy7ttXLCTNWWw+Vg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.3_1581551853765_0.7670236323280095"
      },
      "_hasShrinkwrap": false
    },
    "0.15.4": {
      "name": "@serverless/platform-client",
      "version": "0.15.4",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-NXVnB8GhGGSqfPotMXkybCtHsig2WkAKIJM9fnvBKh8kKRf8pf/g0MXLCxAOkbJJ5HQOlDu26U7TQLJdM7AS+A==",
        "shasum": "d500861877813c480abde4305660985ed77f60c3",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.4.tgz",
        "fileCount": 10,
        "unpackedSize": 64478,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRJHOCRA9TVsSAnZWagAArO8QAJROc3a5HN6SBQU9MhOL\nBTFOQvyy3Dye2qEcz5r9XeG59S5AScMUmhK7rEv0EcgV/C5INbnYEHAfFs3w\nLzr4jJNEZ70G3QlmX4GTT3zFoLEK9blM5zC2rYwa1Fnjg9b7YOT20lUciF5p\nNOf0ht0sRmWboyEhtLQrn+t472mEdHu0+iJFzsaFsIY+U0yWijEMiBCkGHrv\nkfPXETaj5l4UsTLJQga/QgmvZSPvv8siPnkuPkaKbOKXNhHQ7cWDCn5pNGwY\nVAiLZhtbBw/L6Whi9eeAoWVWefk1lYs4DmGeTED+wQXjjp/una2WXJN9TNXN\nzxdzaccXhmSnrK9bg28meV47h96Kmil/VCve1ItZmVlq9kVr2qNESVXmLCh/\nV7F+8gxE+OYEyn82HcLxzYSehAgC2pH1Cmvi6vRbcCpUUofsKIRb3aD9sGHa\nKUC0c6/XPcqpzefQKJn5FlJ/pEad5OBQt9O6TOCAFv0lCSqKxurjcqkUQatW\nOf+9OUKkbLboUhyaqays/c8ShmlMnxhp3vjamConee9KSHtikQS/jzwQWZT7\nnCmnO8Mp01VtI67q0Qkr0UGMC9I5i3KMYXgcGZhEeTcbHVp5UeQ58EXknuRq\nQvSmem/crPa1iSGDVS+8idRNST3yzWfbBjQRwtDEHVFS8Lhiyyn3H3qba8fE\nFc13\r\n=dOuc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIErbNWWbZgEpIDWsicxfUxU9ghS0Fu35aJlI4VZ9M1OzAiEA4shFoH9z2cz74zvEkuW3XfLUGFAVPOKLEKGeLygzQWQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.4_1581552078390_0.3502905459195065"
      },
      "_hasShrinkwrap": false
    },
    "0.15.5": {
      "name": "@serverless/platform-client",
      "version": "0.15.5",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.5",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-1VdhWQ2XjOs86H9OdGHF8sDdyjHMvSqwAaB8xr4vxwY3dsPEp14Xq4I4wKgaDlTpcP1Kbyb3HvMmREiw/3yEOQ==",
        "shasum": "b7abaa88fe10ad0f9b03673795e0f4ca813b257d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.5.tgz",
        "fileCount": 10,
        "unpackedSize": 64551,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRJOXCRA9TVsSAnZWagAAHNQP/2hNSurb7WkeMESKEZNz\nuuJvFs0GedcfX0qxtnwlaYt4earorsFaj5YBufD7/bjsLcPFjfS1J3129n+z\ncWeUwiCOpln8sANH7BcpQNFVp4mcu6YBvldaTQmwCI3gagwll6d/xCnzxSfh\nKC0TacmQxM+SB773fg9BjjgGcRPyPvJaKW0R/V+pchqVp+huM3K7X7n0XeCt\nPShKNOrmsV4wOhaOHUpipYcH/13qJzXD0GzIMCnC7ujSBL4yDTS7+mY9IKha\nO0AOtSSRF65o8SNi2J25x4FA5nffWyPO+6jiexmgRDUp0v6Wl9OENz5ELGu9\nRNy8LoIdA41o6jwQ6Sw2ulCmIxDY/tUcr9YgSSBwQ4rumAO/N5PttzmmVF/o\nJDoi51D8+xK4RIyF2lCetyYWHmNq1yFGkg6651vgTZ9hJ+PDm1DFms40wmu1\nVNdU6v5T8KqIEJOWWY5G5EV9KDnAshs49IpLF/O636CP/1ib4IOJxHP6Hhk8\nfvGwbVMkE5YyMhiYEclq80x3BM3QVtBQNGESp8G2Xs6bxGQuDUqYegphHdbZ\nCUOSza8IcWHNVE45XryCtygV01eZxl2pXHwMLC0JyQyf2r0ROR1QHAdCt2CP\nouHFtWvKo7aEszncBMWD1Co56a/7JIEbzvEWsXqUcptdACR9OIl+RKOymc+5\n0zcu\r\n=ZtyF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH0xlsu7sSMVyKjcP3CIy7A8knrgYQF/iylb7Lt37w2cAiAc5aV0q/6ny9tJ0Z9QgaAUYUlfkR85X+ub6lUPLqP35g=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.5_1581552535419_0.6422341397867861"
      },
      "_hasShrinkwrap": false
    },
    "0.15.6": {
      "name": "@serverless/platform-client",
      "version": "0.15.6",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.6",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-sAk0PHsg+IclWrrZ8gMQEUgIDhverlYD11MfK1o3areTVIgGWcd5DUp5WNmR4isSaB0nQMZWiP/0IKznS4SMaA==",
        "shasum": "f475cec5a83eb2454ad6ab38f1999ab2680dc9e3",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.6.tgz",
        "fileCount": 10,
        "unpackedSize": 64551,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRJ+LCRA9TVsSAnZWagAAlikP/0RFza5nMk1tDXSRKCIR\nkoMCjnPQXwd6GPSooWnJhW1bzernlH5iNAnYS6o8CyooS0oHqNHr/tQ/3Wnl\nAvzuaWaqvJOmm2ZOBudZco8JwfpAebz74HNvx6tCDpMdUGxiloo+SR+qt/z1\nQLOP0crmKUEOR5lJFLUAR0NgKuWh8PzJDUpqIZ1bJr+bU1wEjUyjxhGmgefJ\n25z8AXBZbvMIz7O+k4xGHwWaveioGMVPePBLCP5vRxMg34iCRDcOCwfsV3lj\n6H8EgkFDFFmqBTno9IYYtoERIP90qhUxWr8e/+pW4w/5DeexDnFrLYZIpLuz\nAoZi8LQXTsJYzOCuvAq2SAhWkUg4xmqShUtgv6o8JRo+4ky2QXOfVkinOlGm\nyCetOqeLqKMqvdAiVHGU+CBTUkSw9rl6z35BU36/BMNaiDSnq4CjMHqu2c4T\nraXG7gQrGXz+nX/wEW7fDTcFoxpPHbqMGpRLJbl6PS3PyQJQEeb5SGYGNYCF\nyYza+8t4XOto8tUR0Hx6qSxZyKOcI4rXurDdT4KHZv0bKDo+aoDVVw5IZKPg\nPINgvb26jAbW9SS0w1zHCGvI24mGugBEG8CSG/SI31pEygb0XOr5cqYocXNi\no+eQkpdBVWRlY+xJIV9tHQKaYtFyPSKnzzfzL/CThP6RKFvvIImS7lfY4rlU\n5/SO\r\n=bp1D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE9RvXGbdbI9PZ3bQtqmnm21ihbR/z9YeqINcuMhXOonAiA1JiZOhk28rFWXr8PGKqd6qs3mWxYlz0G6pG9T3qwilA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.6_1581555595454_0.15293669687022615"
      },
      "_hasShrinkwrap": false
    },
    "0.15.7": {
      "name": "@serverless/platform-client",
      "version": "0.15.7",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.7",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-zic9zKFqfmi9J1F7KVS1/+kQH9baLRmWdqc+Yk0El5T8tyfEe5N0DsSsqdC3f4ttVMETow6Vq7Mly0DW2dNdcQ==",
        "shasum": "57d281f902f29d9bff8c8ac51e767389411a79ee",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.7.tgz",
        "fileCount": 10,
        "unpackedSize": 64580,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRKUhCRA9TVsSAnZWagAAG5YQAIcbb3fGpZ41Megd0Ar0\nr6wl9+S66KjBLmWGP2skf+9SVp9gYpmU7nqIr7dV0cSLuN45WW9TnIwSrW8S\neG3TBx5RUAzR8XI0yqgrAS4VdjD+XtEyaDXwB1YmrQJX8ioi1I9+jU4vD4S5\nTqqpIwGO+WC3yCF8+bW4YR/cavoSx/m9tmvTG6V8y43XJ3ytQWbRrf3o5YqJ\nE6sBr7Gm+DMK12ZIGs0wFi8T5XaGoprLMYpr9dIXu+LPNkqxNpQZ8cZ6SX1v\nNnNk7KGI/aza0UAA/7HxNQ6qLAUsgSxN8/Ap0svWXanH9py/0xvsEReiBrgU\nqpJTRqi3L0k+FUnBzZqoOy51pjDwpkOy1we+DxhgaBYJ1+jFQU7KwfI5YRw0\nKuMoAf/qjiJwBHVLB3KOUMBosq7NxMUlZtYNLBA0RV6o8R9Pf35Zah0VXo9J\nm9eVwTellI1XG7pd2AZ86fh/duNW4fx0YK2ak6Y0AbSsVznmMvi7yxVBTrZm\n9yhdCnJfgPyMu6Rx3EQwIo++thM+MuC95NWFqbJxqnQe4i7SpRoqzkz94p7j\n1yIeQAkACHTyMoUOkng6TdI2pdrjmH3Sp3VkRfPjESJqhb07tvcVvawQhP7+\n5rhd3d01dhc5+B4UkcmSK25QzKGGK5lTrHVgoPCIujO42/10cb7ei8YC77og\nx7h1\r\n=g3Tp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG4q+52PaAvfV5X4MWAMOf9t5pPOLPKqpsB3m9ElEqQGAiEAiPlXf/MDBNCu7fXwoGF5lonmGWB/fc36UldhHE+gfPc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.7_1581557025537_0.09963641222704789"
      },
      "_hasShrinkwrap": false
    },
    "0.15.8": {
      "name": "@serverless/platform-client",
      "version": "0.15.8",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.8",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-5cKHSkwyLPjTcn3o6N/fLjDGF0mjtPuEQqSMmMTOkjrppdPryWJetTuxgRqkhwlrOLk7IX5qMdHD/LWvt+f22Q==",
        "shasum": "e919ede5fb21d0bebb85f256d6f7e9ff855babf8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.8.tgz",
        "fileCount": 10,
        "unpackedSize": 64731,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRLmHCRA9TVsSAnZWagAADNgP/1rAuyC2XiMwGSqf2WEe\nORMfUQ7PPDvift/UmO1UdI/A5OuvZ0SBAEiKaV2y3nzXp1mggaUErm7WZPLd\nj2KeTNEWwFze8poCnZXoU5D68SKs3zyxr8UCbRWJy90D5LA44kjBx7kiM/v/\nqjhtoDVq3SxngjT4te8C90WC40JWtxKPYeHFjUm5mvigLEfZA8pXt/3ftRy8\nrx/dBx7qvmT7q2drPYWI2BW53vfY/z902qWinKwhhkqgju8gDAqz5diZKZWh\nlTf+051JjsXJyFejIL83z8r0e87ehPUB0XvfnowESli1Opfpqga9DB59HTOW\nQbILL4FiB+VBhSEdFVeJwsIRDS8J1MF3+9UpFs00ByhzSZT4rKjXmsAjD1Kt\nkuEiQC4oj/bd7Az8EWPnbTahe+QES2Q6K5ZdO1Q4k4nezA6DmsJJw6T5gK8c\nncgJvRrUB8Hz0ufgV8HB+/LW7xqVVSZXrazuUZkzaaRWNUT9jIoZ+LVFseRf\nY9pvsIEqkK4omm8mKQYdAEwxGWZILlKb14QFcJcqWO2IqcRhVW1svM3YzRKT\nZp4/5THY8pLCPL3ZBw5FvVkuHLTDEZyAp1KX01MINyaOvugoGjudZCQfBNNl\nZ9EGkayyJHRfCC/0PtJvVCN8XvJtLs5pinSb9/Uy8X5jmJDlNTy+orx70OG1\nCydt\r\n=afxE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEOthx8TQc0bS2GaKHf3LwDtUpHzLvq9UVaP8n1uDy+BAiAwFSuGmf4dOJb8x6mISVK8VyKdEYQyzj4IhkeC6p+BAw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.8_1581562247263_0.40859832674637153"
      },
      "_hasShrinkwrap": false
    },
    "0.15.9": {
      "name": "@serverless/platform-client",
      "version": "0.15.9",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.9",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-4VPz99AR5zjGTXJXiCtPqcSNtttCx0fHM1zJFd+PqvtgRFKsTVDXjDi5HYUIkOPuoSioX671w0v+5F/tDBapsA==",
        "shasum": "1222275858e22fa7f1561d64136d52bdc4b4e6d7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.9.tgz",
        "fileCount": 10,
        "unpackedSize": 64738,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRLpkCRA9TVsSAnZWagAAZeQP+wdzEG/aCjMC0grqjDQb\nMKjBJNXHwK+10zmKtpCpLTftehzHJxNdUxiSZTOFv8ZSeFtWvitUf15dWAm6\nJFqPuRul7EleG0f378oSQqamwckB0jceJIcDF8NDqJQmUABfUD3ohafxD8lO\nAHWwD4kAy052S4MuyQzlqcgLJU3+F1yQc2lPXRPB7rg5YMsN+OP19kH2pY0p\nIH6miiwPmQNTUucCM1pGfWFkTCRn5C+xcc/sOOE8oNYfEECcmTLcZpoGzSCQ\nHO32h8d7xiYY0Xo7gd1ORPuMswyDqgt7QsfgmgxGKC/zhUHDpCv/ONJu64kd\nO7IBhtDGAlLRU6QgXiUupUqB7zv+zQU0vb38Bhj2lMMIygis/4USzriMNmaK\nb5Wc++Btt9t56KMwsrfDUx1UXJw3QhYG2+3hbPyIFGcdYts6qEr7jtVEPf2K\n5uhPKP8dizQxD953VVIbBPDD3hmvaVZ/W8NPerNZqGprjPL1ySyI7RDWYray\ngqN1Rysu4zMB11Ig1jL3TASJQmWmz2BpJYhX4khzYVVRhHmnur1J+HkUAkj7\nHtllbwidvt7/QfHxls+ufV2dPGXtNI3D2v+4sdMkSRkmdM7Obp+UWiJh8tGK\nR4dNnKB2HI3z48TctIIEr4vHTsiL1kct+0Hj6yMsxYPJiEivykIbHs+xKn9M\niSC9\r\n=gtV0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDNj2O9rh6N2F46RupHvUnvPtIfSZ1zqoGRFi5aGpxbPwIhAPCiOG0GBYHc56V6jHfZQuP0frCxt1eninUCSrok4hRY"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.9_1581562468084_0.121038583449119"
      },
      "_hasShrinkwrap": false
    },
    "0.15.10": {
      "name": "@serverless/platform-client",
      "version": "0.15.10",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.10",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-HZrbSTlaeCXALdKcIL8rIbr2kuC1CdotpWsJ+zOoCEaArZs/noL/xIOwjUAHDYDT0YhgHtRZEh5wj9mLz3Lp7Q==",
        "shasum": "71db53a704c4a0e76c308cc32a97791c84e6c28b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.10.tgz",
        "fileCount": 10,
        "unpackedSize": 64751,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRLvXCRA9TVsSAnZWagAAWywP/RNu9DQkm/KelSPtbc7x\nFQujNFHMVz3Hp/pUEkXpSDt6X6lOVOsy6JmhP6lO+4tzEXw0VU6k+6T3i6+t\nhQ/MrdhtGXKs5+tN20Z4V5ionjDAkkJf+fkRncSUkNEvjkOJvyrcpHM2/7iD\nWoR6WmwMRjzonsrElIIIkWghKwPUZ24ERWO82BHXStArKouSjkk5Cr8/DZFw\nsA3B/jc7dAqo9fXUedjEBsM4sUOK6emYRLgIV9Gkm4o7fqD7qNGV4YrsxeVM\nVvvAXMggzIC6GM8sMq5W1/NIokCxA49PibE+79Jege5erCMfdbiftRYQd8Hv\nTbw/f0QHPkw8/qfqz2QkzhXuLez1u+dhHGbd0fwCPtbn9pg7q9A4pv1/2uv6\nyFpaSNfuCkeZhnAt8Dx4X7J5j4yK9CT87PpPgkLlLNUrrX8NRzy3QHksbhbT\n14soYyFeFIs0YVYD8T6jYBuT7nLMn10t4udsUmWsEF5xFWG5ayGB17lFeijf\nNFi18DgsMiZrjsdVkEnC0TI87u8jVwvq7gvMnT0KFH1OskL6TPpZsyLKNkLZ\nd5IHvhS4XX0V+TAC1cD+KFi0u89+Pi7Vqu6ZwvPP/CapSOoI/l/O/A+TkhHB\ntGVEwSNGVKJz+KSzB5X+8qmM5GU5yXkiDpQRLBu57PXmhT6tByTQz8bbU0do\n1fDF\r\n=CHuT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD36yJhfrxqNhbJTS2l6S7HQFaNUKZbeGPcwqO6hU3QjgIhAOovoVz+X8DNA1j17/YBb4av4xsRQhbKRjWt0gpSUoVl"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.10_1581562839240_0.531019625490694"
      },
      "_hasShrinkwrap": false
    },
    "0.15.11": {
      "name": "@serverless/platform-client",
      "version": "0.15.11",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.11",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-0w4i5nHpsQeOdn/J+U74SZguPaS7J8HM5Z9kSVZLD+ihy8kLwdOhHT/mplG4OioBtx9VZkOweu8VGIDZTv1Vvg==",
        "shasum": "299483e48bd867c39868e4428f54b3c05cfd6d1f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.11.tgz",
        "fileCount": 10,
        "unpackedSize": 64891,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRNBGCRA9TVsSAnZWagAAGl4P/19oDtJ6wLEM0EnPleSP\n7RfSV5EFm3cRkbSQprkx0h9Fw8pSxy7bqJJJCEyZEfiLd22Xxv+O42B3XpC+\nFglxOZ+CEHkGwpLJUtLsPT0U3xnMp/R2X6eXaSjA1OCCL3jZJcQCGUzlF++A\nqwinb2vCmjIp2cESpvi2qCnm0Yxiv81xCO89J3IQ73Lsgi7xrXfCgByJngWP\nzlEWxFr4C5nJCVE5ULFJmdWbiqywEBhOIc/6vcIn4JrQU9TwKjE8dtozTvVR\n5C2Fab6fiqKtCViis8P9wNgGZ16EP0TVzPh3P83c3bmvdXy8+z5MNYyr0f7f\ncGN8FynxfhyzKTudKDi+qhdwh+KQze5y11yw0C0ePjEykiZbVp+Z7soqahUu\nQfGxpL+PY3pmtTcUQiOtmsQeyLk2Vio+A44vooIqY7CxKZoHFpd/s1bq3WkE\n0CPb69VxzkCvXmIKBiGnMGKl1P5PkKG//NsBBG8OgNhnzQUmJq0prpZ5I8WM\nJplB3uqpNX54Fa0hyAIdcgTcyTGJ2yCM7m7yWGVFzL5BeQLJNsMSDYMZXj6n\nZUAsPG25nEBCQSzJmvrqpLkqqqNmcJbwWooIjgxb7364BKyJpjw/IIV1yIi1\n6EYbEbWFqjj1AqZkEQqjfl90ssFjfpWiVeg6n/717KzMSNNPB7TDMuZoBUAa\nPWo4\r\n=sT/D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCVtEFj3h9fzNvNXgcMS6K+3Cs62qQyLG3Wr0LcoS32GgIgKlD798TN+Vs/ekcHZbhZ5QlHVJOqV27jfWQK/Z6jfHs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.11_1581568069910_0.768704151117235"
      },
      "_hasShrinkwrap": false
    },
    "0.15.12": {
      "name": "@serverless/platform-client",
      "version": "0.15.12",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.12",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-Iarzi/dlRxR0F28FHNCAJUIhB4C7YIEJStuUf+1IZqvwUrw5zzG1fQ3rNUgSCJuLidEEAeb5o8LKmrsN0hP3cA==",
        "shasum": "6085f854e6e6865cbce1989f9ae1d8c380913cc9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.12.tgz",
        "fileCount": 10,
        "unpackedSize": 64934,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRPQOCRA9TVsSAnZWagAAdFoP/RJ7BBzeSoy/LabmtyU5\n7OkXe7xkZ1PuMJEUCII6CrDrhJcleJSmDMOMNHVARcMXz+KDjhDK0U5h4fii\nAQIMNLib2cC7FQkhb1krGQ2icTnvDlDNcHqCmyt3YTlyvcf4K//qwpMjGJu+\nV0H21fT0fObzqq9ugM8W04cGbPWt/CzJTDs26PhfmBtvUwUWYFW0L8wdDaPY\nfPb/8gYnVFATlzyIgGb8oTNZL6XFaQD7jmHB9nmAXCMYXNP6jjj7JWSO3to4\nieSsKg0iQska11TEpiUTzhWInlcMm094Vws1FWm/pw4tX60Grby6sEsrn7lx\nKE6+iNJXDIg2dMY9yW8JPZzG5bOhFcwpyamU0WuehBVl9Fs1p7ZdV0z0wP3f\n1XVZrQUqr9DjBKyxQ3HugFgQ2BJIbpFPKFn1PYeRVca/OdW0nTlnydmh823G\nhyGO+2AOfB6fltDCMZckvvKkdf1bAfkn9RlHiqFcthM7UrmGn3fx+rilDKqr\nU1hBhPnDLOMAIzGBMdAW3netRj3QwWpA6c9IFCx1qeJsNEf3ujI75x3xVdOV\nry2gWj8ljjvWC105/m+hS6W49x635AQg4hsMT5i4shweLlj85Iy+STQGhHIR\nlNNEthGUetXkrI8oU66a5mnkrxtngdB1iHlLiN9i/1HG1DR3RuVZuO4NZ36g\n9e8i\r\n=slY4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHGsMMUOkL69o2cjesSf6aCNkxuDg5STHuXyk4mpNRAUAiEA5gxGYc4VpMdnsSRweGvdIzALmi8zt7UKRmMglvNrUP0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.12_1581577229569_0.42835569522729045"
      },
      "_hasShrinkwrap": false
    },
    "0.15.13": {
      "name": "@serverless/platform-client",
      "version": "0.15.13",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.13",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-GAtqRPjcoDsqe2Q00uLgwKixPzJJw5rfiIvL2cQN2w02y+3QpMeSg/n/82bcHP0geeHyARUMRxOuhQZvv5Z5+A==",
        "shasum": "3299a83cab3ed0b619f6d10bfa2c523f07962a3e",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.13.tgz",
        "fileCount": 10,
        "unpackedSize": 65650,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYcTCRA9TVsSAnZWagAAIfMP/AmjkVCINEpHjMbapFvm\nQ6OEHZoU0bVgQlyvDQKDbhzN2he/DgHiHyZkqo/tQ4hF+VidvybBsXF0l2BW\ndpAG+PgNSs0BGqq8yTl/xqQKsOeWVg9ZEoIELM1Z6JYnNsKIJr13Fi0VVonU\nhysce+hC42qdSy4EK0I62ESbQHOJMxTcJ/GqPIH4EuFZioRCMmz65EWY7xQf\nrkwkX/gf4xDx67wrguVtrxHvIzFClip5EKfY9ydajyiyoQR069w0Y9RbNfPv\nFpWqc9dl/b5he0wb+RMDcj3cpAKcOZbDa/kf8QRAC6PwCZ4upKbixhGhIl5o\nscqfnxmzBhmceHORMvknqpEVM+OPkplv4lFWFx2yDREMveojnk346xLX6dmy\n5AkRrE2DlWl6KxTWK+WIrhkV+o9AYOmebX1PXqQXmdk7Y+7A4xpfW78A/1TE\nY80u+UMoy92qwSKaWayittSDly5+pAG+kRhVqmUef1pOUKwhKx2xp8cT0d9+\n7mRiF0NpZzn6LGdrd3sYSpuc8YAlTwY8CmbDR14+DG0Xwd/W+PYeoSGQlKQH\nTFlXVDLnV0j8kBfFHd7VgyYUS8ExzM43rEUG3C70Jy55cbBiDkQ6engC8r1B\nntUDroE+MMU1bSdHaSf4cdV+PdaUyBSXRpc5lh06t1R4SZ/lZOmw4IAFzWVI\njD0f\r\n=DleJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHDHk2spOOHa1FFiDwXxn6Eg9wiLIAtrvC+k1S4i0di/AiAgNdK5mNXACeOA5Uxe1mofpTbPptV3v7S+r0UwAGozeQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.13_1581614867352_0.28262780995165215"
      },
      "_hasShrinkwrap": false
    },
    "0.15.14": {
      "name": "@serverless/platform-client",
      "version": "0.15.14",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.14",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-PrY61VpVdocMkHdchJ7reksOXlVKUwwUWgDVvaZzZNIYvJkvrRTwbTbFDEKvOC/RrQCHw1WXW7A0gQg/sDtHfw==",
        "shasum": "e1a75863f955b41fa97bd019c6fb5e2fa4c5be90",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.14.tgz",
        "fileCount": 10,
        "unpackedSize": 65683,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYfvCRA9TVsSAnZWagAAxrkP+gNkYnSJnbPw4n0ZTKtD\ny0FpPSywPB0a34Y8TF/p139YFt1TkHQuMrjL53SmxWEULSjg+4R4xfwJPdfL\n59FTpult4/Hw+xOo+YleTNJhN93ujHvH9pN/dp7oy6wp1QLSgZWXrvm0HFaj\nmCw2GzrW1NeoIQ6p4MqpPRgQqFefAU1K/ksF3BSgudw6991Ko9ZUZjUadTD1\nFj9dt65w55rgywr/u7Ty+zTUowhjMRYInC+lab21s0cj7yfE92KcfcF7x5JJ\n0C3Ekdr90d7oXNVzhfAnPR1Noz9rCK3LJouoouGHXAvRpOduHgbAhBtn0upA\nawkXZTdmt7dghgSkfJYj4EwZgc3TTPzc+T/wmtYDshG8kxi5R6WlXCGFZyKF\nj05pudN6/sEW+C6kaqAQTRaFWy9TEbG3pug2AtTFexk3Wk80j3RKwNyfPobV\nBm/iMRlpfTGkNj82buakbeXfUJ337N95ElanvCZkJopVsNRCk4TEcqVrfpF9\nOTk7+QQ6VkKOexCzEfArV3wHAW6PqQ2rs7iVj9w3pa00D+hIy48s7EE9zh6K\nJnGy7YMteAuRv9NczWaUSRkEPHmLeXjKQRrFaWDmKJMq2O4vtoSVEqxybN3r\nr/pvTZ67gYa4VORqE/lLC/nL+47HTXtjrRhGwfiOzsAnePg5cVtFE+ZKsiVI\ng/ko\r\n=DB/p\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBqNYgKRxLoc5XVPkWPLPlyoh5jD0toX0gLiBU6R2BdAIhAN7YJfmytFcN+VAUJB3H0mRKADt97APdp0QeCF4QQNpt"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.14_1581615087368_0.4921253625212785"
      },
      "_hasShrinkwrap": false
    },
    "0.15.15": {
      "name": "@serverless/platform-client",
      "version": "0.15.15",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.15",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-5LOTx1WTRWIwpuDsilhzwQpOMTxc1wYLP49XFax3Yj5JTaxQLM/UUkMzuGbuwv7gc/6HxPsqX7PJO0ncsdx2ig==",
        "shasum": "80b8ca9f4c727e412231ec1c10e4d52295a80c4c",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.15.tgz",
        "fileCount": 10,
        "unpackedSize": 65684,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYiiCRA9TVsSAnZWagAAhvsP/jeu5/upLS5LxACfdtPb\nRhue1UEsuz/fTWRewFlujZfsFzGcb9/nnDt9pcFSk5d9Ow8b0Arl/QkRaWEF\njx3uUxNktlTsr1eXLMLB3XagBdZsXfhznNTpkxlHasAVgPh7/fJc7CQefQIr\nvFYMwowKjubjpWo2pArRT7oWveP69+6TcrVIJoDZoxGScoFijY8SwCyhxrPD\nhWdFu5BuRK+5cV4jkbYmNC0YYioICBgIL/DUX0KDZVIVUKSjBe4m1utxDI1/\nHXtzMad0rh84CVXmRkf9I/HY+UXA7c++/PDS3qnIOJeb2Tz6UDMS5CHU3nw6\nYRaQdXeCkUTZyrcTmZsoB52S61DqBlfgA3PSbQzj96EyPRw4afM86WYdrgCC\ni1jGpuonRb2Wl/BwBDo8GYOBJjL5ZTaYCaAzoErayng9kifoyYvuJcikZ553\nlT7hZo0LpzDj6BoQ0yDNS2QKfo/z6ylPUK3+AZsMt5YG81gsykPw+LBmeW6n\nmLmIuXjmA3erdzW6V8pxIa0PLMrDne7LEGhuGnaPpqRUitU0nQbxx7B0ocdl\n0bihk+qIpzlazehIHZV0a05o6sQLN+kw9AAGBicOor8hpVqJQ9h/NisxIw03\ntFgqLhFdIUvjql+isQeNPJOa83dsxpqK3Q3utQ+xjx8n3tXih6+jo2PgEnFN\nQN9D\r\n=rFLA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAxaGp9pglgEVfJLihRXO4OgniXr0QHpQ1zPx/XjJt3rAiEAyfuF/cpAUPMcBLWZkcX+oBTNKAKxiia0AKluj2brS8Q="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.15_1581615266364_0.5408393013163026"
      },
      "_hasShrinkwrap": false
    },
    "0.15.16": {
      "name": "@serverless/platform-client",
      "version": "0.15.16",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.16",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-Lqk7OL6DVdJzIsYqZclCLiUsRbJIDg2jgy7PkluFTpsPD9CXxGjqwvkpWCfii0E5x337c7gbAKwIbpnO2ytV2A==",
        "shasum": "ebdcda3848d1521c79e4e73c613768a522f0712b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.16.tgz",
        "fileCount": 10,
        "unpackedSize": 65687,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYq5CRA9TVsSAnZWagAAl1QQAILEjcAOdBMluoyAvCxi\nmpHSpDXKpjp2WO+244rpFf28JVtqYHORdTio/PqCf8N9Brgp/Oy8OFxR35v7\nr9ZOEDj9kvqVg6Tn2KwXy7oyyRKBxCnDb7TYwnxBlcXElm8fjshS3/qd2A0R\npKABAmKVauSf91YZwcRL9PcRWvUNzQpu+MzHRUVbLuD8ld/aTw/V9wsCDzTH\nDVm/0kEZEUSqr09gwy+bygrR6kZ0Vi5KK7ZycwNueDt8V2sPhnGkJIxG21bZ\njoAVDexnj7QMs9i38X6jRPMznz4QWKkWvrid/GAdiJ6RO9KP/xBE0kBU410/\nrue7aP9DXcvGkt8kEH4id2A6Kqus8ew7U/gWrJuwAb3Md35B1DaIjU4Ftu/B\nKRC7lrSBpYqSnoMXjfA3oUOJvnW31gXhZuVc+9H/Q7YPApD005T5dkjU6rrP\nXEutGLw6sPbVgyN1zveHRtOYVVy/UI++YJPB+QQ/C0RlalhHDCNlNj142Tcr\nyLbM1frACyvnI/GWCe7grPlQqtRD7JubuxDBYknBTrzUqlKs9X0zf2nuW9Yl\nd15ui8uso9TUaVTZ5OmJIoeRztWyepPIP5V/9AUGcZLNDiyO8N/lj4Qp8ltE\nHEPQRPZeO/TKF4LWcWSS+0Qk0GIyzHOOkhdu2rKxIe+XV4SvmjqddxRRUinQ\nDqc5\r\n=ramp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFd2vKhjF/HM4nhz25VIi4kONxAdwSa1NvWqxQSRNexwAiEAkG0y+qceEV51eySoZCDSeYEVMjBoc4/409E5DPDgbMI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.16_1581615801066_0.4026695069777757"
      },
      "_hasShrinkwrap": false
    },
    "0.15.17": {
      "name": "@serverless/platform-client",
      "version": "0.15.17",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.17",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-/V8kvISTqDs1LhsZJepA28yGZFQ6WxMF2DpmemKHABTbl9olpgm5w9qFw68daknVyCOx5rrsk8UeBCNLNVKnPw==",
        "shasum": "18d7c8e27388669294c40ddbeaec7a81e1602923",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.17.tgz",
        "fileCount": 10,
        "unpackedSize": 66022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYvLCRA9TVsSAnZWagAAajoP/AjkMHLTRVrE2wvVXEZr\n/0YsJ4Z5KSCoQ/aroI+USBLxlAVdum+jXpigRdoyn26ZPtyMnzoZ1+v9/j/d\nZUXLIPWDxkR+hclJ2NSL24+OcgZD+pxxllXAwaJe/L31hg1CHhceT23zUY4o\nDHstBoSh77v/FLbYOcKtCdVjGczawjwTG7CDLeUvNn5UPn36KmV2IPg+hqCC\nrMpksfFD3Tdx26k10REamCyBziuaab6L2NGd6kbt1x93MAxMUx4WwdvYPj3q\n4k+O9vt7MrGLmnSlQTMtbP7j2emaWyg1g7q0kNqCdzxjESm5Cn6LpQfwzXdS\n/R0SkfNVk+BFBU1FoELsn+kmsVi45EtABonDfEKXFvSKh38otCtlJ/XFz+bc\niWJqpvhmtCafjOc6dQfppYVZnHQ17OGQgOBYDKl3A0IzWFS2J2BnaG5EGVnR\nZLNZzPv7Do6a24035P4iPcQgcMfRH6Kuk428+ie92DtyRQNAOy3utpgu8s+c\nNofbc98zJ3IbS+7kNMSIg5UQ5QHCbAMliwhblG9UgBOsNa+OwR24DpMJ8EcB\nEeNRwJ+OG/ecqBV3ygfcw+Yk1ArnveQz06ek/n9/q5JpknxkepI/nvInvpmM\nOLfzT/pOE6vJxaW7U3JBqdIu4cHFxaWsApD7PdwehgTemVoczQCr/AGJ1W9Y\n9Yk8\r\n=98gc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIETGlFz2Fy1HgikOWf515QrLgUGzz1nHy+NmnLcB93maAiB0nL22b7zX18dNCRADUOirmVcsnRTStjv3vvg7VQK8HA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.17_1581616075461_0.7529507333062397"
      },
      "_hasShrinkwrap": false
    },
    "0.15.18": {
      "name": "@serverless/platform-client",
      "version": "0.15.18",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.18",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-iFG4o+lA2GyrfwBlewfD68JQFYuw1CtP/nYZbPNOPE7bQsGD/4GF6zevsmcZ3fLDD75EEmfq2MS+CWpqwBf9PA==",
        "shasum": "ce3d51fbf891edb623c6035b16887925fd7c54da",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.18.tgz",
        "fileCount": 10,
        "unpackedSize": 66023,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRYxQCRA9TVsSAnZWagAAltkP/ijnXc1LibNL7JoBsvRx\nKj3g959L2TDIenQRBLSzCoL1FFUi04k88X2uxTD0Bp/BB8bGn9AvFzKCGift\n+CBYjCxybpyWOoQ+1EOEygIMTY8BN1wUem7MPqtGK2QMsj3072pEir11sWjt\nuY6ncgOplUitQbMKncXjqUTtsP64Vvv5NWxQq/WIqTsyhq6Wy5v9Ss305Epe\nVHe9uFYZdok1rXF7Zs2idOxzKaJtG0/7VaQB6ZRXsAEdrp9HHXCQZ/VbAGBX\nTMo2IHrBss7Fy7BB3RlkMJT3+fTMUlZJ3wSzMOd5Krii0SAJkfOHBRfatlSS\nnB1VQxBT/fgdktLDr8bRyLb++HhvZDtMf5xFEVeQ69yMyPwWk7+xGRnBefIu\nBm9cCdEhAqGFcoPYasi2B5eNrqNG0DR0SEfOnMDEmPdklVbjwr1OQexCCLyU\neDCLa+xQv0DxCFKqKB2vAbnzU5IyfbMGeq31l23mJUhycu14SQqxumf/7JKz\nlpWt9SP3loYt4iWUz+i1JelToz9hmu0uadHgnLSfVdF8M4ARlzpQP810yxhE\nFQpEoNe5x1tmldLl6XBDtzxWlazXaCvdCBUD+L8AsWQP0ymjkptBSgaMrukj\nEokp/iQPWx0F9mhsyVOSszdjOCA3uJMTwpBki6Uwo0/3uMcr3ONoEp0NYO07\nYdAN\r\n=M1HO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEO5NV/r+0pB4X5dt6hH8BqLvgNCC2qZkRUGCguRv8/YAiEAzqea5pGJ4AagyfVdI8tGsxwyCtSRDz8U10HfvII97j0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.18_1581616208208_0.4775046137075707"
      },
      "_hasShrinkwrap": false
    },
    "0.15.19": {
      "name": "@serverless/platform-client",
      "version": "0.15.19",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.19",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-VhI/czWsObU5tLfx7nm0SZgiAJyrEffawW3OscHUqlxWhtZsFyhlySRMq9TzojoGwvpU2Bn+oOnkhInhI6Wz+Q==",
        "shasum": "bc962aa07156b89307e9209dad13b95c5d2c3974",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.19.tgz",
        "fileCount": 10,
        "unpackedSize": 66089,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRZ2wCRA9TVsSAnZWagAASu0P/3+8DU7eGxnZPHEygIMI\n8w9LCR8DSl380SauDRUaDHwvRSTQMr+pewFil2g0yfLj3UQqXdprlZIRKf0V\nUnUO6tZKLyQC/3jb0NzEHgzgtnR23Fu0WMwCjcBtd27PXo0NgmohWNndwrBN\nwI6fezu4yVHXcwH3K03LJOJu42hU9kTzwfgSkuohgCBr7k2SvtvzvrBm1aTY\nHm/IwXn74V3DhC5aHPtYnoa13Pcz4ByZbYy2fslgSnEjhKqdzvPF76PhgxXq\nojztYtdzOD77pi0dETw4yCs3km8WgiHBbR2s26KRgNFPlRJqTzTmfBIo6NbC\nVLNd1JawxVUvUlcj98Q3GhrYwtJBeIT4nya+P+ar6cp1zeR82v2E+a4hnzwn\nwCxdwFIxHMrgw2KfA4wBTkONGlALZhwbxOUngcM8xFiRGhxZqYwVDY5TzlNm\n/DclcdAjzR81+Mo3mg8i5tR3r84YuT2aUGj1g7Yn13zBjir21FeZcyIL4Ko8\nX49jY+9ZEbfUtv41prTgiVuaIOJCObsm6cBk0SJqchQYdPhdMiNPgxS4f0Ae\n2xGOTifOIiwmev1E0BkYRV2lFskKjCtWsz7gT/wUAM0rEeyDAqTvSr6NZvar\nRfecCJXaLLb8n/FYIZVqpELztdmNaLgbx24+LbH/xF/t7x0J0kiVNwuDg1aH\nwD1n\r\n=lHGU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDJSwWE795EsFXZPjMq7c9MyDWC7kDfzwJaIDvQsUauzgIhAKkYFaZjTIBdBkPrnnhC6c7JdHblq7ti4r14DscVlPeO"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.19_1581620655802_0.2812609092219651"
      },
      "_hasShrinkwrap": false
    },
    "0.15.20": {
      "name": "@serverless/platform-client",
      "version": "0.15.20",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.20",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-9vO/Giso2jrMJfGPlCR+mC2sz2VTmpP1LqkpQULAM9btaXV7bYu0GFs4/ZO1Zqd4lvxj/5rfwr8sixK54Pllzg==",
        "shasum": "06b410b7cfecaba792d2611b0d5ebc5eb8664b84",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.20.tgz",
        "fileCount": 10,
        "unpackedSize": 66254,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRaL2CRA9TVsSAnZWagAAg9sP/1fC6N1o2curNeLgey0l\ntx9MMUsoBRUeeWzKTSvGo7jFHiJI/aoRP9JZ8o0s/sdI/yMRzv5zTbUM+EDf\nSwfn+lHG3yiQ+6ApBiPTCYChLfqmTke1CzaYuyk7bBevpcwZ2e2erH1nBi/t\nuH1TjnSc01NoFhzo5ePgH+3RJOWyAzFW+ICF0oufdX0kludg+vKFv30yVk0x\ny/U9ENQC56WsadBFyt59LBzNimvF8YY+QyLrkMAao3ydlvIb4ed1ZlD0K64Q\nz5lyPGW1ebeZGfHEByu9VaZGceGa2ClHxVZWjhyJS7TAVV64PWdupV51B/ti\nLCjmyCLaJU/amN3cc/CkB/0tDs0tRuOCU5hRLN2VZEKelzR1hknhl4jRb1z2\n5fDakxPC+HIEqvtUgx2pkYVX5bI5HLM/Dtsp4RLPYou11QIyUAooaegIOupP\nofHidgYIW3zm5HCsxw7f4LSYkkCdIfe0udk/+m0cau9FVD/SG03By1J4EWg1\nTj+thpvZqKOFuyMkxmDQw9HQ98g7QoXUm5ppxD+jCKYJempPluuA3yEL1Zgu\nx7yW9nPhPZeWjkbfJNWOZWJuuLbohSSV/JT28Mm5bONhCmt834NwX0VPyWVr\nrIUkOs8LBfoxVvI84J+60mshJy2okqXF1X2s9ogKW7iQ3CE7PBVJFkfI1sH5\ntW41\r\n=1vtx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAFy93Ex2CnPJNWWadYrgt6G45JSagB5USvKARWUg2YjAiEAkf2KCfSt+0s4pEuw6j58AWBDZgQNm4FvL3F+JpvuvCA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.20_1581622006128_0.9459641014577114"
      },
      "_hasShrinkwrap": false
    },
    "0.15.21": {
      "name": "@serverless/platform-client",
      "version": "0.15.21",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.21",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-czMoBagCXQ4JVBOUJqsxJSnazrMNXyPJicuusp1xlbQ+g05TGP8+NZFkyyPRYP3IXc0TQSYKdWErK1Jqx22fiQ==",
        "shasum": "2a4359748b8efd893bcd91f513df412b757196e4",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.21.tgz",
        "fileCount": 10,
        "unpackedSize": 66117,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRafICRA9TVsSAnZWagAADkEP/jndA9MwR0ZufqKn9ijX\nSITQ5snkm6X+CQKKmah2NzT4vuRqdvPyA3MkWPlbBqlbyic7GuVGxMYLvlyF\nkCo/jnnS4b1PF6bgXMiLsjnw4S6fjyzPE9gN3uRo1IrMuQHtOnzJHniPW6t6\n260e8DCCiTe7hjLS1g/EqO7j9+R1VsJBTeVMPewn2iNvfuQfXHM20Gveztse\nIbLc/DDuuFgLFNNhvngkdlEul6Qx5t8K5vEz+8Q0l3KHk5l0s3exTeHNcv97\naB1zlD6mfN/D+DrTNSHxgGBDAWJM+jjtTgq8Z3gUM5EXq3LP+T1hO3e5Kfyp\nWqaFneHOsvdXh/2xHaDgR4xM5lt/MNW90XTUd256jVKq0bovnrxvh/g9NSnm\nNQLyZMptXraI0dW5pqmFOxONGaqEHQSyjendEaT1yLYw2UD75ebY6+Q2mZTR\nGiV5f5+2yhbGtL9HvwubCqmHJhIY8lkynwaXzuMDUA7vp9Xp0U3G2UYa4LUk\n7TB+Qn3k9AOwrOI4W/g3X4/PbzN57gN5vPsfO3o0X9a6zc4dVxmo9tDAelb0\np/55mZS975s0KMZ79fTEn+6rkOL5RL8SL5UYd06jJaLnEQTIOOB/3Ou44a20\nbpHO5qH3iYQDLW37Tn1aWLs4PeLQYYoiXtiSRNXkbzX2PX3OUiLLdtdgh52o\nvKSp\r\n=sFZL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCZmxiTVjrh1sL4N3EC7ahN9Zgy7OACUHExmWHzA3PX7AIgI47YSLGSU5mxxlRob7iMMDCVjH90BXUlI3nl7vVjX78="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.21_1581623240421_0.5733782485380048"
      },
      "_hasShrinkwrap": false
    },
    "0.15.22": {
      "name": "@serverless/platform-client",
      "version": "0.15.22",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.22",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-RjMUE/QuiauSrU0Pg5+BmQ6i2xR9S46YLDp432bzx85M68pFQErLWtXtHwwuj+J73CBxHHS5RytjrE3vZKJMfw==",
        "shasum": "a5723337cbe7c79aa5676e4841bff288eabadf5d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.22.tgz",
        "fileCount": 10,
        "unpackedSize": 66380,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRavwCRA9TVsSAnZWagAAF6gQAJdlLSxS09jB6/y6W/2I\n/edSIPC1tH0ZJUEdgtNPHjHAkWgw2GJ3ivuyyESRIIT+KUUNwhEKG3GuCSb8\nue685mMTJA693maK/kIg+TFwgoN45/uWdH8Eq+kgk1kHNjtL6ZozwkMHYL8g\naDiIRYEEiDk/rvwVGI0QaTGWlrjpGRnTFOsTG0k+ZUsC/Y5xv2bNHJZciQrH\namAVlC8NU1kHzWvMRCbJDnhP8s8uc8QxhG2TPV8c0qv+JF+UnIyk47XPGZGY\nEwAWdVPGamMiXnVf/wvrpfb1g9qDiXMR16UMa9hHhEaxL6C8Lr+jf7y3fJdH\nfy/WVDdC0mgm69GE8uZznCzjx2fgxuOdSc6RYtnlkSJ+tMZpYccpk9OaE6BR\ngTevZqSDRlTk7QpnykQ5i4ng1XW+VvU44Unjaml1EKCl6ZcAOSZLObpnrxmF\nekLjvyUYyFD8exdseJGaFtyac4q6zMlSz110FbXMH/dRZYamiTYX6NvI2yt+\nNIXT2ECSSOTv6+aP5c3RcM6OZF52vU+83RPljcBDN11G4/fgEkGF/YFyayag\nqSSQlH5W5L0pvAphCxFLJEvApPDeNVpinSXKjMdis3CohVLrry6juXH7BClH\nCQzGBl70Wn6sCKd2ndPBB62iQuMmOO2j8XZ6+ZT8mutkUa00ej4c6mYfQDUl\nMToK\r\n=YcFE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDcnQOezugfussfra1HkFmqvtvojZOqRHb51Ve5XlU13wIhAKnBjOzgFe74o68YmGcr1WcMERcF7e6qtcFnuld/9DHl"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.22_1581624304019_0.6758991211494458"
      },
      "_hasShrinkwrap": false
    },
    "0.15.23": {
      "name": "@serverless/platform-client",
      "version": "0.15.23",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.23",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-PXGtyVRFXrlqStG9cK+rM7XzrSD6sibEqBmf77E3jfRbJmeCZVGuQovueHlkABAIKIRUVwt2CJFiEt6m9+e54w==",
        "shasum": "dec3d846bc657ac6d269e795d5b40df64b1eed83",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.23.tgz",
        "fileCount": 10,
        "unpackedSize": 66023,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRbH5CRA9TVsSAnZWagAAjoEP/1ho73bxh1E9NzT817fn\naip5iNnx8MBWBZ0kDlU5dAkBXXYn8c3RXuSLKAk5SbXVS/2zIUITKFaHn4lv\npUq6d05XxbKkBkw8OuWvFN0HT9B0nHR8l/FgKdIw6XOs5m1C3C43CQnLu9xl\nHMlWwe0IrMf22YTuKi6lFc55G0c9xoyuSBmwuXcB90lzgDZ6Tmad/3VNkLzG\nRs1UlkHMa+tA2q0IXvOJHSam2kkShILVYMxZH66h3djFBdm+1Hn57nO5s6F3\nymfPOAOW3hIKtez9/ccOqxIf6nPxlMCUDF3ei+CP4nMSZYI80p2+TDU6vtYi\n6SnQEAObmcSzqV4vh1SPfBGeVTRRiunUPdIJhhzTBrJE16mk3MDfe0YjA+Bb\nIjO2X0P+J1O5yc7SAsO25cqrvCchTGoZW6n0d2B+fuTrbeFO2xy90jPpfSkp\nXjAxgOyKMd9oDp3T7UjyIUZFTBHF/w1ReEc2VrDD8XcqShLAeAdq/3OQIZTq\nxC6q7ZhJ4aXDBUog0enTfGP2u45g3l1iUW4tg4Tu67an1GXChtagvCMuIF6k\nQwFYEdMIwWMmMTqJSOcYkWDEdtosXdJV2B1R0LhLFjkO176dSJHdnuo7bYtx\nx8xn//mBzBu5rGqMqC7tw6AiZ1AmXaEz/a7TgVQKPwAZ7oMiCMDJQ3V/dUvf\nve+a\r\n=N5vj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCs4zLlmDGooHZLhMeCGDMGD5nC+5j/ulr+8mAlFJ0PzAIgEJL2PR5BQ5WMPQIwFjppyu0QWh9GMh6Y0aYjGMThKzA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.23_1581625848943_0.2553608162223784"
      },
      "_hasShrinkwrap": false
    },
    "0.15.24": {
      "name": "@serverless/platform-client",
      "version": "0.15.24",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.24",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-6MiIbBjeggPuC5wZ6ywF43zgISWZ+FerKJMMVo2j2KVMbFan1nVsoR9GHX3qNzKwGN4Z4QAHoweBj5P9jLt4ow==",
        "shasum": "c7434bdb72d4f165d469b5aac9ae93d6ca1437cb",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.24.tgz",
        "fileCount": 10,
        "unpackedSize": 66264,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRlXxCRA9TVsSAnZWagAATHMP/jO0/NxhSQsH/Td/wLJU\nx8GCTbTAHdYVYCLFeagmKrXw3r5Z7l+1dDTRZ6A8pzqqvY/s8MfYf4DLA9i3\nrC6/l9rL9y4CNzDCLsR/94WTY8G+eFQPQ9MVmV7u1fRxWQSVdLI7tMhtMJC+\nhbnqoS04J4INQ9NSTv/K2URLmO7moRbAefyiMeK+IzdqJEQiOc8anghdnfzT\ndsrprQy4V9Q1h3VoXnvwPuj0DV1GiYzNxD5IKVRcVOuYwaj1T6JpA5VDCAjC\n+8LtG4WB0Py8SgLReUHr034SunGfotAWa/1k1fFAGED9y7/fQSoR2jlXY2oh\nQdgbteYS185rNWncMdaFFqzbhBmi3k7+3VkThLyzdN5xRzH0s6kfezqpIHBv\n+FEfhTscxmC+Bp02EcoQqDe9/t99TsIAlmpBa5Sau5Z4Oxwtx0IdK8eVLKmJ\neB9MgOwwpXylPN5oYWoqDFACqsO3JaYhAzAGDUHAAsE/OnHjQGdw0eVugmd5\nZKGvHGiYr8A3iIhrHm3o7cdW5f7edTHfNv5/qwBPkikT1jAPUH6AXwvIIa3p\nYJH/NXdWd6d3zPJpkmIlLMRPH5TcP88qkcqx12QkbCu0g7azjii2I3jpqoRz\ni+MF/kKv5VbhB7KBaNQ0lgF950Q3Zs5i0pUDmPilhQlpxkxO98NESzWXpBTf\n1ngA\r\n=euph\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICEvJxzTjrguOR2sVdMaVAYLLsbu1ifQq8fSgAQ1rQI2AiEAk5eKD48aBNOZGxDz32GYl+d1+gJVqz54auYg9hdmfpg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.24_1581667825021_0.46786681339291536"
      },
      "_hasShrinkwrap": false
    },
    "0.15.25": {
      "name": "@serverless/platform-client",
      "version": "0.15.25",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.25",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-0hGI77n3CtG7jZDZ0QTZtl3nETN3T0v8KTarSyyFAHvnIAbTVGnmJhHatzsxbK3mLhvjWHhdC2DpTYhMy4Q5bw==",
        "shasum": "976a4f3b011155857a440abb22904e465c25b2ae",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.25.tgz",
        "fileCount": 10,
        "unpackedSize": 66044,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRl0QCRA9TVsSAnZWagAAD/cQAI+DlLScwq5mQpcOwSlF\n2zZnBIvP5g4ffh3/mCWDk6o8UlAiAtwj4ksCWnAMe6lQNTfuhJUijork1vTW\n4a3gwc79YZ2fwvjfyEg9Kz/xlBHRWXGb1jWXiGvK5ppH40eh9sesKbRICSUD\nrV5YAH8KRicG0y8vyEMh4nuxy4sjJPm+kahoKnrlXKGKFEwNjeQyZ0V8rnwP\nr26UZMAXsvLQqGWH0iozH9yjQCW/9SS0v3x4yxjgd6E03Akq9yx7MEKFg4sq\nOBgA+4XUJcS16ibixIpe3WrA2wy0Axz1/teFm+Wpp/1Ib4osAqh3ttgET4iu\nEwkxBkIlvMQilpDu2gh5An1kFSMmNXbT0r8Zp1yeZLXwoNRpqvXbAh9HyQuI\nVgi4dPm0OIudHR7VCjfvZR94MAS3YZkFutnw2rtLQjqoY2KDIx6Ussz9i6SD\n6jTH5EGnFwcHqk9BGSHScHu/rfrRvHIVsgrM6ABjotsIxUjd4h33v+gqXyHi\nPskwPJiN8INLWz/hQ39pgyi2Wz++LRpAcYiCaR46JBg1byIYQ1nel60YEbm8\nDEq4u+McRP1/k/xI7Nu0hCNg1tuStc3ErlSmNm9Rqd5lHxyj7fDSnFO2orxJ\nghtw2HNt0tzTHUus/wXZ/BL+6o5GFEiRkLky1LdzEif9b/gSJplHzoWT4HZ9\n/39i\r\n=dyXN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBJpV8HzIG3qkg7CWGBiuTcVdMumcxy/jSs7Wwb2fk5yAiEA9gcc7UpjWM4cta+rm6TvELFPrJTBdTpmkx8rUYOUNdA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.25_1581669647808_0.6477324449460433"
      },
      "_hasShrinkwrap": false
    },
    "0.15.26": {
      "name": "@serverless/platform-client",
      "version": "0.15.26",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.26",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-d/hRSNSzNv1SFZx/dS90BTobRh0SYeX3haV63qhZw0S6oo51g0+AzrHY7B8Y380uTjCJsIGtcWlYRiNOncp4Kw==",
        "shasum": "8c4f767c04173cc3477dd91b24b4b23d628001d0",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.26.tgz",
        "fileCount": 10,
        "unpackedSize": 66022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeRl9NCRA9TVsSAnZWagAAaC8P/2Z+/H9kynsXBP1wtr2w\nUnKwh3EgxlFbvN7jWCIm3alt7lVple11p0LMWASN2xmPL4S2DqWipjYow9oF\nXpaSGogBVf6BeKX1WYJj1T9rOB+fKS58uYhaoH3MBRE8f7LUt213hzpEmrsk\nyRUn5rZ5EPWVCLNZHfSKI15tg4ABb5oL23WD3Hsx8pgITGDCNqA/O0chwSe5\njdpnn5c8oBjNEaJ3cC1Nj68eY8o8t5oAmmZvTKOtPap4c9wT7CbPwe4Cejx3\n3pfyYgXykN7E4wNBcMLlvzqm/MTWKUft3Z+qBwqu2uIFskFcRG91AyqY5Zpc\nflwTgwICon/uw24mWDz5qAwnRIiszAi9ajKs1XChy7qLyeNVRtUBAPIaVgWQ\nfYsTI0+B+tDDRl3iHv+0VFeIwzqvTr7Vi9p1uRAjmjEBf7AK/drlqJveuFnM\nKlPgnWJwwuHS8wdRuOeVpEgJJ39PF2L397FOHtb14u8tEC5S+iWFYII6RNdt\n7zbMr2NX3XbsNBrlhutgdKj+kHpons6DqgthQkmdDUTN/ny0qKNHw3V8VTep\n/r0WTjOKirlkV043Npx0sOHjmgQls7HOCVQCGuNEzT2QVKfb4LoZES7Jjqri\n69xPBTDqiR8vw+j3E0zMrTixYMMDyEW3ACHA6+twvNETeT7Yifv7QUZJCF50\nvKoL\r\n=wPLd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD+AEJKmskg7cEoIV7PPdPtKpfcB5wZmiG34lmZw5H5BgIgdL7sqvtRRTp547ksGd/aYqeC33xwxO2g5mzTp5Kr558="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.26_1581670221059_0.2749978439985554"
      },
      "_hasShrinkwrap": false
    },
    "0.15.27": {
      "name": "@serverless/platform-client",
      "version": "0.15.27",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.27",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-j/V9QfsTlVq6pqfNF929EM4LrhEX06eSAMt6yHNcKyKnKvplr5+lK3qKR50D1kM5LyckFHlKREUbvcMgaspm9A==",
        "shasum": "ada0c5a1fde445920d776cdfda16a77ed3ef17b4",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.27.tgz",
        "fileCount": 10,
        "unpackedSize": 66046,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeScgaCRA9TVsSAnZWagAA76sP/3yTDpakffBZmJsn8lg5\nNgHLay5rw1gyznVcne7RxfvX1CHh+pkBumV3sDI17cCw4ffMxvyuQNVGFbIl\ns/7H1rNazdtm2QK51Z6XBri1dwpAhLsp/84Ud6T3lYjMQxQvoKZjIgVdlCBK\nnhzjRnKZUQ9MOfH8K6vy9Zzr4loXh+5Hh/t4Jwhf/rLva1FbT2OXQJlNJ4gR\nowvfGGL7rdibJWIDJaH+EhxJwa2NAIdo32R/5VsAqyZXO4A8rSz9iQTGgS++\nam4WXLxcCMhp4Z3iXiK22TCGAFQFT6reVQYwbjGZKu84NQ64namf0W5zZbhn\nDtGLdIq6yGret27wGx4DDgjoiJiLw/dpF3nd+AcU0Df8m3p6GCbFmRC+4tc7\nrsx7ATMMOUHOLKxi4UEvvShfEIKMeIo+Ro996RUWlYDsX+BBZQf53m/Q3o+f\nKo6O5nWJGbAkW+loGTQEhoMsy9k9iF/0kpAd4U25o2PwgR3ORE74wQvfDwgZ\nN307PUbG8X7Hduaf1AGaL4dSYQv8GEcmzUliE8P/4R0/ZC9/Hu6q3/UTkEK9\nUmxY0nlBMcTShEL/zwwMEAVwYGHL19X02my/4JIt5wsHn/332D/WC0oF4Wip\nih4iwODeqJu/JuY7MBUL59PTs6trAmGATd2ZyWMbsQKqe4o53ULxGQRTrpzv\nlUMW\r\n=7uGr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCygTJABcRNeefg1hVH5hjO8vU9pGNpOfS8ikKAquj/bQIhAIQpH/eVpjcfJ4XAN2cmLZ4nCvST1HwF9gqTrQJeHzPa"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.27_1581893658411_0.2501053177525443"
      },
      "_hasShrinkwrap": false
    },
    "0.15.28": {
      "name": "@serverless/platform-client",
      "version": "0.15.28",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.15.28",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-28glpIfbOK1eW4Hf4pOkBTxkKj/IGVTQ+CfoQJWw+BbVY4CAq4aQUkNVDa37xGLooAeJS0+YJ0yiqJ2RkVktEA==",
        "shasum": "4ec94d0d3fbeb67da7eae7ebf575730b6c44a3d1",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.15.28.tgz",
        "fileCount": 10,
        "unpackedSize": 66435,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeSpOBCRA9TVsSAnZWagAA4r0P/jNMSm3YfpXt4gu3sRJj\nA9TIBApg/MJ7GGMJYNH/AITnLig8X9hjMc/HjasCPsKevauz/GFGpJE6MKNl\nZlPcQmDGw7cmy2Ror8ipHvv+weqZFEWYs60JfPpUsPCKXj9STMyO+7oPHJyx\ngL7pMcIHLPLX/Pks2wAChY73M00WqKGGQ4/F7c/oa+hFiHQB2bTQf80Zw8JM\nZqUMWJYtsegkqzPmr0y3/yWmq3oTOoTVNFacv6YYQBJBf+hoziGp0Dub0ZzK\nBU9fERx1hXzLeCOTHT/LiLKxn3Y8+miR2nEjWgTF3EkMJ3g/M4b6zG8Uj8Ux\nAwqfmWcspxNXhC7k7WgXfSCHdVr5KvxQsbLjc2OYT4d265vIsGzjsu3OAvYX\nNY4pfSYx0Osd3+rVFF4p/50/vepJxKd9WizTeE8/iZP7JFDGAnS2fA7Ew91s\nhkU/ek4+lDbpx4ndlUw2PiN38OJXQ1jv7yhPZhWRKODaGmXbGUO3ZS54VOwu\nT7lOBtxk9HjVDuW4/2DaLy2+fSCfDWCGM6SWARCfBZ8TwQnNTHlnzckJXCsf\nYWM2s3Q0BKCN+idxkm4z5WaJyihoXWjZcZqn39Oiqk5o6M+hzzgzBKdjcwi/\nBmw3Lvd5ldFOxSac6tJFsBHBiqODrSU299/P8YIo8T8c73JidNRbspnL9keo\nAT1/\r\n=ddxe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGRC+XzJ1iHi7gNg6nE2jI/OyMUuCnFmZt9CEj+pmThdAiA5iieK5eZHh1QIO+ZSOTa0Yl2wwoAvck4jGy4k1fbN2w=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.15.28_1581945727714_0.8786308408095258"
      },
      "_hasShrinkwrap": false
    },
    "0.16.0": {
      "name": "@serverless/platform-client",
      "version": "0.16.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./lib/index.js",
      "scripts": {
        "docs": "node ./.scripts/publish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "axios": "^0.19.2",
        "fs-extra": "^8.1.0",
        "ws": "^7.2.1",
        "adm-zip": "^0.4.13",
        "dotenv": "^8.0.0",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6"
      },
      "devDependencies": {
        "jsdoc-to-markdown": "^5.0.3"
      },
      "_id": "@serverless/platform-client@0.16.0",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-DZqG2a0i7JQSf7OQWEv+3zlXTEi/L7neB6dV9ZG8hqXxMu1aU3y5Txf3MbThQCIfIZoTKBRoiJcnzNtZttQsLg==",
        "shasum": "58929b78e8f18ea50a2d25a5fb5a4b998fa937ec",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.16.0.tgz",
        "fileCount": 10,
        "unpackedSize": 66001,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTnRuCRA9TVsSAnZWagAAeIcP/1DHCqqFhpeJnXAR8jbg\nAmJHQ5XJDRGj2vX06WR0zyZsN+Zvxe5qIFwAIw6f7kbUZbq4jdZBMwvK0Yn4\nRabC1csXWXndVtKTHKuEoMwLtfDGWAG4UFUSfMoEh0c7dKEuAlLA7IiOaWON\niaZ6wcmuV3XAVRewEEX/FDAWv3LLXJJxFYCiTKYVWX2ge0cLdvF7MmzUR7bw\n8681+6EVBmgdlRlPxDvB9u/wHTvbYJSmN+OGQxlI2p6e0j7OmNseAUL6Wizk\nmt5HpXwLsWYJUQz9HB4GH4iSUIamNlsuRvltDDdPQQ/GM0XS3qBmhaMbndx2\n+LEjqq2hUMaFJxh/NteF+lkHUf39GMWZFO8W/DUUfUhihuluyeLOi6sQ0kLc\nxqSDVBGEBO1btVx+fEdr65Czk8tt3jLBw2dLYUGpWz0ShfwfWw7D+jyZ9Yb0\nhf0ORULI6ggCc9HheEajNLFltjfFjA6uquhOFZco69EJYmoyZauFmqIwO8yR\npKoOMGbqGH6HM4bM0cBoHdg6rHEdKEzvoQmdQUd64/nswD6POjfxafMa9ptH\nu9ydB+cGNcBPe2X6kkf7+IFehMu9IrhXqwI+lS4VodolWI/Af5ERexPDVWDa\nrGDS2rBK//9T7IaqkX4RKhyfkeJOs9K4NNDk0YqZIvHb5G9Vwa8m+eEsg/0v\neKHq\r\n=1Ja7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCm0cXhsVC5y9T6Y4m+r3dnqzzIPs+/WZKNcTO/VgQ/ygIhAIiXAO/ix201fVTla0n7nLW7Wlnk20EJ6JS/5VWXUupf"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.16.0_1582199918137_0.029499650756988238"
      },
      "_hasShrinkwrap": false
    },
    "0.17.0": {
      "name": "@serverless/platform-client",
      "version": "0.17.0",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./dist-node",
      "browser": "./dist-browser",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.17.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-XusWnRertJ1iF39JvyeUNOm34gyIvPRwTY51VlL9Q+WfLV6HMA1yXpVMRsJi7uPQ5o/3HA5aQtNsH1KJrG458Q==",
        "shasum": "ea86ad83d7419aaec484cb19aa325d3485ca2a63",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.17.0.tgz",
        "fileCount": 10,
        "unpackedSize": 432936,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTt6BCRA9TVsSAnZWagAADg8P/RWMWfasXYInmABXb0bC\nlfOlxbqtMA/yNahwdJebF6aoBlTLvmd4JtG0tvaE5gU74u2n/jotZax0H4/I\nbsj8+bOTfNW3KXaZZEgNEUZSopcWrVYaaOysqyZfaMaQedYr8lFziWrYoT7E\nuLsOlVyJCqVhdxXzUw8jilZZELzzjUuFxZDwysSgizFwVECj66jZYXKjWvZk\nsFov3yEuM0eXBcMsGQjBme60VMSZviV6vkBZfSrkkrEFQ/+jPfquPQOudJQu\nrID1Q/jTBkFeZC+2qwBWA6fw269AZ8cq2hKM+syC8JmfkuOKHOerbdn3HVkf\nIeWTyeSQaWDMCDd4Q6t2hcYzn1EV3hrA449aqb5mdYrywNbC7yF/E/djhldk\ntROFXipj9FCjqLnmuQ0RsBmqaU7jBtrlayBxFSN8EozOA3mLvj4zBFBgB3ot\nasLWwWvsclhfYhIuwP0LmVos63XJ4DS11q4SPJFG8tjdaytK4yZHoPXZt+tx\n9JV/MmYZAOhGeiTjG+3QGhdIf2/hHuCPswoXtd8bGpXtBDz/8t6prIwVUpPD\nfxn+yyPMFAfzvhGaHZXGFp3aMTEZ+CCB6wpmPppkOyJh3mjJGiAPXmTHAhc/\nGNAYjfGhlUoA2K4zA5aio28/02NIFi4DG6Wnp0CcSneZfjH63Godj3lOJpYw\n3mPg\r\n=HqZ5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBoS6rZ6dS+l5tK89L+ZjDcy+6IQme31ThTO5iCOjSGDAiEAn6Eh6gTkLJ5qgJ+Hzhx/Xp++lT9LS35W6NAqBO+z+uw="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.17.0_1582227072711_0.5278482931443926"
      },
      "_hasShrinkwrap": false
    },
    "0.17.1": {
      "name": "@serverless/platform-client",
      "version": "0.17.1",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./dist-node",
      "jsdelivr": "./dist-browser",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.17.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-OWdZ3EwcFWQKG2H/gCcz2ujnOW2hA0+6WkxQu9cw49f2UgOqW9/KDVBhq9KuoOnlOow918/k4E67bjPz/JlgVw==",
        "shasum": "cbc03806656b49251f6d100d079095b30fe92532",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.17.1.tgz",
        "fileCount": 10,
        "unpackedSize": 432937,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTuEqCRA9TVsSAnZWagAAzaUP/0qJtERTePOsEzfa5sgd\nJpCShqFuIxoBGZzdlZCu5uyTTJwALgZKKb9FWLj/2H3O4Actuqcrws9zG/5X\nqbnIngLZcYjfFSkkhVNwq50T4xz+N5WECZ0PNepzFkHJPEaw7NUUnw5uulfh\nhWrkg4qS7RzXydXgagEytfMA17Ptx0VGorf9CF69QoAZt7lHHMupD08WltH1\nXYaCnh8yEigF7N+YgY5r9ekvjrAbVYq7MHG2/6icYeeZO3nDoak4n5+RwUqi\nMzQCI2y/+ZvxN0hdGpKx6N/vvUmY/x3h4jG0qhtGLttw5KZUDKq8XnzJtKJc\nUkhuYFLpMAZ53hl+xzZSWSeq1CUeFO5knCvTGtjRENsrsqkFLPs0LScki3vf\n90vwe/ni1KuS16J3LfoiTIOuPdGZhJl8gw2eDfc6huW93YbLky4gmvgpH4KX\nX61rzGizpS6RcjAaiNfOkY0u66+zIf1TX4KFSaZOzxacwcKx6J3J3jehGtq1\nNKV6qR7sbUbllt2mbg1zA1mN8X2gbfud/0R/c8bzO/LIcLwBot1MVfB+oXnI\nrvVyxMxl8bOsoKhnapfFWsew+2zJATQxYmKWLhKgt7UuxdeuNX4+zpiV0pIO\no/zTuWAn6aBKN2C0RUiEDuV+t1ToL/SGdya9AsbWmDYu4XlMznC8LEmmJz32\nr/s9\r\n=DYI8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFbgceVqOmWatxyW8e1tBhLaJHnB5CZeRCY2myUb+p+0AiBiOOiPnJLm3VRH9a8TsETJPMSvkk5LUaFq712hmKqNWA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.17.1_1582227753547_0.595683776230493"
      },
      "_hasShrinkwrap": false
    },
    "0.17.2": {
      "name": "@serverless/platform-client",
      "version": "0.17.2",
      "description": "This Serverless Platform Client SDK makes it easy to interact with the Serverless Platform and perform operations on it.",
      "main": "./dist-node",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.17.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-KM+rAm3899v7W1ncCF+7xdRPLftztatW0cJLtCM+iG0ZpJhhneUlh7bs0dsqSyWSAraP5asrsBhtYb6XTIMAIg==",
        "shasum": "a08b88dafc55f2b9888143ea3d660daf1e4ffe20",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.17.2.tgz",
        "fileCount": 10,
        "unpackedSize": 432965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTuIYCRA9TVsSAnZWagAA3fMP/21W8T+FtxNPM80Bgp9+\nhz3Nw8IWw7NueYCNnvwgI3kVHbmeod2zQoN0K0e8iNImefmr3JrHrVZUJ3mU\nog13EwA45O8mOvggtukvWH9FMc4uIjODYCY786Ck1DedCy5hjHxn4GpplTps\nijIPY1OkFO+UbrMJdX/vyic8KZJF1fhWCPSJr107s5F3axZTP3BB8S5w00Th\n9/Gm6QLBwXMh+4ZY+RwZITDldlgz+3fnRhqsJz2HIktmC2rTKNGcM052x1e0\njdyA2HKeApu88yR6y2mr0SO+onlDZkORyiXGYvxMgK8ABz3tO7EfHhXnDGQW\n0dD2WCYh2O/Q6q8cKJ9mwSnPBkrnr9VLqmhmlPsOCJiiCnkJa6RNVHG46Xj6\n5Tm1VaEgIJAwsgTBsmak4haS/BJcUq8m2ouiGdxpDw3to0OnfV3mU+FpNliG\nhI4R3D/AMElPB9kxqgwQt/xES4RbKo/bo+XFYKaxuocEy4Sj9oyohLVRK7U6\nqRBzgBpRXC0tzYy1pBYey4B4sEXf0rZuKTG61u7sjV+HPy82xf6vg4Gr+PAj\nx7FsztFGQXCgqus324wlPT8OOqLWvC6/yKWTSDgHZeCbi57FTFo/+6inacmH\nqZ3DYAW3QiFuxd56rIPA4RHyjRxNyIsO4vOB/+QPwHysWWKtCrUaaoM2T1D0\nbG+A\r\n=+afm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEJxQMPSUNZ+2bVkIiFi4UZwP3eTMvC/cht8f8lmPuBKAiAkpGl0VeujblEEU+OxHH2EcyNIMkbsaHNYC0jvofwXsw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.17.2_1582227991563_0.07481589248419862"
      },
      "_hasShrinkwrap": false
    },
    "0.17.3": {
      "name": "@serverless/platform-client",
      "version": "0.17.3",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.17.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-vWjT+NlCiCChpCrzxUYIdRaTtJnZ9D9cNh02RipoHGQcojrZ/yHFV6CsuADyMeDGujw5Y5RNYq2RkrH5aCsfng==",
        "shasum": "9af0ac38903d7ca6ee0916b0a49a6534fdb4bd1b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.17.3.tgz",
        "fileCount": 9,
        "unpackedSize": 432627,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeT0zrCRA9TVsSAnZWagAAI/wP+gPIagadSV7fd3q6mSO8\nsQu9EPp9XYzoiD1CyQPvBoFsNqWnrTkG/3ffU5jhOWvfe6yOqrLRD6BQZ+vz\nb+k5IZrQAN7BlFDvTB7Asitvb+Q/WAPBTWo5O/9g07T8HliiO/j/zzgCzNDN\n7cVAgWFYwFpfWFboLer7Ba2VaW1/sa883TbTu+p3WIxumMdJapcMPana9t/a\ncLTqqAMeRRQP4DVOFAabZlevdT6Dh7fKbLp8SUPTth9EbDZE17TkBieHx4zf\npnqBCw1+g0SaSniWT/PP8Pmt4jfiTI5tdtAlrEca5lMt+sopeLJyoFE/UziK\nqvXrCXUhwk2RFXdC/6GvLGJana3jL9Ulx4xxuOKpcwb7olcLWa3qKD3V7jIf\nXxV+KzoSAVeh03eULHbYG1xQKWqEhVQul7Ol8rshcLRNH7zjQthU0/iZl0j2\n/jO+u/cs2MR2e/72OzWgwp4hypxCIkrBe4gEBzO9YEaM0dTo1GLPAfCCxCey\nfmfhmP6SaR14ONUrkRY6ATECVCbjD7L/1cSDgPsXPA53vGVF+Htyt4tHsltP\nH+LrbfZG7DY3f0zLmS5A8eEgCcSvaKMLviOPz2lIT4oTiNT2o5Xmakjap/ir\noM1qEUIdvRjITV7xMBir2FkV3WJQ/x0o3XW6yId9TC+aaZBBPPSWbxW3ewgN\ntc0W\r\n=mhw0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF1u8uofP2P9piXiKY3Hb3iJLaM8gcyCupQqvA25GjtWAiEAlK3v+vT3N4/77S9b4CaQ/r47j9rKY8q7r+sGXUiG3B4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.17.3_1582255339309_0.6944024431594149"
      },
      "_hasShrinkwrap": false
    },
    "0.18.0": {
      "name": "@serverless/platform-client",
      "version": "0.18.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "readme": "\n# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services.  This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components.  At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers.  Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients.  All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified.  The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require('@serverless/platform-client')\n\nsdk = new ServerlessSDK({\n  platformStage: 'dev',  // Optional.  Defaults to 'prod'\n  accessKey: 'JA98JAJFASLFJSALFJASLFJ', // Optional, but recommended.  Platform Access Key needed to identify all requests.\n})\n\nconst instances = await sdk.listInstances('my-org')\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\nThe Serverless Platform SDK Class\n\n**Kind**: global class  \n\n* [ServerlessSDK](#ServerlessSDK)\n    * [new ServerlessSDK()](#new_ServerlessSDK_new)\n    * [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n    * [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n    * [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n    * [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n    * [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n    * [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n    * [.publishSync()](#ServerlessSDK+publishSync) ⇒ <code>null</code>\n    * [.createComponent(orgName, componentName)](#ServerlessSDK+createComponent)\n    * [.publishComponent(componentDefinition)](#ServerlessSDK+publishComponent) ⇒ <code>object</code>\n    * [.getComponent(componentName, componentVersion)](#ServerlessSDK+getComponent) ⇒ <code>object</code>\n    * [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n    * [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n    * [.createInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n    * [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n    * [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n    * [.run()](#ServerlessSDK+run)\n    * [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n    * [.deploy()](#ServerlessSDK+deploy)\n    * [.info()](#ServerlessSDK+info)\n    * [.remove()](#ServerlessSDK+remove)\n    * [.startInterceptingLogs()](#ServerlessSDK+startInterceptingLogs)\n    * [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\nCreates an instance of the SDK.  Accepts a configuration object and calls the `config()` method.  See the `config()` method for more information on allowed configuration.\n\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [config.accessKey] | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token. |\n| [config.platformStage] | <code>string</code> | The Serverless Platform Stage you wish to interact with.  This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE= |\n| [context.orgName] | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid] | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.stageName] | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.appName] | <code>string</code> | The Serverless Platform Application you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.instanceName] | <code>string</code> | The Serverless Platform Instance you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentName] | <code>string</code> | The Serverless Platform Component you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n\n**Example**  \n```js\nconst { ServerlessSDK } = require('@serverless/platform-client')\n\n  const sdk = new ServerlessSDK({\n    accessKey: '123456789',\n    context: {\n      orgName: 'my-org',\n      orgUid: '1234',\n      stageName: 'prod',\n      appName: 'my-app',\n      instanceName: 'my-instance'\n    }\n  })\n```\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [config.accessKey] | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token. |\n| [config.platformStage] | <code>string</code> | The Serverless Platform Stage you wish to interact with.  This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE= |\n| [context.orgName] | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid] | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.stageName] | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.appName] | <code>string</code> | The Serverless Platform Application you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.instanceName] | <code>string</code> | The Serverless Platform Instance you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentName] | <code>string</code> | The Serverless Platform Component you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n\n**Example**  \n```js\nconst { ServerlessSDK } = require('@serverless/platform-client')\n\n  const sdk = new ServerlessSDK()\n  sdk.config({\n    accessKey: '123456789',\n    context: {\n      orgName: 'my-org',\n      orgUid: '1234',\n      stageName: 'prod',\n      appName: 'my-app',\n      instanceName: 'my-instance'\n    }\n  })\n```\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| options.orgName | <code>string</code> | Name of the Serverless Platform Org. |\n| options.orgUid | <code>string</code> | ID of the Serverless Platform Org. |\n| options.onEvent | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter | <code>string</code> | Filters which events this connection should receive |\n| options.filter.stageName | <code>string</code> | Tells the SDK to only receive events on a specific stage |\n| options.filter.appName | <code>string</code> | Tells the SDK to only receive events on a specific app |\n| options.filter.instanceName | <code>string</code> | Tells the SDK to only receive events on a specific service |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\nPublishes a Serverless Platform Event via Websockets.  The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync() ⇒ <code>null</code>\nPublishes a Serverless Platform Event via HTTP API.  The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+createComponent\"></a>\n\n### serverlessSDK.createComponent(orgName, componentName)\nReturns a new Component as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| orgName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| componentName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage. |\n\n<a name=\"ServerlessSDK+publishComponent\"></a>\n\n### serverlessSDK.publishComponent(componentDefinition) ⇒ <code>object</code>\nThis method publishes a Component to the Serverless Platform Registry.  This method accepts a Component Definition (e.g. serverless.component.yml) as an object.  In the Component Definition, it looks at the 'main' property to find the path to the Component source directory.  Then it collects that directory, adds in the special Component Handler, and packages everything into a zip file.  After that, it fetches secure upload URLs and uploads the Component to the Serverless Registry.  Once a Component has been uploaded to the Registry, the Registry must do some background processing to publish it, while that's happening, this method polls the API to see when the Component is finished being processed, and then returns the published definition.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published Component definition is returned from the Platform API.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| componentDefinition | <code>\\*</code> | An object containing the properties of a Component. |\n\n<a name=\"ServerlessSDK+getComponent\"></a>\n\n### serverlessSDK.getComponent(componentName, componentVersion) ⇒ <code>object</code>\nGet Component\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a Component definition from the Registry.  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| componentName | <code>\\*</code> | <code></code> | The name of the Component within the Registry. |\n| componentVersion | <code>\\*</code> | <code></code> | The version of a specific Component within the Registry.  If this is not included, this method will always return the latest version. |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| orgUid | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName | <code>\\*</code> | The name of the Serverless Platform Stage. |\n| appUid | <code>\\*</code> | The Uid of the Serverless Platform Application. |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance. |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName) ⇒ <code>object</code>\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| orgName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage. |\n| appName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application. |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance. |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| orgName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage. |\n| appName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application. |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance. |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| orgName | <code>\\*</code> | <code></code> | Optional.  Must include either orgName or orgUid. |\n| orgUid | <code>\\*</code> | <code></code> | Optional.  Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run()\nRun\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| method | <code>string</code> | <code>null</code> | The action that was performed on the Component. |\n| instanceData | <code>object</code> |  | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+info\"></a>\n\n### serverlessSDK.info()\nFetches instance info\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs()\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n* * *\n\n&copy; Serverless Inc.",
      "readmeFilename": "README.md",
      "_id": "@serverless/platform-client@0.18.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-woG0YnekbzdEfqD5LDXwyRf3NKkB1XaDlEpe3afv4ToUWYfZqhF5+KlxvMNSyy5f9bZN+I/yjJ632rKiSh+Uzg==",
        "shasum": "99f973b2edc63dfcf937a80531d069548ad37c0b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.18.0.tgz",
        "fileCount": 9,
        "unpackedSize": 432763,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUHnLCRA9TVsSAnZWagAAtcIP/12CxvlxJ/VEdgYnfYXV\nJVw3Q5oP/1Hj0iRv/vGq3IjFM8ZIkkfUH48o90DsDf0ws7IhlXhFp0cXlvMR\nEX8bpteWYzsDB6auVaSVgN1PG9zjGa5uyAGZJ272NVHlD40gZRi/U42zyHgx\nKtou6m8a03SRIBEAUOPmhb0Ni8cVNTe77rRyb3vU+RyVs95xfZ6Y6G95OtYP\nKhWIPsf5RQMoxVVJLkFJC6Og5YbmvUKp/lps3tkLpvVn25tG8xurd8mHKwvl\nqxRl2isuc4xOv87cwVGhLAQRHt/aDNMHNlv/DziRzl6A5Ak1EvszwPH1lvQ7\nAo+MYj6zYUwVi388vkmAygXySlt3K8/L2V0e//xrpnEBpwzYyZkk8yDihDUQ\nV7J79BT3RgywR/I3GY6j3IKkDn951n9ConOI6sW3u84P0H5c0ReSmPiDRuCw\niRGc97iRCueUsoizHsaA07a1qJRlucVZYpXlTWz9q/YIV0f1pzRnB9jq4zrk\n2UU8rqhtOdLBUTxobX+LYaLKpdRxZCq49BhYE6vkc/y3wSDSBAl9mZ+uf5Rl\nkIzROG2itXA/lj6zpiK4m6TzdZmiP7wnKKxdpYw0NnLokw9HwGgz+6bC2dup\nmzEg/YTjg7qZAa8wkFKbYxrT01gpRmLyM49/X5Z0vB/D45dzNr6gW6SBhlKM\nBnW7\r\n=Fupb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCS5qS1Gj1I1udrPysimgZDaVkQDDcA6QstWAut8O3boQIgX7Dvb8DPKrEcJBLAgkie57+8r3cL5NPveOzQTTRpZWo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.18.0_1582332362421_0.9545728266816014"
      },
      "_hasShrinkwrap": false
    },
    "0.18.1": {
      "name": "@serverless/platform-client",
      "version": "0.18.1",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.18.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-feAWzrpu3ChHvC4EH28Xd5XqcCYn5KAWY6TnUVvFc7GVBiXlwCoZP31kt2CYS+XoT57Sm/8FImu4BB+F1qRO8w==",
        "shasum": "8f88991b7355a40ae1267117ad3edf09c0d055d5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.18.1.tgz",
        "fileCount": 9,
        "unpackedSize": 432763,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUHrXCRA9TVsSAnZWagAASDMQAKPwZ49xcvs9QhNRjdqv\n+5yGcqUY2+42ReYnEUlUSeymuvhh47gs3yJ3AF9dgvfmtqfIC6SjEm81LHX7\n9rJEOF5Fb5HCoKKsf5HdS/63/adr+omJg4kZ6qZ/AkXfzUwd5DxRkdhzFF6s\nldHmWc1caZjC7N9gzJ44bLGrJEkmcBp6yk5++JuxdfHvfbh+c6H96R7U1LvX\nMNo6znYu13w1Uko5Ay+Euandn2sI5IHiznrI8BCGeb+NGxbqbWS67IFdizek\nNJVIWWDu+u+7Mr7Dsq0FUohq5+Z96Z2C8aeZLHN2FnRRuhY/rkFokuXdidRl\nCM7cwcGOzylzf5kadErMPMIDYxUReXJWoO+AvtdjnuUVxHwA3l5VqduKIls7\n0kOKaRCYKvFj5srVExSLBK6z2FjQEVeVhnQu+bgkc6Qmr5rFp2bxyDvA4j3c\nGup3tECEjPkazFPvu2Kmdzzuw1gVMeYbTYjKpaeyLKkAq6At2yUHFalLAgj6\nOyQPx42kG5oF22MMQWVTPd0d23v62fm1C8B54c16fERMbEiDiXZZQzI4SAnC\nhjzkVI8qtxtknTSQHwVj2K5AsneuPGwxP7rtz4vb5ej+5wxZHovvdGHVIvEQ\n1EHQzc+5rE3vdT4yTOw9VHlsxCbFmqlo444P5xCkZ0Cc7CP40Nt/Kx2ZetLp\niRSs\r\n=6pnW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDVNF1BF4GgZ08UGvnZI2YwWsyMpuSsLrDxbT7UZL/hOAIgfHdVRNhNnDiu88naNSS/drMd/j56pW6QAi5K4NM7whY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.18.1_1582332630644_0.3749922452605834"
      },
      "_hasShrinkwrap": false
    },
    "0.19.0": {
      "name": "@serverless/platform-client",
      "version": "0.19.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.19.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ZsOf9SjG8/tsBxhMCG3fi9fox3N2xGZ2H5Z5qtsQ/m0aHpuysVaZzt2jNay+Q6zgAqdwEtEkRS/NWbpqCGKJzw==",
        "shasum": "4f4d74f9adaf6937786a3475b26b0b143271bbfd",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.19.0.tgz",
        "fileCount": 9,
        "unpackedSize": 432251,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUIYjCRA9TVsSAnZWagAA/gMQAIU+1cFoYVtlbVk++UXq\nmK6NUcdnGSln0SY3h/Vw7hK8qA/KYBjIw0IY5lfQC3r7T7cbpMhe/tddz/ev\n+pcdl9rbRPTtSWMNNbledcnoAJtdy27abwneDgHdnYPq8qnGJmIEW4uDSTOw\nQO16PjFZJsC00ia6XMHVhwWhvgTeMLIvX6ZfQEZaGYFiAnHxm5EB5Fm8a8IR\nVHFfG+ceDLUIQvPpMnszWc2R1kDxhjcrw/IEC4dUDdsFbArEsa54HW6JpXO1\nDefrfbYB25IrunttipvqNEer+G6RNHXz4PiYGJvM8EP6dwUeHBVN0XrKfsGs\ngu9/dtWrJGGrdRrHkxC+S2KWDssqLpn0oS2PwHsBV142rpzhdk9hPxIHtqtg\nDV9L3qR8p7cXwabeD8jnA9UuV7lE05OybIfV0YzPV0Ivt5DCQxEiwk3rOz9q\ncyH6EitY2UHUUa0tgsywy9gyo3AO1EvV0LWQJTWE25vQmgSPyFXXz29HuNOz\nDkkYxhmPypOduGpS2OhrXPgdQDfu+N+BEkhUMveclkViAC4kUSwaJU60YM6J\nSl5RUo5YZwlYD4nGfveqxMfYpIsurbDqhcHdTQ2zRfr2tVq+LkmHrhSgVbqB\nhcEovIO6Ppe/rElBQK9U8G7x1+/c96+UoEZjVD1XK2USdnPJzHBUJNk/1zSd\nLpsO\r\n=52qK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDEtJbTMNpTn4YIEXhT82eqSHCe6u1yBaO3/e3xcb14vAiBfUU49Hs3qk8wcXFyFux4SpOzMeTLQ16Stu3gPT14yUg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.19.0_1582335523291_0.7170968659240553"
      },
      "_hasShrinkwrap": false
    },
    "0.19.1": {
      "name": "@serverless/platform-client",
      "version": "0.19.1",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.19.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ZdXHOObGxBQGTbtkW5sBwNtB2WzPCtbao3V5s5cEdKvf+F0qHltICAQLS2oZQz3EaIBYphrSrkuti+8jTez7bA==",
        "shasum": "65412a92e95f0de95cc303e4abb4df4414418967",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.19.1.tgz",
        "fileCount": 9,
        "unpackedSize": 432243,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUYe+CRA9TVsSAnZWagAADqkP/A/5OFIQnA2miwd8VPvi\nk9T281WHMwG/rSF+sun1uFv2J9e5ha7qnpDWKmU0LnDdYYzoF3/CzttfIHzw\nEjAlCYLN3MM15eTj96Ms2m3FEh3tXivY0oisuEKK8NajMSBwSWrZg2IyiBV6\n0HElnecdOKfuYNvtu/7auWtO80qWXUkwbhFjNTTxKfkLwqvf6pq4rAmsSu84\nWmGaiQ62M0FJCkDRPzacv8mezjpUMNii+nwnVQcFNhZfkWa7KslNM8WkaIHA\nFawimgqmvvrAOHwKt/KNpIkq+pA4vjZdM9acKGMqxi7A97nbegBhin0vjY2T\nkk5xrgWy5REivXCb3OT4+6BgEgHXbudNn+4Tl9rwiEBP5zH7XLV/rto2lGEs\nqdDvA99ZmN4WZw6GGpJgej+/Qdf0arhQmr3E4wnMyLu7ivCd/eOrqDi+pdX2\nESmfh7jnXpkpEupA6Wxpvv0T8Iyy1LZ05VQApiuyiCPS7OWhWv3x+yDjRYpU\nqwyHoDYijSMwDoV+n9Up6ZkOcJnbDrBtODYqBN/hXFRSd8RhNXc4EWY9KQQW\nrYNeKBvoeOfcfcagA+xsXisfafCR/z9CtNxrirQ1QUhVpVIXYCYqhrtT/1gx\n+QnNi0/Tb959qNCSL05FCs7aW+Yn0Xya0TuzqseKbXY8n6CAWiBsxZfAMrFH\nDw2n\r\n=x4Eb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDldiOcqf+BJzsc2XBppqq/NIqBPxSDegZBis29U0wrdgIgZicUQ1F1D62fgCicTlGW0MIfX9dDOSH+eD+rOw69zJY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.19.1_1582401470196_0.7043621382565066"
      },
      "_hasShrinkwrap": false
    },
    "0.20.0": {
      "name": "@serverless/platform-client",
      "version": "0.20.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.20.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-UIz0sqUYFWZmJWWcVgCYHsTQwkQjJmVW1aKcQTFjGHEAL/8HWu7s/4UeGFPai0DhqHgxde4wfcVkvbengjYaDg==",
        "shasum": "9cdbc996ab4b3c3f198ef2e7fe2ce589c26a3317",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.20.0.tgz",
        "fileCount": 9,
        "unpackedSize": 432578,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUvE5CRA9TVsSAnZWagAAIsUQAIEmNxRlrZ5HmgS6gJ7n\noocRXUUlfLNKY5t83OKOSexKIATcsFrAhMdXmY5FydDaYTr2ylZY2B8rq9PM\nihbis+pxgdThrH3VUZ9NpMsUbmQvjEqmPCYNtdZKcU8dnICgaKEYYIPHIIFY\n9RVxWow5F4UwFy+2MDdlx686ArhbhZLJcy0rxsojdyM93vswoPVwDLqY8Azw\nhHcJ2r68eZHjUah4YsTlCQYQE78z+5mQCEEAGJ2MxStEeL2Qxa8ribxQXw0C\njurErbxhQ+Z2U7ZegE9Q5wM7Hr2rWi48vtlS1hY6vtzXrx0ObSC4Z+LxgHLS\nYfUrINqku25zLC41TbgOGzmOh4sgqipHQ3pEpYMn5o5HR9/LulxaTvrlEKFd\nu2xH5r9hf3u6qOWoxQzLH0wCRwr3ib/ujjkORuft4KaxZ3rIbNg5F/4/yCmP\nEh1uuX8WiIACSH0v1Y/VJSWNAcb8AZdtCKFzoIiMQB3hjeZ/eebVAPVA/d9N\n/ucBIWHYPOFZ15iXbKPKJyjHp4Wqz/b3tx6317DGVwuYWwOvQAotvQATvUPO\n+Pg8oJA2ptCgqnCdiwm3fWfrEceIluRp7JcdkgbBMu1iSp+7keOi3YzkWukQ\n0sB1pZ9bxjUombsdO7KChvmZZrTtOKYc0+Nwqb07yVrVd484frVlsldXhYxn\nzulb\r\n=KxLz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE/U7i4oloYBF8XnTq/QYlywOeTWiUrSrxFV3S+yiAR1AiBr8DsQrdQM4/MXiUwOWkFkzCZA3XZgE9MR6jd2853FcA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.20.0_1582494008664_0.31890337284842474"
      },
      "_hasShrinkwrap": false
    },
    "0.21.0": {
      "name": "@serverless/platform-client",
      "version": "0.21.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.21.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-GmangJ7hmNlKZkBGuI3/e2HOV1M7vmO3IT22KP2ZrQBc9GWQ/rr6MSwfVGd7J9865pT5K7xJRW5rtCWD1PBcog==",
        "shasum": "57f9369a0cc4561001037483e47a5301b1523d7e",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.21.0.tgz",
        "fileCount": 9,
        "unpackedSize": 432630,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUvKsCRA9TVsSAnZWagAAqSIP+wSJbsnQh7iKjUpaR60X\nxj8pPELNL4EG7xA6wWxt86Q/IciEj0ubi0hmWt07E34W9Y8WKFDsqvBQs6LA\nksRE4Ven/z+fXOV20DERoJ78tiVy3fGRJVzRpUR+UG+uQ3KRipQm+AMYJsZl\n2s7r/1+xUd1JRjqwWrvh76g2FKfnlPpPbWSYiOPrRed+YYpFrPDc8h8F25jI\nysuUXJJS2c5U1H8I6/TRE50Py0CwkYsg1YIqR7Db9U1nbgVbuALsIYDPU9QV\nsc7ThkyfMlJ/nfiiSHS9vL3fxSGeDbwCe1cDmlaYdp49tsebAbTTg6W2KeRP\nLWGZWFsN0+1z74QYzeQbO3DdKZ6F/yK3vTXJr18/0wGh3VPGyLlEz1b3/VNQ\npD2uSIv/YAcOqrrkATBBElhXqpRq6NxSmm+XfSs6sx7YWAV3KEHoLURQFPPk\n7GpsMt4O6JIHl61VPfuxbuhCPaZVJ4vEy/BTVlQmXup3ZrkzCiFM9bf0KYV0\nHQZZiFgdJMMpxi7JdgTSg5vrAEGaa2FrKkwdcywRVnZv6rBN5UNJRYpgcV7V\nHSZYmWbeoiWXGWhW0Dpsl+qHgL3l1mKnZ2USe8L74GbBufbKelkjNNegzqne\npJSL6ypl8bjACP1/+clDIrKjMyKLtBIX3T1Y+KX72WA2QwXHqta6Ms1vTPfv\nu2SU\r\n=onKm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF46NVLhkcnO5wfTRe/Lswp6rtaU8Va7mSfJdrwbLweHAiEA2XN830XKljliMSBAeW9pPisr9Bc2jNKzSmos8DdA1SM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.21.0_1582494380268_0.1960586336991712"
      },
      "_hasShrinkwrap": false
    },
    "0.22.0": {
      "name": "@serverless/platform-client",
      "version": "0.22.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.22.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-fQ7Nefw745KUM2dMOHGlMZf+iN5q7IzrZDZZ8W3iQVRS8tEXCxcIJ3sPI7/Tl9pIUSZQSnd7uOKir4Hrpt2d6w==",
        "shasum": "ad989eacedfae0cbe56f1103d85668c76b552d72",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.22.0.tgz",
        "fileCount": 9,
        "unpackedSize": 431912,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUvOcCRA9TVsSAnZWagAA5UIP+wdh0uOkMyErzH0JKT2o\nE8gDGQP7FmQf+nZyewJGUZnIWtACZhHEuzjOJdJTsT5OqeMa8JYrZhMII0zl\nS0Zlq7FZKNQsVxDf2v/x/kFkvL8jgVp68ON51my6pt6QgYUSvP0GZ2KavWW6\ndb6NbJBGm/tWWrF6MwMutURw/GPO1e8xF6gusJEriQJH0nGvExdv/A8lUqOK\nBJ3I+HCGSiCazA8rs44AEPoSEegQ4gnZVbG6Oq+jZIaDgP4J6P43hGhHFd7/\n0nDghBn8GEg2anp3bVSb4y3Se4OT+BLztc+HwnfzpLRUkaQiIGQIjxHooODt\nVpoo2KIXsA5/eGTea0ovLQLub2q3boiG/UHisHpIDx9uI00FMxpuj/m6e7W+\neJhyneLYsOcUsv9PHM1T2Uxb4UOXj33g284aCNxuVjCLJpYA8qkeTbunagOq\nNW0ZSvhMmPIl/0YZjEmkL2bxY7OggvqUxoYz5lRbzoIX+gNsOGA1bRQ2F8NX\nZTt+/PUxT+LFOYFl/UZ+Zo+Eq9x/dwVytO3U2WawifB60BW0kPg8L6VPLEJ9\nNAAPxpwWDp552N+ReiyoaF095yqu3n90GJCY5o5WP6unB6brHuaDIdd0Y5x3\nIXrUPq5GuuuDZJUruSWv/G8h3aHYKk5oF+QLWBVZ7GZOcajHRm+F4O5ovz7y\nBlXL\r\n=kzef\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBxQiU0bdEegWfHdDCGwarma+JttxcrElRFFBZX5asAUAiEA7828TO0CFe9ExdeSoRMcZ2DwSG+jJT0QaqFPV6yWcTs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.22.0_1582494620348_0.7573234906856954"
      },
      "_hasShrinkwrap": false
    },
    "0.22.1": {
      "name": "@serverless/platform-client",
      "version": "0.22.1",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.22.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-vYubTiplVFRk/JrP/WV8uZ8RwpSzpVlJDbvt5qwgqq/mKFhY5ib1XCNHy/6NK7i/KfGjqEm/91UPXYO+hYMsBg==",
        "shasum": "3a7aaccbc004304bdafc85f9ae757e3e7fe9cbd4",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.22.1.tgz",
        "fileCount": 9,
        "unpackedSize": 431769,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeVGMqCRA9TVsSAnZWagAA/zEP/A8iEMmCvXb4T+sJKqHx\nteblXFNas7xjXLGYcI+ecZ0xyMAP2N9Ol3UO5BEaU4koXeK6di7BQVxEWSpl\nYK3h4BsHJCFiDst84D9FE/pRpRC2rFGRtYvMufiHYLQp71HqFxy3IvJujpgx\nhJ6yN+fpDdmfN7/QoPFLbe+2A4oPyo1usjLpJDPJVsixjZx3BH4U03m4R+HB\nKRUA+ELoXucZG4i+BBk0p1EHuNUyfPUHIOFbjBewbqx555WA/Zl/SfejSmLo\nNiOHNdJXrL8uxl6hmDABoxNoOXi5e122UZtE/Ad6NHHFA2roRueTZsjgmSFZ\nNFUmREAQxwrzIHEyeMBiFCbwHVEtehw6s0xRevZ0iLAGHT240gOYJlllFgXt\ntDa8Z30cV8D8sXPiaOHT4k1G/SPEjsEm75/cZiKYFLhKm27/t2iERWHhnNHe\nL1OhnCSgfLhlY+irmWVifw+QJv6VjNPKGqye/H8CFPEfgYIwErf/3d2E7VQ1\nF57YOh4VmooOQT8K0vi15UJWs/qOYG9iDfw9HWLV/U3k5a8M48d0v22rfSDe\nv5WHeRWnJshmHk+DX1OzqT7bQLyorQirIWDqr71INzp4HV/cojOWwArkQEK5\n84eMMbFu8KxD0d+f3xB2E4mHwoDlzRHi8LvtSpHRovxnTmbJuCd6TE7HxFh/\nIY0q\r\n=2hLw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHXVKUUzKYhGbp+Y+7gg8Typ8YVE367bh13c10d3tIuFAiBcoeZlzjJ00hzn6QC+UJXHdiWFf+PbCydpP7q9K4JhrA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.22.1_1582588713720_0.3189958599580416"
      },
      "_hasShrinkwrap": false
    },
    "0.23.0": {
      "name": "@serverless/platform-client",
      "version": "0.23.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.23.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-fp0ya8x/aDBSJOpyXQsQGXBYKyhMSUhEojo2RHItMSimU9oclYBfVr9XdJ4YAWzgddyRjDdrPp2HxPaNzn2N2w==",
        "shasum": "1c0020072571f3f00c5d238f5e6fcc6b8103858f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.23.0.tgz",
        "fileCount": 9,
        "unpackedSize": 432696,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeVLfrCRA9TVsSAnZWagAAWRYP/01KUkz+zvu8tVqx3/B6\nMz2rPNgEdbEdVNP30LSkWyil1F85m46ZnV6zEzELsjq8b2Xp2gC9qS5pZcBf\nlibdHIwb4isgyZJN20OxJ0H+IvfIYj3rLagbfe+QGLI5rWURCqWAqtgwzhkH\nqoCXebBTJ0l0amXvmBj0+Tq2sre723x7zQWgiW0Aos+gcWucDv8q5iEvmOOZ\nferh5t0sbipj8kFg/8YmZl25tITbKlEWAxOfoos7pggifiSIMfKflr8hXUbN\nq1yDfI03hZR8vuPfJvC7xHhS3vIRTH482hsoF5/5GDAgnYyUZdAlGuo1R9Kr\nEsXCApwMfLVUpgpeBLE0TbNM8vdG5PtSOt5TC2enTPwhxB5NSi3+E108O649\nRccSpdTntQ1X5yG27mcFx6OBStco7sWzGhsOdbaEXQsFY1zUhgUZeF5dkRIf\nCrtD1dWiM/SxQ6H1yuSQiuS11w5cF5Zzr6Ft7NDGUYzddqEstH2QhrQCQeYo\nuwd5LUFPInvBAyQSxPE8d9XIk6Ohc7oGCtnTIaL61yJc4KGEE0G0kzYO4QoQ\ns48fC9MH+jscL3mRSJYGP2mxuwECOHsQ0jhv1F+2XfUOjyoSf1gFf+EsWdoa\nlCxMiG9Lv2Fqs3Ofdbk9jLr8ANXTXUIEoYM2KKfG44V23vqVZgTE4EnXh3Vp\nye1I\r\n=4buq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQChYNaSqkLPji7LOZDH/hbrvjtaijFkRUDbAKQOYp2EHgIhAJjXGMUVo3G9fkVDWDPPt5SXiuHr/I+Jt5rml2r2Z4Uu"
          }
        ]
      },
      "maintainers": [
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "pmuens",
          "email": "raute1337@gmx.de"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.23.0_1582610410907_0.319695279835881"
      },
      "_hasShrinkwrap": false
    },
    "0.24.0": {
      "name": "@serverless/platform-client",
      "version": "0.24.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.24.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ppxR5wONzzxNSmt/9agfSzC0F4yrkHZWAR5IPLm4yj+dMxb+768XrbqBU6vnOfCcmjb89OX5Bk0GvyQh+T5gLw==",
        "shasum": "1e0366e9bf22831d0f62f351280cdccffe0acc43",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.24.0.tgz",
        "fileCount": 9,
        "unpackedSize": 308431,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeaqgrCRA9TVsSAnZWagAAmXUP/1Of0yE9QnwKS6ynqj3Q\ngOhKOjmKNDEaEistAZGr4n2yzcMu5hsyObzsfBRN12b/3DP/Qk4gyhIFDXlQ\nfKn23P3dMW1E0Vxo2yfzK95yHCVlqgN24ZP/Ia/eijpG0uuNmkgt9D4BgWWI\nWTjVY7UlUNwGOM+3yQnqS86eJ136ps3PtgrqiNfvLQUtBxB7T2mSZb/O94G1\nnoIGIkB2yMqf084cBambdNoQjmfy9oQc7TS9QIl0VWh8xWHU8eJ90hXMHYkN\npS/56G4f/h92Q0f1IGdHRje9U5Dwrb51L2jnk8ajVNu5nZbrgBBgz2vEozh1\nhue4G/IWiXfKGml3kUXiDtTwNUVclKXxIQHGcpftP4Bdx3xoIwEti4Lljybn\n7ytQ1MWDrUFjc12NUd1O9SRTsGSpmBzq8BSyPkaNYtfS+9rBQ4vPkWIjcgiX\nS8aXankOKuhSex0/D5R7U/Jh5/P3B3BoccQ3kmx1LyM6/lGQj6xSC0OSVn3B\npqygc+/OrF/9hVg1biv0gRlWJRm7NM1uEeEj1UkEx5qkDLECl3ETH09muYp1\nJzbNQF+JzBQ5zsRb3YjHtBwzBjWWcfSuCrYCtezpZJq5yAm0IV4m/A23wq2i\niDJUbthWqEDjJQBXtvaqfCZBi1isco0NcSLAogeCYnHpu0UAxvAkH+1jGw9T\nLm86\r\n=d+JG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCkhs8y3egjjxKrJG0FZ9WjyfeiWVLgPdR7pns+e6jy9gIgHkHAkfZStIDIE0GWtTXxNr2lch+aDJnfxnm82BMHK/8="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.24.0_1584048170649_0.22516005380974957"
      },
      "_hasShrinkwrap": false
    },
    "0.25.0": {
      "name": "@serverless/platform-client",
      "version": "0.25.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.0",
      "_nodeVersion": "12.7.0",
      "_npmVersion": "6.10.0",
      "dist": {
        "integrity": "sha512-pv43GuKAqoSFcaTBbSC5qVhNy2EvzyixKEZOeVcOhuI1qpHa/2uG+YYP+WHX+5zy+o5dUw2fNgBvVIV/SfuRTQ==",
        "shasum": "8351821c6a72ea8c44882b6280270cac13235df0",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.0.tgz",
        "fileCount": 2652,
        "unpackedSize": 14815061,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeg18FCRA9TVsSAnZWagAAVL8P/1LzbkOckFphq8C7A2xm\nG2bcbDVV1u/m7/CmchhFutIlC8KmxNHqsNe+qF75l5zy+pPTTIAYQrseOpLp\n0M12seKs0zolHUIC4RxnrBt0AePprhXeiob+1+nXHzrdXvn2YUUqDdFxi9Yl\nCm57GPKISXwVYWPwNJ3GxNgongvpqw7hSdBoLj6PBgCm7UxE23mdwBtv3OAg\noYChzwFh1DyZB3m1BqFRUuQrZxNkcVIogXJ/dK0N5bqbHpIzsVMePbhU8kkB\nQV4wyJ/1Hc43djkTSd/Ch0688bfKZ5Vk34cUIHLkR7Q6k87tWE6ZMP4N05Y/\nBPQjsJAFLf3ODm+GQNv2oeW9a3+IikBz7ARI5hBtLIeJG8Hk0uSRyzan0NKN\nemrMgXBD3YMSg6hB2GklRzMXN6BZxk0+aB6AMsqsc2+Qyh2IPxEXX7v+R5I/\nf5fML9tL91R1b0bpwvyHHW1mkbHzDF1YMlomeoychkdvw8K40ykc+FSxkwfU\nFQsqxC3LyuT4T9I0382rubw5S3hrWNIhzjfyBGAeG01NaO/5SIMEY7xZAN0r\nhpJSnvaboC1OAjIGy3WdCCuN5herySD41+ggTA0d3oesbyordtPXW7dApxgg\nZtmXAEknVeYcBEj+VBrnzbxG/z6gIQ9th5bqvkq9fm+aV7oqJDVz2HF68xuQ\niEdq\r\n=EgSj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAxInHPsz4xv8Ee0j9OZyv7rbY0/h2kkGelWilagl3vZAiBmnqZpltXFruL9WVTvDP9122ZATZLpizk52YLjV6Ziig=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.0_1585667844564_0.7472156781364816"
      },
      "_hasShrinkwrap": false
    },
    "0.25.1": {
      "name": "@serverless/platform-client",
      "version": "0.25.1",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-hqHIqHOGxrqXxoI2Se4ezXwtVhKNJhQDv/njN4obfquv7QBVfXSfe7pBed98ld3jA9exOqqTT+xtHpsLKT6ujg==",
        "shasum": "e01d3bc7e10efb5b1f1399c607ae3833a0edc316",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.1.tgz",
        "fileCount": 9,
        "unpackedSize": 307314,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJehAFuCRA9TVsSAnZWagAAgVMP/A7MxuQCRSXWmhk09Cs1\ny21UP6Lx6ZPx7twoKBO2mQox+5BPQbtebKttNalb0vmYMDz24SavN+ufpzNg\nuhgFgxpSIu+lE1N1U8Sgq4q34p2rjEgDA+ZmFL8SaWBl0sM/oXrs4tQOoJZr\nVoz8U4G9WUAQ9BTtn9jKju6hJ2i/Fvu/Sgy/8EsSQdI01Vwn9vQ+2oWq+n4K\nZ3ZQ3f7medr52AcntN0W9UjSNdUD3Vo2zLPILmraW/mvh9lly56nY6tq6gBc\n7x2dfj+Oa7D8gVliWZzkI0cpuc5BK56FP+vKWgM7QWxh2gCZiGbORIK5bKe8\nI52cBbNDL8KI5I15K3RBdGfBtORJEmMLXzCWDrm4T+Wwpnsh4io9Hq0TMr1g\n6SSLNEElntssjfa0/vOeQbCWoi76PoAIUxoClNQj4VmnSVxDpJPQA+eTRZEY\nKYbuXk5jQ3E0OHzSECQg6acFx7g3An/U60D9W7fdVprkgq/pfXYR9dkk1MKG\nZy6l2kX8SpH32AF+Ietx/Bmze8YFN95m2broiQPz/U53csFnPBjVaCLOPDJM\n8prvYsRF7yr/3U8MDnnYaN48imzRbYa3rXcA7CmAbsK20bGDAh3JrQIcySQy\nRKc5MopXT1ghTFEQ5/ARYWrtX+AasP5ahZsTi31Nk1wRD49893t9uoXnb68x\nt4q/\r\n=66ro\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD5dOfmEk9RFygW0EEEIN9ovelNbq9iyDoCUsHLguas/gIhANsGvygILe177F1fbl6PCv9atzN13FumKUIMCAum2kxa"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.1_1585709422277_0.4214356672638948"
      },
      "_hasShrinkwrap": false
    },
    "0.25.2": {
      "name": "@serverless/platform-client",
      "version": "0.25.2",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.2",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-81uosEMWTG4BvUnBrcxf1WGyvRegSdKg06NgMRDNoL/lgDO22LFJZl5VFulFQwnqqYXzIk7iAbz08/eiwk8jcw==",
        "shasum": "2faf1781af20200d093e3f1a58bdb7882db13b20",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.2.tgz",
        "fileCount": 9,
        "unpackedSize": 307587,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJehF7FCRA9TVsSAnZWagAAbcgP/0vxaOdR64VLs9iNKVFT\nXiODR9WolmlHxI7dml8BSu6rLqJr7JCrmGJZ8mzp37tsBEF3aSF3YiQ77144\nbVuLb/7+m9BqN85DyhipYKI8SgPBnqm18m2ppdZTa9NwwAkW1cqeqTkOoX4U\nBJYO5OcUixReQF+PthMDmIH9fwYtsmc8Ly1adD1fiZtdFbq7CE/LuXoilC5Y\nC78N1dAdAMpP4ZXhJgnDVrc4/otIaYvsnbqoZzGpjoXNGO2dtzvmrf0f9WPg\nGPKt1skYa95ZJxKYFXq87XkKvxfAVhFpZDwGSaFwmOPmwL3bOGJtFt4wYHB7\nbOEzinYWOMiXbMgMBLqpZYmX7kvmm+k8979NvBFo9AXI0JM03FrkGDb60u4p\n8P+qFBj+QuVO1fbc6Hs3Be6AQL7jrRg7+45VvKOO1vf41lUu7p8Q1mLUcr1K\nV2ms2as+6fHoDH9adBynM1UI1bnh/TBNyPX9F7bs2Um6SGDPfoCpmIO9Cvy4\nJ6dMpPkaDPKihlXBS2AcTqoEt09gk/NHarO4b8YjtMwmvgKzKIQz7kHvnXid\n/B21X1P7ozpK5+/KUYp3cghM8PvuKpXT99Kj1Kl1wx1pybpe/eIAu5LhcFsX\nP91/hx2Wxo2+8mGu5ypfwH8RaPOpCy2hw6hJr9yB1Q7JxvBKsPBmdwO5Vtkp\nZVj3\r\n=uQ6j\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHzBH22BMtULSjWrA8CB7W8RpPfCo5AvVLxfanfGfmxgIgLjdvt1fOHJvViGHj1CaUewkPmyrIpbG4j/Yma5oQO/A="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.2_1585733316800_0.02785681266726492"
      },
      "_hasShrinkwrap": false
    },
    "0.25.3": {
      "name": "@serverless/platform-client",
      "version": "0.25.3",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.3",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-GLQSywkPEFwTdc9YUmn5QPDXB+Ms6uHAMoMGEO/ASsWv9GyPnFPs3RwLV3ALs82M8OMrhzh8IWIbbEjTV9pkpA==",
        "shasum": "835f14438fb6819fd7d275a70211a02bd89572f7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.3.tgz",
        "fileCount": 9,
        "unpackedSize": 307589,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJehF8BCRA9TVsSAnZWagAAv0MP/14MnABiLSSLPWCksOWo\nav8zVZ1sI1XwZPSUK/YfOMuo5E1n4oI4sPZX/IL0UYVv0pijjXOl+Znc6u5K\ncXTFBD3JFSD0TQuV+HPXpOndKWBpTE1KvBWiWkKMUkEPIt1iQ/kxIruwMsxK\nRYzefEpkIbnMv3fTAFjld7ipaEZIdC225WRHtjcDjSTas8KOU26HWylS+QJd\nh5YYANZbvfZjkXe0YAg6iK+fCXOb/jObXe8o/g6DWbM7ZaTEu3WYproOoIWj\nYl2WTTupXXAdc8dlYwVQf2toXOXJZGq1Z07AfncnECvLiYFv0WFuA5AdI1yc\nOOYwXo2vzvCP2Ps/Z7uxPKLpG+mbhEyXACIhVsHKWQg67PJrVjtq0rXwd1BW\nkIZZrtt9nfMV1UAerF1gdHLtpY8fH09VD18SzW/Litgqn39q8QFOODrXuzpr\n/rZE27qqrIyL8LBRjHr9A00ZnaLhRpmL4lxcJIlKpmwMUxHiVWkVTYGiQMyh\nL1gE8rDLdRlJcRYR7Zp5FvPO64CFzQ5cRx4vaCZY9pd3OGfaITmEKzRnzUKS\nmisIYp32iTZLd8+rzrp7MDgiDll1JynIFH3Rm7X4u6baKAglYhUa4YSGfRYZ\nxTHVNb7ZU24pEnTz/Y5VMKNGaJCXpDdw5TERy2BuwCeiM8Js5nl7IbNNAhZ0\n0d+i\r\n=3Im4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHY/4Eh7PrYGEXIlCXVeqpltfAnPeZrexlfHE8fRyNMzAiEAuZlVgaKEVWFpCcE0dG8ZxyD1yoy/eu/xi99I9zKtZ8I="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.3_1585733377347_0.1260338609633005"
      },
      "_hasShrinkwrap": false
    },
    "0.25.4": {
      "name": "@serverless/platform-client",
      "version": "0.25.4",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.4",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-Q0aumXXyx+tyyvo30Ni1crE/Z0bKd1RrL7aFmPk9QULwvCX4mEJcebjlu2RvSHjz4A5+yRqqshKybdlDug/hDA==",
        "shasum": "08500ee474f2b3aa947333e69a66c0909b5bca71",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.4.tgz",
        "fileCount": 9,
        "unpackedSize": 307568,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJehF85CRA9TVsSAnZWagAAdVMP/2NT0rVM1mhz+s5gR9J4\nKQxYXvFWUnlo7HC+RIIgpFpYkv6IqXpmJafh6lPzzuwYtqNfMQYwU+RSl5Eq\ndlA8Ev9RUk/gweCMFgg8s71itTtMT5Pnf47ipiqeuf/9XVfB1cRZ9eKxTvdj\nUwWoAiIy5HDsETu1eTV+m7VOnyK6xsHK49QqAh4N5X3RWlA6sCf2VRxIN3nz\nPnCoH9G4Dl+087kLiDg1y2iDZBTNEuhvNo0UWA0LASKoC+JFpLRmGgjS27+v\ncKJ+dQ1CT9WEZyERhcPx+1dqgS3nA1VR6HTbJ/KLjE+0T4H6DPllKZbYdQNT\nHHM6Tu6vh09WXHdKAiPtyCxOAeTpqxbjZQCM0SdBP5dgzauucZVPhWkPEuBY\n39r31H8r2A14maQQzvfLyJMb7jvs4l5U0OBfKLZgFxkomODljgx2hXYZpj44\nkirdrZDpE27p6uErjk3d0ZCIlFz9xcsdKrGjK3UPJJdOwa6Lu9K/LI00PY6X\nZ7Ddkoi+Tt/VAiYuMkHPM8FXufMvrAi5HfTdCmWzaapCyIafS86Huv3ASHJr\nlmtQYTmVZyqHyxbdqNwekyY22bFINx9HemUa/+1+7uc9ksIJGOcKFJ5SkT5x\njGNutU8VTA1bov3JuC8BS05OBcDbVGB7vF5RmYkPoE0wPuhlyqGLABuzKz/I\nmSCE\r\n=37cA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG3AakYBROip5+GuqfRKb8XKGEybaQFF/pTs+BajkeS7AiAKTNm88s77mrg406FZRrHzn+bfWJ7GI5oJUTlWcgN5sA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.4_1585733433092_0.7489648765701129"
      },
      "_hasShrinkwrap": false
    },
    "0.25.5": {
      "name": "@serverless/platform-client",
      "version": "0.25.5",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.5",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-29JV8XpJPTUSWgDwxhvZZ9fi9/5jCn1x5IeT+xEiEkpuXZU79wXlSfMfc8XtptOsDouZnOhBpKEZrItGp67CFw==",
        "shasum": "7a43a302cf9633db1caa18171acb5ba5e29e6c4f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.5.tgz",
        "fileCount": 9,
        "unpackedSize": 307754,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJej2qRCRA9TVsSAnZWagAAu1oP/0vCL0hez67uIJy1VwRi\nEi6AECsYxJAyyiITASCg5jy/txwKQE5QAxkSk0n1Kx+MostBmn2ljFNPqcDb\nXz/xQZXeNaMwAUy7QF9SlC0N4m8ZCZMRPagdtScRiSC9Cuqo9RiBJkoiAO3b\nw9atP1+LAi51tBcOYQbsvNfYFy0JisgAoKiuR8YrlCsVxRCuGISqOAc70Ob3\nCE0kMEmVmaMIS+fPn1n3dvRtBlc2EJ8TloXNi4kVkJYdmru8rAySlN4WVpSi\nVE1lCitqfXaT8mBJhBJN5/917nGdapkyhLCyzbRhirD7zMJqdjW0s+MwWGJm\n7diLXQCh086KdCjU+Am7+lFlf/rrGdVbTtR+EEwUXarlo9/LgsnTDqb+6hRN\n0Ug8QlSYbKfoQrAkVEwRLMir5OcW9Em5UvWMES1RDtW+/wHQ0TN1pd4GBMfk\nrcJrV3XEbftM/ZWEQnJ+Ffc06QFeHdAylI8fN7BKNifKmEhCuuSDA3uWjbzY\nAOIi+pgVuwAq4WB58Z5AkWYlrnBeZ8rKLG1ofy9oD58x8NlFOUAKBDazMfcC\nFaTWaCfg81Ls79L6yWnqAZtxrK204vgLFXiDEPjtwoy/EGEXrUwQx5VdHD1x\nrYt2GsBhS8U0YcIcSBG9h8Q0isblnFyIvAlnZ2T4k0vu0OJDqZjD2b4eGFhx\nmn2a\r\n=Q1A0\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCZjrhY5YsoHW4M6gUo30QrxbysnfcBx5PyGkVOIcF3ZgIhAPTXW/Fb17vcQokuqZlSD6b113EPMELwRp2qXOqlZTvM"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.5_1586457233493_0.15460542515944597"
      },
      "_hasShrinkwrap": false
    },
    "0.25.6": {
      "name": "@serverless/platform-client",
      "version": "0.25.6",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.6",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-7VutXMMypWI8MTfIrz726g77PmuI56Yy3EXVoFRG1lRwK3UDmqJf+4aY7uZ+7t8TlbfOCAqSDxpY6UBTS6RrOA==",
        "shasum": "53e28104ab827879ecdc0d4d12486e4ffaa5a560",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.6.tgz",
        "fileCount": 9,
        "unpackedSize": 318922,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJepOPdCRA9TVsSAnZWagAAQcYP/Rp+ONq9Fol8hjeET/tc\nWy2ELU0o6CbLJBVh5l1fjH6cXw8H+yXf3dy09dKOedVQdnmX5gGuUtbIz2Td\n4kbpvm0w8ixtbR1k2TrJJWhugD1KFL8ikSGhS8jbaHX4oLPohz/2R8Pxx5N4\nW6ejxR9o5DOnQQ2y0oVW3wUNK8bNUbWGyO8mPFgvPYz6LrdxbJtJApTXOdg7\nDt3wNVVKozrfMI+cOrfbJQ0D0JEIHnzZ5P+3qSm7gaeZFOCdkz1avOciVhYs\nGn/YlAjxfBCgC5nzzycgyon5LmT8e/eqiufM6b9iLTBWM0k5Ou9z7iGTP/Kr\n8ZqDgulYJREBnr59+skUQ8Pu3kw9HQxntptdvCRx/zc6p3mrHXQnG5NSF2Ti\nKtRvHPC/QsJsf17FSm9W7HEvKR4Dx8Qlvr/RW/pDDyTkoJuRTWoiSGhMYIp3\n1FnR1CmRRWdMIw5+4m9PqFJGKVqTZmfDBnNn5KAHPPW0j2PDXwPR5U6CpL9K\n1ARa6fq5J8+p4ZgipGnd25AG8aX7PJSy0hLyIbNJyYDljqZ7OATIUACtxtAQ\nAIRI09IKkivz2QTPDeRx63TzX/asXsab6m7q+Dl79BDRt5NczolPL2BfbBYr\nVVHp6eD2r3DUz7SCSCwPh0yhMve4XVuZe+sdHzIJLYc6fI3MG2OIIwlqg5Wl\nwMl3\r\n=VohP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSxShCxsbWpkOCwqg0fTuuwR3NtHm91Ldu1TWGrnG3TQIgNPysvjVXidu/ahhMdg5+Pdjk2VtZ8o9IuTahMSPvdHc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.6_1587864541339_0.6086878830559999"
      },
      "_hasShrinkwrap": false
    },
    "0.25.7": {
      "name": "@serverless/platform-client",
      "version": "0.25.7",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.7",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-ZOKgT49qQPGjv0tDN46INO0gkc5syL2y5t0pau5ljQPtQpJzHrUL87xRlDj3BD+4Y9QFZV1UXXNsOQZsyCBsPw==",
        "shasum": "0c4ed0d8f235e5811e05a79a1cd2cb883806e87a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.7.tgz",
        "fileCount": 2652,
        "unpackedSize": 14826236,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeqY1ACRA9TVsSAnZWagAATHwP/AzrWnTSyvFF4nZXMPwN\nRjMkqlGxMVVpLPKiUYxXI6juR0G00rrjBEnbGOBPpzWcAWp02UOJi7lCLQl6\nB79Lu1e4oFVCJQXSZGBEBQ17DlrFaAzd/ZuAJ6xQ1ynW6VEUZbdGxnnQu2Q5\n/+osEsr7wuCJG3x0SLEaf3XtbVvb8wHPjn3rO4OT2AEy+t6KEXgOZqKor8ac\nf47cRhrKjM7nJZZBzaF65mB0jquPJgprSFNQgzLabYSasLg2jEVE8E2BqSFq\na3zjLzXIu0xoTReIKtRc3ZaLY31rim3+ieAhT69h4Sru2NlQ6l7FjX/T/xiA\nrDYUqoRq8HJDrtEsmigZPsk1qv8gKNF0hJOgvcYaqfj1kfaxtcKwMjRCKDWe\nPig7+kkDMfSgtS//uqPfk4QRCD67E3hJ/4YYfrGbQqALicI36Q/w0aKaPw+/\n4oqZhJWnYUib30ml/Un9Uok1/6MSLAtjIOYSpFwGJZCJOw6rnaJLziVwel+n\nZCAnQx4INEaZkd2XTEtJFVsuze9lDulqloiPDVH2eO3XPSuor4JUqm5rFkCr\ncebxWiJMsegV6UI+Fx37GODDFdzeeT2nMb54eyBDdlWn5KKmrAe3lBbhBERJ\nqAXJOYRZwEIFlaDm36FX4X+IweMhmQpKcOBtBp+VONXYx34yxUbv5Rp2T9Up\ngLPW\r\n=gwNS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDRz7x9OO+BxmLURWOX5fajpVlnEPV+X5FCZDrkVxPbpQIgB3fVWyl0WMxvwrtpAlh08s+FanmJjt8P8FxkytqzY8M="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.7_1588170047532_0.3924529097602665"
      },
      "_hasShrinkwrap": false
    },
    "0.25.8": {
      "name": "@serverless/platform-client",
      "version": "0.25.8",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.8",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-MTWEjTtndV0Xz5uJci01X+Y/oDyB88kyOyULj3oAivL21D1b4YKikKhVTufrgDm3clBA/8MW4g6eiJxhXMoyhQ==",
        "shasum": "e4ada6fb41068394bbd4bec622909f83e52ad31b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.8.tgz",
        "fileCount": 10,
        "unpackedSize": 322668,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewhonCRA9TVsSAnZWagAAqwwQAIu8JtwVxTnHH/uDD/6J\naUZVnNeJEcTjEacxlVO5M1tYuqcAmaGYrO0d3ol2i983aLvWqmsJsItg201K\n3j1vdUURVHSJcbtQ4YdaJSt0fC2SvjnlL0tDvmI2hyBnnxCN+1xKLXGKvyDe\n1AFBhuwPU356wCGR2ugjk58KWPhduE6vkTSW4ir5aGd43gVRREwBolmPwpbL\nlrsJhLoRKVDi2uApy9ksFhrnyJ4TuCCSqr4tQfUVScjpkF+tUTRkna8eXFcO\nwRhVTTMTzHNATtcgDKBOVcpu06c6LZpRosfZ2oQK7fsP1eGfyWbc+uYeQbNB\nXrRgZ68dwcqlI4k+ZZyOztiqxfjQuDhTF8h9JN6rWCx9t57YAxRWg1X+UK+/\nXbq6Jhr+c3nK6pGPQlfP1UVPpRLjCBXkwOU8FJZuSeaR0YibBE095gAfBOuU\nGqA+YwKUW5VfNdaleUtIBjdwTyjLLI2CAPAtLSdPGH2l31RzoUbQXbczVFR9\nVQ9zcC7vzWKRBMPsIxeeBE1Z2qZTzMxQ5maM7GEMh3VzxqbzDI47NlSYsdW/\nIJ2QXGZMZ0zZ2VlWslY5JjOG9epUEZRcOAiCrflRuw3BCSknuoIuDIVvc4Uq\nMc/EfuAoDoqBL65uMUD7YrJYklM0v8s07mQTCUzfbQTj+JU1M7Iu/rOC2B9j\nvbIT\r\n=6l47\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC4/BRfvTfyVtwX+QoHv0kl8zHmXMQrs6Ywu3rz19lLVwIgXO6bSo1VY/AM4/pX+Ubt34oJUll5VtIO8vF+kDywSdE="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.8_1589778982909_0.5916676835213448"
      },
      "_hasShrinkwrap": false
    },
    "0.25.9": {
      "name": "@serverless/platform-client",
      "version": "0.25.9",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.9",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-h9lw0aUa6+cPisxAA/MF5ZWjOAkht30gq50kJGNqG4cYRYgPenubAVH7bSJ0GG6GpKp4Wxqbt+ltHuldBN9Qbg==",
        "shasum": "7c92f35b663d9a0c3cdae1a68df3d5bbfc21362f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.9.tgz",
        "fileCount": 10,
        "unpackedSize": 322689,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewidwCRA9TVsSAnZWagAARDUP/jlAlMo3kzTbTLYHt6wU\ncD29njniGfSNNWwaWnx6g+C3xfoH0TYKpzRZCKEmz5+3F9p9RcJKMk5QIRlE\nZsafWx0/6625bDwz8fJm48YVCJ0uwfJRq0cinEiJ2Ms1kKzi9OHXkbyrYzJN\nASkkrFvp2nOwdhQrojx+rCmjIPhBXvLRbzWvxKDUcOtSOSORznMdBVMCiT3f\nypwyXnEUVgvpihkJv3ydOIXQDZPsi/7i3uMzkNSzwRtStZLZhiasnHc+QLhV\n35cTWBaqFeoj6+f1SyKVgsYoENOGQIkVi4BfyqEaOGXoCwgKg2g+07e58jKl\nXqTxZil4XQIAO2hfVtc+0gjRzJAKKPuePriBD+Te0xBPFWT9gDAh4Q014JWt\n13dXxFGdxKgYeqKZydro04vfBVLJUsS4fGCFCgr/J2jnnAmX0DHrZehxUdb2\nou/9YuWWuVLiHpVsSXS5v/MjOKgSbEmw1sazTflmqSA/Ln3+UcfRDKPkDSR0\n2ysAMU3KIHSdxpZjretfoNBVrsKvsEuWvlFzVkUfK8vcxtZB5xVoE+oh3OUO\na89V+6fQ1Gd3PfeQ9MCGPgklK/akApKPA2oLOQWomXdoeaQDPfjdnrTjF1Gc\nxB9EywYd/pYzWYjXUj6fnbNI5UWRGw4gCnkp/OOT80glTNafojjmpJ7/IexU\nWtTm\r\n=9ya2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA/6ayWsNsNsTN0vUOr3RfrZDXJg/8qynRzXAyTvrd4CAiEA35MczvMopss2T0/u91Wxdc8mZ+h/VlyogbKfWXaeT3s="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.9_1589782383581_0.3914491069701598"
      },
      "_hasShrinkwrap": false
    },
    "0.25.10": {
      "name": "@serverless/platform-client",
      "version": "0.25.10",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.10",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-US+mQSAPGp4J6VBC7GwTIlYMBj0CfbNVBc0Q2tZ5EllQnVc3vmli9jlpVignR4+OjyHxVeYhE50JjwgCK4r5lg==",
        "shasum": "b88d24c6b19b176f6174d762b6f7ccee13756d2c",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.10.tgz",
        "fileCount": 10,
        "unpackedSize": 323301,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewmWtCRA9TVsSAnZWagAAazwP/irCORV12vKX4ef9SNf0\nMbUr3mSakq02U9pu6eDs58AXEqbvzaal9fgEmLQPrPDk/G17GzimiIamok6a\n/EeaKYyn+UeCrXMaOyOhLxw2B6WOj8h8hcrR3PQH6ezQZvtYsE89KGuSXLX6\nJt0KLJVKOnaEbtU8VG2v97pfOlhl5VozwycydF4T+jW6lggao88WChLTjuPM\nNpuuqQbfW1UAa10Aq6aDETSqjMwqbFeUyDwi162G9e/Zrlmpyi7WwEC5gMoF\nPVN+nA8RtjGcQil803ad9+F6nGCQKFq6KukSDLBeMdtHDH/IQPr3l9EuG0b2\ntH3L+Pt38+bGavAc9oxDE8rJsofmpYZYYGsQnmFM/OzlRIajRdtLlgg1E6Ej\np4b93jK+7QKU8QfNezcSgbazCNwYK/MaNn1Vd4YL5t9vHGEqeLrAvaqBt819\no/Y7HBexeH3R7oWmUzpOnANs3ZRhfdpmi+O2eno3GwBfUolAR/RViFcEUuy+\nxANniare0DffPHsJQYF3f2IhuzJ56hSw5YrR6UTpcly2JPRO86bSSAjb3nx8\ndtQbr29VHr87htunxHkYPRUGvq59sv2EOCA0B1wdQSteBDja15/OkT17sG+U\ngS3AWQJGPqCurDYAMFjMhxPOQVn1jTXAaBo/J4WdV5Mt5YKl+mmttmwbrZ3p\nZgti\r\n=1OZ2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCZTKm6xIj6p547yhdUhPPSIWTkly0l7tawlVidxiWUngIhAO0b2OwuvQkCDngjLPcacG6TJgfq3CLmhjOWkleJkX/k"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.10_1589798317031_0.4288256295150492"
      },
      "_hasShrinkwrap": false
    },
    "0.25.11": {
      "name": "@serverless/platform-client",
      "version": "0.25.11",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.11",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-J/501nAW+obUGhHZgN8fA8HQFKqKwjlPsxzE04fMWeD4NevIanXqB22NNb5n6orqy3le0L3LR1iVvFmvmJ+m+w==",
        "shasum": "dea536b2a48d1611bebb0de7a5e48eb87ebd870d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.11.tgz",
        "fileCount": 10,
        "unpackedSize": 340110,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexGbkCRA9TVsSAnZWagAA4aQP/33migyQdnW3FobWvlrT\nA5BkIDTr/TUmUmC9NffBoH4gfvzXJLC4ZAiVcFd7rbdv0Rb3qVv814HNt5rT\nuFcaWBsGz51XFYgTEvalZWzW2ZsdRwCt4W1MGVBsLW5fl77fAO+XhVbqev8S\nJzmENZenG00OhOLXNN5+GIaXoj87lttfs2oAE6bU9NaeEp9VYuZmalc8Yb+u\nMUhg5HxRdhdNDqqnwGDD+RLJBkmTpNXu4ZL4SjxWjDvGnMmzmR+sfzr+HjDW\nHWhZi1RDQDA5pbL1yXV5iGi5PEmH/mWqpIta2E80RA0wNC/qAhsWSDB65SrP\n2miL7ReaB+kQkraRaPvzOA8voSIHhF4PqXE85j64GJUbpcQ+HO9WFYB7rw5F\nAuPeHb4/N+Hmmgppw46h0MzFvTP0V6nwFrLyKjM4LXKywQJH1c6+962/v814\nBVlocwaU3Tj2OG7CnPwc0XyrXWl5AmwAYlIg+lvdFzyTo2dZ7WbWGcT4E+mn\n9fGEb6dNAnu1A5BCUzncQdSfpMYgOwGb4pbs7nys7eEJH9nfCTWbqh2SrWo7\nT0CuJbckyz2snqUiVcAqccj2MRYJGc18Hwxn6JLvdhQHIt1zNUVbVlDopTyy\nZLMiSguFgsAaWRgv9m8LldOLEohcKrE+5IoUn67cvJ0zY2uoj4C1IvY4lAsg\nHrkI\r\n=rQsw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEftWCXdn8kY/GRKc+vbWTwlk9McfNIrDbpLspL6Qo03AiBHY1r2o+TdVZOpZRvWuNi4tlLC11gOAGRHHZDKNAAC4Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.11_1589929700113_0.05800918367217078"
      },
      "_hasShrinkwrap": false
    },
    "0.25.12": {
      "name": "@serverless/platform-client",
      "version": "0.25.12",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.12",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ItZGQ2ODUYsji2FHCh51ssy5IwNAW01HhYBdfWDGcrDNENBVTxLQVW5B/+WoKC3jxooHppJdyjoC3HRI87Op/Q==",
        "shasum": "a3a1c620598ec28c6a20f15b9f103eea86399855",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.12.tgz",
        "fileCount": 10,
        "unpackedSize": 340220,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexH24CRA9TVsSAnZWagAA6fQP/0d5ZC1mTe4ZQhPmfWmU\nGkutxk5dKwSIhKM4oezZHcR9t4HMYalyomFzj0U0zBI0NYSuX3OhiqAFcf41\nfpptjUTd8ND7y3ZyvWQtyY+bGWevZa0evoCjLXzD5pDlvnhMazZRN8PYWN2z\n1C9O4W1Ek6nuw4Pl/jIuxUApExJFMhBx20f5sIw6awOABw2Lw7oCh6fib8Zg\nfg8nDHYoRAtO8XxduU2yFKnZ6iDxirkUwhBsKGtAYTTvYZ//F2MT475qhxvN\nUxdytWvzLNUsciqn/bhnC9bUXJOA3SwBHIDUNQgV7cWmngyKcdhOXwcsCs3o\nYeLkthVzDIyPiNGf1DRA8ZW+xq6IwS/jvH1UkilySDaglKmVclWn3FE2RDLN\nieKQqSa2kSJbpPbStYthRy6bxb5TIPWsjHu6WNEpr7jTxjhx7ff3U7WUT77B\n+0gFH5w88KgYHOv3MZUAohFCdfVxvY3vZQ8KVBdzdA6PHc4kzLKFp1dreVvg\nrujtlEdKzGSwg6nd9iORGPJM3xbk+tnlvSQhwkKLgK3+x7j6h/hGN1mirCyz\n4yw83sVfxci6Oveh6vs5CchpROK6QpUQyMqFOVMJpZZV3o7f98ProVA4/gJ3\niuSCQOgq4IpeqT46/xVf+IX+Q087lNcuNb+UajqPzMsifI8Yo5FekX8FYmxd\nF1HC\r\n=phUv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPIBizOaMIayUuhHZVpjfAe3YhgAlCjoW8XqFc7peuXgIhAIywSi53T7Qn9j1kxjcoFp7o8IC/f7Odba+jFQ/zWnOM"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.12_1589935543740_0.5148573719522467"
      },
      "_hasShrinkwrap": false
    },
    "0.25.13": {
      "name": "@serverless/platform-client",
      "version": "0.25.13",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.13",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-YNcEd2J5VyIoQHCjLMm5qRrVghIGt1JbLd6r0npHivX30T3Qo93N6O62Uhibt0guajQlTKpZjfHkn4YTG9sA0w==",
        "shasum": "784483d83d2630f8188042af57519dc50e6da8a5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.13.tgz",
        "fileCount": 10,
        "unpackedSize": 340218,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexKRfCRA9TVsSAnZWagAAp+wP/1o4uoT5SXYOM0OibPOp\nqQevNE6htNuLdCy/o8EDZhcWRIWvM99iRNUq5G/KlbRFrHlUggqBLh36iazp\nbrQX9HEqTtTL4nyEYCGlFqj9XNbAThlbZDLpC0sM9yRyR1uiUtk+cT+/XHm3\nVKow/okG3rLDnI/RcF/H1bnSkIG6oWPV4ZfMViPjpFg7dzDljT0SbcA+C+3A\n4achU6tLisvrHsQFWZgq1XNs2bg1R2g6egQ5IHfI+exB/2zeX5HqhzWPseqP\nZmpSg8VY+rtg94CpRPEwFKefm/oiR/XI8hLUh6HJ/Ku2YcVp/9NM2vacc2ak\nYIV5Xa/aCjD3ZRlGWhBCiLQc8QnOHQMTj4YZtyryB3+L4bCHVVVsl/PeWNWo\n9IukS9Tn19HLbXPeFK/+haXyYlLvSPOn6Gp5/WXzORfPyTbxlbGHAoMrRDEF\nl8GDGYadPQyPZgmKhGBa2JSdAq03Uo8TlZOTO7+endS8Lcaq7Hk5DX4gu5fN\nX8FLQmiQwpLrEJycY9NOaC7K1MTEmoxuv4TVg+lfvRiDGPx1kMuxmHiDIbaV\nLEotGRDwfx3hCW9RafPdhqq0VsIxPPgl4ooB4jZrsJMJrSDQBwZgNsXYPYUU\nVxbn2Mrkqf68ha/j8cHzJ8Fj5BoNdjbw2sBd+lO+Sv3NxBCnZBFWFX0AcKMX\nWWbG\r\n=Ya/j\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGea0UoZUXfHHKbhMbGoiR+LenySLPrykO5qEjARx4R9AiEAs0fnbGAcQJ4TWjg96qUoDthKIqTCaH8zJjrLmRFu1Fk="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.13_1589945439086_0.6160383271113521"
      },
      "_hasShrinkwrap": false
    },
    "0.25.14": {
      "name": "@serverless/platform-client",
      "version": "0.25.14",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.25.14",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-ww5GBt5QEHYppLH8X+gEFiuMoFu9xdXK0bEROYbuxUliiB0IfXTXLzWR5whhi/S94R7pTnJ4O+WUiFj0PcV/tQ==",
        "shasum": "b6bf08defbc9d7686b44101856fec96b45239c72",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.25.14.tgz",
        "fileCount": 10,
        "unpackedSize": 340198,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexLZFCRA9TVsSAnZWagAAfaEP/2dauC8idlTCPCwjRwAZ\n38qepx776jb/Pb8Pfo+1JHY6qfKk99xAS48usVohbSsRldU7qQbV123zcORM\n40oojQmmAs9UqYM+vj4KX8yd2ntxpvoUqsIpjY2KqyFKV8HXqrgLAimqsmdE\nD7lFiuj0DXoTqQpPE/AlVQWhie9wxC5dCsSIkZfmN+eDFC8EdC9NOkB2zxsQ\nbCgOQNBTkNNX4vnMEdoumGvuRTmGz1Lk0CuBdgTIkFakBAdOhVjGAA42QHKq\nc7i+7R55q0cecZNsgVZ/vMoj7C2rEwHw+OtkFmCfJFS55RYUuDfCNFrzKDNf\n80rf5IkxQRPo9RV2Er+JuA9/eflfZ6GcOOdvZqHfV4T4qaiWLdBz70jT1OsB\nVCgorTaPrIk+x9XJwCwg+XmezMztVgJim8kKd88Y80pRDWDcKfnBHDdzGoTV\n/PNyBO+xxCV/sUE5+9xvoBtabuj4iQI5PyTc1upUYHq+OvIrSaNFPmnl5amQ\nBVTn+ZxRbzbePUtEhBj2csh5u2i07soezoqFbNGN6GqDNb0KlrprEIn7Khvb\nVRrM4JrVvJf/iRQt6CE0hNd38hL9Cdd1gIrRrgIwt1GHp1tR6fSQnBR64Fxm\nPR9Q9wGxUzmc2WhOO1uPxrIJMm9KAb0EW+gBxui5ACdUVdTXYXrIhrB4llFK\nkDrZ\r\n=i2JB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE61zZWk+8Ukr21u+wsUPyXwUWX2Uqfjp9CBLkmeGm+RAiBNZ3lhAqOZ/CMsuIaB6xy/bTXthyzWsCCrOnqTDQH1+A=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.25.14_1589950021109_0.3062813690762636"
      },
      "_hasShrinkwrap": false
    },
    "0.26.0": {
      "name": "@serverless/platform-client",
      "version": "0.26.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@0.26.0",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-zYZ5bhl0pM56zTpaCKYcvwQbLStzm8bHD1jBQfLS74dPtHMRvBnlSv2kwKv42Kve1xafOwnjBjviKEKPIMegfA==",
        "shasum": "ced55555138978ad5f7859df2b6b273f2cb27dba",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-0.26.0.tgz",
        "fileCount": 10,
        "unpackedSize": 341610,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe3ljdCRA9TVsSAnZWagAAGEIP/AtKzGG6WkJIgNfMu1q3\nXONLr+2G3kRqXXfpS0m2aYWgHajhTiKhJai218rR+LsJ8TicVloKXNa0qHpn\n0nMF0P/wMh5ipFg8M7nG4JdGZ8dpTOr1QzEUO28gS0wzJDjZEgdzN/7tD6P3\nHTmiH1SSP9HgF6YiNZT5J4ScBTbMm4LchFf9sCe6rIwEwMIYJ2AkaA4X01va\nMKoGFOT3oa2U/AygLYDViCQKDaaDb8fhlmVNLYkWs/27AIu/MG526YskYozg\nkzTvRc5SZpOvThFqM6x/j2Ibj6WLLNsU7ztbH8gLb5+kvk2vNAndFZyMAhC4\nbNBZoBIb78X1eeyF6T83jQL889GTWu7lrqLFUvHdhg9mAsNMyIHs4edozbXB\nqrEVwxvH7KuFOx3McBz2AlHNkKQgtJ39THdoKBp52cowR2lng4wkw5toQJH4\nbf2NUi6PEdt2iEAAgUIrqSW87yS9XXDMd6FUOQxfl1D+SgucAY6+pCKL0cNc\nm53bXNJridyfhe+PTwNHQqHAPOvv4nwLFUG7zdDOUa63ZFRTs5duOCLDMRKr\nIFoqtZWsQkh5y+UxqVxT4I5ssq0sWcCU9ln5DWoxFgp6EvEX1FJKkIlG5+JC\n7jAtDHYvFmckm8pg7CeSD0TmW+MtMoA+tdiPEHx8fW/yHEMFv1vCDN5zSKfp\nV9TH\r\n=5SPD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAuXw1YHk6dIX/yQrIwHaoRKYsQs7C3zGRM2DlD7h8rfAiB1krA24G20KBR3oO5fDnuMsIHeoWKN12s0aKFL0+LG9Q=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_0.26.0_1591630044806_0.41500642626717377"
      },
      "_hasShrinkwrap": false
    },
    "1.0.0": {
      "name": "@serverless/platform-client",
      "version": "1.0.0",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.0",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-wgBCLNN6UaeM2lwseCgArSV9dcZTwnn0drlm01D5fRoAnomqWPtgKzcVvHICxHVJPMG92KyidB5LYIwkETlEWQ==",
        "shasum": "0cf672bca41aea3f15a234475e38600c484497b8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.0.tgz",
        "fileCount": 10,
        "unpackedSize": 342176,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8NxrCRA9TVsSAnZWagAAWFEP/2D6zp/s2+MDWFCbFYL8\nT3fFQNO6k6RucAIIEC4fuDpwLpFquifuvAMdfaR7N5mT0zb3PEs/UikV2Hzl\n8mrvKsd7yXOcOZyGyuAyG1k+KOq8M/uk2kEeg3vYNneHS9kO8pZ1Enm9DRHK\nVSydCmfBp1MmQUj0aFf7tWn3/vgqCQYsf8IHoYCi1ZLRFF/jZZ2g5owR6MZY\n4YQwdGMZL+A0V6GfMZSDsQ+jxqM847NZ/FJtSa/p+785fq197vwfnz+yCc81\nPbrLoyMYaH4fO/99ZqP9UTlNkNoWVcG+kzjMDyeZTu2j6SjYtEQ7/kK8JTwX\nMab4S2f1J6pLwOHGWeCUrWb33bVRTUz2c6ZZ7YSJI8/WihRXP38olFLZjEK8\n6IRHlSNo/AlppA0dHNYcr6JxR3pbgpfRI3iHXleEZaiz/CBBdj3YSbu4USnG\n2WcpQWZi7CNOqkHE3CJZ4S/DoCBL09kD2Uc36nn59yTXFraHYlKNQUMiZUFp\n6xWxq1UG7/t257LjLHJvc5jlA4J79WLoHBQ0nWuzpJewAsxyd35ouHMbk3i1\nX4LDNRJBQpj/UJYLfbElPq76e2dX2kNGSzeHmde1VrIN8BayVNLmcspquBRJ\nN43SI5rbT0nX0evS8EZE57ia9B5vPwRUtCnnoUEuFeVDKaos3Lj84/FUzJ/d\nOzEE\r\n=+bh2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCAhty78f35crDjmB8rkwCjaDKcbMYkMUvWobhzKJ8gPgIhAN4TE0tQODQS7dd34xCQogYMttDy4/hxUFZdbyHiDXQq"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.0_1592843370782_0.9447024134238557"
      },
      "_hasShrinkwrap": false
    },
    "1.0.1": {
      "name": "@serverless/platform-client",
      "version": "1.0.1",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.1",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-FPFbhLb5nXbHzla8wSQADp+wo3dPAyvkXzGqCwojAWzLwqCczxzEzMpixpLNTbNrDNgYzemvERWj+mnOZ3oNaA==",
        "shasum": "ea59c7f1f075d899ca6e1d7ab2cbc8bb1721d989",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.1.tgz",
        "fileCount": 10,
        "unpackedSize": 343003,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8qJ5CRA9TVsSAnZWagAAQEMP/As/L0B6DIFZZcRkwGcT\nmum8bUezwX3XXbRg6i3jT815kbFLHtZWcGR5x4OmOtQIlAMtVJl6TAbAP5l5\nGMnOhVCjWH63fV4B1T4z1iL2ahu7qwvY0Lez7o164O7wFDtf0QSV7b//eBPB\nx0aMoWfdIP3z1Hs4MVd6tznKSdlCOOqM3vGbU/5V5596UGVzuznjn51nkpkO\nykdbkwFCW0zIoisRVCZ56WcYiwE0hVHNTKvwOyFzykvoUqxBYqw30FZDAvhI\nYwgsTGu1qFGRsPCmZnq6YaBwWiNaKHZrryHcF/uyX2pYjwp6WL1yMzEYRI8k\nvGPnLEuvV1RHO4Wi8FsUg0NR876Usu5jQo8YGyllyVd7174lpxWNzoaa5oW4\nfKgkUhVwY7MvfRBvWoVrrCsZRYKg0YQqGM0qIp1b2sN3FGnzDAnq5I+8yo+n\n78ry3Gcs14fMiXQ5U/BAAw7wWGmo5iCOs1JqtNypdBB7mzplOXIKNWSXNVwh\nrdnUjg/z306Au4RjutdgxrR0X3R0XewBwTfmbKSuuS7/Au0/QGLxYDcW3BKC\neeywHTw+J/yxrT39d5X3S0QsW87vdVvINuehEolSuA7RLmiG4TNVDxuhuP8c\nLGP3p1yCvpcsZ7gHTeJFMxXx07QF5IcLT7bLVkHy33d8BRzFk6n0pch3RGei\nz5zR\r\n=bBbp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDZH0SM8+uSo31h7Cd+ZO3UE4411slWwIx6hINPJNuucgIhAK7GNQU/q3VC3fXdjVcRdcTE6ED+s3cjrLep4R1fVS9Q"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.1_1592959608715_0.06136996243888393"
      },
      "_hasShrinkwrap": false
    },
    "1.0.2": {
      "name": "@serverless/platform-client",
      "version": "1.0.2",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.2",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-oyCf4rw2jjrJMysMMao6iSyU/lerpB6y9q0znh16TjSHMZPOegg1oYFXxdgZGMPfBpBSVAoMrI5sP9JhnYnZRA==",
        "shasum": "cd7b9ae2175196efe8100981bc9f1cf53568bcd9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.2.tgz",
        "fileCount": 10,
        "unpackedSize": 343176,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe9OrWCRA9TVsSAnZWagAANx0P/2VE2RecNFYhZpoQV8ie\nAJwA6EBncIN3mn72QrgYspfdQTUpDV1qS1m1mGAwppF9OeKlGFuar8NmAEGe\nrt5lMSz+WUF26fUrUPEBxzAatt9HiNkkiW9wjp5NOgccFH48pmoxG2b2znpN\nD3HcUNhcHzOAPqifp80hKPCEZC8oPLZG8ffGdo7Vzv4THQ6Kuh+0EpzSJe+e\nZPOTeZjBWqY3smPUs/DTd3D5yzRAJUETlflKVz+SusDnKeXBrXGth4IOQ7iL\nl6EyhPvfAzlfFjXjWArUDfU49Q4bL3NqW5kEbRNQkUrDsq86nCWDnqMG5hYY\nqG9/uaAt+TuiY/BDra3mpI/mnlkvHgqJYf1AWRgGa6okVmQlUnTWeyWhP47D\ntm/uBLdxcmHjr/ZDoe8jk8odGKCkEH/1sCAfZqjQ7BTKoSZeaigP4Bb6UqOQ\neb8QLnw/uI0kpY9ZfAVDwjb3/c30z4oy68pVYnpKEngYlc5AZMkspBxeA4Uw\n5zprttffEmcRMBXd1/76EP4uXEr0l9YvFSBce+SmZSEFwbg29bokLYM2v4UY\ntl13g7GjQj+o4oIxWNbNt5YZlAHocccvn6OrVLUDF8QnZYw4GtdCQSFSi0y1\nwu/7HV2nw94auF1ex0PS4+qZNHqvvyXMtLfkJjuZ/ss0rBp9h0AtpQcci9wq\nOUIX\r\n=NKC2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF/FHO7tn1+33dNJ/wX4YBu6jge9bQ5h5cZB3PeDe3wlAiEA4b31TsLmsqTHQFlP72tf1xjArR58xMVpO5cm668bCmA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.2_1593109206154_0.13530931446616257"
      },
      "_hasShrinkwrap": false
    },
    "1.0.3": {
      "name": "@serverless/platform-client",
      "version": "1.0.3",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.3",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-c+KJQLmzGqEK52S98cTZsltvyoNVYMxtYF40KVBWCWTEK9hPO7bNIV79WdB90pBKYTh0sIlHmSlf2dUuOiOxlw==",
        "shasum": "d7f98c7abfc9a348fbd75390b19caa447f59330f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.3.tgz",
        "fileCount": 10,
        "unpackedSize": 342987,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe9i4YCRA9TVsSAnZWagAAM+cP/21ppDlDWSiOSlt7g3tv\njq2i9gssHaPT9XrgtxspyAmcmk/MbSy5iWNCIiGG/uDxdDTQLYAt1iareHNv\nlIUXKWAzuLVfGywrckvFhmgh0aGnMjUtRusCOGhgcckLsqhbHCyQtAJd8Pj6\nO2EkqAZ7zlI22IOIKtjfKqht+1kKgR6YsyafnPkhRhdk7cHATOT4Twfz1cve\ng+P3TXECtyac7GQamyneM3zcxfOyRJ1kJPeXoYMdU8EjNoEy8AVrlK0N9jRc\n70Tlc3uGCYuruTU/+nfk2010aEFhOjeozK8s8zA6Tg+w9K0v29RXD4ZXJSsj\neXTAi8OhlHCezy0tc9yMHUt9mcZHkAyEzOfNxWlUHiK0xxUYQ1r8J8QUhJTA\n/+KrujaMButmXB7LfjaXZU4joTy9utttjokTP5++4J4RwEvf13K/wA7n6nGl\njnX0pRp20xhiWENywMW5S0cwxdsX+AEflW/aviFy4n/61JxrDviX1yUTWcKh\n9JwImLrXvjEX75Q/a3CQzZ8WQ4PlrIj/StZxTAVGH6NY/ct5CXbFl0FEImVb\nSmmVtdN95LEA1aNBmWg9BTU4F7iw+qORA+m8cZkDSX+fOC6ZazxEbybrF7vc\nPdzdQlvdtIzoVF2kgF4ofrZmUgRAAHFopNovG+VV/rU/+2nrptADXrHvI8SQ\nqmhi\r\n=7hbZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAHOgL5FJj6UzKfNZi6xm4QJ353l9Qk1Ln1A6SiM9u1OAiBS6sJbXKHZ29gQZvSL6XFXy6sX+25FUzlmv/krN5eQbw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.3_1593191960199_0.29263035436773843"
      },
      "_hasShrinkwrap": false
    },
    "1.0.4": {
      "name": "@serverless/platform-client",
      "version": "1.0.4",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.4",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-zK89L1ojS+ocirlG3V/30FcXOr071nZ9t/aM3y4gz1dn0Oe+Py599+1V6IlFn5M99NnFaD+tLXXU4I3WMXxSEA==",
        "shasum": "1a2771a8af9c434edbffac050894770a25b596c8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.4.tgz",
        "fileCount": 10,
        "unpackedSize": 343329,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe+frbCRA9TVsSAnZWagAAgmEP/0d5ZWlqKM/vCoFmyZNu\nl/MfOUzK2WSgih5P9HMp8TE9+ZhsGFv0uAwu0HyiciBxlTgp0O8l9XW+Gy6n\nUHnVE0n2vXaDq6MAHAbfR3v7zjJr/LSgz/BFkoLhW0t7V+ESHlYS3DXeNlTf\nPxsCo99Uw16vRSlTjeY1MbqZZaUT1JDlv3bPD64FNSjLVK+70V4NOHVKkqNu\n2D5UvyXaxq1nTxdx+ZoBpwsBPbEklWfg/PzxizH7JdMeN1CqKHIWqky9+EWR\nve9Wzr6jyrbYvrfbb/NDlb0T9liqpPfwlwWBNZmx8oRVLEq1AIgLmQMNUJdL\n/s/3Mgd3P93QVlCYbNKikMA6+Dx4LMmqdMNEpJ0Xj8P0GoamMdfgV4o/Cvmj\n87MMKnUdHqR3rhloJh2larm12nrT+uPivuZwaOqEG/W6cybM1+xpiLZ21lXi\nScXOQygWlOzeaFd+cUkFPGngfupi15+ojSYGMp4QEVfxcKljocYSUvW4R2+R\nkWNqFXA8hqmhMeB8Hh1Zh6wVukhcPB7SRiJH+vpkwVI2HPj8diwSxT8ed+y7\nGSqUVEktmZCKV+CLeBWFKRyzYycD+aWjtnX/a0nCsessfyQ7uxo4DwkP126r\nOL1YD3fnuKWpzH/G6r0c6mc9gGE/8lLkasSgUV6rrUTPuPo3F46HxCqbTfjx\n6d8V\r\n=phDr\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICFY8YFLlodQMrkEZImh2OjRj+v5b5JRzrnHWiODiSbeAiEAl6rsJgDZJlJ4br6WfA4P3PJMnInUXSMw5NaxGVadL30="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.4_1593440986504_0.32876634264107363"
      },
      "_hasShrinkwrap": false
    },
    "1.0.5": {
      "name": "@serverless/platform-client",
      "version": "1.0.5",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.5",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-6Jp540f/x46FDsUCf3IqZYysDPJ1WOOKdVXTQ4wKPqgyvYFkJfKChS1MPZzEmssrpC8tPwUUkGdyoGIJRq8piA==",
        "shasum": "d255e3e5903f3b92bcfc472b743b1bf8668e5ed7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.5.tgz",
        "fileCount": 10,
        "unpackedSize": 344928,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/LRWCRA9TVsSAnZWagAAxAUQAJDtgmwAZ2VpkF9QMJBk\nKY4vfT0RdpnGcL4YXkzbf54aJsLZvKXXwZgilqmfEyUI1iqFKRQyFCaE5R0t\nUy3wRH9ulPVLkAux/EUMAE/jju4R33//8Z0lOHRhroBN0Z47pxz3LLdG0c+d\n+wjwTYtvXEOIvdEiuyakDSnLPDQU/oSaIB1wXFk8l3VXb11mLn7TQYpuvWt5\ncAPTaxk6neH3s8agvnPl/zAxn2fMLeA1OTEXgFc2Kou0zsCVqostWXeXE3nd\nMxvTGadIKmy8k27O6AQKeHiUSW74YHibUOKvVFBOhH1iu68RXCEY25k9xrfG\nTUvgcS5Gld/5y77SO3KctYOyPKu2Qc/HBloQQVUywxN6AiTcJYQRbauYxkFu\nAIfmvNvYa/q91iEnOBtBZlxPp8uBR0xWvrM8fD8eqo3GaPf0SsCCRrHyXpp6\nzKCa3GFMfdblQkAJmguQaUuGkAt0t+++NYRVnqM/0x+Ao+c8AWPQwDsP+MLs\na3ASVnrzAhum233rTJ0Qxa3U8joucdKu5qN58TJfFOKNbqzlZELsGA+TJOwa\npgaFFcV8CtXq0YhRp1MzxvdddNgdEEUQ1tlWJ7CYi4m8lQDIQk2Y0VkC39a+\nF0QVv1GQRtRWDMbeuzwDpuMfjrb5rQtKpOomOVMd0To8Tvs2iiinCsOBnyFD\naAwy\r\n=nDMT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDdL7f+RMosup2AFjNFfxjGqC2DgXB024LHd0IIXYfsWAIhAI6GgGYITgaCLpqRmXfyCsSiTcZJpMxAYkUdWk0+Chxt"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.5_1593619542056_0.7380965900742178"
      },
      "_hasShrinkwrap": false
    },
    "1.0.6": {
      "name": "@serverless/platform-client",
      "version": "1.0.6",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "pre-publish": "node ./.scripts/prePublish.js",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "author": "",
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.6",
      "_nodeVersion": "12.6.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-R+HHvLehof5RMXAQirgxwAZVvhpcrlzBKd+4QvD1Fh/72p8n5Cr01P2juO99JpAUBqKNPfERNW+EOypbPbGsow==",
        "shasum": "ebdf47441e1f0aba500e8df93f45c640513008bc",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.6.tgz",
        "fileCount": 11,
        "unpackedSize": 348981,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBI5eCRA9TVsSAnZWagAAF54P/RCwoZhboA2kZuA7BxkX\neooKlZWNCJ6y7d81DENBltOJg5oAkZX09JX4quL/Kz4B9U8GQAne46WyrMVE\nrqWWGCt2JnJoZ7txWGARZSQXzvov4NWt4dEicGtdi7kzL0BB+QMfW0aQ88FZ\nZVK1CZelgydXa5PjLYPR3d6pK1NppFVNKpW69AiT2aw6Q1080oqI8gVJzVhz\nzwys8gdto5zn6LbfzlxCviDKRCZFDAN843NkZYm0FNkMwZFgOsSkHu0cfB+P\nfgcwwj4ntPxCxqW9uh9O1pZTCo7oPPyF8M6AQJ2L8MT7lU8Qnz+E0e/+GJPa\nAOeQ/KHrMqbtYS/zszP7ZYw3MJXttE4RFtPLRBWYk+mNj0tBUFKABvXHVWpS\n/rIkv0xkMpTr2nXnQuTSVGO92EYdbLnwajf1DfgcYSHbllFCL3gBsEmsnmkd\nRu9O0FG01dAv+CaacyAkkytG5Jz1c1yjcSoqxbMQnxzpy8zMMwHPV3hhAv9Q\naSEpFmdD54rhCuQuqhwRd7J/4BGx4g8B7opHNmq365JkiLplrqoqcDx1NpjP\nX46QL9xqPouwU8gB5/+6QteHB3c5vAI6OEXSYiOmSniKqcYWk5jUSe8p7YOg\nT6MF/282VPX+oeQTbBR7gUEajha3eEeB2mAhPaSnhzxQdw0w4Wi7Aej0iOMG\nd/l0\r\n=9KrX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGnO9BtrHSDXoSOmcX0FXdB7/9ZHwrzaKJEEoJScGsinAiAqXq373df8eV0CmopfOMuwUdAECFaxxtdR4M/pdqYoTw=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "aj.stuyvenberg",
        "email": "astuyve@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.6_1594134109982_0.6651527453652208"
      },
      "_hasShrinkwrap": false
    },
    "1.0.7": {
      "name": "@serverless/platform-client",
      "version": "1.0.7",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "prepublishOnly": ".scripts/prePublish.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "_id": "@serverless/platform-client@1.0.7",
      "_nodeVersion": "14.4.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-Yxf1OUQuRoTSrCt68DtUNzKbHRT3JK7233MDQI6hXxt0944f+d0pFD/XIMZBvgMu77oSNrtV49yZsRwAU597HA==",
        "shasum": "cf08edea53452578caaa21498ff44b4fc7a5f0b5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.7.tgz",
        "fileCount": 10,
        "unpackedSize": 322346,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBKewCRA9TVsSAnZWagAAWN0P/iplbvzTrTkp9p/WxXED\n21nQYXpD81oe/yfP1KRfdIWi5YKDWhkE7gZ2NJOGfrPw3K7zfpd7I8k4a797\nphT6bbyXVs04Rpe1mJGwJHJKNe3iECToYr1Yo/PaeGpY3TnCZ3VGxOFWHfSu\nHPqTrFkNxBjMZvZCoisoxsy4R77CmS44qtPTcHr+N93C3ZAMRvEOkpKNuhVi\nS7HFnAOZqexMvV4rItgnlIHYsha5bF1qqxGsBttiNZuJedyXRy/97fRueOGm\n6tphbMiXo6iYLS7sazJGU+WnytaLbEVZ44oxEYcf+CL51ILTu5z2EfltvMnj\nGrwnKbjU/98TC4Ijj/YlHLZQVypBdeLqIGDmRFZH2cR3tCl6Gtfu4GwN7MUL\n++Qq7FFD8iSnucXZMhLRoW5sy7MviXtoc+gjoqgXUM091MBZjqnGk8SRgo3y\nTDRQ8zSl3hiQvgEVCqNUH0QLj3gVDA6ryy5fIaxFSWpQboIGI6Ylg4HmN7nq\nz2Xtg2wBGljqeGv1KQKrEF5nMcGYSIJdQ2HLCsQr0r43+wjxAgwZpZBy260o\nY2uGYNemPrHIvc7soEG1kD+Nhk3JZF4SVLRC0l2qJkAnhqZJ1aFisChFjm8U\nEtNFzZ2PTb04hV0yIJRH96QWLhgHL6v4kvJuoWfSKj8zSfgFRE2mVACrCKQo\noxf1\r\n=qMHd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC7aib083deP3VtC6u55kKleQE1rJUT2CvC2y1cbaoKCAIhAO802tb18K6sgofFvQHIBjYWLxyC5DRpMk+IYHzJ3s8/"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.7_1594140592323_0.3048825148724763"
      },
      "_hasShrinkwrap": false
    },
    "1.0.8": {
      "name": "@serverless/platform-client",
      "version": "1.0.8",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "prepublishOnly": ".scripts/prePublish.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.0.8",
      "_nodeVersion": "14.4.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-1irQabeAHv6RLxEb370qAvy1x+7F5wdaxr3vBUnL6TZ1UL2FHk9r7P0n8AKCNMUi3bCGYrCNiYOFW31Uhq02ng==",
        "shasum": "397a6929212ddbbe8406263dcdce711cbf7504d8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.8.tgz",
        "fileCount": 11,
        "unpackedSize": 353407,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBMrTCRA9TVsSAnZWagAAfbMP/R1vtYJmS172Tjqly2qe\npz/TFYMXjO3Kc/PWnePkNsVPUkUGRVDmPGYCEN90w2eV5adeMdL2gdXiEB7J\n9clDVTt46Iy+SKsOeGNa5KT6pbuW1EHZwkpaau8ztzQwLESjXJIyc3Nx9hYG\npVOEXKjHyFo45rk/J2E2ITRsAb4WXEXkEbmY5Ejeich2kDL4bYJfphm9nQ+k\nz2Xoz0QgZKU4oDnfIzn5HS5YAuN03kWhlf/FLlizXejR/pQsuQ1brgWVyZrw\nT2GzhEMAWq6NO6iA6swkvcdPehCUMjT6fMSjybn4XdDdNhlHJorcA90v095N\n4R9NF7PBgKt5UA53F28kj8nEpw8+SI4MwKhvD7AzTTRt0JcTxF2lP+UE502I\nMZMqRtTdsJSk0P//MTVYVgUkDSbAogmG66COJsDPpB0de6gTTY1HV3iPWfsT\n5IqHFS1x+6L9bV6z3Ew6vT+xkmCPKV9D1UWuNNw/Dxi2XV2DC28gapG7DUcV\nrIJYgg61awrvOngeVplwAlRt0fQR2e/c5+b5qJiJeg7jz//fy/Vd6I1fUV5W\nf/G2T4jTeNDkjw1OjNNmDz+zViMOgmm0xOal4ew26iuAI/xedKDHB1fn634p\n7nvXjPff8a1SvCTiES2FT+gKF19DhOa7DuI6wdqB8GnhLWIenaPHU6zesiKP\npiG8\r\n=xsV6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDuyjkSolQfEYGhLqsrNqECucKjLrTYwTxdmbdasLHr6AiEAn2j9/96ZuYUdyFOHJvb1ngCmMcDNn1IT3CFYV6Qsel0="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.8_1594149586370_0.2284109866105566"
      },
      "_hasShrinkwrap": false
    },
    "1.0.9": {
      "name": "@serverless/platform-client",
      "version": "1.0.9",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "prepublishOnly": ".scripts/prePublish.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.0.9",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-1y2oMld4QzuhM00GCEE65XrVL+Vy4dvqzkWMNHGJwSkcetj6wc5bAQep+h+FP4s+m/0lRMGTe2QXrJsE2RScig==",
        "shasum": "4f26335fb4f0646f2b6dbec49fc656560bfe2afa",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.9.tgz",
        "fileCount": 11,
        "unpackedSize": 353959,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfB6BpCRA9TVsSAnZWagAAcLMQAIH9926BEBilVSPepRmq\n02qm/zVcwT+Oi9EH562M+tEBkx6cPZQ8mZ7YqskxMvjmRq3KF8tZFiT2mDXw\nv5S9M7vBjdRnIVNieiX7Koarpuger4Ht4vPn3IeBdKeLnigUhChBEifyULfY\nMNNwrawkeQQas+iE9ffw3VdijARis2azt4gdJSmluoHkDr6dlIfealmwMJhF\nmJ/x0sD432w/ElsgeCIXxGogOloNA+k6y3RU/ZRPoDsysiV7apB33/9qsL/v\nyl79BqpAdjaW+5rcgwt3yEjCwCOmqYVrccI7V8fGu/NcwtmiucTA18T9PSmQ\nO5pMc6H63aDZXNXpZWtUYXkfAfwi1JvsOLiFa81CSdqqaYL48XpUwNqOW/ao\n2XgMYfoO5CdJhb1YvGFA2fTURNh+l9YgiYeygcztG3JbyFgXLpat6VOZ4MZs\nivhzBewKX7ItgHMtUESpKMiIi4zX36lCAcVNe6E4Jj4P12HWhYQE12wdeAkG\n5x0pQ8ax0/YRHBs3PHBZe/AX/qGhL2SNYZ7aymHaXdN4TmuPJHnEjC0UVVGP\nYGOtoWBoAEjKQdATrDncuGdzWNo/l8mcrdyIXkj/FKrSEoDCEADNzK8dM3xc\ndCQtNjMhvi6uOG6tFMVXFtPfbKsmu8Lq9ATZu3xjc4bAEjALm9a9pZUnhtUv\nKVZy\r\n=cZtz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE/4BGup4/EhMhyGFFANUA1/Tt7DwUcrXjJisqS2tUCmAiEA2v0aCX078ADJtHUDPhoP8cPx8V0+Q8YlPNU/GEj21fQ="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.9_1594335336895_0.9966040985964673"
      },
      "_hasShrinkwrap": false
    },
    "1.0.10": {
      "name": "@serverless/platform-client",
      "version": "1.0.10",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "prepublishOnly": ".scripts/prePublish.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.0.10",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-+Y+u8wSO67oIsNuI1spfwTjN1zw0OwsU/wQ4IDZsKiyAxs+ww0STDoJfVQdwNzuhw0IwnBO0Wtv8AaLHdNQYTw==",
        "shasum": "9b4caaeca6b2ac1870a9fbd6a4dde80fec6f4f3a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.0.10.tgz",
        "fileCount": 11,
        "unpackedSize": 354222,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfDZ+OCRA9TVsSAnZWagAANNoP/0IrcbH33S/vZNx3Ub8l\nWa1nAzUUVubOKPEDHFMYUO7EbdjlbhecnZ5F7YsJQKxov2ZYrc+fhXAdcUDZ\nah0Wx4lT4dKMmkw9EGuPDzaRRuJTrvEWNpXOlDr5PSmBQLe6yv0tDomx0PvV\n4jsG1GHfRDxcqqHAzAyKW2eSFuHjtdLG2f/gWIS76EJvLAsRNG5Qx5s7I46y\nd6nemMAMDeL73j5Yq0ap45RinuhkDxQiXngelZPdsdjpymRWmuJXKKZ/1i5O\nEHi+GF/cjlKCkwtv6S2eVNgrg5fjYzK5a5CU5NK92lHxXAogg7c7EzQIxOm8\nnDnRAEk/qdz5N6XwpFuaz0Gk6SmBBF/fMxAof8eww/Bp3CaSBFyNB4PFb6xd\nhXEMlRjyHt/9lfUJtPL3MbVhP1xPxJChN1gaVsROpRrHoh2OH1LZXVlj5mDS\nj3C0G9i3DtiKiPWarmV62cAkPtk++ZwSsOmEyngNx7L/XckyaQq4CeP3wbdn\nV8SeO3mAYKIQEKpvQS7UWhr33Kx1uEdnw+5h/993XzASEydNCcYkqfsF3CrC\nWpsy5Q3Zt0kjbiWRlc32+krPCgWKrkHOslUBtSWr+0p9hL/Bo9u28w5d2W6F\nL+X3fhz2VcXZ5dY3BxcSrad6U6hKnYoiKBiMZUL9G8gaDZ4G3klarz6QlnQE\nmgE/\r\n=AYp5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCe5zj7EifaMtG/1JaefIT5GRG+h6Dx+U973/YuYppUxwIgdcoTkGzppngSGgIKkG6UPVyWIVQ4VmzriGaIig2ov30="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.0.10_1594728333682_0.1969847788749408"
      },
      "_hasShrinkwrap": false
    },
    "1.1.0": {
      "name": "@serverless/platform-client",
      "version": "1.1.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.0",
      "_nodeVersion": "10.17.0",
      "_npmVersion": "6.13.4",
      "dist": {
        "integrity": "sha512-WTnz9CoIjv1ULHE5vkoeOsRDUJAAogmjqkUJ3ZkO2vofslFwEW5+VeU5RET7ZCxnLPKlfvycXSBxfE3DxoCmlw==",
        "shasum": "f24d91e875088c7fcb9eb132657a7d1ec944c60a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.0.tgz",
        "fileCount": 11,
        "unpackedSize": 365295,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfH0bUCRA9TVsSAnZWagAAttsP/AzYw7P+Ehe/DG28h58b\nhpWLVGhRr0IO0dWjPybEt+T13ZL4T/IuYoUmfJVufcdf/yAlQIT803Hh1SVM\nE/XEnVwo9DBEv5loT+0BQB62HgL8GX5OgwAzPYRw41GmbzS1QpPWRMDXUh4N\nFAkZ/HJTs0wbyV1t35GuefGoS17fH01B7RtFpoqUMpPEWneF8ASMgvkSFdBT\nPT3EF+wpCtsR4IjhDCyeBUPgWnpH3tEp/412HNlVw/fFfWBnnrq0I+XsbDDg\nOgM9SGZp3FgGCAgJ2hsRgy3AlYhA7afjvyVgAsYk1ow+lg9UASiHbmJH3nlA\n7qlasafTP2e5nPMLqwQgjU9gZpjNu1lyVDYsvmXsx+SkVojDPbxRagJguatX\nZLlOLB0NyVisgb1LgFTDX27gE0BwDhNVShmEspKQvzMil+W3kZNyfHQnpFpj\nvxtx4Gs0/K/2Q9P2vbijoagLwNigsqO8T4Z6WH3Ta7j0xsLMlwVEw1a1Xvtt\ne9bzSII25R+619JprG6zSYCRAowhTvYULPpLyZwZjGp3auSDxQ41s8SfMnF5\nV9tIrntMcVAlHNKMJBF/Drtr7QRfMVTw0kSS13Ueoe8tqtBY1aINgRWqJ6R7\nK4429tBmfA1/D+0zlpT0y1/+y/qVv7QVKtgZc51NwZMV9Knif2jCjH8ceNGF\nTffA\r\n=mIsw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDvRpjOHziTt4/xKbyItIiHWz2s+rCiagiQkgOYBy0lSwIhAKC9p6Cpj6o/+4Rpd1O+NmQKM11gFBL3RxDfPi+ubJCW"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "ac360",
        "email": "austencollins@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.0_1595885259989_0.2758648221243829"
      },
      "_hasShrinkwrap": false
    },
    "1.1.1": {
      "name": "@serverless/platform-client",
      "version": "1.1.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.1",
      "_nodeVersion": "14.6.0",
      "_npmVersion": "6.14.6",
      "dist": {
        "integrity": "sha512-vvS8Mn/nKaAIcP4r5wagsU7YoDQ6u5V3DuSOYx6e7fJiZ9vUKPpUbdUovUDxIoANC+Jo4SzuRxfL6MrK8qfZDw==",
        "shasum": "6228667c707b47e8584a04fbd1f573e39c25fa67",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.1.tgz",
        "fileCount": 11,
        "unpackedSize": 365800,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfINMLCRA9TVsSAnZWagAA1yIP/i1Ng8uw54dxVwePpIfW\n5oDo7Kw9CB9g0BHdKISn1j9iHkPlupiu0DnhMyXRcOkZRS81aIpPVtJkaQV0\nhFnna0MOI7x07LjjaZCzqKR051aYO7fmrL8ECCrQlO43bdzoVjBdtpba4B54\ndr9aQgE196L9SNeahYM+bZ0/nuMXOzpRMsZEopLADnyNzT1Gkj4RL+JkVNU/\nUOwlt+lnRA7nBOdK+l9af3egZXZWojyrvN/VhQ5ETLKEJtv10P3nMlzAhHd8\n4FZwedjW3YVBtoUp/fY3mJdTgtDs+s0DHHlSIXuUWXxuEpveSK+FwmwGr2Vx\nPrtjWLqyrQUGpyCKGcFxfZWS2tAOOYBHLJax1LlyTmlolja5Pp9XZVpCJ1DD\nz+IXqaMgs71Ke485WWnVMkyjVr6Nb+9q6aYUDvbmFtgeaPfw3vfax8tGT9bD\nlcoE5z7I42VJpjqRur1Iw1H6exJo5TXGOnkNUoCsSBRcfQDKeY15q1xeCxKb\n+ZmlyeZFDFI25EF4aoN30pqjBaPJe3P2+opzE/+DMkV1i0DUiK5h27BLVmCZ\nYODHBHtDv9jhV+gIf0P1FwlVEequq4j4CnDuB0Tq143f8ygRjy34OvuiYket\n+ERrNrXGAzRqKI8v2qRPR4nWK+0Av8HNI6I8riLLvTBiJMdk6foHXIU+ayZR\nj0WB\r\n=W2KN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHLZtOwb3dGBflnf2CAIbx/D9OL9YmRnNHMnAQJ83b0rAiA/PJ1ehcD+Q4NVja0LuHiVy//wrJPzm/Z8PxVM/ZI1xQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.1_1595986698466_0.8257206255244385"
      },
      "_hasShrinkwrap": false
    },
    "1.1.2": {
      "name": "@serverless/platform-client",
      "version": "1.1.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.2",
      "_nodeVersion": "14.7.0",
      "_npmVersion": "6.14.7",
      "dist": {
        "integrity": "sha512-dOJavbrT8EE9kR+Q0zIEw+Lg8YqrGQ76HxPul6SuHpPb6Q+OHV+qTPl7jdEo4RwFadkbsZrley0rqNZyN7wq8g==",
        "shasum": "e54e2389891cf378b8819b49a24e4446c3ca88da",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.2.tgz",
        "fileCount": 11,
        "unpackedSize": 365460,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNVEACRA9TVsSAnZWagAADe0P/ilsqUevM5HFsezirdHY\ntJMRa0wucMIyrEYN8Iy56jKwrpaUiyN7TfqYHp1P2EvUJL9cKymzfyH4ja0G\nVbdo4nxsbxMR00+IIp6ohV2yl7+smNnh7SBGCl+2NJ4bk/auAxgjuT83pNtD\neBBrZBfhrAIIWkN11dwgJeq26QFmdMwxQU4JpIAIClsI5fJyt+eDrQOlaLGQ\nt3uTaY548Ym3iFlP+yffL+dAGDmyKtLBXY9nQe4XLhLa5AXcfU0JTMCZtjUy\nnN9EScnH3aPDbYBYBRNxZJq1iLh0zzLKwNLrGT9CPjGVLwxL6AhiwgER1snU\nqzhA+n0YeXHRjU8+BjtMjIvKXEWUMoKfgwEEZxa91XPYgPDwNr4cffTvSADA\nC6tTzfpYV1i2F8rnFeS7ehInChbUnqjRF1IInibsGFL7TrBCMZ94fT4LlWFp\nYwYh5Gjg7qR9Gw1PGt5NBNsog6GOWlQDWicvvB5zzWXutZ4ZdVGaWN//AwGT\nwdbSQOnQnBMk6659ipkfXcqYE9y3yJnwuBPHmzWZMObp1az12h7GxYE3MA+E\nPbf7OCunUV6h+oNuZV9FitrwnmHR+3QFfXuOpLrDO3tH7wD/vSyiMRaZk1QZ\nV8ISJgh3H8eS8IloeZVrf/ZheQY6lYEv0S5CkIDIlZvM5DB6JwetKA7LlCk/\ny1i4\r\n=d69u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCkCKwpuKdo2fb3G/g5eTKV6dS0Db0xHDKGddO3b0kfIwIgN63ORU4bwta3+Og6XDKBRRZ0h65WDc/mCHrfae0s5fw="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.2_1597329663529_0.07206003750633849"
      },
      "_hasShrinkwrap": false
    },
    "1.1.3": {
      "name": "@serverless/platform-client",
      "version": "1.1.3",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.3",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-kqJQGsKCYdEJb8l4iWYrbdqmZbs18Xzk60tleBiodI9wNuWdEBOZdTuK6pvIqwpSSzvZqKW2lEdHGfhwmsu0ew==",
        "shasum": "0856d305b2147eb5d0ad188a0815cf82c527f443",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.3.tgz",
        "fileCount": 11,
        "unpackedSize": 366761,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfOsN4CRA9TVsSAnZWagAASIcP/1Hlk+FrdT+Stk/VPgBv\nhE7B0upjzw5StTwcm9mYJ54T09A+org9Bt7z8ziwn88azh8ghrtCy3IHdmEw\nzwOVIb+/dcRO19QrB9umWWfZisK0mQlHFOj+W+//kUKeBJqMiqJJW6ftYVT5\nYF2pUGmOCMATTYhBHxhOxKxOJqJrymlxb+AclRSEzWFsRLbuP0FqVZ3IJ2NZ\neu+3agXR3XPKuKorJ2XkvUbdYkXPUSDNLdvHa3hBh0RfbLh8BEuwEG3GKiSN\nedXuEbpRUPffyJQ7OxI74rILunuEwhobAr8kmir+owCCbcL2vmbOEQfiM4Yj\ny12cZbrgzamYdgK/JOEouvLGc7fVqL1Zky3o/P67IRWIHZgLbhBXLNkXjNg1\neHIkU0sA2OR8Dx8o63YQW1HGogaHvf1h36bQctAxpme3zl0Lw2S1mfzHntuF\nJYuTWyZbVyURkffBd3D5b3jrCaFqDd+hVlSCeTUYjVEuDEl5m5+UwjLc90ki\nMPmV1mTMSZRcFpHqL+ie9XZL1LAYuJYySO8CeL9ONty17FEGoW9AwaOTtk7N\n2OW9SGA3VKtmRw9r0ZbiT07FnMhWCmVwRhXjLco0sFtHR32zFUml+njRi031\ny4Gu9XfdepnZgj/8jCc1AywS7V4ctU73CAivnSDKVbvWor4fIzQcGvJVazl4\ncwxR\r\n=hggH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIESf8LOW3PYR8+bHoWA9l0pOWT8d49hJpDm4ozJS8Nc1AiBCBXMuM3SYyPruvpk9HlHhwbi9TPXUcxIbAlq0O8V3TA=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.3_1597686648221_0.6172075583880738"
      },
      "_hasShrinkwrap": false
    },
    "1.1.4-beta.0": {
      "name": "@serverless/platform-client",
      "version": "1.1.4-beta.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync()](#ServerlessSDK+publishSync) ⇒ <code>null</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>object</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>object</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                       |\n| ------------ | ------------------- | ----------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | <code>null</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>object</code>\n\nRetrieve a Serverless Platform Event synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n  \"object\": \"event\",\n  \"event\": \"package.published\",\n  \"created\": 1593710260258,\n  \"data\": {\n    \"object\": \"package.metadata\",\n    \"name\": \"test-component\",\n    \"type\": \"component\",\n    \"version\": \"0.0.106\"\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>object</code>\n\nList all events synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"object\": \"event\",\n      \"event\": \"package.published\",\n      \"created\": 1593710260258,\n      \"data\": {\n        \"object\": \"package.metadata\",\n        \"name\": \"test-component\",\n        \"type\": \"component\",\n        \"version\": \"0.0.106\"\n      }\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.4-beta.0",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-9vp7Q5ejw3r/ymK6h1ad8pKPK5NktR8hcxLBDClWczO1aUUXl2un0rsfu7fWWve8LKhGMktQ5WJcpw7ysSxSmA==",
        "shasum": "10741a35008697021fdac5ee43873bdb99202700",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.4-beta.0.tgz",
        "fileCount": 11,
        "unpackedSize": 370035,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfPkzFCRA9TVsSAnZWagAAcvwP/0zzzZ8TkQXl23Yd8AeR\ncFEARNIO/NALn8ZgwvEgrG3nuhvm9MoZHdS2Jr9fdjmViQTJCFbZ1ZdNngjq\nHttPwcdAFF1ZrzHPNR8/JIXkpLsxpxMgzGthyGyBhW3qQRvSuvziL7akH8Uu\nbx/nIzsfO32DgQwhTl71jBQfhsyJQCYmWcYWQ6dmahL3kgeAnCVP/vaQh2qI\n7jAK9I+KdXbwjywhpLG50iCL/mfWrgtKtjSykUFojECd8ve+9qdZh98xfATT\nF7nv0CkYkZa5dLbZK0H2e5sDIDnLgn3spkSh3aOhrPlhjvCrW7z4WCvK3aht\nrKzPYBEtK5xxsHFRgDLuGSeWsSpo5Y7U64xu7QNaoe3JpvbouZvXH0La2zBl\n8xTlnYdp1et/rgGZAd9+NJZAl7Xs2P3oq8b3br0DosY25LngtPVTL9bbif2D\nebtQa2HncXOboxtglNknxPQYwclJiDX5FQLdHYQF+7LocOK04O/FmtCcJ/Ds\nEzSEpHe45a0rWFOZi5yK3cA96edV9ax0BV4kxEspzyXo/7RYz9fUVaQ/5tZQ\nu2uY6QuPa47R1OHl+9UKW0i7w8UfnTcuwAve4BLNb78avxazSnOfp5oyJyCq\nH5J8cb7Gw4LC2pHYDB8OQAf5G5kQq0YdKIz1EMHj0N4JLS0HIPX7c7Zwqiw6\nPdJ8\r\n=o+7Z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGY13jb0EUf8WWOYSL8/ajTQiQq0f3kfxQxeKsjm3JKHAiEAk1AYT/PLKHcpb8hO8PmSpDolVRRcFpg2PV+Xg6pQRmA="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.4-beta.0_1597918404513_0.6206666917834165"
      },
      "_hasShrinkwrap": false
    },
    "1.1.4-beta.1": {
      "name": "@serverless/platform-client",
      "version": "1.1.4-beta.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync()](#ServerlessSDK+publishSync) ⇒ <code>null</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>object</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>object</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                       |\n| ------------ | ------------------- | ----------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | <code>null</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>object</code>\n\nRetrieve a Serverless Platform Event synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n  \"object\": \"event\",\n  \"event\": \"package.published\",\n  \"created\": 1593710260258,\n  \"data\": {\n    \"object\": \"package.metadata\",\n    \"name\": \"test-component\",\n    \"type\": \"component\",\n    \"version\": \"0.0.106\"\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>object</code>\n\nList all events synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"object\": \"event\",\n      \"event\": \"package.published\",\n      \"created\": 1593710260258,\n      \"data\": {\n        \"object\": \"package.metadata\",\n        \"name\": \"test-component\",\n        \"type\": \"component\",\n        \"version\": \"0.0.106\"\n      }\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.4-beta.1",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-+rM73fY4V8y25fJF9XTpczzwcz2LtIVdq1eWmG1d1hUBDocY8iPWan0tJHWiYj6G9oo+YIuV5Ndhr1BDAIGnPg==",
        "shasum": "cc9bc69d84ccbdaca5d89a2b71fe6f024ab10376",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.4-beta.1.tgz",
        "fileCount": 11,
        "unpackedSize": 370324,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfPmYFCRA9TVsSAnZWagAAezoQAJukfDTbrS0b1kmM2EgV\nrP3yB2fGaZNBt6zfW8m6m5l9Ya1tW8bDaA7hraBHDrLA6oEevoAlU46rbGny\nYFo6RTWQ3d4YBXAQ3OGmJqyyjr4irUx14YK8Vwaf0gz0C9S25lFxtDI26uHy\nLuuMnNqDBPdF/lsbct/pGb1cEeE1jAfi4MqwUw4sdK4yqRsRpeScaOKBXzzJ\nuFCeidyzPyJC2ic8uiDEe2dfjBVJZIp0LpXIWwRd+Rnzuz+ykeB91lKT7S3w\nFQMU7aUJaYy5i3vKvIZPE7f+P5EOUN91iUBquAUwLLzJxW++wUtBaNdahLVN\n2GaHNm1EyA2TyH3MYK2/uriSkFkkF+SNhQrD0F1vTRmGGoVnpmRLe8nGFCkx\nj8+Aw+0pPEdTde6y2RZcy3UZ0/sE1VXAJM7wXBA9XFgzD18qwcBPpybLY9xa\nWgWh5EOQbYXuSwgrvXap7wtbzRJ9U7zQWC5tRc70NWx55BkL6ny00TiIQCmC\nLrjLdJBu63MonwgoumQORTI6cu53y2tRfEO8o2i0h10n+kNAoszIKn+d8nZU\niXw57x6niGqmXPlLbtw0xgdiih+1ngWoXQ7dzKtYqskAYoNEi7wcY1zkA7Aw\niYcj5YZFmBcUqJGY4l0WnlL8IdX8WQVdpbq4sdsqTe4X+5Tv7KL3xxvi2w36\nFLu1\r\n=WrkA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDPFIqG0W4N9j9AIb6mzb2gDIrjgceSkuTSb6ZMqhTOvwIgS2pbnSyOov4nKaP38gKqHMuApcuhP+hMX/gu39DbBPc="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.4-beta.1_1597924868803_0.2725677120421368"
      },
      "_hasShrinkwrap": false
    },
    "1.1.4": {
      "name": "@serverless/platform-client",
      "version": "1.1.4",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.4",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "6.14.7",
      "dist": {
        "integrity": "sha512-qXawFxXvm/WdIrpfQbH5YWxR+H/uJzXuKgB7ptXzPTX/OsEq9U8oX0ey4y758pN3eOAOo/Iecj+dlyeHVa5qEw==",
        "shasum": "dba3c049810e56622ac74dd382bb34c138594afa",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.4.tgz",
        "fileCount": 11,
        "unpackedSize": 377190,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfRGxhCRA9TVsSAnZWagAA99MP/A6tnPQ/C+O/R8EoHZRN\n8jeeGe0nEuiR2SahnpAOA0D5eZRWONMo5qWe4lJXH9Vjq1cmv5k/NkdknCXV\nF1eRuUaNa58Y5VVdTNX19aGAtkSsw1nP6nwHQ/aMFaqMkrg6GFbq98ekuN0e\nBZ5E/lWnM8T3aX2/Y40jr+aJ8gj+PpqZsVFV19vInFctJuYNOkRu6eDzLDo9\nGwnVGJ25rF/fG5hHroQZLJk6P+qpfdEWPCQlp6yknCuqZw02ud8ScYEkYMgU\nBCc5ng3lolJlFh8Kr8Xp2M98iYB3bH+pwyf70cV2PT03kdBf1b9Bk7OPRlSS\n9Sm0KJdT4fPl+WVGvK9fOIn9ktkSY35aBg3nJB95tSZp2qbKXbWPKc4ejoC0\nTamVPRgeqMgSrFI0DSHyhYOENWoEFhEqajN8IsY047c+zKuoYYZXJmLO+Jhb\nn+9oanLdsfEQ/gCdAaj4OvOMDYHGYu5H/F2Daq1pJgAMsvgSkG3VSTCkDp1D\nrBENNfFXxv/b2J+MIom59stCwU6mwmCtxJfgO5OdflbuVuf5msBZHogG8TWf\nZva3Ux7xH7FvEoxaCv9ZMAOxvKc4SqIFJpkcYMCVni7MmWc5iDx4neMdQT+Y\nKBSotBPOFfTnY3pJamrbfTPdjv7BJk3F4i8drmc5/1QzAg02Si7+h7XW7+KY\n6es1\r\n=ceqh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC3WNOdUt5iGQ1YuUYjAM/whb7Nm4O7EM6CCi5bZjyGPwIhAIp1e9OHs+MkKmJ3iUVeRfRYDC0B+L5zjbg1AtrwpPKx"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.4_1598319713120_0.3347340650107289"
      },
      "_hasShrinkwrap": false
    },
    "1.1.5": {
      "name": "@serverless/platform-client",
      "version": "1.1.5",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.5",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "6.14.7",
      "dist": {
        "integrity": "sha512-3yE00YX+c3ugFwcNRnZUjxhWQLAj73Y8WZtb+3dFBuNC7s0W1TcA6aEJ6E4CGXBeKfyRhj6WWT7EizJXUkt0mg==",
        "shasum": "74b09236c32788a2a5d30f0a3cd54f46e0c56484",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.5.tgz",
        "fileCount": 11,
        "unpackedSize": 377320,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfRSpWCRA9TVsSAnZWagAALFcP+wagYPdj+Tl824snUkj4\nbHQ7Bi6hJvcRcGa5LMR37El9QiyJGKy8hixM0WE3g1rH5Ua2JXQsRDJcQhHV\nyS9zlUHeTeROqYAsFBnQuqwoYV9ltK/dae0yztoEF7LuL1/3Ppfv8kETidOM\n1LKHw9KxGTQPOUtQu9SUq3xl/VRqmSfNIKoHtEoWzkVz8sCB5x9ASn778qUq\n1s/I8jqHkogv960jS/To0/EklO4QR9y6lLrB/56utzqRs6xYDRx+e8XGChBr\nt4Z4eMshWAKmC84Vz/2tbqvqPsfxs/bZAlFEeWN3oogwamYFt50Z/myaBQtF\nEmqepTwgIppXgmcKXjd+PsM6DosjR/4dR6N8Q4s1uuA/330XCUEn6JwbXf64\nRBNxMqKrZI/wYgN9hUhgf/kNce5qIZyI5+4S90yqgGv5WmD4n1EXEZqzw92n\nxZvksKaMSvu/xUhFUeS4dCCDmXHO7ketB5oeAoiX0k4fhJMiTETTFPou4/7C\nx4J0vX2oAid8c3aydTH2HgqCFA7q4/johPr/3XJzm3hlbQMEFL7p02oqdWhd\nc9ZzPNxDNtQdB4efVFNe4W6U3RE0FHDEhv8tdjhXYXml1BNT9Y5taRM57C3c\nMATVNZ3YxrDqIUMAKmValCSMpLhs/cHrl7vBO58kahydtR8jrrHPwfB1Lsqs\nkj+q\r\n=i9CM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF9ohfBP8YnGP0BR7sn0AE2EC/cFB/kojiIQTLklRIBAAiEA074stChcn4gOFlFbCBN9Pc1bffhwaSYTqHCqdNCShcs="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.5_1598368341565_0.7514181560714377"
      },
      "_hasShrinkwrap": false
    },
    "1.1.6": {
      "name": "@serverless/platform-client",
      "version": "1.1.6",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.6",
      "_nodeVersion": "12.1.0",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-YMbAgYIglygsH0tL9GjY2a2V8xAO3bct1L/O5SZqyolDXiCTnQETerlH5uCm9e7+zFuSGfmpswPM5MD3Q3t6xA==",
        "shasum": "2d5796cd0db00794138a5d0c42448f95057ba717",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.6.tgz",
        "fileCount": 11,
        "unpackedSize": 380546,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfRS7MCRA9TVsSAnZWagAALBIP/3/Cb4S6ltifI7n8Onon\nX0qhVCbCnzn4MzE1dI5shBksR0U8MPDV8CkAH+J7R16sH7iI8t/yjjD3vl4j\nH2WyOmmrmjxtzoLeV8gyYdkd5RonluID5gjRgO9zpi+ECCcEq5Mq6Clg1xwZ\nHsP+PQ7GmQL8UjMh9hBKNvgS0C56++1V4N0aLB88q5nAk8qZJo6ue+aceFhL\nnxk7D/iOi9wLK4DhBBi5tz962XjH8M6oDmebXEpLooyrad9btMDhRN6oi7rS\n/IkF9mlfhJ1XZa8HqhBNWUi7YuLkoul3x06eRb4UjIrh5NGjWfa2TJX0Y9bG\nzVgVsApE3SS7uMDLCSyWCQv7Xmk7hH2yKcEpIPa1ZBezuglJZi8dRdVXmjvo\naB4oydDnmP/MHqFeoD+qDNDxY37nT3b4w7Ns9ysSbw685J9GHVzebTMhausO\nH+/myd9WcLC3ZrNww0pPNXCuNrkJ9rf/nTfzoXR/I5CVSiV2Vnux1gARpjxp\nekaFmLXFqFGjpSgq69707TOlQYSCj8OsxBBR2Y0fC2uiM6TEfxC4BXGUfyb1\nErV8YS3t0s/bq2s5Mnf+fKAF+JKEGetR0dUIs1D/FG2smA7eK2/x5DrdHvof\nLABXN/rtAOm3SFTJ36pu2iMVS9/52Gg7Hg/i2Uyw4CCXsH3FjDbTKq38bfW8\nKKNF\r\n=ju+D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHkapuonluk6lsjFUuWt4ut2HCvo4Joc5K6nuJvjiLT+AiEA2sl+6AmrjzepqfPp9PFIYYSeqtsgdzWLa576j1Ir9Bg="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.6_1598369483505_0.8069657511970418"
      },
      "_hasShrinkwrap": false
    },
    "1.1.7": {
      "name": "@serverless/platform-client",
      "version": "1.1.7",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.7",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "6.14.7",
      "dist": {
        "integrity": "sha512-520U/OZN/IV1UnqVPGGMnoPM4TsflxffcyNSbs8Nr7G/9eGr1rcHw2vMAU5Z+4M7DoMDi7FogLNCrr51PLGxaQ==",
        "shasum": "def80b4efccb4f397947aa301823b784c23b90b6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.7.tgz",
        "fileCount": 11,
        "unpackedSize": 381025,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfRppECRA9TVsSAnZWagAAvpoP/iikf26Vjlto3faUdkyA\nErbxdmvQWOtshigr1rSBbtvVU4azmB/q9wdpUbZQg25ucFcxNc4kiWEApHCo\nMyzXdwBpTydN3yB+F4t+H1OVCjmj9xRgN+6CdAy4jTjvM6gqXcjlD9uDGhGR\nyw9a1hgPSrpboTYpoTwYiDn8EXK8NMwC85mJJdcAwASKbwRIZZktbsSFj/6f\nKVqcLcMXcBlIqFeDW3Na04tBAmH2jQZfiSJ/XbpUJI55x/xLrt3WnXiKRTQC\ntiDuv/KHtzaa8TZuIdkwp1yB5TlrKA0+QiuhGvugU/jbJXyxuVzGyft2lfoE\neezeb2BFS4bp8s/Y3EbAHy8T+zD3AILzvpuc2As6k7mvVnWwrVlndCpekj7R\nUXxiElThlc6odrjxFseualv9JN2lU0U6iAWezhDgyWFJUOyDjG/0o/1kbtZf\no/zCqM1kAgzG9UhGmyr22JFyf7cLs02qrASKiloVy77rwr0DmGiN8m+oojGq\nmffECHPr4tcfV2LG9/S/ualdfFyWp0Xp3Y9hWnSpOvjtx/boSp+wwyadUdtt\nLscNPqrDHRklGsznBgcJqw69q2UkBkuLdyBWs49a7KPx8UyJdSJygzx86n7C\n4KYb47XKLv2oaSTgBNlv5IHgp1z1Ycsg8boPdeBBe98x5wyVpmgm5XdKT28/\ncyNg\r\n=Xr8N\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCe7Ts3QiVvykZZpAzX3W1ct4xQ3XsvB+dW1/5A9MuywgIhALK8mW42KB3NmDhYwwkmYWu6v0+EJtVQAdac0PJqAYID"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.7_1598462531479_0.7721508950299327"
      },
      "_hasShrinkwrap": false
    },
    "1.1.8": {
      "name": "@serverless/platform-client",
      "version": "1.1.8",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.8",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "6.14.7",
      "dist": {
        "integrity": "sha512-DmU71Lh0ALOMumGD7k2HfO6WwaFpJCA4ech1S9Kd8AQvpKZrT8fyUl9Ymc/E6GJLRC4s3a5wzcsLbu5AiDNyHA==",
        "shasum": "11c9de6f000b9286b6f2ca158f8c9cf88476771a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.8.tgz",
        "fileCount": 11,
        "unpackedSize": 382538,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfSA5bCRA9TVsSAnZWagAAe5QQAIQkxMdwKqBrKibfgeH/\nxVws6mqjFbuaPjkcTvRoP2WkEVwXAyZSCE43HHF17u93h3D6umUJzaMuWagJ\nvf/jTakZCgtbKLb3ryGqEIVmAJtTzp8NWY+Irjpqa8EQInKwASNkd1kAIg+E\n0w1G32cIlixzQ4lboyXxndHzKKs+qXi+fPBYTv42dVrmMAV6DP+R0RecG9/f\nVQhxSJmoAF4Qx1Sj+rcFPJH8lGcQB6mcy7tGC86gmRYggYHN05FwOZa3wJI1\nywRzmj9SBOtDmfGawQrMJjPgSNU9pqq/jtdcILvxM49j2MvQ3Ac88TZKJRFP\n4sJBlFpPvTg5nzl6O2+twDmPkj6oQj5ZCfkevQhGKTSM54n6ASOVhAXSibZc\njJ0IZNfBJVmWdSFQQ+tpeG6Qzyte2hYSM0ioRNyRSMVT93CWcHdDhcGrjKhg\nwXmsjFgDajr4nmphAXzD5RUscE9kV9kTzuzPhc+VZgS8XoSum7mVhX/Zu3O1\nQGH9vt5oT7O9yXSSaeFTyQUcT8B8iJV7GtKwT7SSPM0pPbQGn2zVIUm4lFYc\nWqc/zC8c7mF/ZLnTGO682WUgSew0GhrwqIyrcYmDVbmddyL/62fsYktxUvds\nHlklBkuuar4+5cpCydFI9lUSCGkSeJmRJk6wCj4psyAgsOvis41f0ZNadXId\nMgE4\r\n=at6u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEPMzNorObC1N7u//n/X0UjewCOOk55FmoYoaDkXJyyYAiEA2Ja/987P3gJUgxT2VULZA8lGv8pAjMGdXLv16pkmWsM="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.8_1598557786265_0.593935904883111"
      },
      "_hasShrinkwrap": false
    },
    "1.1.9-beta": {
      "name": "@serverless/platform-client",
      "version": "1.1.9-beta",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProviderByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProviderByOrgServiceInstance)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync()](#ServerlessSDK+publishSync) ⇒ <code>null</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>object</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>object</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param    | Type            |\n| -------- | --------------- |\n| orgUid   | <code>\\*</code> |\n| linkType | <code>\\*</code> |\n| linkUid  | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviderByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProviderByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync() ⇒ <code>null</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>object</code>\n\nRetrieve a Serverless Platform Event synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n  \"object\": \"event\",\n  \"event\": \"package.published\",\n  \"created\": 1593710260258,\n  \"data\": {\n    \"object\": \"package.metadata\",\n    \"name\": \"test-component\",\n    \"type\": \"component\",\n    \"version\": \"0.0.106\"\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>object</code>\n\nList all events synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"object\": \"event\",\n      \"event\": \"package.published\",\n      \"created\": 1593710260258,\n      \"data\": {\n        \"object\": \"package.metadata\",\n        \"name\": \"test-component\",\n        \"type\": \"component\",\n        \"version\": \"0.0.106\"\n      }\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.9-beta",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-tJPDK0+bldPc6u1Cv5v+Zy1uPPazQHUx7+6Mbg22WurqRQlRDU2SSmL5QMpjPPoempoOnoOAk7b/yigRVFvoQA==",
        "shasum": "9ec13dec8d7aa4ef60a02202ace6b26668ae2ee1",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.9-beta.tgz",
        "fileCount": 12,
        "unpackedSize": 390534,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfTriTCRA9TVsSAnZWagAAy28P/ji7y8JP3g46ofhbreAW\nA2jJIXWyp/uNAKYk4z2gx87CoU/R6hDHenc17cxTMVmreWcpluR1lBfkp8F7\nVQRFBO8OXO2KenMsunksaYH/qigy64ICnJ2YoBr6p8X+cHdPylkQ3s5D7EN5\nVhxCWlp78B7Pjz6iO8DAZH0YjeA+x/HrZfMb5MEMrS1KARo4rYDP3oyNhlV/\n6os86ebZDr7WiAni2xktxQHE0Sjr8/Yb2llKbY9HXmr+O2Suwdh60Ls0N5Rq\nCRFC6tohhV2gErlqBOwfc5WqYfpBnZRBOVw55wamD/zwJkl10c32ArvjI7M9\nMKixbD6vB00bA+jsq7j8JGFRARCt4EDrcvQcYu2ORnIj08RjhDtkT5jOsc45\nBI+qQTPHnRzNRlAfPrBP4j30VbtivsirKpTRimvxl07S21o7t7R+Ai5sSXBj\nVZ/+FeZpFJMh+q9b+MGx0MpOYOFdFN+xer47JxhkriG4MY3xzW5eg0ks43Wi\nrrdPmIKF7+YwEB0ZIIxlixZO4KzBsCM+BWLq2bm5Hcf1wlLG/V5Np7nW8g0K\nLzH36rN/Vdt8r4w8N8zIbwhF0iLpgEzWuA3kHYjclDm4PTYppGn/lFK2RJsj\naTBNEWmPAXpBL5S4NoLK+iOlHUpEd/4co+fYU437HeCkDStp0MLDSVvP8MJl\nkSsc\r\n=KtYR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD8p7OLLgbQ/PMwnJlZECV/PitiyCvafoMkv6oWg32jkAIhAOTBChQ4bPhviW/NcxGFinzo7nqebKEp9InqRMTH2ByV"
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.9-beta_1598994576000_0.6373882658863743"
      },
      "_hasShrinkwrap": false
    },
    "1.1.9-beta.0": {
      "name": "@serverless/platform-client",
      "version": "1.1.9-beta.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProviderByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProviderByOrgServiceInstance)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync()](#ServerlessSDK+publishSync) ⇒ <code>null</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>object</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>object</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param    | Type            |\n| -------- | --------------- |\n| orgUid   | <code>\\*</code> |\n| linkType | <code>\\*</code> |\n| linkUid  | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviderByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProviderByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync() ⇒ <code>null</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>object</code>\n\nRetrieve a Serverless Platform Event synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n  \"object\": \"event\",\n  \"event\": \"package.published\",\n  \"created\": 1593710260258,\n  \"data\": {\n    \"object\": \"package.metadata\",\n    \"name\": \"test-component\",\n    \"type\": \"component\",\n    \"version\": \"0.0.106\"\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>object</code>\n\nList all events synchronously via HTTP API.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"object\": \"event\",\n      \"event\": \"package.published\",\n      \"created\": 1593710260258,\n      \"data\": {\n        \"object\": \"package.metadata\",\n        \"name\": \"test-component\",\n        \"type\": \"component\",\n        \"version\": \"0.0.106\"\n      }\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.9-beta.0",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-Lu8a4QozFMnVawssXVwNhh8TIfVMy4Yek2MllDeIPydPO6axjzmKLQ0sRdztKWFv8oCWRcV+XoMaD+uhW3bOkQ==",
        "shasum": "07bec2d526e522c41ad7ba7403156b7860217cfb",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.9-beta.0.tgz",
        "fileCount": 12,
        "unpackedSize": 390536,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfTrikCRA9TVsSAnZWagAA7FwQAJJyzu81R9ffs93KYHXD\nxK5xhV5phiG5wGWRpZ9O2UECeV5ykDH91tg5TJPA1QAURIe7HabDV2S4KAGw\nhO62eEMheyfDziltzz3UAJuEdkHHPdzYqXzGzmO8GsanGu3vHJO+7t2ZvQon\ngbULqFmff38qpJnhpbHHHJq9quL2H9cQYEjwYgBlE6fX4tpAQkjzpxyb3Fds\nxUSCuaFVzc+IbNn73dQY10QMEVvDx9DvhvQ6kjs7ZBdthHCn5vt0im1iS908\nSTEiJA+MUMwVIqvC1yF8fxBggcvK1uzDKOBRCoUjeGu462hg/w/MuyyjPkir\nbyPgaPD1pNUgvJqpIMEYYaSSBeh3r2W3jAVhjyuGKrsYZB4Y14SVNUf1qpvn\ngqeBopWbZbYzuyvoy0BT5JHuMBYoVGjOdgT1ZOZ8MAqi4/LwRku2qtunQffl\nkyYwoCgs2qJx3o3v/4UCKrZ/bAB5oD/zuHR9xJMkFq0ztAeENcUaf4PGKpDP\ndoNvQS0EDPvjdFMgGjjppvg79NpWfLCCgoPXmAvcN824tAJXC2op6p/QdtBf\nXBT7eymS9L2Vr6WhLKfJDRxXGuYvW5+S5IAL57t6hYi0Z6q87668H0lpWe1L\njOeS/wejePpRRTNyI/4BoElk4MvnOHmT2UmSA2+FjVCfEqhlErsi6BlRO6g/\n9qL6\r\n=lXVx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAfcyZlYvOfAplHrq3KtQ5id9YhKyW9MbGMHdaP/KAcpAiBllkuKuQ+dtVJRbi0fdytF1KrVAnD9bSUcEohDfhsOTQ=="
          }
        ]
      },
      "maintainers": [
        {
          "email": "austencollins@gmail.com",
          "name": "ac360"
        },
        {
          "email": "astuyve@gmail.com",
          "name": "aj.stuyvenberg"
        },
        {
          "email": "eahefnawy@gmail.com",
          "name": "eahefnawy"
        },
        {
          "email": "hkbarton@gmail.com",
          "name": "hkbarton"
        },
        {
          "email": "medikoo+npm@medikoo.com",
          "name": "medikoo"
        },
        {
          "email": "scouredimage@gmail.com",
          "name": "scouredimage"
        },
        {
          "email": "services@serverless.com",
          "name": "serverless-main"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.9-beta.0_1598994592974_0.06137683081778267"
      },
      "_hasShrinkwrap": false
    },
    "1.1.9": {
      "name": "@serverless/platform-client",
      "version": "1.1.9",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.9",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-N8ctsDCYK0VlpC/ltUrK/Jg/exZk+Z2ppB9LV/LQhpmUT2X2NzDL2NvJQn0O+PML8ATJqfdbH6NNQqF9BKFanw==",
        "shasum": "e76946084643da6b47a78806fcbecd9a5e446ab5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.9.tgz",
        "fileCount": 11,
        "unpackedSize": 382663,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfV8poCRA9TVsSAnZWagAAUHEP/0I6JWyhbdgkqhTGmnyA\nvBiQXxVjpqzwBDaSub/NzOBM8JpJ8ov2Yr1EIKR1Vbj0+0HeDwgZG7GJ0bQd\nl33e9lEDIGgwgnbbm+T+74S23VjtzpZD9BwHDZq7wNT+SQYGU0ClK2dPp4Vg\nt8CYvKEP5IsNxtYzVAO35yr2j/AS/BioNKW6Wn5bSWs9mbSGAGGeSzPd06ac\nl7WN677GuylstvZ7X0GuLcyG1c8TxtGQwmy23J4M68mXd26043aCowIBwcVP\nW9D9wavvv/bqaaeoUYqe8pg4yUQwnFF4vLRIwOiqt0u/VIz1yeUBPGFqGst8\n70alyCIPLSC6K+tLfxID+TMPXR1tN9JsyfUY2paj43Z6EWa6+gomsJshCB3v\nS3aNBySsAmCIzYsJmNy1lhEdANk/yA5If+htJNpNHLXM76Hbo5m1DJduKjWf\nousabEiNjU7lNnD6St3/gUSivADmFUW3h68S4UbUgvg01OBlvPgAzmzzEbV0\n8G2oKoo09woSzJ94Fg0CezvgRkk+rXor46u9Mldyc0BM2crWcgmXrKoRY4dK\nms6y7Mjkote2EM6H7E1HoRwPYlR37HEr9viMcgerIr2sYS+C9oLZOgdqGoF+\n9yx/4ZT9fEbey5LsDO/QD9+Dy0FAs+LLnq97ZNVpI+/mx8805GEDi4uDVmDU\nixaM\r\n=J/OQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF7tj5NIaqF4DtH9PDTt4Idorc9b2RNbLpWPJume6tFCAiEAnVINUux64dqHuCk1m8DJNKrboroQSG7jrXtPAPrzHfo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.9_1599588967638_0.35105877714018674"
      },
      "_hasShrinkwrap": false
    },
    "1.1.10": {
      "name": "@serverless/platform-client",
      "version": "1.1.10",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@1.1.10",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-vMCYRdDaqQjPDlny3+mVNy0lr1P6RJ7hVkR2w9Bk783ZB894hobtMrTm8V8OQPwOvlAypmLnQsLPXwRNM+AMsw==",
        "shasum": "5af3b71317d6b3f160b1d1a55c98508ec384d444",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-1.1.10.tgz",
        "fileCount": 12,
        "unpackedSize": 404596,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfV+qJCRA9TVsSAnZWagAArXcP/iRijKPUvrOLpglOthfD\nFammDnfr6hVyH+BnF/ExtmRCnvBKlpVrffRHDM7J9jJCqIUzdf2B9UWLsn2R\nFfWGlyzp6dRuru0ZhtgAyPE3jwohSRmVpvrVsq+RcSnszCiGlWB6wAy/Gtpn\ncoHFd6OisgUTXFJvC0i/Y9TpAyMdoKcrd/fia6FiFTibmE6G/9G5Yu+8pdsq\nXlROF3FqMEW/PzlFQ+4H//1z7sf678Rbv4+r2xxupwz/UFhBMNFwLyN41ij8\nyFbuzAU9WX/VXQ8OCa17vB7HbKRbjdi5S0sFTQJwgdISAcaxdwA5Rnej0jQ2\n4UHmh2zcUkdhN5vfVBkvu70F+U1RIAFne1mmqRlmIUeE21/xAhj85AsKU0QQ\n6UIc6/7g2hpKPNEvSY3F+HSqiPqOIP5Ov/ghYxSz71Ycz8veB3OD2eyiULlJ\n6uocQk3rJhXmgNrvOoiSi6jSdbT5tnGsZiSPfiJr1boNBYzJxfyE9tqI3Jlv\nynrqrxMXpWi9269JbYIC71q4PRi4zTa9gUERl7sYR/L892aINQ0t36YS8RXP\n8YrCFo60zlr/SCNAHF1GoJxGfOIZhZxs2Eva2pnYhvrkawDjbSY06vmy9qiF\nsoWz01PriYiA3uhI74gvDm+45Dy0dW2hHR75hRVzJH2T/t8RHgR1boQ4y0Cy\n/4tp\r\n=xo6g\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFLprPrWrgezdrYX5Fy2wpQQ8ugoHrwNkcZFcmkaCEwQAiA4VFRvKLH3VP0ftf6Se3/F/iC1mKFbFMrAQ9d1N/ZOrw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_1.1.10_1599597192471_0.03193186246708701"
      },
      "_hasShrinkwrap": false
    },
    "2.0.0": {
      "name": "@serverless/platform-client",
      "version": "2.0.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.0",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-q1c+z8vPePJj/BjqXZYJXGksl66/QLKVqUjOc4Y/Qcdi/TEdB3dOh4aSycDVaBvApukWiZGGciVgy/uTmAEfIQ==",
        "shasum": "0a2bc610142eba2394ec82919ac1d1084caaa2c8",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.0.tgz",
        "fileCount": 12,
        "unpackedSize": 405266,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfWjMYCRA9TVsSAnZWagAAQJcP/jNj7DS3OE+dQS2F4I9f\nkc/ZXwQeVoV8XkxpJzaQPWoSyVrI3ayUn1GZQvnigbjJM4UfleNnHjlO6Y4+\n5aIKYeelMAPNuyiZxVukHY9UGTzYW3wVO88cbYL4wMAYXH8+FOWs3bi85M/W\n7dqpFRWfKfzi6Sr0vhnKhqU+JSQftDMetAsWLVJa3GD14Qx3bYjHOldvbxDd\n3c7W+KJKcma2vqT/BE+vWVdGferAPXY6cnzQNgLUwCMNToE5TfMUKGyDYZkM\n5vuH5WRCchgJBrz7MNpn4UtoiKH6saarpjY/1VGHwwGa9nz3onNBmUiovbYa\njeOMwcwAYePvnP3W58WwQUS63+qa+qPeMXr24ZKJQSQFQEMnZnjcKbnF0lTm\n2yRWhonGJTFdTPgNyEVsGmiIJ+kCRSuVA+kqybjXDpgkiBnwY/owPWKMqeX5\nXGjC0j/mocR882vx1g/UvVMEHT9XikluBGRuMoaC6k3yaOJfEDucu7ohTAlA\nXYRV6vwYgEKCb17TB4KuN0yzW2eizN63UjnkDbVm5xA/biJLnbxUSQgu/7JS\nik75DZf3EWxfVdstE1AXm1Vj9jw4Qp1QcM3Dq7X5SFmZjCLQMbQFP4wiAZ6n\nWnAEww9XbWaEM0YT5WFU7My6D0yAbnItpdDmok6TLmSzzRhz0Cntp+N+TcpR\nnYv0\r\n=0wZB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGcrUSJ7/LtXMoSdZ4KeAnmLsUR0RZkuASYndny4jxpNAiEAoEGW6E0NjlwN/tn5z/Ao7TbZDTbvMhooAvOwE3IWt1g="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.0_1599746839468_0.8745009056881419"
      },
      "_hasShrinkwrap": false
    },
    "2.0.1": {
      "name": "@serverless/platform-client",
      "version": "2.0.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.1",
      "_nodeVersion": "14.9.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-53YWGmkdZZjs4lK+2Y7VNGgxDi2UEEp/kATKQSLE4Q68jo9/dQVSRtvn+1NJCeVz0Wu5VlTFBC3GQtn9OnvU4Q==",
        "shasum": "604d4efcb3849dd28e3bc62975ad6766c0d971a5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.1.tgz",
        "fileCount": 12,
        "unpackedSize": 405344,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYlVeCRA9TVsSAnZWagAApvAP/10JBdFnuCz1K2FlDAXp\na6+b8DLSVWl+Oi+Y7V3glqjdUSPWJjXwNvVwJfaljzVnevEzeS2qaqgME96J\n/hvhegGk9TmxLkEMUpA2DFcoIpmk/DeY7D/l56LQYYs2usF7Xo8eceR61E0Y\nkO6nql/MkUjT7E/cvO0rbgu2wrjrISPjlKDwPU/jKBYWujyzS61fMF/BZpg9\nOFbx1EBSUfKQ+oK+UIQlS0f2yXXndtkvq4JpmnWkECfVZUo+IwbYiCbjhzj5\naIPaAGlto2mjnknFx5e3z+6EZsQBGlC7mZ8bfaBr6CSPP9RLa93ulqbZIuNj\nOid4OOfG9lvwDDco/njST/LzPZIUDLRr0RBZJUG6B68AYZBjQA9cyA6IZjR2\n5YQEc2GxMxCMhDnxtsdnYWh0RrZ410toUJcmmdpBLnwCxnCylua6IZJlCf1+\nEztZTeeTgUG4rImiJDS1cKUSadEQJguSB9qX9VeC5s35rSBZVGVTfEdcUeZu\nFKuyPYuwJg8J1LiCZNelX55x2Rffg5F/pwYt6zVCeYKPEA6d70CA7x1n8yaz\nk6+2vSC0aND5o/n7IwL2xzMO6R25uFGMY9/zikRBKw0WqflBn+9Dw/MvUAvo\nQ9uhe7Mpd8l3A1P0MIY8g1680W2Ipy1nZxDpVEI2Nqe3+uuGRnloSTLActny\npghx\r\n=sa+r\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF3RcjtKOlQ7ZLWzCum0/kxB10ubuDlVNxqdEuWOH9fVAiBPitrsbdwHuXGRbnrYa9JCAvQkcvQY0P0nYTnCpdcXqg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.1_1600279901277_0.7490928382949129"
      },
      "_hasShrinkwrap": false
    },
    "2.0.2": {
      "name": "@serverless/platform-client",
      "version": "2.0.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^8.1.0",
        "jsdoc-to-markdown": "^5.0.3",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.2",
      "_nodeVersion": "14.10.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-3guXwRmHOujBy6Lmf7THtnfJQcLRYzpTRpL1rCxLko7OtIWcOth3TvW2JtWNu6qubauA+5kpLB2rdCaPefZYbQ==",
        "shasum": "d22d47123760117d454fbc7afff63131feb6a88b",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.2.tgz",
        "fileCount": 12,
        "unpackedSize": 405851,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfY3KECRA9TVsSAnZWagAA6G8P/Akjxv/irHoUfjarnTav\nidmBc4Hgwu438kT7RhgXohgZLQq9kvfwXZsDkad/DSBO17lQPuNgJMhhO8fI\nJMw+i44yYDAB6IWSuqFAhWSE1406qNS/4AK7jseVONi8SEX19kSsoAjhK1Nz\n2ec2Wygl3vrlcChLQOoUMMl0ucOTiA8BRJk9yqJROpR6tz1ncGhshmEN7UOg\nQ2I0uMzVfn88FTPA5X5sMx7d5C/BqUggi8UppJFf9grdah+q6l+fOIfALm4+\n1Cf/1ea3MZfRfFpTe2Z75iHycfbuoXlQGrBOUuXQgELUrNXFnbHKifMltsJC\nSTeZ3rqXrrE/87IN9YpgJBD4SPsCQw3eD/XOOFGTMBgHZmta1MiVWdtWgm8l\nAMo3uxkjhfbS9v0txwSW7aeqWHkz2y9D1skDLtcECw0ftxUNsV/ZBGnNmzRi\nuUkJD2SjssAvl4T8oCYKZT5SU5zORQfnf1NQYRNJ49Ktu7PL8Nbqk5mwDdYT\nmrmrK3vyTqNse9y9Q3myDZgeXkv+/8Yyp3nOjoF9DNWYc3vOj+uUVm+Ol3UT\nbIYcalymk59HpwOoXLaCc7gyb981rjLaEJKzpikonix3xUgJnCxLnQUP7C1S\n0OomKVj21EYfZVPBvhqYrINV84w97d9REiMbwlv60KHVgVVp8ZR8QuvJUSJO\neoXT\r\n=tfIz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFDvdQ95U5NrzJy3DB1N2jmEBiGrMEmoosMkD9gp+ZRCAiEAmgL2xV5AqSG+pTSDE7wUeL4vY3vWfJ4mDxuMIxQT4ek="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.2_1600352899623_0.10751426029858435"
      },
      "_hasShrinkwrap": false
    },
    "2.0.3-beta.0": {
      "name": "@serverless/platform-client",
      "version": "2.0.3-beta.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProvidersByOrgServiceInstance)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync(events)](#ServerlessSDK+publishSync) ⇒ <code>Promise.&lt;null&gt;</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName, instanceStatus)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.saveInstance(instanceRecord)](#ServerlessSDK+saveInstance)\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n  - [.registerWebhook(url)](#ServerlessSDK+registerWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.listWebhooks()](#ServerlessSDK+listWebhooks) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.getWebhook(uid)](#ServerlessSDK+getWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.updateWebhook(uid)](#ServerlessSDK+updateWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.deleteWebhook(uid)](#ServerlessSDK+deleteWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid, providerUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync(events) ⇒ <code>Promise.&lt;null&gt;</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a 200:OK HTTP status and empty response.\n\n| Param  | Type                | Description                                                                                                                                                                                                                                                                                                                                                                         |\n| ------ | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| events | <code>object</code> | An event object, or if publishing a batch of events, an array of event objects, each structured as follows: `json { \"event\": \"name\", \"data\": { \"object\": { \"object\": \"name\", ...properties }, \"previous_attributes\": { ...properties } } } ` With `previous_attributes` only being set on `*.updated` event types, and contains the properties with values as of before the update. |\n\n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieve a Serverless Platform Event.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n  \"event\": \"application.init_token.created\",\n  \"created\": 1594652316623,\n  \"data\": {\n    \"object\": {\n      \"object\": \"init_token\",\n      \"template\": {\n        \"directory\": \"my-fullstack-app\",\n        \"packageName\": \"fullstack-app\",\n        \"projectType\": \"components\",\n        \"serviceName\": \"my-fullstack-app\",\n        \"type\": \"registry\"\n      },\n      \"uid\": \"ae9L37wJym0\",\n      \"user_uid\": \"MswS9z6GtpSd6gG694\",\n      \"username\": \"testuser123\"\n    }\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>Promise.&lt;object&gt;</code>\n\nList all Serverless Platform events.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n      \"event\": \"application.init_token.created\",\n      \"created\": 1594652316623,\n      \"data\": {\n        \"object\": {\n          \"object\": \"init_token\",\n          \"template\": {\n            \"directory\": \"my-fullstack-app\",\n            \"packageName\": \"fullstack-app\",\n            \"projectType\": \"components\",\n            \"serviceName\": \"my-fullstack-app\",\n            \"type\": \"registry\"\n          },\n          \"uid\": \"ae9L37wJym0\",\n          \"user_uid\": \"MswS9z6GtpSd6gG694\",\n          \"username\": \"testuser123\"\n        }\n      }\n    }\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName, instanceStatus) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param          | Type            | Default               | Description                                       |\n| -------------- | --------------- | --------------------- | ------------------------------------------------- |\n| orgName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Organization. |\n| stageName      | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Stage.        |\n| appName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Application.  |\n| instanceName   | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Instance.     |\n| instanceStatus | <code>\\*</code> | <code>inactive</code> | The status of the instance                        |\n\n<a name=\"ServerlessSDK+saveInstance\"></a>\n\n### serverlessSDK.saveInstance(instanceRecord)\n\nSaves an instance record, defined by createInstance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param          | Type            |\n| -------------- | --------------- |\n| instanceRecord | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+registerWebhook\"></a>\n\n### serverlessSDK.registerWebhook(url) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRegisters a webhook endpoint to receive Serverless Platform events. Endpoint should be able to receieve JSON formatted event as a HTTP POST payload.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Registered webhook endpoint.\n\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n```\n\n| Param                         | Type                | Description                                                                                    |\n| ----------------------------- | ------------------- | ---------------------------------------------------------------------------------------------- |\n| url                           | <code>string</code> | HTTP webhook endpoint URL.                                                                     |\n| options.description           | <code>string</code> | An optional description of what the webhook is used for.                                       |\n| options.filter                | <code>object</code> | Optionally, filter which events this endpoint should receive.                                  |\n| options.filter.enabled_events | <code>object</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled. |\n\n<a name=\"ServerlessSDK+listWebhooks\"></a>\n\n### serverlessSDK.listWebhooks() ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all regsitered webhook endpoints.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array, with each entry being a `webhook` object.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n      \"object\": \"webhook_endpoint\",\n      \"url\": \"https://postb.in/1598300732037-0682672155089\",\n      \"description\": \"This is my webhook, I like it a lot\",\n      \"filter\": {\n        \"enabled_events\": [\"*\"]\n      },\n      \"status\": {\n        \"disabled\": false,\n        \"most_recent_delivery\": {\n          \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n          \"response_status_code\": 200,\n          \"response_headers\": {\n            \"content-length\": \"12\",\n            \"connection\": \"close\",\n            \"content-type\": \"application/json\"\n          },\n          \"request_headers\": {\n            \"User-Agent\": \"Serverless-Webhook/0.1\",\n            \"Content-type\": \"application/json\",\n            \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n            \"X-Serverless-Event\": \"test.webhook.send2\"\n          },\n          \"response_text\": \"{\\\"ok\\\": true}\",\n          \"error_message\": null,\n          \"timestamp\": 1599595612876\n        }\n      },\n      \"created\": 1599591851267,\n      \"updated\": 1599595613099\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                           |\n| ---------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is a webhook endpoint object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `whe_foo`, your subsequent call can include `starting_after=whe_foo` in order to fetch the next page of the list. |\n| options.limit          | <code>number</code> | A limit on the number of webhook endpoints to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                  |\n\n<a name=\"ServerlessSDK+getWebhook\"></a>\n\n### serverlessSDK.getWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieves a webhook endpoint with the given ID.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A webhook endpoint if a valid webhook endpoint ID was provided.\n\n````json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false,\n    \"most_recent_delivery\": {\n      \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"response_status_code\": 200,\n      \"response_headers\": {\n        \"content-length\": \"12\",\n        \"connection\": \"close\",\n        \"content-type\": \"application/json\"\n      },\n      \"request_headers\": {\n        \"User-Agent\": \"Serverless-Webhook/0.1\",\n        \"Content-type\": \"application/json\",\n        \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n        \"X-Serverless-Event\": \"test.webhook.send2\"\n      },\n      \"response_text\": \"{\\\"ok\\\": true}\",\n      \"error_message\": null,\n      \"timestamp\": 1599595612876\n    }\n  },\n  \"created\": 1599591851267,\n  \"updated\": 1599595613099\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n<a name=\"ServerlessSDK+updateWebhook\"></a>\n\n### serverlessSDK.updateWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\nUpdates the registered webhook endpoint. You may edit the url, description, the list of filters, and the status of your endpoint.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n**Returns**: <code>Promise.&lt;object&gt;</code> - Updated webhook endpoint.\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n````\n\n| Param                         | Type                 | Description                                                                                                                |\n| ----------------------------- | -------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| uid                           | <code>string</code>  | Webhook endpoint ID.                                                                                                       |\n| updates.url                   | <code>string</code>  | HTTP webhook endpoint url, if updating.                                                                                    |\n| updates.description           | <code>string</code>  | An optional updated description of what the webhook is used for.                                                           |\n| updates.filter                | <code>object</code>  | Optionally, update filter which events this endpoint should receive. An existing filter can reset by setting it to `null`. |\n| updates.filter.enabled_events | <code>object</code>  | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                             |\n| updates.status.disabled       | <code>boolean</code> | Enable/disable the webhook endpoint.                                                                                       |\n\n<a name=\"ServerlessSDK+deleteWebhook\"></a>\n\n### serverlessSDK.deleteWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDeletes the webhook endpoint with the given ID.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An object with the deleted webhook endpoints’s ID if a valid webhook endpoint ID was provided. Otherwise, this call throws an error, such as if the webhook endpoint has already been deleted.\n\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"deleted\": true\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n* * *\n\n&copy; Serverless Inc.\n```\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.3-beta.0",
      "_nodeVersion": "11.12.0",
      "_npmVersion": "6.13.7",
      "dist": {
        "integrity": "sha512-wcN/dy8eUSTKCKNccNhgSYIwDNG8YoqWUgMZekpG83GJ+fAdvwaN+Qxx0hymLT6ETrRo8lc1+/gLZf9zgBbyfw==",
        "shasum": "d25446701bc8dc165538a83b4adf6cd222ed7541",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.3-beta.0.tgz",
        "fileCount": 12,
        "unpackedSize": 406079,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfaHmtCRA9TVsSAnZWagAA0BQP/iNp70/+jNfsa7lijmrn\nj582EPLiAO93YFh3Uuq3W9b/VGjIaUfcjxbtcjq0HpdYg03wIWPnAtyob4UU\n1uWEorYAZ4xbTPsuaX6/TZxl6+i9U8L82uQYy4dOK2olIh9/Hz6uHdDmFs5X\nf0d2dyKb3sEh0BDIKbmSI9FmWjgrl6g5sShhIT7HTdoR1yIjFLIVcHtWWyow\nH7EhXiF/fcWe+ltS53WxuEQ8uoMwzvmkMOJSZ5ADOmGOpgCDBDiQYSiG4jHl\noOJTrBqgqmMMeZt/kfX0CmsB1PaGGg46VuiRusCjJs0IAFjheANKQxXc49aJ\ncbMkQPNy2pTEQ6bkQyq+F137xhLKsvbWQGyWZvJLV4VQIJvqANL1gOxeOObj\nxdkOdAPmStdcxtm0agpSnQfu+6PKdXmAdOViNWCl3j68Bcd/XMNK3VsQ97Nw\n2FKKl4J///ECzdIHZXT55MvnrgMDgDu5wvfBfqtjStgIywoQ7yg1L91j+NTh\nLeYLB/C7/QW+7+IHxlV6kZQGMdf+w+U49iQqx38eDBc+bl8yOR3ohvXzYSM2\ng50jYLHvpNMur7LfyOsEc2Z09Id3Ru4iUsb3kzQcc5DPzJdNKb/oapylUMNb\nyRl0odJ45Wb8Tjy5iN/prIw+ZQCdo2yus2juQm4iZMnhwIu49fzKaKJvwcBQ\nJn8p\r\n=PF4c\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG0M2B9ab5sCVjhhrM+fH44G/fIpeyV9Fm3dx/+nsMehAiEAzWLPuvdOCDLlZhVo4aeqUUKjMXA2Ro6eX/aeEJB4TIs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.3-beta.0_1600682413115_0.593507020385726"
      },
      "_hasShrinkwrap": false
    },
    "2.0.3": {
      "name": "@serverless/platform-client",
      "version": "2.0.3",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.3",
      "_nodeVersion": "14.10.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-eod9czXm3qmBBODX1Cqk2owwMFTGv6z2KdV3hoG2h+L2h/gBYPpgDhvDQFbKsVmZOSvGZULcHL+nr44fRWBymw==",
        "shasum": "ea43635f8f87285b2145c1c3f1b8d54aa9b9a576",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.3.tgz",
        "fileCount": 12,
        "unpackedSize": 406466,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfaRlzCRA9TVsSAnZWagAAVLsP/jMXqG1y3bK/l0zrsJGM\nAFbIcfv99NJcweQpcNTMmiCihDGM94ySzcEGlBCAz6vBHKxBesT/7D3QkrZL\nQelF9bpMbZ0wey4ElCiePlj/Q9cXi1mrl/2pkpR6mAg0ECQtjGnN7c8ohWwn\n74D9ODZCqiYvm+fsk/vBvtckqLu+GWEHxQDYAG2w6VV3xivykHV5pslLytqJ\nQg/n2fJDUZv8fePvrm3EP1LkfTH4w4JJSez5A9iIcjH2x6WbxGbepL4m72q1\n93j3KncbR3OyFZyKQRlTk7mfTTriKZFrOKweB4bJ7ESnHT3WNqTXK2S23KQk\nyc0DDTiEf2ysA1ieebUwAm8xQPHQ3XrGeFG9TkLLEKDO//Gla03UkFw1tM7Z\n9C204SI9g7mC5BB1iukgMvjNEyeBnSuCcaps4/AoHYXrEyLnee93sGVnh4LQ\nWzYuUC1h4Y5DRmT5RT2lsckWoWCvLeHGnRdZCEMzrBJ8PpSms970yTnvI1RU\nevopBFbl28CI6Eid5xgJYq7JdukUPMapBAThAfI7XNxKdg2+Wg3lVAnCc+Qy\nauU5pQo8lFSudrp3eKy3igoSCal9Y8aogWNJruCkjJrcfV7eQ9kwWrZhfAWY\nbdEyRM8GUFdvWGZTHDKsh4aVHyH2/Na3YS6AibDSeXB9wS5Qilj/1eDqGBzO\nUd8t\r\n=zJ01\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGDQGzrOw1uIZforB4nk0SvWGhR5aqJpHlCofN1DdHdfAiEA/YbhcHxJG/By37G+d/NljWF9722pXYpXHeCNF854E2s="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.3_1600723314817_0.5705521190992051"
      },
      "_hasShrinkwrap": false
    },
    "2.0.4": {
      "name": "@serverless/platform-client",
      "version": "2.0.4",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.0.4",
      "_nodeVersion": "14.10.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-YcHU/TjgUMWheA02fz+ZPW1RPMtzJS9lYr9s51DfoQVciJNIUHaixd/voCezSLPdV245YKv38fssOXq5wrNJOg==",
        "shasum": "347943146dd9574126bd1d4b9bf455b6705133c9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.0.4.tgz",
        "fileCount": 12,
        "unpackedSize": 665808,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfa6coCRA9TVsSAnZWagAAn+4QAJrTqtxzfwcgKZ/vDel5\nZJ3KcgAPNkcMj9Nnq+JUfwFPCTovBfPJXCSDsLWH+sHAvguMEjyOkPsgOSpv\n6yUUR3eJZ6rhlobK/HAwCWWZ36gTRs1nKXtVcXmS+dvTv8C9to1rCwZIteKQ\nir2ojS14lVXE7rd+ovGhf6T+1WrAR53UEwzVdiWOxxSGzPALAYzf1zjHCn/X\nQpHUjCtOZtsxxOe3K0c1+qFupwvVOvDySKWInlbx9YPDVAOZGO33DOUH/P0n\nAjLutN/x6ouXKjTYLFWSZaJyfYqjAl7i2Hdhr+ovCqcZ7fzjDHbLZnaAFWiU\n7H2IcTgzh2GXu9I2WSQDAMpCvgH8i/W8chZDzAawFpVaXHqVavJ3N66waSDZ\nzdMzp3BUiqAhLFe7fSoiF4Qrx4+9jT4eSD7tPyU1FyW7xw/5uPbhg9tV4Dbh\nNiCMoLxMuwSg4F7ifhVrjZWXLgXkGCikNrHkZ9RBV7Nc9AGX1M5WFCWKB92u\nM8AQy4nE+Ht4o4ltp+VNYLf9ec0F2yirGMJY5VqdLl0r3yvwld4T65xbhAjN\nKapSkBhJm6Ik9h3kpv4U4FgtRh8j956qsl1ogRyOszWXmvci9Hq75uO41nes\nunnjT5KoF3MzmkeXp+G4/1SFdjS120inUYNx8vcZgaX7GR7ND0hKQFg8eSdt\na2J6\r\n=8hSa\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEX/MVE0wXWhN43UFd7l1EDrXMPV1DnlCRZ2vdWo6zjRAiEAvRn44yjSf4S+xt8MTuDsRrPjjnfppp5A9W70lhlj0AA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.0.4_1600890664172_0.2225511158575808"
      },
      "_hasShrinkwrap": false
    },
    "2.1.0": {
      "name": "@serverless/platform-client",
      "version": "2.1.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@2.1.0",
      "_nodeVersion": "14.11.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-fOBden8RBdu4Ms0jAAk3QKU3h5O34B+GjjfKUKVO8wUMR+oV3bDb2ovICxQkppn+Gzp8iM8z1T6Tv5dSd+ebRg==",
        "shasum": "9c11e1d9b08db6e9f6a655b04813be37d259510d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-2.1.0.tgz",
        "fileCount": 12,
        "unpackedSize": 671215,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfbakPCRA9TVsSAnZWagAAH64P/2qLhx/WumTbR59VQae/\nUXG22RlxhEj5M08zejARq6WyZsVMWK5bgpN2wRUFn4D86hypmF6ZhEnLbF/3\nSnZ06PqyNPrNM9HLaui3tzPGOuLlUd9Hc68HZm2yor08lnHclZ07Np2Zyv7a\nywlC4C0R7hgIuyDkZ72RMPbTcSQ+MPYPCC9UR9axvlMukFuYq3b5KC6lMgxn\nBQJiP5/q+MsKaJPsxXTb/s+Az2I1KsP+P4/9KY+ELveWhXZl2mfJv54C0QSj\nEoOqImGX7L5bQa3g9A+U6JTLcRGCmucofCpzn/lKfpBShu4+UFy6D46+TOdO\n/l+y4IO0McBrO26l/z63X6N1kWXparaJvldwaVfjJE1qP24SpiatGKSofX9B\nSBmNNioSDpKAkN2uFEPndcRW8p6+LQ4ku1s3DtnW34zO3Z54QYKqjYe8M+S5\nWfpHNbZb5ZZcSaSV0KUA8B6W2xFpdYrnsm4NzX2eIO+mtjQLnJCaxMAAwalm\n6r7HZvcZNbFxKlnPQ5HEpk62OEm+C1jqDjWn1pvdn1AQgb7fd/hr1xKF9Cuy\nv0EUOI2LltPKI0sz214q3VqyZk9NZ1j5m0bbx2IOIKOCVxDfrhLwotA/wVSY\ncuEuftI8HAIwYpsbpinVpXu6cU51u1+d1iWfpDyAyzuSiPc9HcDKL4t0fAkX\nJpKv\r\n=y0mc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDsA4SoCCmTW7YE14QkRaQuK2HBW5caFoiaqiUmZroHowIgeFSVXXLJyrTZbLtRgmVxEUVsA3jeet8B30z0wsdz+Ww="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_2.1.0_1601022222460_0.7440988137941253"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta.0": {
      "name": "@serverless/platform-client",
      "version": "3.0.0-beta.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.events](#ServerlessSDK+events) : <code>object</code>\n    - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n    - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>null</code> \\| <code>Promise.&lt;null&gt;</code>~~\n  - [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n    - [.register(url)](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list()](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProvidersByOrgServiceInstance)\n  - [.getProvidersByLink(orgUid, linkType, linkUid)](#ServerlessSDK+getProvidersByLink)\n  - [.getAllowedProviders()](#ServerlessSDK+getAllowedProviders)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName, instanceStatus)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.saveInstance(instanceRecord)](#ServerlessSDK+saveInstance)\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+events\"></a>\n\n### serverlessSDK.events : <code>object</code>\n\nPublish and retrieve Serverless Platform Events\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.events](#ServerlessSDK+events) : <code>object</code>\n  - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n  - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>null</code> \\| <code>Promise.&lt;null&gt;</code>~~\n\n<a name=\"ServerlessSDK+events.publish\"></a>\n\n#### events.publish(event) ⇒ <code>Promise.&lt;null&gt;</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a `200:OK` HTTP status and empty response.\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n**Example** _(user event)_\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\nconst sdk = new ServerlessSDK({ accessKey: \"123456789\" });\nawait sdk.events.publish({\n  event: \"user.created\",\n  data: {\n    id: \"user-123\",\n    username: \"testuser\",\n  },\n});\n```\n\n**Example** _(system event)_\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\nconst sdk = new ServerlessSDK({ accessKey: \"123456789\" });\nawait sdk.events.publish({\n  event: \"entity.updated\",\n  data: {\n    object: {\n      // state of the Serverless Platform object as of after the operation\n      object: \"name\",\n      // ...properties\n    },\n    previous_attributes: {\n      // only being set on `*.updated` event types and contains modified property values as of before the update\n      //...properties\n    },\n  },\n});\n```\n\n<a name=\"ServerlessSDK+events.get\"></a>\n\n#### events.get(uid) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nRetrieve a Serverless Platform Event.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - An event object if a valid id was provided. All Serverless Platform system events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n  \"event\": \"application.init_token.created\",\n  \"created\": 1594652316623,\n  \"data\": {\n    \"object\": {\n      \"object\": \"init_token\",\n      \"template\": {\n        \"directory\": \"my-fullstack-app\",\n        \"packageName\": \"fullstack-app\",\n        \"projectType\": \"components\",\n        \"serviceName\": \"my-fullstack-app\",\n        \"type\": \"registry\"\n      },\n      \"uid\": \"ae9L37wJym0\",\n      \"user_uid\": \"MswS9z6GtpSd6gG694\",\n      \"username\": \"testuser123\"\n    }\n  }\n}\n```\n\n| Param | Type                | Description                 |\n| ----- | ------------------- | --------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched. |\n\n<a name=\"ServerlessSDK+events.list\"></a>\n\n#### events.list([options]) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nList all Serverless Platform events.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` Object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n      \"event\": \"application.init_token.created\",\n      \"created\": 1594652316623,\n      \"data\": {\n        \"object\": {\n          \"object\": \"init_token\",\n          \"template\": {\n            \"directory\": \"my-fullstack-app\",\n            \"packageName\": \"fullstack-app\",\n            \"projectType\": \"components\",\n            \"serviceName\": \"my-fullstack-app\",\n            \"type\": \"registry\"\n          },\n          \"uid\": \"ae9L37wJym0\",\n          \"user_uid\": \"MswS9z6GtpSd6gG694\",\n          \"username\": \"testuser123\"\n        }\n      }\n    }\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| [options]              | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+events.send\"></a>\n\n#### ~~events.send(event) ⇒ <code>null</code> \\| <code>Promise.&lt;null&gt;</code>~~\n\n**_Deprecated_**\n\nDispatches a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n**Example** _(user event)_\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\nconst sdk = new ServerlessSDK({ accessKey: \"123456789\" });\nsdk.connect({\n  orgName: \"serverless\",\n});\nsdk.events.send({\n  event: \"user.created\",\n  data: {\n    id: \"user-123\",\n    username: \"testuser\",\n  },\n});\n```\n\n**Example** _(system event)_  \nconst { ServerlessSDK } = require('@serverless/platform-client');\nconst sdk = new ServerlessSDK({ accessKey: '123456789' });\nsdk.connect({\norgName: 'serverless',\n});\nsdk.events.send({\nevent: 'entity.updated',\ndata: {\nobject: { // state of the Serverless Platform object as of after the operation\nobject: 'name',\n// ...properties\n},\nprevious_attributes: { // only being set on `*.updated` event types and contains modified property values as of before the update\n//...properties\n},\n},\n});\n\n````\n<a name=\"ServerlessSDK+webhooks\"></a>\n\n### serverlessSDK.webhooks : <code>object</code>\nRegister, modify and query Serverless Platform Event Webhooks\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n* [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n    * [.register(url)](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n    * [.list()](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    * [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n    * [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n    * [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+webhooks.register\"></a>\n\n#### webhooks.register(url) ⇒ <code>Promise.&lt;object&gt;</code>\nRegisters a webhook endpoint to receive Serverless Platform events. Endpoint should be able to receieve JSON formatted event as a HTTP POST payload.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)\n**Returns**: <code>Promise.&lt;object&gt;</code> - Registered webhook endpoint.\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n````\n\n| Param                         | Type                              | Description                                                                                    |\n| ----------------------------- | --------------------------------- | ---------------------------------------------------------------------------------------------- |\n| url                           | <code>string</code>               | HTTP webhook endpoint URL.                                                                     |\n| options.description           | <code>string</code>               | An optional description of what the webhook is used for.                                       |\n| options.filter                | <code>Object</code>               | Optionally, filter which events this endpoint should receive.                                  |\n| options.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled. |\n\n<a name=\"ServerlessSDK+webhooks.list\"></a>\n\n#### webhooks.list() ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all regsitered webhook endpoints.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array, with each entry being a `webhook` object.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n      \"object\": \"webhook_endpoint\",\n      \"url\": \"https://postb.in/1598300732037-0682672155089\",\n      \"description\": \"This is my webhook, I like it a lot\",\n      \"filter\": {\n        \"enabled_events\": [\"*\"]\n      },\n      \"status\": {\n        \"disabled\": false,\n        \"most_recent_delivery\": {\n          \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n          \"response_status_code\": 200,\n          \"response_headers\": {\n            \"content-length\": \"12\",\n            \"connection\": \"close\",\n            \"content-type\": \"application/json\"\n          },\n          \"request_headers\": {\n            \"User-Agent\": \"Serverless-Webhook/0.1\",\n            \"Content-type\": \"application/json\",\n            \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n            \"X-Serverless-Event\": \"test.webhook.send2\"\n          },\n          \"response_text\": \"{\\\"ok\\\": true}\",\n          \"error_message\": null,\n          \"timestamp\": 1599595612876\n        }\n      },\n      \"created\": 1599591851267,\n      \"updated\": 1599595613099\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                           |\n| ---------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is a webhook endpoint object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `whe_foo`, your subsequent call can include `starting_after=whe_foo` in order to fetch the next page of the list. |\n| options.limit          | <code>number</code> | A limit on the number of webhook endpoints to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                  |\n\n<a name=\"ServerlessSDK+webhooks.get\"></a>\n\n#### webhooks.get(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieves a webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A webhook endpoint if a valid webhook endpoint ID was provided.\n\n````json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false,\n    \"most_recent_delivery\": {\n      \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"response_status_code\": 200,\n      \"response_headers\": {\n        \"content-length\": \"12\",\n        \"connection\": \"close\",\n        \"content-type\": \"application/json\"\n      },\n      \"request_headers\": {\n        \"User-Agent\": \"Serverless-Webhook/0.1\",\n        \"Content-type\": \"application/json\",\n        \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n        \"X-Serverless-Event\": \"test.webhook.send2\"\n      },\n      \"response_text\": \"{\\\"ok\\\": true}\",\n      \"error_message\": null,\n      \"timestamp\": 1599595612876\n    }\n  },\n  \"created\": 1599591851267,\n  \"updated\": 1599595613099\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n<a name=\"ServerlessSDK+webhooks.update\"></a>\n\n#### webhooks.update(uid) ⇒ <code>Promise.&lt;object&gt;</code>\nUpdates the registered webhook endpoint. You may edit the url, description, the list of filters, and the status of your endpoint.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)\n**Returns**: <code>Promise.&lt;object&gt;</code> - Updated webhook endpoint.\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n````\n\n| Param                         | Type                              | Description                                                                                                                |\n| ----------------------------- | --------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| uid                           | <code>string</code>               | Webhook endpoint ID.                                                                                                       |\n| updates.url                   | <code>string</code>               | HTTP webhook endpoint url, if updating.                                                                                    |\n| updates.description           | <code>string</code>               | An optional updated description of what the webhook is used for.                                                           |\n| updates.filter                | <code>Object</code>               | Optionally, update filter which events this endpoint should receive. An existing filter can reset by setting it to `null`. |\n| updates.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                             |\n| updates.status.disabled       | <code>boolean</code>              | Enable/disable the webhook endpoint.                                                                                       |\n\n<a name=\"ServerlessSDK+webhooks.delete\"></a>\n\n#### webhooks.delete(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDeletes the webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An object with the deleted webhook endpoints’s ID if a valid webhook endpoint ID was provided. Otherwise, this call throws an error, such as if the webhook endpoint has already been deleted.\n\n````json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"deleted\": true\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| [config.accessKey] | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token. |\n| [config.platformStage] | <code>string</code> | The Serverless Platform Stage you wish to interact with.  This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE= |\n| [context.orgName] | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid] | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with.  If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.stageName] | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.appName] | <code>string</code> | The Serverless Platform Application you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.instanceName] | <code>string</code> | The Serverless Platform Instance you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentName] | <code>string</code> | The Serverless Platform Component you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with.  If set, this value is auto-added to every Event you publish. |\n\n**Example**\n```js\nconst { ServerlessSDK } = require('@serverless/platform-client')\n\n  const sdk = new ServerlessSDK()\n  sdk.config({\n    accessKey: '123456789',\n    context: {\n      orgName: 'my-org',\n      orgUid: '1234',\n      stageName: 'prod',\n      appName: 'my-app',\n      instanceName: 'my-instance'\n    }\n  })\n````\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid, providerUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByLink\"></a>\n\n### serverlessSDK.getProvidersByLink(orgUid, linkType, linkUid)\n\nList providers by Link\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param    | Type            |\n| -------- | --------------- |\n| orgUid   | <code>\\*</code> |\n| linkType | <code>\\*</code> |\n| linkUid  | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getAllowedProviders\"></a>\n\n### serverlessSDK.getAllowedProviders()\n\nReturns the list of supported providers\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName, instanceStatus) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param          | Type            | Default               | Description                                       |\n| -------------- | --------------- | --------------------- | ------------------------------------------------- |\n| orgName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Organization. |\n| stageName      | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Stage.        |\n| appName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Application.  |\n| instanceName   | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Instance.     |\n| instanceStatus | <code>\\*</code> | <code>inactive</code> | The status of the instance                        |\n\n<a name=\"ServerlessSDK+saveInstance\"></a>\n\n### serverlessSDK.saveInstance(instanceRecord)\n\nSaves an instance record, defined by createInstance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param          | Type            |\n| -------------- | --------------- |\n| instanceRecord | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.0.0-beta.0",
      "_nodeVersion": "12.18.3",
      "_npmVersion": "6.14.6",
      "dist": {
        "integrity": "sha512-xx5ZOr+LjvAstN5JN/ifDAg/oeYWnEWQ2+oHMpcuQ0MBUuJy47yVfouT3M4wvj9eoeAuBV4/sOQPZB1OtnSj1Q==",
        "shasum": "379ebb035c54f5bf2a6e38265dcf988f061d0667",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.0.0-beta.0.tgz",
        "fileCount": 12,
        "unpackedSize": 744195,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfe08uCRA9TVsSAnZWagAAkL4P/R3nNqB9XAPBpR4uFHi/\n5aWhotpEd1hkvfRT4D4jxrJVMZjuKvZxNcMHCWkByBhMIZX/dQ1O3eVCuDAX\nF7reIcVUMg7ou8jajR1+8TqrALZ0WQnUv6TJ6opb806LwGUM16hff4k/4L+e\nlIqlkO237esG3bqcplgp2QHab88zTcUIdNhcrGaIeXnnUwUZa+Q95gFXbZZX\nn5/EhG4q7Csv4qO0ribY19CSlTjKAVVwTD6QMpey6EcYudzA3LbMLNOWZO3D\nWlPNSXytIvEa1gycURUgN1I/6zVybwBd+wwy7O2lHzKABDOLFJZD76TyMn59\neN8+qVOhk+TctWCpz4+k/zdvhVyr6UDSv1qpou/D7fX50pLfLlIwJZ+jc+dO\nBARRkUR5xBlTVrlXQalkRMEycQz2/BjysOMRGvlH0fq2oCQFKXsGbLT3E/S0\nlAapNLkF6PtAGZ1Qe8BL6bIh/mxngPDwiG33KSenRtv4TL3TDl9PpAvUVbzU\nSbrzoLymlHJ76YvIaGanjgf36OokfCpROnqodZaXYQt8PD2Az0gLGbwvGABk\n96sCweNikrW5QTmGVsoPkRq2qstBH7ZlTfqQR9jS0ihHjIMyzr5M7ZkPHtFv\n9goX7wmF5l4RDsQ36HzGCrjm7DlGsT40LCHhwrzD2FbXetK3twsRbDJzdshf\nwRjb\r\n=n6T1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCcnEN4f2lwjJtp0onXRyTv9ZTfSHFOZZIt6LyBltrVKgIgYxKdcsE9wARAiO6bD55LEOYn7lA+sedn3tArJ6Hr1tw="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.0.0-beta.0_1601916717929_0.1676843025884407"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta.1": {
      "name": "@serverless/platform-client",
      "version": "3.0.0-beta.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProvidersByOrgServiceInstance)\n  - [.getProvidersByLink(orgUid, linkType, linkUid)](#ServerlessSDK+getProvidersByLink)\n  - [.getAllowedProviders()](#ServerlessSDK+getAllowedProviders)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.publish()](#ServerlessSDK+publish) ⇒ <code>null</code>\n  - [.publishSync(events)](#ServerlessSDK+publishSync) ⇒ <code>Promise.&lt;null&gt;</code>\n  - [.getEvent(uid)](#ServerlessSDK+getEvent) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.listEvents(options)](#ServerlessSDK+listEvents) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName, instanceStatus)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.saveInstance(instanceRecord)](#ServerlessSDK+saveInstance)\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n  - [.registerWebhook(url)](#ServerlessSDK+registerWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.listWebhooks()](#ServerlessSDK+listWebhooks) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.getWebhook(uid)](#ServerlessSDK+getWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.updateWebhook(uid)](#ServerlessSDK+updateWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.deleteWebhook(uid)](#ServerlessSDK+deleteWebhook) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid, providerUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByLink\"></a>\n\n### serverlessSDK.getProvidersByLink(orgUid, linkType, linkUid)\n\nList providers by Link\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param    | Type            |\n| -------- | --------------- |\n| orgUid   | <code>\\*</code> |\n| linkType | <code>\\*</code> |\n| linkUid  | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getAllowedProviders\"></a>\n\n### serverlessSDK.getAllowedProviders()\n\nReturns the list of supported providers\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+publish\"></a>\n\n### serverlessSDK.publish() ⇒ <code>null</code>\n\nPublishes a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+publishSync\"></a>\n\n### serverlessSDK.publishSync(events) ⇒ <code>Promise.&lt;null&gt;</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a 200:OK HTTP status and empty response.\n\n| Param  | Type                | Description                                                                                                                                                                                                                                                                                                                                                                         |\n| ------ | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| events | <code>object</code> | An event object, or if publishing a batch of events, an array of event objects, each structured as follows: `json { \"event\": \"name\", \"data\": { \"object\": { \"object\": \"name\", ...properties }, \"previous_attributes\": { ...properties } } } ` With `previous_attributes` only being set on `*.updated` event types, and contains the properties with values as of before the update. |\n\n<a name=\"ServerlessSDK+getEvent\"></a>\n\n### serverlessSDK.getEvent(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieve a Serverless Platform Event.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An event object if a valid id was provided. All events share a common structure, detailed below. The only property that will differ is the `data` payload.\n\n```json\n{\n  \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n  \"event\": \"application.init_token.created\",\n  \"created\": 1594652316623,\n  \"data\": {\n    \"object\": {\n      \"object\": \"init_token\",\n      \"template\": {\n        \"directory\": \"my-fullstack-app\",\n        \"packageName\": \"fullstack-app\",\n        \"projectType\": \"components\",\n        \"serviceName\": \"my-fullstack-app\",\n        \"type\": \"registry\"\n      },\n      \"uid\": \"ae9L37wJym0\",\n      \"user_uid\": \"MswS9z6GtpSd6gG694\",\n      \"username\": \"testuser123\"\n    }\n  }\n}\n```\n\n| Param | Type                | Description                |\n| ----- | ------------------- | -------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched |\n\n<a name=\"ServerlessSDK+listEvents\"></a>\n\n### serverlessSDK.listEvents(options) ⇒ <code>Promise.&lt;object&gt;</code>\n\nList all Serverless Platform events.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` object. If no more events are available, the resulting array will be empty.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"evt_P3Soi8VviLNve2QYd6zasxSc\",\n      \"event\": \"application.init_token.created\",\n      \"created\": 1594652316623,\n      \"data\": {\n        \"object\": {\n          \"object\": \"init_token\",\n          \"template\": {\n            \"directory\": \"my-fullstack-app\",\n            \"packageName\": \"fullstack-app\",\n            \"projectType\": \"components\",\n            \"serviceName\": \"my-fullstack-app\",\n            \"type\": \"registry\"\n          },\n          \"uid\": \"ae9L37wJym0\",\n          \"user_uid\": \"MswS9z6GtpSd6gG694\",\n          \"username\": \"testuser123\"\n        }\n      }\n    }\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| options                | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_name       | <code>string</code> | The name of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                          |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional. By default, fetches events under the connecting organization.                                                                                                                                                                                                                                               |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName, instanceStatus) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param          | Type            | Default               | Description                                       |\n| -------------- | --------------- | --------------------- | ------------------------------------------------- |\n| orgName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Organization. |\n| stageName      | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Stage.        |\n| appName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Application.  |\n| instanceName   | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Instance.     |\n| instanceStatus | <code>\\*</code> | <code>inactive</code> | The status of the instance                        |\n\n<a name=\"ServerlessSDK+saveInstance\"></a>\n\n### serverlessSDK.saveInstance(instanceRecord)\n\nSaves an instance record, defined by createInstance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param          | Type            |\n| -------------- | --------------- |\n| instanceRecord | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+registerWebhook\"></a>\n\n### serverlessSDK.registerWebhook(url) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRegisters a webhook endpoint to receive Serverless Platform events. Endpoint should be able to receieve JSON formatted event as a HTTP POST payload.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Registered webhook endpoint.\n\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n```\n\n| Param                         | Type                | Description                                                                                    |\n| ----------------------------- | ------------------- | ---------------------------------------------------------------------------------------------- |\n| url                           | <code>string</code> | HTTP webhook endpoint URL.                                                                     |\n| options.description           | <code>string</code> | An optional description of what the webhook is used for.                                       |\n| options.filter                | <code>object</code> | Optionally, filter which events this endpoint should receive.                                  |\n| options.filter.enabled_events | <code>object</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled. |\n\n<a name=\"ServerlessSDK+listWebhooks\"></a>\n\n### serverlessSDK.listWebhooks() ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all regsitered webhook endpoints.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array, with each entry being a `webhook` object.\n\n```json\n{\n  \"object\": \"list\",\n  \"data\": [\n    {\n      \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n      \"object\": \"webhook_endpoint\",\n      \"url\": \"https://postb.in/1598300732037-0682672155089\",\n      \"description\": \"This is my webhook, I like it a lot\",\n      \"filter\": {\n        \"enabled_events\": [\"*\"]\n      },\n      \"status\": {\n        \"disabled\": false,\n        \"most_recent_delivery\": {\n          \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n          \"response_status_code\": 200,\n          \"response_headers\": {\n            \"content-length\": \"12\",\n            \"connection\": \"close\",\n            \"content-type\": \"application/json\"\n          },\n          \"request_headers\": {\n            \"User-Agent\": \"Serverless-Webhook/0.1\",\n            \"Content-type\": \"application/json\",\n            \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n            \"X-Serverless-Event\": \"test.webhook.send2\"\n          },\n          \"response_text\": \"{\\\"ok\\\": true}\",\n          \"error_message\": null,\n          \"timestamp\": 1599595612876\n        }\n      },\n      \"created\": 1599591851267,\n      \"updated\": 1599595613099\n    },\n    {...},\n    {...}\n  ]\n}\n```\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                           |\n| ---------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is a webhook endpoint object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `whe_foo`, your subsequent call can include `starting_after=whe_foo` in order to fetch the next page of the list. |\n| options.limit          | <code>number</code> | A limit on the number of webhook endpoints to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                  |\n\n<a name=\"ServerlessSDK+getWebhook\"></a>\n\n### serverlessSDK.getWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieves a webhook endpoint with the given ID.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A webhook endpoint if a valid webhook endpoint ID was provided.\n\n````json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false,\n    \"most_recent_delivery\": {\n      \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n      \"response_status_code\": 200,\n      \"response_headers\": {\n        \"content-length\": \"12\",\n        \"connection\": \"close\",\n        \"content-type\": \"application/json\"\n      },\n      \"request_headers\": {\n        \"User-Agent\": \"Serverless-Webhook/0.1\",\n        \"Content-type\": \"application/json\",\n        \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n        \"X-Serverless-Event\": \"test.webhook.send2\"\n      },\n      \"response_text\": \"{\\\"ok\\\": true}\",\n      \"error_message\": null,\n      \"timestamp\": 1599595612876\n    }\n  },\n  \"created\": 1599591851267,\n  \"updated\": 1599595613099\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n<a name=\"ServerlessSDK+updateWebhook\"></a>\n\n### serverlessSDK.updateWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\nUpdates the registered webhook endpoint. You may edit the url, description, the list of filters, and the status of your endpoint.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n**Returns**: <code>Promise.&lt;object&gt;</code> - Updated webhook endpoint.\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"url\": \"https://postb.in/1598300732037-0682672155089\",\n  \"description\": \"This is my webhook, I like it a lot\",\n  \"filter\": {\n    \"enabled_events\": [\"*\"]\n  },\n  \"status\": {\n    \"disabled\": false\n  },\n  \"created\": 1593710260258\n}\n````\n\n| Param                         | Type                 | Description                                                                                                                |\n| ----------------------------- | -------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| uid                           | <code>string</code>  | Webhook endpoint ID.                                                                                                       |\n| updates.url                   | <code>string</code>  | HTTP webhook endpoint url, if updating.                                                                                    |\n| updates.description           | <code>string</code>  | An optional updated description of what the webhook is used for.                                                           |\n| updates.filter                | <code>object</code>  | Optionally, update filter which events this endpoint should receive. An existing filter can reset by setting it to `null`. |\n| updates.filter.enabled_events | <code>object</code>  | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                             |\n| updates.status.disabled       | <code>boolean</code> | Enable/disable the webhook endpoint.                                                                                       |\n\n<a name=\"ServerlessSDK+deleteWebhook\"></a>\n\n### serverlessSDK.deleteWebhook(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDeletes the webhook endpoint with the given ID.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An object with the deleted webhook endpoints’s ID if a valid webhook endpoint ID was provided. Otherwise, this call throws an error, such as if the webhook endpoint has already been deleted.\n\n```json\n{\n  \"uid\": \"whk_2y9fUcnZroc8BhMjC26tQdg8\",\n  \"object\": \"webhook_endpoint\",\n  \"deleted\": true\n}\n\n| Param | Type | Description |\n| --- | --- | --- |\n| uid | <code>string</code> | Webhook endpoint ID. |\n\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n* * *\n\n&copy; Serverless Inc.\n```\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.0.0-beta.1",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-z6ldB1HUjJhUOC4Im4JO1U/B38F8ZFzJ5XhCWesdPmEAbaZ7ef4grCk5fPv7O4UCINfoLDuQTjEHUKmfgPOsUg==",
        "shasum": "496332553700709c4d186f6c0d2adbfb82c5cace",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.0.0-beta.1.tgz",
        "fileCount": 12,
        "unpackedSize": 744227,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffczoCRA9TVsSAnZWagAAWTUP/0MCSB1a2f9SZTfcJfdM\nP/C+88WAIkUeOHD9iczZsEnra6MFHMKfOo0ffzd78y9TST8XVzlb+Wb3WZlS\ngEfo8cUzoSLklFXqoqRrEufIJVLICZXk2qQm8DnV/rRFNQa2t5iLu56UVd1X\naXK37mJxiHbW+HBq20jYNx82oM3AVY2Krtu5Ksm1DhOdCG2Oh/Hx9tkxFPij\n4D3/qvr0+qqYxNiYd5yKfNVz25go0ptc6fW49FrWJKPAq/TWOboZ2dx9dQDI\n2B1WP9AXnudew7AGdEhouZKf0EaFqwjFHcbcJ5t44kvJUwwiNPEuoxNdWH01\n2tLtmFycKm8PlnJkjh1gWMYl3dHXLBskoolccWd6wI3SnYChvWsgRLI8CEh/\nnjTBVNHNXTXnPLSXrHk0HvX3Sx31tl/clwdru2EHWoSGuVCF/ska0CvWfXk2\nCxpi+qGqxIJxsS3VtH3tX6Jn/G3ZsbuhRimbkCc/g3bA6qKTZT6GCzvYDSwl\nbiwTr0u6VmWVUNtXqXEy63kMX3Kf5zEjL8sIGmr2VyV+Ul1Eoj8mjahP5ksC\nTf71omY5uZXVTnrMRr8nA+PszLYzjOcnDGBXNj3NrMT1YmvoqQq2oVGM1pc+\n7anekJw7bfqePFu0Q7LsQ/Bw+N/Xt+/UKSscPJMlTiLrI7qlHVak1uRxUmow\nlfE+\r\n=6zVI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGw6gv9HLdHqvFewAI88sssmttD9LyNgwhI/OonfyyovAiAOQLugAgiwafcsXFThvY0SqkPNwxdB2qfLat7R5I6N/A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.0.0-beta.1_1602079975899_0.2732153588900652"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0-beta.2": {
      "name": "@serverless/platform-client",
      "version": "3.0.0-beta.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.events](#ServerlessSDK+events) : <code>object</code>\n    - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n    - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>Promise.&lt;null&gt;</code>~~\n  - [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n    - [.register(url, [options])](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list([options])](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - [.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>\n  - [.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>\n  - [.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>\n  - [.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>\n  - [.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>\n  - [.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>\n  - [.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>\n  - [.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)\n  - [.listApps(orgName)](#ServerlessSDK+listApps)\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProvidersByOrgServiceInstance)\n  - [.getProvidersByLink(orgUid, linkType, linkUid)](#ServerlessSDK+getProvidersByLink)\n  - [.getAllowedProviders()](#ServerlessSDK+getAllowedProviders)\n  - [.connect()](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName, instanceStatus)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.saveInstance(instanceRecord)](#ServerlessSDK+saveInstance)\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, credentials, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+events\"></a>\n\n### serverlessSDK.events : <code>object</code>\n\nPublish and retrieve Serverless Platform Events\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.events](#ServerlessSDK+events) : <code>object</code>\n  - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n  - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>Promise.&lt;null&gt;</code>~~\n\n<a name=\"ServerlessSDK+events.publish\"></a>\n\n#### events.publish(event) ⇒ <code>Promise.&lt;null&gt;</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a `200:OK` HTTP status and empty response.\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n**Example** _(user event)_\n\n```js\nsdk.config({ context: { orgUid: \"3xVy2MWGFqpGYSlRMd\" } });\nawait sdk.events.publish({\n  event: \"user.created\",\n  data: {\n    id: \"user-123\",\n    username: \"testuser\",\n  },\n});\n```\n\n**Example** _(system event)_\n\n```js\nawait sdk.events.publish({\n  event: \"entity.updated\", // follows a `<entity>[.<sub-entity>].<action>` naming convention\n  user_uid: \"user-111\", // user attributable for event action if applicable - optional\n  // either of the following properties are required to be set and if not, inherit from current sdk context\n  org_uid: \"org-42\",\n  org_name: \"serverless\",\n  // the following properties are optional and default to inheriting from current sdk context\n  app_name: \"app-222\",\n  instance_name: \"instance-333\",\n  stage_name: \"us-east-1\",\n  component_name: \"component-444\",\n  component_version: \"1.2.3\",\n  data: {\n    // event payload - required and must match the format below\n    object: {\n      // Serverless Platform object targeted by action\n      object: \"name\",\n      // ...properties\n    },\n    previous_attributes: {\n      // only set on `*.updated` event types and contains modified property values as of before the update\n      //...properties\n    },\n  },\n});\n```\n\n<a name=\"ServerlessSDK+events.get\"></a>\n\n#### events.get(uid) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nRetrieve a Serverless Platform Event.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - An event object if a valid id was provided.\n\n| Param | Type                | Description                 |\n| ----- | ------------------- | --------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched. |\n\n**Example**\n\n```js\nconst event = await sdk.events.get(\"evt_EsbM82sYTVscqYvcD4CKcLe1\");\nconsole.log(JSON.stringify(event, null, 2));\n// outputs:\n// {\n//   \"uid\": \"evt_EsbM82sYTVscqYvcD4CKcLe1\",\n//   \"event\": \"member.invite.sent\",\n//   \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//   \"user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//   \"object\": \"event\",\n//   \"created\": 1600686488878,\n//   \"data\": {\n//     \"object\": {\n//       \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//       \"role\": \"collaborator\",\n//       \"invited_by_user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//       \"created\": \"2020-09-21T11:08:08.603Z\",\n//       \"recipient_email\": \"dev@serverless.com\",\n//       \"org_name\": \"serverless\",\n//       \"object\": \"invite\"\n//     }\n//   }\n// }\n```\n\n<a name=\"ServerlessSDK+events.list\"></a>\n\n#### events.list([options]) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nList all Serverless Platform events.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` Object. If no more events are available, the resulting array will be empty.\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| [options]              | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                                                                                                                                           |\n| options.org_name       | <code>string</code> | Name of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                                                                                                                                          |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n**Example**\n\n```js\nconst events = await sdk.events.list({\n  event: \"member.invite.accepted\",\n  created: {\n    gte: 1600686488878,\n  },\n  limit: 1,\n});\nconsole.log(JSON.stringify(events, null, 2));\n// outputs:\n// {\n//   \"object\": \"list\",\n//   \"data\": [\n//     {\n//       \"uid\": \"evt_DdUCdz2tsY7gZr1a9Z6Xw9BD\",\n//       \"event\": \"member.invite.accepted\",\n//       \"object\": \"event\",\n//       \"created\": 1600707548900,\n//       \"data\": {\n//         \"object\": {\n//            \"object\": \"invite\",\n//            \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//            \"role\": \"collaborator\",\n//            \"invited_by_user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//            \"recipient_email\": \"dev@serverless.com\",\n//            \"org_name\": \"serverless\",\n//            \"created\": \"2020-09-21T11:08:08.603Z\",\n//         }\n//       }\n//     }\n//   ]\n// }\n```\n\n<a name=\"ServerlessSDK+events.send\"></a>\n\n#### ~~events.send(event) ⇒ <code>Promise.&lt;null&gt;</code>~~\n\n**_Deprecated_**\n\nDispatches a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a `200: OK` HTTP status and empty response.  \n**See**: [publish](#ServerlessSDK+events.publish)\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n<a name=\"ServerlessSDK+webhooks\"></a>\n\n### serverlessSDK.webhooks : <code>object</code>\n\nRegister, modify and query Serverless Platform Event Webhooks\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n  - [.register(url, [options])](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.list([options])](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+webhooks.register\"></a>\n\n#### webhooks.register(url, [options]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRegisters a webhook endpoint to receive Serverless Platform events.\n\nEndpoint should be able to receieve JSON formatted events as a HTTP POST payload.\nFurthermore, a `3` second timeout limit is enforced on event delivery with no additional retries performed.\nThe following HTTP headers are set on the POST request:\n| Header | Value |\n| ----------------------- | ------------------------------- |\n| `Content-type` | `application/json` |\n| `X-Serverless-Event` | Event type |\n| `X-Serverless-Delivery` | Unique delivery ID |\n| `User-Agent` | Prefix of `Serverless-Webhook/` |\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Registered webhook endpoint.\n\n| Param                         | Type                              | Description                                                                                                                                                                                                                                      |\n| ----------------------------- | --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| url                           | <code>string</code>               | HTTP webhook endpoint URL.                                                                                                                                                                                                                       |\n| [options]                     | <code>Object</code>               | Registration options.                                                                                                                                                                                                                            |\n| options.description           | <code>string</code>               | An optional description of what the webhook is used for.                                                                                                                                                                                         |\n| options.org_uid               | <code>string</code>               | UID of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context. If registering a Serverless Platform system webhook, use a special wildcard value of `'*'` to consume events generated from _all_ orgs. |\n| options.org_name              | <code>string</code>               | Name of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                        |\n| options.filter                | <code>Object</code>               | Optionally, filter which events this endpoint should receive.                                                                                                                                                                                    |\n| options.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                                                                                                                                                   |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.register(\n  \"https://postb.in/1598300732037-0682672155089\",\n  { description: \"This is my webhook, I like it a lot\" }\n);\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"*\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.list\"></a>\n\n#### webhooks.list([options]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all regsitered webhook endpoints.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array, with each entry being a `webhook` object.\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                           |\n| ---------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [options]              | <code>Object</code> | List options.                                                                                                                                                                                                                                                                                                         |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is a webhook endpoint object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `whe_foo`, your subsequent call can include `starting_after=whe_foo` in order to fetch the next page of the list. |\n| options.limit          | <code>number</code> | A limit on the number of webhook endpoints to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                  |\n\n**Example**\n\n```js\nconst webhooks = await sdk.webhooks.list({\n  limit: 1,\n});\nconsole.log(JSON.stringify(webhooks, null, 2));\n// outputs:\n// {\n//   \"object\": \"list\",\n//   \"data\": [\n//     {\n//       \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//       \"object\": \"webhook_endpoint\",\n//       \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//       \"description\": \"This is my webhook, I like it a lot\",\n//       \"filter\": {\n//         \"enabled_events\": [\"*\"]\n//       },\n//       \"status\": {\n//         \"disabled\": false,\n//         \"most_recent_delivery\": {\n//           \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n//           \"response_status_code\": 200,\n//           \"response_headers\": {\n//             \"content-length\": \"12\",\n//             \"connection\": \"close\",\n//             \"content-type\": \"application/json\"\n//           },\n//           \"request_headers\": {\n//             \"User-Agent\": \"Serverless-Webhook/0.1\",\n//             \"Content-type\": \"application/json\",\n//             \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n//             \"X-Serverless-Event\": \"test.webhook.send2\"\n//           },\n//           \"response_text\": \"{\\\"ok\\\": true}\",\n//           \"error_message\": null,\n//           \"timestamp\": 1599595612876\n//         }\n//       },\n//       \"created\": 1599591851267,\n//       \"updated\": 1599595613099\n//     },\n//   ]\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.get\"></a>\n\n#### webhooks.get(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieves a webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A webhook endpoint if a valid webhook endpoint ID was provided.\n\n| Param | Type                | Description          |\n| ----- | ------------------- | -------------------- |\n| uid   | <code>string</code> | Webhook endpoint ID. |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.get(\"whe_FPYDtTL37ye13m3sJvtcdyuF\");\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\"*\"]\n//   },\n//   \"status\": {\n//     \"disabled\": false,\n//     \"most_recent_delivery\": {\n//       \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n//       \"response_status_code\": 200,\n//       \"response_headers\": {\n//         \"content-length\": \"12\",\n//         \"connection\": \"close\",\n//         \"content-type\": \"application/json\"\n//       },\n//       \"request_headers\": {\n//         \"User-Agent\": \"Serverless-Webhook/0.1\",\n//         \"Content-type\": \"application/json\",\n//         \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n//         \"X-Serverless-Event\": \"test.webhook.send2\"\n//       },\n//       \"response_text\": \"{\\\"ok\\\": true}\",\n//       \"error_message\": null,\n//       \"timestamp\": 1599595612876\n//     }\n//   },\n//   \"created\": 1599591851267,\n//   \"updated\": 1599595613099\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.update\"></a>\n\n#### webhooks.update(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nUpdates the registered webhook endpoint. You may edit the url, description, the list of filters, and the status of your endpoint.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Updated webhook endpoint.\n\n| Param                         | Type                              | Description                                                                                                                |\n| ----------------------------- | --------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| uid                           | <code>string</code>               | Webhook endpoint ID.                                                                                                       |\n| updates.url                   | <code>string</code>               | HTTP webhook endpoint url, if updating.                                                                                    |\n| updates.description           | <code>string</code>               | An optional updated description of what the webhook is used for.                                                           |\n| updates.filter                | <code>Object</code>               | Optionally, update filter which events this endpoint should receive. An existing filter can reset by setting it to `null`. |\n| updates.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                             |\n| updates.status.disabled       | <code>boolean</code>              | Enable/disable the webhook endpoint.                                                                                       |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.update(\"whe_FPYDtTL37ye13m3sJvtcdyuF\", {\n  url: \"http://437f01fa092e.ngrok.io\",\n  filter: {\n    enabled_events: [\"user.created\", \"member.invite.sent\"],\n  },\n});\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"http://437f01fa092e.ngrok.io\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"user.created\",\n//       \"member.invite.sent\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978,\n//   \"updated\": 1602078663800\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.delete\"></a>\n\n#### webhooks.delete(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDeletes the webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An object with the deleted webhook endpoints’s ID if a valid webhook endpoint ID was provided. Otherwise, this call throws an error, such as if the webhook endpoint has already been deleted.\n\n| Param | Type                | Description          |\n| ----- | ------------------- | -------------------- |\n| uid   | <code>string</code> | Webhook endpoint ID. |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.delete(\"whe_FPYDtTL37ye13m3sJvtcdyuF\");\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"http://437f01fa092e.ngrok.io\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"user.created\",\n//       \"member.invite.sent\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978,\n//   \"updated\": 1602078663800\n// }\n```\n\n<a name=\"ServerlessSDK+config\"></a>\n\n### serverlessSDK.config() ⇒ <code>null</code>\n\nUpdates the SDK configuration\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK();\nsdk.config({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+getDomain\"></a>\n\n### serverlessSDK.getDomain(serviceName) ⇒ <code>string</code>\n\nGets a domain for a specific service: 'engine', 'registry', 'events-streaming'\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>string</code> - The domain of that service.\n\n| Param       | Type                | Default           | Description                                                          |\n| ----------- | ------------------- | ----------------- | -------------------------------------------------------------------- |\n| serviceName | <code>string</code> | <code>null</code> | The name of the Serverless Platform Service you want the domain for. |\n\n<a name=\"ServerlessSDK+getUser\"></a>\n\n### serverlessSDK.getUser() ⇒ <code>object</code>\n\nGet User account\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a user record.  \n<a name=\"ServerlessSDK+getUserMeta\"></a>\n\n### serverlessSDK.getUserMeta() ⇒ <code>object</code>\n\nGet User account meta information.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of custom \"meta\" information.  \n<a name=\"ServerlessSDK+saveUserMeta\"></a>\n\n### serverlessSDK.saveUserMeta(userMeta) ⇒ <code>object</code>\n\nUpdates User account meta information. This method fetches meta information and merges it with the meta object you provide before saving. Please note that this does a shallow merge and not a deep merge. That means nested properties might be replaced.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of User data.\n\n| Param    | Type                | Description                                                                        |\n| -------- | ------------------- | ---------------------------------------------------------------------------------- |\n| userMeta | <code>object</code> | An object of new userMeta that will be automaticaly merged with the old user meta. |\n\n<a name=\"ServerlessSDK+validateUserAndOrgName\"></a>\n\n### serverlessSDK.validateUserAndOrgName(userAndOrgName) ⇒ <code>array</code>\n\nValidates whether a potential User and Organization name meets the Platform requirements. Most importantly, this calls the Platform to validate whether the User and Organization names are already taken. This method is necessary because every User must have an Organization and we want to be sure both namespaces are availbale, before creating one or the other. In the future, both of these records should be created in the back-end, not on the client-side. Until then, this method is essential.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>array</code> - Returns an array of validation errors, if any. Otherwise, returns null.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createUserAndOrg\"></a>\n\n### serverlessSDK.createUserAndOrg(userAndOrgName) ⇒ <code>object</code>\n\nIn the Serverless Platform, every User must have an Organization by default. This method creates both a User and an Organization record, at the same time. Please note, the endpoint called is specific to Tenants (Organizations), which also has User creation logic within it. This API design is non-sensible and we should consider a better API design ASAP. Until then, this method abstracts over that.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                        |\n| -------------- | ------------------- | ---------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the User and Org name. |\n\n<a name=\"ServerlessSDK+createOrg\"></a>\n\n### serverlessSDK.createOrg(userAndOrgName) ⇒ <code>object</code>\n\nCreates an Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the newly create Organization.\n\n| Param          | Type                | Description                                                                                                                                                                      |\n| -------------- | ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| userAndOrgName | <code>string</code> | The name of the Organization you wish to create. WARNING: This also creates a User record if one does not exist under this Organization name. This API design needs improvement. |\n\n<a name=\"ServerlessSDK+getOrgByName\"></a>\n\n### serverlessSDK.getOrgByName(orgName) ⇒ <code>object</code>\n\nGets an Organization by Organization name.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns the Organization record.\n\n| Param   | Type                | Description                                        |\n| ------- | ------------------- | -------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Organization you wish to retrieve. |\n\n<a name=\"ServerlessSDK+listOrgs\"></a>\n\n### serverlessSDK.listOrgs(username) ⇒ <code>object</code>\n\nLists Organizations by User, whether the User is an Owner or a Member of a given Organization.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns an array of Organizations\n\n| Param    | Type                | Description                                                |\n| -------- | ------------------- | ---------------------------------------------------------- |\n| username | <code>string</code> | The name of the User whose Organizations you wish to list. |\n\n<a name=\"ServerlessSDK+createApp\"></a>\n\n### serverlessSDK.createApp(orgName) ⇒ <code>object</code>\n\nCreate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the newly created Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                  |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization you wish to create an Application in.                                                                                                                           |\n| app.name               | <code>string</code> |                   | The name of the Application.                                                                                                                                                                 |\n| app.description        | <code>string</code> |                   | The description of the Application.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+updateApp\"></a>\n\n### serverlessSDK.updateApp(orgName) ⇒ <code>object</code>\n\nUpdate an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a data object of the updated Application\n\n| Param                  | Type                | Default           | Description                                                                                                                                                                                                                |\n| ---------------------- | ------------------- | ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgName                | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to.                                                                                                                                                                   |\n| app.name               | <code>string</code> |                   | The name of the Application you wish to update. This property cannot be updated due to current data modeling issues.                                                                                                       |\n| app.description        | <code>string</code> |                   | The description of the Application. This property can be updated.                                                                                                                                                          |\n| app.deploymentProfiles | <code>object</code> |                   | An object of deployment profiles and stages. This property can be updated. This structure is a bit confusing. Look at the back-end service for more details and hopefully we can design this more elegantly in the future. |\n\n<a name=\"ServerlessSDK+deleteApp\"></a>\n\n### serverlessSDK.deleteApp(orgName, appName)\n\nDelete an Application within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n| appName | <code>string</code> | <code>null</code> | The name of the Application you wish to delete.          |\n\n<a name=\"ServerlessSDK+listApps\"></a>\n\n### serverlessSDK.listApps(orgName)\n\nList all Applications within an Organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type                | Default           | Description                                              |\n| ------- | ------------------- | ----------------- | -------------------------------------------------------- |\n| orgName | <code>string</code> | <code>null</code> | The name of the Organization the Application belongs to. |\n\n<a name=\"ServerlessSDK+createInitToken\"></a>\n\n### serverlessSDK.createInitToken(orgName)\n\nCreate an initToken for a user and organization\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param             | Type                              | Default           | Description                                                                                  |\n| ----------------- | --------------------------------- | ----------------- | -------------------------------------------------------------------------------------------- |\n| orgName           | <code>string</code>               | <code>null</code> | The name of the Organization the Init Token belongs to.                                      |\n| template.type     | <code>string</code>               |                   | Must be either s3, github, or existing.                                                      |\n| template.commands | <code>Array.&lt;string&gt;</code> |                   | Array of commands executed by the user's shell env in order to fetch and set up the template |\n\n<a name=\"ServerlessSDK+getInitToken\"></a>\n\n### serverlessSDK.getInitToken(initTokenUid)\n\nGet an initToken by UID\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Description                       |\n| ------------ | ------------------- | --------------------------------- |\n| initTokenUid | <code>string</code> | Unique identifier of an initToken |\n\n<a name=\"ServerlessSDK+createProvider\"></a>\n\n### serverlessSDK.createProvider(orgUid, data)\n\nCreate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n| data   | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+updateProvider\"></a>\n\n### serverlessSDK.updateProvider(orgUid, providerUid, data)\n\nUpdate a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n| data        | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProvider\"></a>\n\n### serverlessSDK.deleteProvider(orgUid, providerUid)\n\nDelete a provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+createProviderLink\"></a>\n\n### serverlessSDK.createProviderLink(orgUid, linkType, linkUid, providerUid)\n\nCreate a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+deleteProviderLink\"></a>\n\n### serverlessSDK.deleteProviderLink(orgUid, linkType, linkUid, providerUid)\n\nDelete a providerLink\nLink type can be either `service` or `instance`\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| linkType    | <code>\\*</code> |\n| linkUid     | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProviders\"></a>\n\n### serverlessSDK.getProviders(orgUid)\n\nList providers by OrgUid\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param  | Type            |\n| ------ | --------------- |\n| orgUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvider\"></a>\n\n### serverlessSDK.getProvider(orgUid, providerUid)\n\nGet a Provider\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| providerUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByOrgServiceInstance\"></a>\n\n### serverlessSDK.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)\n\nGet providers by org, service, and instance\nConfiguration set at the instance level will override\ndefaults set at the service level\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param       | Type            |\n| ----------- | --------------- |\n| orgUid      | <code>\\*</code> |\n| serviceUid  | <code>\\*</code> |\n| instanceUid | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getProvidersByLink\"></a>\n\n### serverlessSDK.getProvidersByLink(orgUid, linkType, linkUid)\n\nList providers by Link\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param    | Type            |\n| -------- | --------------- |\n| orgUid   | <code>\\*</code> |\n| linkType | <code>\\*</code> |\n| linkUid  | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getAllowedProviders\"></a>\n\n### serverlessSDK.getAllowedProviders()\n\nReturns the list of supported providers\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+connect\"></a>\n\n### serverlessSDK.connect() ⇒ <code>null</code>\n\nEstablishes a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param                       | Type                  | Description                                                          |\n| --------------------------- | --------------------- | -------------------------------------------------------------------- |\n| options.orgName             | <code>string</code>   | Name of the Serverless Platform Org.                                 |\n| options.orgUid              | <code>string</code>   | ID of the Serverless Platform Org.                                   |\n| options.onEvent             | <code>function</code> | A function that handles events recieved from the Serverless Platform |\n| options.filter              | <code>string</code>   | Filters which events this connection should receive                  |\n| options.filter.stageName    | <code>string</code>   | Tells the SDK to only receive events on a specific stage             |\n| options.filter.appName      | <code>string</code>   | Tells the SDK to only receive events on a specific app               |\n| options.filter.instanceName | <code>string</code>   | Tells the SDK to only receive events on a specific service           |\n\n<a name=\"ServerlessSDK+disconnect\"></a>\n\n### serverlessSDK.disconnect() ⇒ <code>null</code>\n\nDisconnects a websockets connection with the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+isConnected\"></a>\n\n### serverlessSDK.isConnected() ⇒ <code>boolean</code>\n\nChecks if the SDK is currently connected to the Serverless Platform\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>boolean</code> - Will return true if the websocket connection is active.  \n<a name=\"ServerlessSDK+unpublishFromRegistry\"></a>\n\n### serverlessSDK.unpublishFromRegistry(registryPackage)\n\nUnpublishes a package from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+publishToRegistry\"></a>\n\n### serverlessSDK.publishToRegistry(registryPackage) ⇒ <code>object</code>\n\nPublishes a package to the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - The published registry package is returned from the Platform API.\n\n| Param           | Type            | Description                                                |\n| --------------- | --------------- | ---------------------------------------------------------- |\n| registryPackage | <code>\\*</code> | An object containing the properties of a registry package. |\n\n<a name=\"ServerlessSDK+getFromRegistry\"></a>\n\n### serverlessSDK.getFromRegistry(name, version) ⇒ <code>object</code>\n\nFetches package/s from the registry\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a registry package from the Registry.\n\n| Param   | Type            | Default       | Description                                                                                                                       |\n| ------- | --------------- | ------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| name    | <code>\\*</code> | <code></code> | The name of the registry package to fetch. If this is not provided, this method will return a list of everything in the registry. |\n| version | <code>\\*</code> | <code></code> | The version of the registry package to fetch. If this is not provided, this method will always return the latest version.         |\n\n<a name=\"ServerlessSDK+generateInstanceId\"></a>\n\n### serverlessSDK.generateInstanceId(orgUid, stageName, appUid, instanceName) ⇒ <code>object</code>\n\nReturns a properly formatted ID for an Instance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a properly formatted ID for an Instance\n\n| Param        | Type            | Description                                      |\n| ------------ | --------------- | ------------------------------------------------ |\n| orgUid       | <code>\\*</code> | The Uid of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | The name of the Serverless Platform Stage.       |\n| appUid       | <code>\\*</code> | The Uid of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | The name of the Serverless Platform Instance.    |\n\n<a name=\"ServerlessSDK+validateInstance\"></a>\n\n### serverlessSDK.validateInstance(instanceToValidate) ⇒ <code>object</code>\n\nValidates the properties of an Instance, as well as auto-corrects shortened syntax (e.g. org => orgName)\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a validated, formatted version of the Instance\n\n| Param              | Type            | Description                                            |\n| ------------------ | --------------- | ------------------------------------------------------ |\n| instanceToValidate | <code>\\*</code> | The Serverless Platform Instance you want to validate. |\n\n<a name=\"ServerlessSDK+createInstance\"></a>\n\n### serverlessSDK.createInstance(orgName, stageName, appName, instanceName, instanceStatus) ⇒ <code>object</code>\n\nReturns a new Instance as a Javascript object.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n**Returns**: <code>object</code> - Returns a new Instance definition as a Javascript Object.\n\n| Param          | Type            | Default               | Description                                       |\n| -------------- | --------------- | --------------------- | ------------------------------------------------- |\n| orgName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Organization. |\n| stageName      | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Stage.        |\n| appName        | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Application.  |\n| instanceName   | <code>\\*</code> | <code></code>         | The name of the Serverless Platform Instance.     |\n| instanceStatus | <code>\\*</code> | <code>inactive</code> | The status of the instance                        |\n\n<a name=\"ServerlessSDK+saveInstance\"></a>\n\n### serverlessSDK.saveInstance(instanceRecord)\n\nSaves an instance record, defined by createInstance\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param          | Type            |\n| -------------- | --------------- |\n| instanceRecord | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+getInstance\"></a>\n\n### serverlessSDK.getInstance(orgName, stageName, appName, instanceName)\n\nGet an Instance from the Serverless Platform by it's name and the names of its Organization, Stage, Application.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            | Default       | Description                                       |\n| ------------ | --------------- | ------------- | ------------------------------------------------- |\n| orgName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Organization. |\n| stageName    | <code>\\*</code> | <code></code> | The name of the Serverless Platform Stage.        |\n| appName      | <code>\\*</code> | <code></code> | The name of the Serverless Platform Application.  |\n| instanceName | <code>\\*</code> | <code></code> | The name of the Serverless Platform Instance.     |\n\n<a name=\"ServerlessSDK+listInstances\"></a>\n\n### serverlessSDK.listInstances(orgName, orgUid)\n\nList all Component Instances within an Org, given an org name or org UId\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param   | Type            | Default       | Description                                      |\n| ------- | --------------- | ------------- | ------------------------------------------------ |\n| orgName | <code>\\*</code> | <code></code> | Optional. Must include either orgName or orgUid. |\n| orgUid  | <code>\\*</code> |               | Optional. Must include either orgName or orgUid. |\n\n<a name=\"ServerlessSDK+run\"></a>\n\n### serverlessSDK.run(action, instanceData, credentials, options)\n\nRun an action on a Component Instance. Is an asynchronous call by default, but you can perform this synchronously if you set `options.sync`. Please note that synchronous runs have a 24 second timeout limit. That is not ideal for long operations, and is not recommended for deployments.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type            |\n| ------------ | --------------- |\n| action       | <code>\\*</code> |\n| instanceData | <code>\\*</code> |\n| credentials  | <code>\\*</code> |\n| options      | <code>\\*</code> |\n\n<a name=\"ServerlessSDK+runFinish\"></a>\n\n### serverlessSDK.runFinish(method, instanceData)\n\nRun Finish\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param        | Type                | Default           | Description                                      |\n| ------------ | ------------------- | ----------------- | ------------------------------------------------ |\n| method       | <code>string</code> | <code>null</code> | The action that was performed on the Component.  |\n| instanceData | <code>object</code> |                   | An object representing your Instance definition. |\n\n<a name=\"ServerlessSDK+deploy\"></a>\n\n### serverlessSDK.deploy()\n\nPerforms a 'deploy' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+remove\"></a>\n\n### serverlessSDK.remove()\n\nPerforms a 'remove' action and polls the 'getInstance' endpoint until its 'instanceStatus' reflects a successful deployment, or error.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+startInterceptingLogs\"></a>\n\n### serverlessSDK.startInterceptingLogs(eventType, context)\n\nIntercepts console 'log' 'debug' and 'error' methods, and sends their data to the Serverless Platform as an Event, before writing to stdout.\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n| Param     | Type            | Default       | Description                                                                 |\n| --------- | --------------- | ------------- | --------------------------------------------------------------------------- |\n| eventType | <code>\\*</code> | <code></code> | Optional. The event name used to publish logs. Defaults to \"instance.logs\". |\n| context   | <code>\\*</code> |               | Optional. Additional context added to the published log data.               |\n\n<a name=\"ServerlessSDK+stopInterceptingLogs\"></a>\n\n### serverlessSDK.stopInterceptingLogs()\n\nStop intercepting console methods\n\n**Kind**: instance method of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n## Publishing the SDK\n\nBefore publishing the SDK, be sure to run the pre-publish script, which browserifies the code and updates its documentation, by running: `npm run pre-publish` within the `sdk` folder.\n\n---\n\n&copy; Serverless Inc.\n",
      "readmeFilename": "README.md",
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.0.0-beta.2",
      "_nodeVersion": "14.5.0",
      "_npmVersion": "6.14.5",
      "dist": {
        "integrity": "sha512-1BLwasp/Rf2yCaOpP2T8BWZWkK4IEntuCaGrTxbNBInu4p3KCFkcTtK9w3pDpsIEGfp2PfKiRhyVrMu9hXkxVA==",
        "shasum": "14a1f3131caef8b1497a61ca1b6fba04e0994cde",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.0.0-beta.2.tgz",
        "fileCount": 12,
        "unpackedSize": 753268,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffc3cCRA9TVsSAnZWagAAzMkQAIWGuL1nAFnCou1/yc2f\nSuSkQMKi8L6tRRM8Q/q/0dqljlHDLxGk36TzSkQeQN+D6nxlMJPz/PMHBI5V\nkRstkOx+M413/xeYKXLXANLjFUhEqzqhqa5I3uHWqN/u7E/i0MJqjQaSfXOf\no5phEr1t/CQAQ8U6zJvI7+vPPhurfxK5fmnQfEk3bXE/hz1M73iqMOPWDybj\nETg+ma6gzDQi/Mua/ey2LaBwrxk8aTQYbeeFmvMtfYPyCeK9s4dMfvjBHjo8\nC6pRU/kme/038rGE64He5C1qqx7Hex9c1g7xcWkRGxjZaQHKhDSJRhahp5Ci\nS4vLD0SLkEM5endRUPu+ogJGGDGGaN3ENZ/nz2PE9XqjGZOxk3lhs1Krqdoe\nsSAUcHUoAiLpNXA9BCCr4kcPFljsZU9+CPMmsFk7tE+i1A3q0Dh2LBobjD2r\nXM9KA7qAnTGnWDy/X30lzhq+Cdhz6UzeN5/PVY7yde05cuG89473PYWIBcEi\nUa2rKNbCFDCOBg1Nvn7CXIIj78NioHtzJtJNsaCrcQkJApuBWNeaD//EDTCi\nfKDBv/IOpNq2ur92DRs9EQR0lXZmiW0YNXQEHB8szgHZJIp6Co3SWYQ0XjTb\neQzCSeIIHjqO0xBEMDqXScaIZDxdcS8v/ssIGX4hZcDU6/Wdh1CCIQHDs44k\nrsnM\r\n=1uBz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEw3zmU154CKAPZBOu/+dg2LPDFckmuGpj5iaz2rRMB7AiEAmbu0BNG8p3FvtxOsn4alHnTpCa1OtL2ijgtVAFhmmSY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "scouredimage",
        "email": "scouredimage@gmail.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.0.0-beta.2_1602080220164_0.7757521559812719"
      },
      "_hasShrinkwrap": false
    },
    "3.0.0": {
      "name": "@serverless/platform-client",
      "version": "3.0.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.0.0",
      "_nodeVersion": "14.11.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-5pIfj+i1CRuWSLyh0zDCqDOXqO4RQFdzlvJcr5NuXx4Uv0HYhS2KqgkwmCBruW4WENyKVNKFiwlUldAAouUzyg==",
        "shasum": "122cd57763d5dbefa58be7eab612f106855dae61",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.0.0.tgz",
        "fileCount": 12,
        "unpackedSize": 678451,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffdhlCRA9TVsSAnZWagAAnEQP/RhNnspKTLu9GBNJx9c8\n2ZfY5BHupfPYZcOudIiOTrShUDgm4teotoRxYJ4puRWa1q9QLO9jmkb0qMrK\n90Af0R5e/aSfdcH6Ygm2dKBRYja86232kPEHO9ZpzjdmA4T6GNqe0FbEpPoN\ndMTO5IVVoteYzRcxFLEwoNuY21Af3ljtf0trR9n1oZoGhYKZ833LAiHJTElo\nLKnHPB6oBvjKLEX4X9mEDG7FCaqPitsGuxADnk00I98YYglvxMqm8Q4mf1rW\nVx/82PmS7cK+qZ62rU+F9B4vLevGACshd8I3uwHW5l7gAp5pve3ha0ZqV8xj\nVtMdsww5XzzeCEGE7AmvxURk4wX3yxdCCgHx4YrCwBnmduInxUBPDHU/fdHU\nmONoNp342s2Ixicxr7LTX7945OiDhbJVeNLHX+Slc8OcZEI/9W9hxba2gPUq\nUqNqyqyyTZwPuxKwTl/E/BkJGU/CUbPaRTPN7/3i/uDA92b1bBjGmK3W8Jlg\nY3eBBPoWdaQi8RicY5bCgcMS/lKxOK/RTWpTD2rST5Tao6wz0kYAcwfZZGAv\nABrX8VCrs0wXRik93scmO3e2L1DY/2y0bMcqtglP5tBQjjNMputStLoOlrKa\n3utHm2DxTOG11twlDLSwJDuprua+RsUo9Itz9LMC2ngGuYzisx6zOMnXFHHa\nUEkW\r\n=f2sZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDz4EX6dNhSKWcwsXDpGmJp9GsY1E3MLdzie/bN8tAaWAiAVRP70qLF0Ih5eU2A/hve+3ny9gdnXAUl3seQ/MqXQ4A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.0.0_1602082917112_0.2766984855545773"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "@serverless/platform-client",
      "version": "3.1.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.0",
      "_nodeVersion": "14.13.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-bln4lXKcOyRNP2ezI5e1Z9Y4R3CRzI1EMkDoHz+/hG3gGzbdnz+d3lUe2pZ7RZINthTAHha4cm/Wfxz0ualrKQ==",
        "shasum": "55e15c957c316ce65bbb3c95feb1c7383543df38",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.0.tgz",
        "fileCount": 12,
        "unpackedSize": 692441,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgdKjCRA9TVsSAnZWagAAxTUP/jkd42tsz/btuMbO0Hsy\nlr2hbIKVKQqkwQUI/ZTG7ahi3f5i17WE+49hy8anYjHZsgbGrLq6eFzYBh62\nU8KJzAQEeVHQf6cACcWMqAr9KNTC2SFcC2URifhujtjFlCqdqtqbzWYBJlGQ\n1LLtEkrsS9ZWSM+yj6I7iqVt9ir8fGbcNV8VStfcPhXD7KwJxkWu6XETqrUA\nLcTMB7i+VnihFuq40TeayfAyHq4LKO2ZKbT4xVuZbiYfzApTXHA7ePKx8xwl\nWxgLzhrFTa9vfcEe8kLYEDGgJG52x51VcJamI5KXzkOuYUxG/OejPvErffXy\nDfMSHm/KpVrHlQH13WnkeE68g2jGWtxNoRou2fILjWY3XPxkLQz4sGRM8ldm\nX0C8TVQMA/tX62VQXJ8HVW6yr103hlBarwlY17w5yAtUROpxNZHMwnujrF6I\nCsTMKzCA5Aod5z39cUiKeHi5sNaTCdBPX8glKclH5npPxBXkljPYXZ1EoVIn\nSPU8CJKQRjkoZ6UPz102dnieDjf2ndebqa00tTe8M25JPdETNl4c9HnyG1jr\ndzoQntFuvjseQbHB/GhsnsKj2F8fD09eltM+1PUHEydJvmYWng2FDYmkEQcw\nlzCug1/S6UYyFzRsu5pTE0aa2XnSbrmdEqSuGeVMCZBHtrOz3ZLGImOgaR2o\nn0r1\r\n=4JCt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBPluo/iEX8PtRDB31rRwTqycbO/oZwIV1vjDnb9QvDgAiEAmlKfd5Hr/gpyhJiHmazTbPwot8HJmrpOzGEutjnI94s="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.0_1602343586948_0.8839650131515309"
      },
      "_hasShrinkwrap": false
    },
    "3.1.1": {
      "name": "@serverless/platform-client",
      "version": "3.1.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.1",
      "_nodeVersion": "14.13.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-mHlbCrr3Phs3muCFPsRkCNLpVmlGa0JFS8j3pyE4j+jWYaurr+GFZuk7kLKNzmBXgjrUUezxBPJlREVswild0Q==",
        "shasum": "44dc3a0d9eb30d0e7955bf884c34c33f8f1b41e4",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.1.tgz",
        "fileCount": 12,
        "unpackedSize": 695013,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfhyPTCRA9TVsSAnZWagAAkckQAKNgD+Ka2JFFAssQPycr\n7Bq7qAEG3C9JBCOznHcaqR1NHiRxKohcj94cv2OOGrx2Ix6EAFCepHvvEF30\nNDh+wvVsoE7kuE/oLtVjmL+hpM8hq3ooJBWxYsTjjRtIp7jLPrDtoOsLtx5y\nGEQv21WI47q0RBEbiPewxc/ncGrS84ibEZ7gMkeZWO56RbFW0qCXMjMugy7g\nM/Wxt8DF3+ZAeC9NxEetVTQ35d3Duhqsnxk71PHI1DwqkkfJiUsa9o29LmRA\n+egGGLtD6AvbM72kiuIWTKJ7zDOU1gLE+jmpY7QC4oP2thVPL8p+rDcf5kyg\nhY+S9cqRkOF/HiCpK/xXfc+IPS4LPEgLKP4j9FV9W09izP84xe9hUQ3cl9Gj\nZHrbY22C7SIkcpjfLDpXZvZmCyXo400OjtR1M07N2TgIH9QEM8c5iG1kw4vH\nL+uQvymh/OxAjqyfZTNGJJMNjXqup1cXuXJPz89zDoziKIoo1if1eNSG5RwO\nqhrH7H5/N/BqcUHt6cP1RKI0nI3yZcq3GS8PnLj/o7qFXZng1cbGZnZ6ViYc\nh2bXpsjwSIHjfV5xrCe0ew19z3WgS44T6vpf3SV9UbNmrUzCBQcMnLtnsGIJ\nVjyYWn/tUkzRBmFja/kWKN6brE4tqphvKnrCpcEszMsOftTZVmDI5T2rnVXb\nA9Gs\r\n=VO/y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCcNSb6EC9QlkyPEieN74p0J1pzjwIe3Wx4qrgFT66B0AIgC8Gjw61rwX2I/7xrZYySJLJRBLSVNbjUadXusmeAwTo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.1_1602692050459_0.4171834315377243"
      },
      "_hasShrinkwrap": false
    },
    "3.1.2": {
      "name": "@serverless/platform-client",
      "version": "3.1.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.2",
      "_nodeVersion": "14.13.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-zTJBhzjWtDBogLFnzoz6NYiQ6CThsxuvHQxSbBLcNK4+VQPIkrZOxaQ+dNCNLeLN1Tb3NnZDPNGkoThvgGwq3Q==",
        "shasum": "2bf283bf2a21b1d05d650b90188bf2a3dd29bc7d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.2.tgz",
        "fileCount": 12,
        "unpackedSize": 695287,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfiEYYCRA9TVsSAnZWagAASv4P/3PkbeJMykl9tuzr6irg\nyMItBbxRpAQNVm2ZrUa0fW7j6RAV0z4aHIdF+eQwmCi7+vOVd+UzbUDkgdAS\ncWqqaittLjujN+Gtv4cktgUvdk+Js4Ed8x4Cwf2VfdDsIBG+IY7xI8+V1dgY\neA4/79LpAsMHE2fRPDMpvD0aS0pMlwFiuk0xE09OIccCeBZ39xC1MRetCRbi\ngpYxdB65/9gYJhXPziCRWgdxXx4QDO39LsXUX6cLVzkp97M9aCv48PlL8tSV\nb9kmPm2Xf8xDEEzpXjaTuoDQIFO5PmI0m8cRDNZ5auySL8/CbnL1OUY0VaSh\n77T+OFOeqH1oSC6/ZiI4uQe6izKOWn8rS58FtwKLow/tsa9pP+OfVkmM74M9\n20NHKMpKoOyS87tI3mdj7nMfrcwov8yYH/LLwxUnR4+RRlh4+yuIT+rq+tiF\ndCWzm9y8jJe7pXGPt40TcEQOehCK1aBX58Kr7LlrzIuUX8TJ2jp26MkTlq0t\nY2VBw6kPHoKxlX70pmRUwVbBovCvmXjQYs+8SBX1DYMvtQZspJaDr2SxN3sh\nZJNXnbi4911wMt28Tq48X8UntItwC79iJyaDZupu24tb//tgdiPaybV/MVO8\nPLPB5jBYftfJ5HgWRtew9ngXkMU3p6U1ADLq0JEwoca8FPrlLQID4Rhfm7PL\nCXgK\r\n=/Egm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICVPkjLjlTo/btKwoOmrnnbYvO8eZHrkrIdgQOCsDR6KAiEAzuAnfJoW+rvoRd+3hOdKHh0nBuIZl+sa6Sq/vyXkjR8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.2_1602766359828_0.44805942630685003"
      },
      "_hasShrinkwrap": false
    },
    "3.1.3": {
      "name": "@serverless/platform-client",
      "version": "3.1.3",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.3",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-SPceEmJb42x/o/QvOvij41l7VfxL56mdh5hcUVJeqcIoicqPE54RjP8x3QHQ4nprYP296AiDcaggETXrtQ+bJQ==",
        "shasum": "f76c0078e73434398d6e9556825e0fde8d24cf00",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.3.tgz",
        "fileCount": 12,
        "unpackedSize": 681593,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxpCZCRA9TVsSAnZWagAAihIP/i8MLxfj5DZacSS+UWsu\nB8T9PkOAcAX/384S06TbKXHt/q9JTFP+zbSZaXxsZpD04lbBtCitSH5tivu2\nOVBsVTsrK/2/TkxqjftuwZYA1T8/kfna0DtwVU2Asbfvzpjz7+qDx3zlsRES\nNFVFXdY3m/hzCBtgpQ9Kh1P2/dYumHilpJTPt8DUd3ZJu7YfrwvUqXh3/9Zr\nJLnNEfbYA1IaUZn0rdTt6eJjrw2LOP5jjvSxXPIWhTYoW4sYSJ2SLDA62DHy\ntd6DYFmV4U6htUj0o0L1B4gTvmQ+f0jMo7P9SrPW98qsAObcAB7iSDmj0Gyd\nwzI4HAC3nPBw35PaRl+tec1m9MDQTDa6WhSFqVGVdFQVpcwfwPUAetDQO+CO\nVaocV81amnp3XUCpTfoY9GjLkd5njE79lbCGQdY3DZLpWqOPeWSpdQ8imwOl\n7vHXRHzGlrI09C28zA4/9SprY8W4pLKxmPeWjQFELRR+RDZxp2DjICuBOwFw\njqAf74W7PBHIiGev6dfZsCbue6wOQ3u++E1jyd4OcwUN5YnVugRpjfe+2YuF\nfGLCj8HhK9O1TNGG5Id00rK19OMhgFH1tgkJ2eN65TkXtcrYS+UKvKq121Z5\nWPj4qBRtt9ozfDy1vEGHb7gFfppXOmb6eTF+82R393Rmqvcr2vpBwIG4evdB\nHa53\r\n=lZFt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHysihF23QcrCkMuK/DKdkzV0T9ULfrsd3ykW8efjQUbAiEAvaABS8zZOg6oCRyQaZ2DlR/Oh8TX26BnuZgtmMWPeb0="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.3_1606848664857_0.6412146480375136"
      },
      "_hasShrinkwrap": false
    },
    "3.1.4": {
      "name": "@serverless/platform-client",
      "version": "3.1.4",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.19.2",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.4",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-oc65L9Dl1Xe+T5qv/fkmjYREtPzrQMdje0fC5ntvsfR3luxvSfQIinHYKbt30Qpyy2sJCBPG4IPEip7b3y0WwA==",
        "shasum": "16a4e563adc14e3805b654c0fe563785e60a8468",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.4.tgz",
        "fileCount": 12,
        "unpackedSize": 683529,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfyVYjCRA9TVsSAnZWagAA+WoP/39MbAn3yG6G5HA0z02M\nbj9OtXGzUN0S6l0oqpRmOHqF7pYiKXAe8fNc1AouLZm8pn3EoXhnBliGQTKT\nCnkRNX4WxwSfRoz5CbbR3oXieVqUT/8oy3rEWMZ52fmN02nZzqzBcWpnj70N\nOQl75s76UJ9OdD4ozkWNsmB3gmlr+ekH4i+OUNGknwFBBKJSRdUNXvKYllAG\n85X++YVjk2m1aCA8IJPPcUERWczrficxkRGg9ht45O5kB1vwBWq0ieaifGSX\nNP4A6ilX5S6jq1DykVCJ9MT9iZqXqpjQlnOnQT14T/fZcNqU/4TVc9XuaON1\nFZ1G1TFbrYh+dgAQMEm9tqENJmXJstM9H5ZUj/IVQjcz7+i6vS9UFESxKNUg\nqkY9jVNsXym3L91wcG4LPVkje7x/1NBsNpjMpbYraz2Puy9URGtIRLTUb1EO\nCgE11MYov2qB2+PWkiUmmUHtSRHYlX53jP4uTCo9hdJ4lncWxapplRtZo3NO\n8kbLB43o0fSfxcXBCnS9CV4R0GpiHFM5HkbDH1n1aAcTLAj5qJuiuS8eSFbY\nWTRfqL/vt0sSz9mJ5vQjpmvfwSHJfptqUZYRdUSfSl3cSqO7aqR8JEz06y9X\nTvDXEbMaKmFVW/L5fZBr+XsChiqiS3dVlLxjcHwYVA47487LdBLlCsUPvaZA\nSpSE\r\n=4bgU\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCA0Kfezn9Y9gCzU+/IiJzFcNEbwVAdi/O9Q7KztBDk0QIgC6KqoyBgm2lQiJAtKFS3bd15QUojuQQRkPKaFc2tips="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.4_1607030306311_0.8765052903454487"
      },
      "_hasShrinkwrap": false
    },
    "3.1.5": {
      "name": "@serverless/platform-client",
      "version": "3.1.5",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.1.5",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-hNyuyBuAY8KXStWcXjatgxO3p+eMsP7eGC3oq/AhHzB4BN0hAhmAkm05xc4s9HBhTuNO6/+kraFuSDonwHMOBA==",
        "shasum": "e0ac27c4d1c8120cda1184c584088ac85ba7bbb5",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.1.5.tgz",
        "fileCount": 12,
        "unpackedSize": 678560,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf9gIDCRA9TVsSAnZWagAAEgMQAI6Y1EeHL/GRFixVoWQI\nIq7h4lm5BCdITOOghevSHSx9imxuEvHZ4fP7NjbsHQBAEcqeEuyQSb2sgDS/\nJA3ghrrafbAAvqi7luMGuVOd9z4tIS+u/mEdfeEP05tSupFrOWzMlK2B4bNi\nHOPp0x1NR1C7qcmb6MLTjefCMVh9HjP0JRuvi/hyW54ApXyu3KzhYbGo7P5j\n5Cs8dx+N32r95ajNTFrYoGQetRMEPwzOAxhmmf3j/mtCVjLC6l/WoRuSZeE0\nBeKRQnSuvObLWbAKOd7DZZYNXlXXp7hqxQ5Ylk/yAH7vCbRmzqOVXIJoio8r\nbXchP90XEB0gpC8Ky4DV8MvD79pSRDlCeGHQ6ASt+NF/LOfL20rCo3XJYRio\n6YpspYnLEUHgV2CKiGVjuaCx7hHAq7ccz6jjN8CAaqZvnbgO+zBL4RDSJgn1\nAeoRIp2DZy2MpBMUI1ZlcGduajT+yplfXBp5xJ5J15JWwQvmjN5gz7aJJBUG\n/Ur2rn66ld2wulLygZT41peGfw549xtQ2okaCoviFnOlHhmruCRm0mipoovk\nDes6/szk7ISqWO6oCEmWjn4QAsuXIzvBCQ47igLU8jY/Z9hd/C4kv+QFIJKI\n7z+qt2iLFqa9m//A4K839Ckbf4DQP4Fp2j+rYxo3fovdefJTOegzbBADscp9\nKoGa\r\n=FjBw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCCLUni11OBrN782UDJ4NRux8zycge95RDKbshNJoTlOQIhAMD7FjaKPNLx9BN5MU0IA0e+DTeQCsFRtUVaFFw9KGP/"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.1.5_1609957891244_0.34365150566119307"
      },
      "_hasShrinkwrap": false
    },
    "3.2.0": {
      "name": "@serverless/platform-client",
      "version": "3.2.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.2.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-35RW3Etlpdx0MyXCUrxIPw+LJIjNuEffpH87Naz+aR7OtaWW0NrYwqzDD5rCsKDCXIUCTt0w4TdV/8vWvTmL7Q==",
        "shasum": "6abb3e11c908020e80c220e8f70a9830b6454935",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.2.0.tgz",
        "fileCount": 12,
        "unpackedSize": 1262451,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/HqwCRA9TVsSAnZWagAAQcYP/R8Rg3qCdCuR6Mk6tAHN\nMJT3K7sS8PZoDctXy8uF9HfJZgI7arLVano0egkpyUL3Ij1VyLOp2A3LFXvw\nZfDx+dh0DVla6ExGjxDMYBWHVl3ZxkGNaMxhVnPIgdX4EaxMkQdfUYBRQN/k\nKFTVEEtp7a8++qmmHtLrDkI98gQMbD9MwMysOwtUmVCTDYvnV1O65GH1p8an\nqmiFsxXyGnSMKt7m4KlJXsAOwl+ubvssOxQJ2FGqvNUBq4GeDpi9kbhgM3k2\np2+xqVf0FMUmIim1yf8h4tKbplQ2/CKYPwh3MvY+mNMPwoJ67w3fkch379TB\nOIwAzKsRprpAoYpCLW17Zz3Bd9lzuDuQaAqkB4pATdHPFocd/ni5VbVhvvF5\n8RZDL7FzWu5C7m6WhH6UUFbpO7cDJQuLOOexAkgOfuVaA5DnZXpWFPi9S+H4\n8UMqrnIeCgekHN2b6HnCDWWfnW5jRFT+Ru+ogut0muO4XVynGPHmZD9iUcQs\nV39ERxNCGguHQVSw69OuNIxl8SHSyzK789S0UPjmQUiAwEUPh3RnD8+WJRQH\nXmIy+igHBVI2FV52eWM6JryTPAF9z3xwUBVHs91hTPiXJgGWYGNEv8jbQiAb\nf7j5QWNXemgmQbcFq0hQ+aCnLI2Fq/vWoFb/atHrjuAHPRxnkbsan7z5g65j\nHuxB\r\n=dYnk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUGfPA7DM+19Nj7QYv6nZ1nwwKgTioLIFhJgYGlg0nTwIgF2gK9bH6bvxYrcPFmI1uf5EtAfgTwCg5tCRliYwU3bA="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.2.0_1610381999755_0.8636736958235092"
      },
      "_hasShrinkwrap": false
    },
    "3.3.0": {
      "name": "@serverless/platform-client",
      "version": "3.3.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.3.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-eOu5dZYmt/M3D6z0OInpvlE5Dl4M8pa694kCv19C6rmIqhVrWtkHFuqIdBt8tzf7qJOpAYo9iOWp23LsAUKjvg==",
        "shasum": "8c3fed23c947d6926a25741202bc1d7cb2cd6aa6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.3.0.tgz",
        "fileCount": 12,
        "unpackedSize": 678604,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/ICTCRA9TVsSAnZWagAAx7wP/2NkEgWIyRGe40Ub2mgU\nyKIYSp0GXgKHGGq0IzFFo8dg5QEX2MZDBXxQbP5igiXfOziA9RBxHVJxBrY8\na/bhgRFhJkub1AZbjt1TAWXXHHQEXZ+sUKTMdqGIXjt60nB+MICbdhBnXymC\nUu+PRmEebFXjm+Q/9ku5kVedF2+9HiBBoFuhoRrRjTSzB6sx3HvpYX9XIRR+\nRVUVZLb1gyKSDkMG3WpO0VKrEalb94CQKvF/ugEElEIrOhmPVas9uW5Sf4W9\ncjbrkkAzXYRakcEAI8im267KAqlPMY8Cu1rIoBBigY3C3jMOReC/bpwZjY4S\nQ6qgGddeJbtzpBgZ1T+wZY48LW3iuHdkT6s37PI/qjQKKcLERmiyOZJYR+QB\nwsKhBXaWf4gc30lzTY4Yo72UdUBcBVmrDxZR6CcsLK4ZS8gGgSqPH06z8vpd\n0P2ixmEb54JvKpD4lZX8t1YFOvp23Z15W/c6nYSPpECwDs06xlvNVxsyltTp\nLuf3eKXII13p9WF88eEn1jDUmMODYsvBegOunAILTz+R5yf/8yTUKceyKhv+\nK9gHIDLu1SrWD+nYZa3/qSsx51b1RbtnQlskSukvv0a2K+SMr28/H6D6Pb9e\nouWo1DdgAbuPyWP9kEWmCMpUgtAV5SRfst5cTyQt17mXtwna9e+puYDmozRE\nwoVE\r\n=I85i\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCx8Fre5vhws6aUlexhOmyBZXyMBOu4bJ67YINc3/PKjgIgXovuXhOD3PX2oq2mpSwyvQvMk5aI3Jg2/DLHZEdi8vc="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.3.0_1610383506678_0.8837079985045371"
      },
      "_hasShrinkwrap": false
    },
    "3.4.0": {
      "name": "@serverless/platform-client",
      "version": "3.4.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.4.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-iOMsluUqf7rQDalDwTRA+fuAHxk8WXCPXnMFDuTf/34q/1uRCx/xJhBNIvEUIbzZnSjiykfTIXUAcJ6kKbh6qA==",
        "shasum": "8c6c94bcbf8e22a06c07b1009c500aef238024d7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.4.0.tgz",
        "fileCount": 12,
        "unpackedSize": 1262259,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/zGSCRA9TVsSAnZWagAAVw4P+wQEV011TZf0u14rsnkr\ncvDShZD50yWNd//UF5GGtQSwcWX/5QutjAJPoFB0cnmeIntxU3T+GlEhEhAX\n0GMou87N1jx2WDaZymo26J6jhvu4+REzakI554mwWeU60coyswWG88iHt4wn\n9BeFww1gI5SddDxy2tmXr3hFCaCfRIg4oKW6IKtU2KjCBcF1egBLr2ER2yxM\nCrHMeTJDIJwakO5av4hCxdmrzmLzharXdtJYXJ/+l+v0vmOCVP/zUWabY17/\njQogwD0KI04xUzdKHxrB/W+ouRP3w4xCt4UnfHG44jbez6BCyAXC5nUDo0sS\neS4a6CeLkq09mX8Kxiy10Rup5fYsT7B9aDChAyN15iW1yx9qf/hjg1kCElg8\ncLmeKFpUkv3TMPmwreL2q7K8SZkI6b8QBTHQEZtJXhidTeUgaqcIYqeuvMb7\nuV1yJ6P2iP9mpHs08MXK58KhZz4u41RzWYoy5dESAoidaMFUQbP3ffBvJ0EZ\nG74LAOIbwOPYPISr8GOhztfP10RjVZAaGAZDIEXtxnXoac4j/hYWKOZn1F7Q\nCrHLPJfK+QRoBVd3Xm508yUf4DbFfHgOz2NavR4vLwVwO2oVpYycaOZKMELP\ncUvgUPxnGLRXMz4pqlwmAXeXapzTWYQXE8keqYMAePpw0YTF7M8HftQthvyY\nxbOJ\r\n=U3ZJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD5adkXs0VAJEldUzpAhp9+AwYUhAckExdnKjxzNjRU9gIgYWyjl9HQsovNF0QJwwenhS70H7LKjm67Axfiu6cCJbc="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.4.0_1610559889949_0.4087879574119768"
      },
      "_hasShrinkwrap": false
    },
    "3.5.0": {
      "name": "@serverless/platform-client",
      "version": "3.5.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.5.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-3ODkEh6LC00cLD7X2WkCOyGfsQxo5rOZmhFX9/w0p/qTOyF0Sw4uFCY/m4ZjnwFcu0cl9k5yUwRt0sbjn7UejQ==",
        "shasum": "c33238b06a77841d1b7f391942c3d4df5d256f1f",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.5.0.tgz",
        "fileCount": 12,
        "unpackedSize": 1263089,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgBjoMCRA9TVsSAnZWagAAjiAQAIF3OEKP1okSm/hvVZQQ\n+KoDUeerIScIckIYVY11+ijr1BD826byWoY2i3adUweR/twwgJPG01rdAc7R\nWDb4Q/D0REq+Trn0f2OWvFzQ0LxwOdgqdiXbZ8WA8QOgm/v+iP42JwcYUegq\nnNVlxbmhq9/nBvk4Gj257e3GHTKeC7f5tOskIPwPGIz4UrRZf75zY1OeBZ0p\nFEs23AQzHyRjgayt3nMhNeGVWK3QBalqdxn0WKQoX+m4CdFOEHohfHArGpll\nPHhfEKqIbZ+mFFPGlQn1u8mLC42wCqcdGAhjpsEFNJXYVD1EctJ7bGRGXe3t\nxqTd0gOC7k01dzfMgTRM2jDPT1qiDak+WOVyEmlA/fGUxIr5TiNCyp2ycVbg\nKPxKggO76G1IXQD7aoprUsjdYHd4Mt2c1aZYTrQNw1wGA07ec8dwU6PmWTD0\n1jTzW+XvgCbI4Mgz8dK9A0/c9eWddga9X1LAA5EAaTubgETqMrU1QOzDg2t2\npOq2qxL7P/bsj4LRePbGKb5jaWl9RPKcquHEF/FtJv+d29Yp6WUs2n23dD5U\nj2mEg66ImCUpA8E6d9+a1oi/PH0D3jUdVTADo+Cmky6WX4dAC8vq/ergkj4U\njBxq6eT1UerInFrJTEi3AY3ik7iI1eUKNCY+lC1f0kEmV6sEaV5FGD+XR9Mn\nXtje\r\n=HakQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIArfSOWUnDsDei4k9wn+WPtsSu0P5sZtbhf4ISPwme0+AiEAofkXyGeRYIFNc0v4qRzo8rt/7ntA7/YIk8PO8hm3fDY="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.5.0_1611020811297_0.9789411405799475"
      },
      "_hasShrinkwrap": false
    },
    "3.6.0": {
      "name": "@serverless/platform-client",
      "version": "3.6.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.6.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-DJYcc1DSoL5GzrdaluY/yX/cUHkjFDY87M/QX/Y2S7C79KWv8yZDIUh+WOLAO1d+coR/07VWHp7DXXLtdzAcxg==",
        "shasum": "55301eeaba03d601ff66034af66c53a7398336e9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.6.0.tgz",
        "fileCount": 12,
        "unpackedSize": 1266419,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgBjvSCRA9TVsSAnZWagAA2LQQAJ7xWLPauiJE3wD/gfGZ\nmC/xbaMOqippYsQh5yACHqGrFW9Xb7stdME5OwCXlVEAQ4QWKZQO/wfqIiP0\nNagcSkVIwEPLJcws2DsIBV8RhIyoOOVZIcpqstwHGBwKv+QCL/vQ3PAlTtZa\nS2/N06+rO8xSBCzPW+MyRTkgUvRbqB9B9LKMWMxMVSsi/zBM8f6Fybqztfhb\nLwETl72QTe7eKcerqNxsrHmppMDXuq+XfBSIJm/oVLAM3lVhGPqaYtuaJo9S\nr8KQd83MV6bCIieDAoSvmUydUJPjw6GV2O+XRCR+DuptbGsA2XKaxsepjRcg\n740indoklqEQq26rCDQJ4rB57jgzopBbh0cnlT+mqRdZQ72l82dhluqc8lj9\nm1pVgmU1K2Sl24H+iTsZtfQ/OrdSKmbhLcRBmYMWuQgTwUVGSMXGvFsXeA5x\ntSgZW+LzFaYSsdmgkbIfbiVmVWWheF+K8tLGSpkc5oTJOcyHrDbn+I66v0Bc\n1+XTMUkqMEYGo8MVVxgzVhGWT/1hBeEhK21yjfWFJSYxORZB97DvyFUDSwTW\nTFwMvdfDk7roQ+6n/ShH4eNJbonVVyHoS/91OFIkcHpdxWorru+H+RQZR3jX\n8Phs6UmzW6lB0JIiK2fbObUHMNWy9vxnYOR9cOLYMMpyJryOtIWS1MKxvvmn\nBdZo\r\n=zHW3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCPcQ5a7RZZWYatvh4ho/p1MOpSDBYJ/SVPwbA8gpiW/wIgXaG5Cqw+ulu2wz3xIOuzNXx8AFR0PaKEdENo+fwKdFU="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.6.0_1611021265697_0.42011035691585996"
      },
      "_hasShrinkwrap": false
    },
    "3.6.1": {
      "name": "@serverless/platform-client",
      "version": "3.6.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.6.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-vLmh5OrCllZeLRpDzDSsPDxdNVM6HHGlE8Nptoi/xmKcpeDvqrpd+G5xm4uh+ISV27rAHyNEbERLFa+wi/mKsA==",
        "shasum": "0d1916008c941cb01dd142e980f6aec8dd1c89d9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.6.1.tgz",
        "fileCount": 12,
        "unpackedSize": 1266551,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgBzs2CRA9TVsSAnZWagAAkc0P/RcumrQxZaHtbh8nybLO\nWoq5Wa4u/7rS1fiLfAjsmRcnq7OJhaeP4/e3Pao/HVO8qXxOBl/DpUgDF0vL\nNFe9FlthHM7X7O+bKM4pVtAe04jKxhNmn1GooA2dtRok5UnbbYlDRxzJyiBa\niEsAmeRpxOC97dHQzTsoCAvgIAlquCpajHhoYFlB5vwdzmTaDWWsirZCjhmS\n2QQQyowxfTnwYd5FxIG/kf3upqxdn4L/Me5t41X11IaKIjGLrTAlczyVDCit\nKYn8On6ncmfZx80A22/L5Two2bnUQJylo+H+ZaefDtEXXmGeAWn+id06orja\n31NZrrzhPXlK0hWdlfJRYRXrCNa88uHxPCfGq3cc0KcMLLhVA4rSTLweaxnx\n7BGimgdv7waO1czdq4uf9G2FJszLUtxls/O22IIJj9X7+oGk0zpU+xVC46EH\nXTqpvqPg4EpZ4wWVS9U6johoTtRRA+GYjXMskjveQQMPdzmVREGNOWd86JXo\ngt61c4LM0edi8nXz+yQFLSqf7HfH0D/OtReGo2otjWHyqK8vN/4He7mG8g0C\nHVH4KPASu1Osypd9SOU4rDUJ8lxhZlfrDu7wxrBxzdH2ow7e1XhH5anWr0gV\nD3vf0zwsV6FoY4UCEArU+esQiGVBCCBNQ514lQZjjxdfNVjVNAhCTQja5KxG\n4CuJ\r\n=6L2q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBaxuJIq7TXhJHj0iotDmZAc0jQ8Nvxuh0cUahtSzXc9AiBNU4FdOrpSLNoumruE91vf/p8fPr7PurvQXP4tXp4WnA=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.6.1_1611086645451_0.9313569283447443"
      },
      "_hasShrinkwrap": false
    },
    "3.7.0": {
      "name": "@serverless/platform-client",
      "version": "3.7.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.7.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-5nwTWDcbTXRbLzOUfL+MXvcF2RcKFLi//UrQTRdKCdXqqiL0LQgr4zUlDSjy31xzs0FxNFduWaNHlvIah2HR0A==",
        "shasum": "20bc4cdc8a5fd229890a071535d4ad9fb0358a1d",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.7.0.tgz",
        "fileCount": 15,
        "unpackedSize": 1282117,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgB+X8CRA9TVsSAnZWagAAZgkQAJtdajSmZo3o5HXftMzg\ndQYldNAuZuKoqEIq8dbKs/4im2yBWDcO4gcx9tJQlJZim+E6xLkEoJN2XWiA\nGT8NxT4Wuw/L0CxN+7iThtTZPZFPPqtq/KduKQL3IhHT9kXkCNKSMmR+DuiQ\npBHXJ/rvHh79l5wsPocV1/LMhnbWYKAmnfgufcnZv1T3kSLDBdC2qUNAXp6S\nlZT6wjJCZAS6vATwGdBf94U/0zdGERGzv39r+KDhFBKHKG0e7Dc6yCzPimMH\nEYDX3J3AfmHecg4cvvRyYSSYkyAe30EuPUD0MPVp0vy63eI+eTHBmFIwPhIk\n45FFreDg/BpER+4f6Vj2Z7MWWtXKzAOoDWT5XgX2prJwGd+merFMvXBaHcoQ\nL0ZJCwXMacYnQKpogfc09N7ZJ2Pph7ERKAMYbyH2k0Mkf1zb+/IJ58VzXQIs\nn5A82S63ZCEiBLeCS/UvCuqEs0XDtrGv8Cizd/gWb1iUqnlNFgQNpuKZk7Nw\nnYfjnh68SWHIGr2LTDad+TNOr8iB+kUufNthIcYN5JszNDe+cHk3wur+D8QO\nXB93EAjIZ+tcj7jc2nKY1cbVAjDXNa105LrjWMh1m6pv8xI+2/f8IcyvIoEL\n8kPfriCL9f4P6pKmnR6Jct8+vfZj8oHxYSsrpJszo/gG9pWh9OBv8gpTaBX2\nDnsm\r\n=bFtm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3RVtPQQwMg7t8DFjLjjgugpxE3nX3Cj5icT4QJUx4XQIhAJgJDb/8qFHHNAWSmLawaFb/9UGdMT630vkddb19UZyO"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.7.0_1611130363396_0.8694314134050625"
      },
      "_hasShrinkwrap": false
    },
    "3.7.1": {
      "name": "@serverless/platform-client",
      "version": "3.7.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.7.1",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-UBuxPXdSPkvjApG5aubGhJnbnJ5Qz2a4HthtIbA1anm4lGmLxEwMknTb+I1G7PYAPBR22nWFimfM+4bzDyW1rg==",
        "shasum": "46f63fe16d4e79da5b1ed57d5e9ab1bc9d2bb4d6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.7.1.tgz",
        "fileCount": 15,
        "unpackedSize": 1296859,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCHuxCRA9TVsSAnZWagAAVnIP/14ZKIoCDFs9Y4b3oxH4\nujdABpZfrIYQy0fSUBNwZLgPLBdFCTo5rYp+o3Zg2i1IPmP0UbocJuGRt9Hm\nZi+kwJPPAO+ymKN6A77XyKOl3v72T8LaJQNb321KpUT9+sf8DjyfA382TGFl\nb129qaxTiMH8hsMod62WjuUFSrGeW9ar/qqenVK0RHISXyFHS8KWU/aAdgoo\n2bBiDxRd6BqkT4i0X1+0Vlzu7TYtXrUwLGEIqbYQCrZPId1BA9XwDmvUA6v/\neLDHBa5nkDVqWkheqbR2AbISkzaZR6diRxxcskCrgfWV66+ziimZKSpBJjUC\nmYpIuHa/P9YJvhGqwNzWI4PBKgqPpiNT6icidkCyHEwIdx6WWYLlEJdFmeag\nypFhiBnJDHMPPjFpY4OihErtryMsr24AEN4/8Y9//NK+z5yrFrZ+M3ZrfoYz\nlWqG/1SJeFk9bfDFlzLGNrPQmJAE1P800jlfK5Kpa9k5lGIQw4Wbmq83aNXs\ngMEJbDbxCVOhxFmoCOyhU8jQAgUM+Jr+qtB4BjyIA8QxTQaH6mGkbRbVE9ym\nVBlxOKAX4F14pRMMog3ZtymAWWgi8bxYpmVlcMoXZRH64eKOSlyAsFstMydg\neEIzIGEKFtrh84o8x7qRhGIqASoIN6V1OEyowTa0DT+1R0CwaxoJ3OI9OD7o\nEQpl\r\n=QIb6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDSjErDAaYnkkYJAB/TuMdPZw9sA5gYzpn/40OPHot3PAiBEkJiKJ17syAfI/o62klznuhkdopDTZb1jwGwmIUNPag=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.7.1_1611168688923_0.073627117184071"
      },
      "_hasShrinkwrap": false
    },
    "3.8.0": {
      "name": "@serverless/platform-client",
      "version": "3.8.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.8.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-gs6cEbquK7wqluzt4k1tlc0pKWH8ADe1yINuY40Zp5MC618FtAIzn6X9e3hnwldAdceOg68pSTp+MoS3YtgETQ==",
        "shasum": "e5276020bf836ab9dee5463a2f46f3b0858d0e0a",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.8.0.tgz",
        "fileCount": 15,
        "unpackedSize": 1296985,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCNPjCRA9TVsSAnZWagAATRYQAIzTcs9i+ZdJLjoIYm3X\nPGYzMllPNejU8NPIOy3Paz98hzTNNtMk8G7lkhr8PgNpX0DtNlzEYK70fdJ3\nf68yVTkkOycbZLjcKTdDRYJHBrl6g69v+JviRlnS5TyTeD3zeZtgEHtDyoO5\ncPzRFBlNBg+c8hNFiEWfIhmJ34TJM6rvRSi2LXQzK0L1PfidYKAWV4gJYvlx\nPy0pO+6iWNhjd1SS/NWkgAAeihnSoj1IJ9QUdvRjMzFm5LUnqgK/BM0Plj3Q\nug3XwaqfYmUQtWWUoXzZ8uuAtUUQbjRqVQOivDJOzVxIvcvQZizP/nQZMRIb\n4kZk9M1V5hvG5vVvt3c/eoAWxccyqgr65e7sOLLvSIzKVguv8CkSes4J1Ccm\ndFnhDwEZzeN+91u5CkEGn5fipZDFBLO0vuEMzgr8JTjlhHaRNPuZlkLD1e1w\noWOPfgXLP8PXHOny7yiwWxusHfEscSdNLYaISLJrXwjOOW/RYR3G8U46L+yn\ngO1YBWbEFI9FmHWwi+ssLsVIjpTqBNn/bTfb67ZQ4KbMar6KFpwFErxRmypi\nwE0ToI16FeLNuNQQRn2W5Pm9mzRTHRRC04RhiR48c3ukEBwnY6ZPZrkN5xte\nHIE3GwVF/y+dIoQ8dxZ9duQZO0nSYuhpqSTaTGjJhv3saza9Go/VQL8KKhJk\nNO4s\r\n=J6F3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFZWGVB08VOrQ5JgAhYthHrKKNhXJfle8PEX3m8LcPZrAiA14iBBYr0kHhUrUFQ26zcFNB5+g6ClhTGZjcOe9Kbm7w=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.8.0_1611191266148_0.38189849240219886"
      },
      "_hasShrinkwrap": false
    },
    "3.8.1": {
      "name": "@serverless/platform-client",
      "version": "3.8.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.8.1",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-kdLKQPoiZedgYQ38v5s0Bpo+KpAl/2Cz4qL73oJxfqVI0ZQiINR7jxblT+fA2SwcyJdGzbZf/98Tx4bekwPs2g==",
        "shasum": "8b14b24e94b0833513bb73ffcf4d301b7a1b6b99",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.8.1.tgz",
        "fileCount": 15,
        "unpackedSize": 1297057,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCbdICRA9TVsSAnZWagAAnNcQAIBnQCbNlQa0r6R/WoFC\nZRnnmtGhqcrDrNAKYsuCjSQihJGRw7KLGrsmgGkRRW7aAmtd5GJ+qEq/ZHwD\neFnsIL6FnFqWV1m4iNSNlH2gjqT5tlJcscSupjmhFCIjV6RpqYF0XyFTB/37\n63PDJGyNObeiqf62EhqOriSruiwU5WvkiJlfdIzYWM6xAk5zfOHvYFK2NeyS\nPWCjtwE4F+Hy7iXnrOFfDzPsCnNDa1E+ocr+FfgaQqLiYk8NiqdE/BiFWUjq\nqcPJJM/17PzwqjRpVFypKPHCc+jilrlax6P3tHEJZb98GHD2GW/VzWcU9we6\nnVQplznpj2owMvZtkPQfTImBLO3pWyx5eb6YtOgjMlYiRI4jApcG0xjjIAyN\n6RCR1ZQsBkMQ04fb9bJ0RtmxkqT6myntfhsD/h/QeC+F9ysnkBxYwN7xlRce\nHRDfGQMoETpXTsUldvyVJI8LYBdfkhjVU5u5GIzOniNVv87tzKu1Vkd0iFnS\n66jBKM0nhItJcO4mynUHQmaWiZeGtztAorzM4cDz3Li6/BT5/zPJw/fbLVhE\ngfMes4OS7u7+i7IWPPG7w1AeYe+qi+sDfj7VbDVR285h5MnZFanUKml06yI7\nz2SXrA9tccxTp+HZ+sffQ5JZeCh3PplW9ivQyPG67CK8PqpemxgA1qIareCg\ntbWE\r\n=3/Qd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFNo2qk4CmpNzt39Gj6J9R+0lJv7ybgVw2AUPCHXClkQAiBNkDBJkTctRZ2rCvgaRsP/MDV5I9cnaJENiqdP9Z8QQg=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.8.1_1611249479457_0.9870559394172473"
      },
      "_hasShrinkwrap": false
    },
    "3.9.0": {
      "name": "@serverless/platform-client",
      "version": "3.9.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.9.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-y/HhsmIPwOrZASvfY5yOrpw8LO07E+vJmy7ZucnihtQtvJ2gtRUtt7YuhqLXoIJcCcxd4xTJt38mabI8NA0esg==",
        "shasum": "01049dcd41cd314f970cdbbfcfc0a19b1dd26f99",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.9.0.tgz",
        "fileCount": 16,
        "unpackedSize": 1302038,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDoRoCRA9TVsSAnZWagAANR0QAJjnkxlBA4cNGwDypbvj\nLMoC7fqbhFBo/c1CtJnuGQdsSVHgQS9HY/tI1UnQiWpADknzpymVYoTl4vGu\nCjIN83v9jzmrfdLsp/Is51rohX0Xvk8XYkR7X3lQkaQuPPUfeLm6ooi5T3Nv\ntYzmj1yfeYe6EI+FfgtDVEwzw98H/HWAsC9viLJ0Pa1/pwIzLXWj8U0ZqRtb\n7YP1Zpfxntk6O7eIargi+6snT9GYTbZPHiDQxGvd5a669IKysrrIS6m9nQPj\nlp9d9fgtSc8FaLEzCKw6oa1IVMjb6K9OMN9t36U2X8Vkk8QXbl0cfDE/VaG0\nIeYX347768/x9RyT5j2C/TIzLGV/21YuUDZw1/Gkn/pfVcGbrjn7+GI27yTY\nQIffz2bypfYfHTVvgibC7NjA9EyhwP4xKtNEJdHtU7KMnl1U3FiockRZYazc\n5jD1JgBCnTspsLb5VyGcktKP5QIp8xKSusU+d1Durwk0r621+QhE9MxciuRH\nWCcxaRg0Lrkt+/N/W+3Ocpri22YCBf/NdmqsGVD3dUXPLsk5EhX4BdJNu0Nx\nXFeejyYQkdG+vrs3Focq1Przm9Jd9fgCeRfpBHk5MMdkHtdziQAL8ZB9jfJ9\nCmURH3fHnIn0adU+bRouUFvPBOK8Dl9jv3L1hLLrkupDet3giIJPThM2SNVb\nHYnk\r\n=Dwb+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFDQVne2+GShEfqcWr052Hrv4WwoX5HaLhUD8NWnxtPoAiAcmeFs0wCAEGpgdL+9GakTn+KOXR4fnw3YgZNxPC9iGA=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.9.0_1611564136166_0.6759811981812403"
      },
      "_hasShrinkwrap": false
    },
    "3.9.1": {
      "name": "@serverless/platform-client",
      "version": "3.9.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.9.1",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-Sn2sQldciCWdIpiJ6MEmCQLQk/wFD0pqK9XBuqKk/9RfcFwjsFMJVX9W4q2cybZxZ0MIkQVOfNXCoB5OM6riSQ==",
        "shasum": "7c5c40230ece9df89f8635720211396db6cda0b2",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.9.1.tgz",
        "fileCount": 16,
        "unpackedSize": 1307259,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDwIdCRA9TVsSAnZWagAAxNQP/0Y+ZJHxaxpd4ww0uKho\ngZFj6ZXue+Vun8+TEp4lijyripRqqCd/tCmY4iSJtQb1KD1iBJ3st4B8VEil\nedifAP0srImA3peg7r53H2m64KhyaySGgw11fuXctC/pMvWB0JXpoXAAgq9k\nrAVQ1FPjvu4GvTRT69wlWUl3FxpFRAWnnCZmh0rgzvnr0Oc+Mvk5R/BQy/jU\nur9gswO3LLZNVce6D86bvKAfOfhgo+nYBHT5vbexF2UbZ2H+RIAcbTT7YZ78\nuLiMgQBaYoTR0B1eijhysqt9AGaGC41ztVCSR9/LsHmlrEBVSbvw2op2xX4r\nRakO+Zbt0BLq0QuOXf7/Z5wnpeIifu3zlDJJoU1gOx2mN3ZplJT85tGWRBsU\n8dNsybW1W994sDyHmM22lVbikhWxlgO/st8dkGl+qtuW29FpZu9sgaNPualx\nrIkWfL/xYRK1TXb/MVfP0r+rjkkTyHL17mWV+NoA/Arm46VDW/+nw4bigXmB\na7VLsKr+QqteFOV/cdDom/fCFFybd3ec/2s/XmYBwAAS2kwzO1vWe1goUVjm\nBJhi/EkKg20shmiCS1ftrENCT5mQTxR8asASsE7WzqCZTbufJekEVPL1PBox\nbiA0G9j2pMsA1adEbkoVCeupq+GBEz1moU70eAIkFxuvryFZHrUkgED8h1Kg\nMxdm\r\n=2TNh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFWDKkGK8aWK/V9/6PU9uYUsQyqOiPrz/r92QyqcvSQAAiBNxMLQKkoUJjkHHQ7LNjwCEq8gSPfQVDHf44pkpr3K8g=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.9.1_1611596316930_0.7346296775359447"
      },
      "_hasShrinkwrap": false
    },
    "3.9.2": {
      "name": "@serverless/platform-client",
      "version": "3.9.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.9.2",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-vGfBu2yFieIsguh/Fv9y85AjkaGp1gO/cbBj0vFVau6XWu/244ZvOOYKt1SgEeCpJzNdxosAUeBxhcGSYK+6cA==",
        "shasum": "191553e67c429de49c38b7229900b7f786c7e5bb",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.9.2.tgz",
        "fileCount": 17,
        "unpackedSize": 1314196,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFHOcCRA9TVsSAnZWagAAQykP+gPn7PmmOcEA419Qr4TQ\nRq8bFpk9yw2YFFjsdxob3ugvdMN9Yvo2+nwqLWMu4a2X42te3a0qi3VVtbIP\npE/WrzqMNNmAtFCfrFzdnmYFU07aRMn4asE1L23rlnFxovjTTc+YspNqW+5e\nrG/B5oSG2iE47ym9R5UgMxHoQBQKeb1cKw9mXO+MiSq2VKNL2ghDkkABcwyo\nnBOdhzj+lCJPf9hEl3rMBCJpA+o9CAPa9Waep3X5ctvvGM+nUGq7q5rVl+Rw\nfBTlsMQQG0Lijx1fTZnMpdSvvhY0EtRFGzRj1O/pyZ/mUb6jvVxoOLg2WzcU\nY2kD9IafWSpNVVCqKKopaHdNKrLJ1ZWDIeN8VHZDN5fctdmupbjoW70ChhBy\nQfhwJB/FSIbSoBFmRObiBJIdliqSp/e6FJ//8EM93Coqxc8aoKjm9Kgd58Lf\nioyA+1kIiwd2BiugR72FXou0sbdEq5DQKwtv8bcKZUVkP/R1uIBRy68HT0dg\nHU2u2z4U+q09wVk/fuHoGMYx7K52wS4SWq8uBPGXDXvCknnpQbCKniWM+Gn3\ny2Q+IJI+EHYvs2xAdxwe09uAdyLCBuHMO0MWdVt6F+0UZcgVTCuuURnW9kdt\nK5hhPJQEs5GA12AT7ACFkYs9cHgQV/8lsQk6yk7tOS11zTJiSGxgq6tFJcRV\n7obc\r\n=DKN7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCD6+KjLkAFhpkOynF3NJ9BUOnUaiS9ooEPjKlupbTwvQIhAPpRPlFZ0XbzfDkTJXjp6AIQpb9AIwUMMKwei0Yf44Oe"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.9.2_1611953052028_0.45943288642016955"
      },
      "_hasShrinkwrap": false
    },
    "3.10.0": {
      "name": "@serverless/platform-client",
      "version": "3.10.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.10.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-+dSJxViCfXcMUB1GrvJXkbw8M0KoI6uf01SxWFD7dYY61ojlmErBPuGAMmyOLxc9SzfCG4rQDkrzfIqP77zrqw==",
        "shasum": "32cf9055ff9393e80168b446ce843120947053b7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.10.0.tgz",
        "fileCount": 17,
        "unpackedSize": 1316076,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGDLVCRA9TVsSAnZWagAAHVcP/1J2fpfdoEMJMsp21p2e\n/Rr2EhMfQosv4ZfB8HnQD0iZrtHSP6TtDnHan9d7LsOWYfRBq1rk/66zJISQ\n0T4jOi2++OpJNhESRV+4Oij3EAdU80fTwXMcYs3sQX9QZC7kVW4XrOf9DBeu\nOYhakfyB8gRWQO7voB+czVdCLAYgRffHntTUdcVOP8lH9uhEtBni2Zq735JC\n5NTw96riMaVlpgK+KI2rKJ8xoXfKkBEN4IUoPfPQ9gUNnSC0JTJyeunvFMjm\nDK/qLi6hpznjOHw2Za9y7iYh2S0RDD0n4VZSElhXuDb9kSZLYUvfiYazVgSV\nzy+sMCAv/uFL7O1/7c/BsEMTeZoa45hAWqQxfA3jnRLCubsv3KTkzYj0w+OG\nsta+FJFH1YDrDTG0+Kl7tiR7aXBUYAisAIyNkiAxI1MMuxgMFbaah3Q3sJuf\nV7x2mMYL7d0PBetwdr4pGt5noEpd40cFLwRJhw/By+4/SRRTpKO9ExbeelFO\nng0V80x9t6mXlJe619EqnpI1gxmfDcy7A9JdudCOWdTYkMm+kqNc3/1ClZIp\nvfWq0aZfnyfVbuiLGR2L6suwXvk9bMJG8WDll6KsJYBp4bTgD4utt4HHaO6b\nYUCa3na9qD7tt5Lu4PjumLNKOqwp4HCBHZmwE1EaBTbnh6LVAXOQuAMRCpZS\nLSWW\r\n=LlXJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG5DPOl1W1aqRpH2eKxt5p36vxAnunXLf6bQRUl1l0ACAiAIMRwfwSdU9UrOhVaHWHrV9hgFnCXfJ5085rWkrLkiqw=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.10.0_1612198612479_0.7856524929751019"
      },
      "_hasShrinkwrap": false
    },
    "3.11.0": {
      "name": "@serverless/platform-client",
      "version": "3.11.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.11.0",
      "_nodeVersion": "14.0.0",
      "_npmVersion": "6.14.4",
      "dist": {
        "integrity": "sha512-fC4Q6mjARGdkPrBzEdsiZIgC4To74P7ro9qbtjhre1K9O0tJvvFB7/TuF3F7Xdry4fSPG6RuqdEDEXYA4FwkZw==",
        "shasum": "78a215300554557889ecc0bf529a03cdfe120ce9",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.11.0.tgz",
        "fileCount": 17,
        "unpackedSize": 1318755,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGu9zCRA9TVsSAnZWagAAhz0P/iox6nyH/30/4AfqYBME\nrR58Hsh/ST+KgcvVjywsRNE0NrB7mLS3C74AuYO2nw4JNaf/ev58JE8ZxMK/\nZfHoA/dEvQSiDw0HI0TF79D9JmwE5r4fKRH7kDxYiz3z3w4LHQmJld4YnYrF\nxTnPL8UxkvPYs6i6pqlcNwZdj3zCcMfEfGpX1tRSxC/jRNrdwwGvPiYYyAPg\n+Bu8nBJ46xUzUt04jqGGuIt2DyWhv4xbPhEwB7Y2h3rLYct837tDtdDjZN27\n/+bxCfVbaWxwIC5K2POp4lgyszKz4MeX0RdemxtEemsxv5RBC1kL+D/j3nSf\nu6QIX9IGZQomoILg1huFxODp1GwZ618oEXNn3bxoaD48dcsWLdhmjHa+o4Rt\nS+XxN5P7GKEgqP5a7s4szlSyRnMPTWMWBGhtc9NFOjcmYyL0/d5STCPwiELy\nR7mgoJi+s9iPU+Hw2IDSlvY7C2XPjtaB/MvrxfsvX7HCuVaf2mqocWiX74u3\niMxBcjCPMl7l1fNuBuAoUrkp4MBysUewcLcM3K3Rq1I+qEhB/7Z809ksNuWQ\nzwWfPafnoXBmLIexvddB6lEweYGwpsZob40gzrYWxrDzYxQeDtALn3fnlIAH\nVJcoiBy7VeugvBU25a9uQFU3ZJp5Qiit02ltut4Fy4kO54JQcjsVmFEzEAfd\nEWVF\r\n=CkE2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCu1GOqW9EnNmWTQ1MhkV2ugvLVGiH9BruX8DlXCiyfaQIgMhaY4KufBslFvetOIi+wvJ/+4MI8e1f7ut7L/o01l+A="
          }
        ]
      },
      "_npmUser": {
        "name": "eahefnawy",
        "email": "eahefnawy@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.11.0_1612377970369_0.6395988621202149"
      },
      "_hasShrinkwrap": false
    },
    "3.11.1": {
      "name": "@serverless/platform-client",
      "version": "3.11.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "fast-glob": "^3.2.4",
        "axios": "^0.21.1",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@3.11.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-f5bo8P5+xAxsnOCUnyEyAmiGTs9sTG8v8t5dTDAdCqSxEEJyl3/Ro5djeW5L2MHzw1XnIMxxrtG38m7rNQSFFg==",
        "shasum": "ed222dbeb404d23c17124246af5be546c54e5ce6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-3.11.1.tgz",
        "fileCount": 17,
        "unpackedSize": 1319063,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgKmMSCRA9TVsSAnZWagAA3RcQAKD3vxr56EGwb89Ah6nE\noNEVc7Sz9vZUg+/uJ2C77L1nyzSOIbkM/I08h46RFraX9toTG/6epYMPaOls\nwzTpvzdSazZalbdFmgKN5tRlW8W3RGapMjiV66ksFBWKcMewoATM+f/5PyQE\nUNledW4OnHloTISU3zaONbFdQ1RyFm4Pyx7b0ENbC2Wlqv3uO0ocLhxkE+n7\nRIPQx0vq+lAK+ymwlDXGQI/RvRN1LlpjE8WxvclDDdKOcWptDUR//Dv7nGh1\n3/7s7lmUGpwH/VZTLWWTlr7oAR5U0MQFjXzyhYUofTMw7z3EpELfyN8/pSpD\nAd7OchhEpb98yUqnlWVLRgOYRsHHF2uw1wAO3TFxWUMWAIdl8VtHDw/GPBIe\nw5O+BMYgPEFUZNKRoSBKKvGWEsrVaE5/UG4cWlneTIc51oJqKevB3aC2Mm2n\nsIIoZ+0zNGsPcpiwEuS7MNKZ94Rt21l/+3RHBn4odtjFiQDx+yfaHGYmBsTs\npgU1hg6G2oxcX7Ml/JjQUsWPF7R+Hy4pc9g4ndI6Uzv323/yUKg/TgdYdZvJ\nWVa9nFl9snFeckbUtNFvlDgjRYs2jlvybrQ4Ejp0Opv4wRhxSl5DHFu1GwYm\npwpPtK4eXY+TG2Z1tNgUcxQlP9tWICDRO+OgkSyYUwc7Jyj817LbpLw138Ri\nLhfp\r\n=hODz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCwtbdpMa64pUB/pdf1bZTZw/oMpF9pvw4v4AoERbhreQIhAPVAuyb2S7r9WpdGkvxr/d5Xe/jPZUZ0yAwiDQ56kTrN"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_3.11.1_1613390609502_0.45310828695757577"
      },
      "_hasShrinkwrap": false
    },
    "4.0.0": {
      "name": "@serverless/platform-client",
      "version": "4.0.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.4",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.0.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "6.14.10",
      "dist": {
        "integrity": "sha512-pHhzRNStl7TP/yEi5EuT5fxx5czGb1UAyKv/dWCfMY046t24UC2l6rsDAgSb55O0Mmg/N/0GUpQ6AXqRrryHXg==",
        "shasum": "b8e2e11868e52b4eb95f1c3ee4db46e0e2ff09a7",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.0.0.tgz",
        "fileCount": 17,
        "unpackedSize": 1319119,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgKqe1CRA9TVsSAnZWagAAEhkP/j8P/Pr8IyjjM4MtMknM\nrK/gk1jII0Dsey7jRP9JeuuTiGcuxScQGZEPf3QCsfs7e7tjzPuFUjBV85gW\ncwHUX53PUReAmbG6woYOS9ma1c5PMcZUF71W56vsCm7svHV2IIeTHHI5G4Kl\n3qogU8m9wlJYbCL4Y1DQxmyhIfx3uOy8HUYG0Ua/5y12SjtWOhMJZAGQSRrt\nHvOGZC80Uyg6h3Ih0R67jC0EESoph4H7fouoS7dOuAJsAVcdo27/APvQpt8Z\n35l6zp2OnsF4XRZOP+IyTwxCdFMislL4OzNr2KYrCYtxmGlXaBBBjl5oUhIo\nD86hceC8VBoOvs4D/HAXqk4CGEdfg+u9MvBFhkYJCHJ8WRThyXrlKDaQWcTB\ncKStiGhkwRFhBkZli4fwHGPzS6hBoWIXVQhJVtckgGpagETUYgN6xA6VnB2v\nQy3R5CEj6Pw87vXzfALwfj3u2Z6EQDFeY6MdBXr/tSzx9gbGbEvT4Nhj62/h\nog4U6zHoB5sd9Do8JXNmN/WtKgWAQSCX7tt9X5I+OpS3pwGFYpjbAaTV6fCg\nq7mhijOhrj8wR0MuWqucr71fNK4qWEgYJzI1JoHEU6xIhJUQ7ctGH35H4UH7\ncwEfO2dq8lk3VgBb8TE/dCtMIBwzUO2EUlMOwOE8zLRTysbyazbg/R3u8GND\no0ju\r\n=SO2n\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDus45u1Yba6ZAcyEPIU9nIDTtYbgaP4x/SQv79jqKXaAIhAIl59lNwUctNXmeU2bQ1xipssxosoUcXh5Hfje00MI85"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.0.0_1613408180371_0.9830562772407279"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "@serverless/platform-client",
      "version": "4.1.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.4",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.1.0",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-XoDUE5UDkt6JzEY4nWPdCd6ofldBLqfBAaqCcMlnYDNyTispHNVJeaxNvsFZc9EoUpneu6vTj3vhdviUAnzX8w==",
        "shasum": "8d73f33cb36ae70086cad80475a742ccb3716c68",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.1.0.tgz",
        "fileCount": 20,
        "unpackedSize": 1356579,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgL+smCRA9TVsSAnZWagAAziIP/1tQqw/J/kMQqXX6bi0G\nKbl252Ft03YB7tcY5LN0fhcE6o6kp1HkpxhazzKGQl8uTjCcRJZWab6Rldpg\n7ZWUosMpjphAzT+ohbWFUOJkBjFVzVmAbFi+J1IW8rlfGf1wxnjl/Br8M89x\njOjKCzzLmOOuLcZD3HmW2IaGLTVFzgLxIM/sypHf53PIB0GFnYBtAIa+xH/4\nxZ97Jy12RrXpNmC0zG53kPfx29B9fPp21WNXSKgqk+9i5m8iOUQNIu7Cx2G2\nC/5OJYN10JWNfpHxebSK1PR7SXwS7nOs4xgccBum330vu44GIYJDc05cab/M\n0RiWo0jjEGf550uDTWaiEMHqwhRnyBX1a+AVbedTCeAx1W1Sb7fxQDFHAQhy\nYR+zKL6cSRGS+2MuETdzqigwXlci+JGFHJYxJHvcZPSqkHiyGafJAS1R7/MM\nplAKwO/QNkArhDbPVQurBgKrI2k+Jm5psD6jHVI1Ac79Tm3DRYcJyhQzppLx\nIRBYUvlWGAbkMXTo4rKO1+aMLaNA4yXJ3dClqVdJkk1I8F9D0Dkc2xIdIgpE\n8BSk5m78RcgjRxuFhQraEGTDo7cPo1uFmDMXf1ZVVdAX0QtaEeQdzBP47/vr\nWod0cESc1gavKjOGwJWYhizOm22Ho2+DGf7b0VhwtBDcsEg5yQDqOgS0GHSO\nrSmG\r\n=LPyD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC6iFRJ4jxRvlSS3piIFfLB7/jPwrw377o5L8DQWjUZ1wIhAPwFor5ENfduWAohlejQOQM6/xWlGz9sGPak582pdsWE"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.1.0_1613753125326_0.17712661460114942"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "@serverless/platform-client",
      "version": "4.2.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.0.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.4",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.0",
        "run-parallel-limit": "^1.0.6",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.2.1"
      },
      "devDependencies": {
        "fs-extra": "^9.0.1",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.0.5",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.0",
      "_nodeVersion": "14.15.5",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-92/Mc09zQbJAw917KhJk0kM76Jpf3njoSevHEu9ASYx7OSjTbZw9B5VdOe4Z2m+4NvUwK0mWBNpSmCvd5uwOhg==",
        "shasum": "3169ded3f453d40cb81cd7a3e4fc327c92393110",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.0.tgz",
        "fileCount": 23,
        "unpackedSize": 1376224,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNi9/CRA9TVsSAnZWagAAfcAQAIk3wtKeg9iOhw9XV7Di\n97V4RflC/+W0MzFPi2o976tHsDvnsLpMCp4Pr+/zOKqCAMV/h73YjU6OfNCu\nzja+iZVn0qcJcwsJY9RKzr/iP2jCsQMTyOVoTIrwmFDp1pTVVRKWS+UNMHXh\nZE9hXqaNb0c0DmcXQJtczR/kJ9ScFsjFtCmA90XGtpCQD8s8tqqfBatd2xj6\nCN7kc4lVfs4hFlNoKybF3ojfwaa/5JH3TUDoirCYTPsQDXOxTveUJdTX6KP9\neNQ1PXRJUcZxHwki/0CuR/KnO4uTeiiaO/AxH119/8zTSUO1Db4M5Z2lh3N2\nvuGOhZTavZ2dofqQ2Qdsqf2bUxv1a3mCjiEb+kaaHeIbi9fEypvFbGpBXMsE\nlxPiMuh5PmU+xNaYSgd+HhPnrEJj7PlmVI2siJDjjjS150MlfmTphc16ywEn\nOSS1wDIcEFPLP40BKKH6M4DHJ5evDtY5Yma4fKSU8ME+c3vAc1BIP1manAcH\n4Lk7qLhscb8lUiSHbxGEOwT1yiIIkcV0tNOkv8b36lir1driwPB0dmzm/Net\nayyVYg24X3Ukm6ix/5NnBRs2310BvP40OU0P0BscVQM0rrEDK4ugs4Elc+ac\nSpXO+L09NJQcjxmFZ/D3noi40ZtI0Rrt5K1V0d5/ltfFzAEr6TvJ7SOqt9TY\nv7gj\r\n=tMep\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCjyjb8Uiy3OHpldmuY6DuYTRJKllpRVLDn7tIrZ5YxIwIhANcyIxzbuTPihTHH/1KPnPq9PvwOaJTsLF7pJXw1M+VT"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.0_1614163838920_0.5427337778042725"
      },
      "_hasShrinkwrap": false
    },
    "4.2.1": {
      "name": "@serverless/platform-client",
      "version": "4.2.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.5",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.4.4"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.2.1",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-Mb68YdkhKUs4LFsrluabE00ng08fLCslf07Ufy/kwN7LfFZKTpNTnuvc/pR59zk7v3s5XWBTlnGWKbID3IWLlQ==",
        "shasum": "19404b7e2540da677f84696de0e3a97d89c20640",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.1.tgz",
        "fileCount": 23,
        "unpackedSize": 1377228,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgVIEPCRA9TVsSAnZWagAAp0sP/0LLDnZM+3X4+2+MW3tg\nAwttBsCrhRYoTRinDSHdRdMPcYGqVXatoQ+UsbvJ+7YIa+PgtG1xtwNn9m5R\nLhRTPFqoDW1h045m4Na17js6pCkbTtvsgFwHkB/hZpnon+7kBVi8CCunmOCg\nmkFoSj4tZtjbFFbljIhHcsLXpucY5HpbSC72PomgU3xJhp0oodsUHH49ykhi\n/WRatY5/SS5uxxeGLqtJ3Nrkbfu0KkiDq3D8oZ/jizdTg5u9EbM6uaVqnbSK\nG+J0iV5nEkaPnSw4noDltuMn9jGR+bNz7L/CXDr9gmWbCt/ldGX4As8vVkuA\nU04qZihsYeclw9dKPt2irGpbiPsjVoPKeP7QT874sug8gB7YZuxAH99FPdbp\nOpiJKaqQqdTE3Ft0ns/AdPFA7tKIiZHqY1k0PuoNF+xkucxBKTaXNM0jHyur\nLKZpEDDzQycUQJ/LrJrfeFM8OQOw47APMMnRobTnr/WQ/wgbwkN7EcDMIY5m\nh7tgoIVdiqsZBJTb9au+KHqSGsqX874sTjPT63mLz2KGoYM/y03iTIAbPHtr\n90xmFEKm2YnZlyS38C9ezQAw9pUrl4SDXN4aOohpCfiNl1J5iGgQqoy1a6yL\npBbggA1Qyz5tFZjxrzkB0KwO5u3p9ZT+dXOw76lQagQWrqgr/a5mUDJ8gele\nOKYm\r\n=GwXQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBbStGUu4wt92bx+JSt/d9kvdwZl79kG08uJa3zJ8TJTAiEAoNm2jKFGQJzVcNK9FpRy5JMltP06rV2G2sQKDS6h7mc="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.1_1616150799082_0.1775705950633959"
      },
      "_hasShrinkwrap": false
    },
    "4.2.2": {
      "name": "@serverless/platform-client",
      "version": "4.2.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.5",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.4.4"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.2.1",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "6.14.11",
      "dist": {
        "integrity": "sha512-8jP72e0POFGEW7HKtDzK0qt1amYtvlB7bYSal8JUCXbeY2qk3xRJZuLWCZBBKRGz4ha4eBNjlz7iniACb9biLg==",
        "shasum": "72d0bce97a95e65143a669487ee1f92dc8769ac0",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.2.tgz",
        "fileCount": 23,
        "unpackedSize": 1377525,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgWIifCRA9TVsSAnZWagAA3m0P/iRc6bbDi1/rKntCqJof\nmIt/kFupROSePEFlPNWgpRYedDN3mfyu6zsNjn/A7h0pLC6uqf+I68f6AU/v\nMI5PoSj9SOmXTlyR2EGspEcqJCcrSmfut1eLkszq8X8h8dAGD/sxjAc9hk/6\ntQ5P8SuuGbjbgAjWSc/pN0T9VKaRDQmlUrjdlYPJxpCrG9hYrQDjNvKbBh7n\nUFPWo8smnr6KhlDRwNC2NJNn9Z0/yk6H8HZ8t9m7aH3JHOlA0RnIRpNOeNU7\n30vN+LEjeHkvPbtkp9ODFwJoCh5SYpRtRlx25Kvp1CpgfOYIgik7Hx8qtYPL\nVvhCAJ92r4EYUToGfR4wazBF4BdH7dgZRwKWWfqFqm/2EvJWBR5E3Mx/p7Pc\nopdEEmf/lxNV50Hnsj054BRZe2nIxPLNMX0neZPhqrApwoX1rDmLfK8XtD/5\ncRcL4T34LcXbvA7oQ7dFkRUlodLlFfZSWtzWBnKpcdqqjeK9r8+1e6uDWhEv\nBEUbyziQYAKwzWkhnn1or3o1jvtOSYN0M56aXQRK7tPEZRMvrSdysE92h5Op\nHlj2GnuVS2G4nNbyMhJ+9lumz1tE9Wjcfe2n7Gmg8avSdocCghhpHdnwqIS7\n66qVTo699XA0+owpvYTwCsuI3xRxl7tjNxwbde4F8KT6M7bgRQla6vJol9SD\nwUn7\r\n=eeDL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCRmWl4Yb4G7CsenkbMIsVIhq38iLJFy2GpKO6XPNo7kQIgAdfT5RKEDsEfUt0W5wEIoHoXYS4zAeM5oxETvAo8r5Y="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.2_1616414878280_0.4230945156491126"
      },
      "_hasShrinkwrap": false
    },
    "4.2.3": {
      "name": "@serverless/platform-client",
      "version": "4.2.3",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.5",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.4.6"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.0",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-dyELLbrf/9+O+sjuIL7ymlH8zwCOsG+tf2TjeEjXooVSvNqUoZ4ZadENjxInUV841l0ddwkihwzH/54Yw+/qkg==",
        "shasum": "72ab06d0bdb026cf514e4178552f461dad6186f6",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.3.tgz",
        "fileCount": 23,
        "unpackedSize": 1378979,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgt1WpCRA9TVsSAnZWagAARqkP/A0+8T1JC3tYcrSOMHIh\njFvX4FpBl2lAimcHBAkhlxLurl6+Xf0dw4ERoCR9UvF1NdpsaLd/j1PgvU+8\ndtdwHygkMcC/fdhS98PgIiEEtC++0vstlL6JT/M2BGrctK8hNeze6XOYM9YW\n8iz1yTXdki02zv7KvW6j6X90/RT09jXndfWLtT8x0LQQKQVaywMtz7j1Un6A\nveR73Di/T4uQ0cg4hZ9B+IPvizWIng/UHzmeWSxYpBA583NgsVlbrhdtLghH\n4SYxbh0Ipnx7EAB6XIZUat6qNUUFcfz+864gbHQkz4ReWeFcgEbUZMcO+4Mg\nMSXfS9dExp+1vKaoPuGMyc+RMa/4q6eV/o0WiIUZApQWJ5vywX72CwI9dvJg\n5msoHq1+0yLSKsqMNspvuHqz9nlPtint58yTMCsQmpaVAjtY2CbWglR8aNyn\nKphTS2KXHvxtA0dmQzyrf7XDn2fcPkgztk/uX7wHk/HICUW1L+bFoEgz9LjI\nXRuthELYgod1eDz2bWEwOlruEV1ptTWZvSp7uZv3G5BkyqI+ZVu3MxzXOpRv\nulFR0DDFRgY7MYFwI/orgvIN+jBGyH89Eo+erQ7TNugUqB2RC6DgcCrEKq0h\nPmro0LPmEc+StmZYRGd4U81c0FNFFCf440mz5Mg+nf5+AEaU1Jlzwd+3pkCJ\nCIl6\r\n=ElBp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAhzbsvsaBsFTFPwPNonHMBEzwrvosKn+K26bwVb4Og0AiEA2hkF8ss6OCAdaIJP+aMIny4I7ZypuU8W3vIB19P2Fr4="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.3_1622627752710_0.11201313210157648"
      },
      "_hasShrinkwrap": false
    },
    "4.2.4": {
      "name": "@serverless/platform-client",
      "version": "4.2.4",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.5",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.4.6"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.0",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.4",
      "_nodeVersion": "14.17.1",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-DMq4GfckQ+Us64NQZJOtdtKHA3PQU5FZNXwi7QdV5QaVw3PtLjLN65FD7t8PcZ9YmCwL7QOsrCfT5oPJBblBNg==",
        "shasum": "8d0f37aed7cfe8334699687b7c8e77143df7316e",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.4.tgz",
        "fileCount": 23,
        "unpackedSize": 1379916,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg7ckvCRA9TVsSAnZWagAAptEP/Ri1bYqUiwFKzo1v9PHF\njEK+RstxFar7mbdeapZkLrQ5z/bXU3rS0VJcIJUKyEzgAtzSyYHNL9kI5SgA\nAGEQZEzco8vYjpCd2OA0wPmtIgLTNimeKF39W+t9lsY/T0szJR3+IyYN1BMi\n+qmzrOuWJ0qAMTN9YpbYLBgXOtCC77uFT2y+I7hB1kKBoAhA+XouqNUZKLhx\np5lluRzNjbdyqURsVMHZXIFvPahK8RMZpqYQWI7h/iyKt+APi2oG1MZ+KLDx\nYon/PRFdqjq2gHzDraduwLcCryiSHHae55I9WwRQVVoWvtYle2eYzxb2pX2H\nRlIxtsBtG95y/98uXWLHyMkVytvUhErCy1k80Jt0ctAKXZ0MiEnQlRVflEzX\nGFK0cxQAlW+JUeI11+kNC4J6N8twelpFR5f1i12j3WbkWm9pWsHVPLVSWVgI\n7OIDucrE1GHmLqbYVJTR4jQdv/HojC8wvh5Sc8R2IyyhpY+6ITaniN2sOrxs\nMJJ3dKt4T68Ak6fbuE7HIXJ+7ul7eC6ZBlkLtpj3JSYmTTqy/MoU4liPqpK3\n2RGT2qzBk6uKU5JMl80JCQJDLVLEy5egb7TE8/KZM8u0/jKo/A2Es+c3bERi\n1GcBUhWdzFvF7k4EBGuiBE49J6+RpBPW8mSLWmpQCvhKICwCGwiUZ0D96llD\nND7e\r\n=3hn5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDqtki/rX34SCh3PKXPYO8Pst1GXCItHmfwBCcAEJWZDAiBrGSDoRhwCW5vyhv58sAvUeZR5FEJfEAhrW3mScbfGSA=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.4_1626196270735_0.62171960190353"
      },
      "_hasShrinkwrap": false
    },
    "4.2.5": {
      "name": "@serverless/platform-client",
      "version": "4.2.5",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.4.13",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.5",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.13.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.4.6"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.0",
        "webpack": "^4.41.6"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.5",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-PqQptakqHs6DHVY3fCqyMqdaFSKgehvUGrobWBUhcsmovnGY1Fzw9s3uqnqt2jmaCICNzPn/hPN+P+JbsG7itA==",
        "shasum": "2bc7eaabb2a5030eae11ab89f370c74504207047",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.5.tgz",
        "fileCount": 24,
        "unpackedSize": 765824,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJg8ZlxCRA9TVsSAnZWagAArnQQAKQEeewmAFnMzyn5Tg9J\ng1nIoSRdWut2BxT/+g2wsnH3JyJ0mHPs18wWs+nWoZT18Jt2AApy5yGxNk9X\nCMjlkUstijOmnd7KqY3LXH/4Ezf5Osj2PDvnpczgDyeTtbGVVzHZCHi9GQiU\nvpSnoMuTRiLmbzAyEj+VJYEiOA5Q7+NRKkr9eHtvYc8J4Ov9jug1ANYZFw/y\nxfuhQy9SNA/o+A13lj4M0BJr9nNoXbctFus7QC0pTrO91tPBx/is1f3Aiaww\n1t5SMvNA8EH5gmkF5FHYR2hRSTpq8ueTZMks89D4zmxB92y0uhKtXfEIIiei\nJSclXuo6IOO3UUluVis7LAQ5DjZyxBVawUTf+BCfXrkU8wUd8rm+pnVbU0FZ\neOJREWvmX6tx/Ay4o4jrhbDJYg3cG2NV9Ege0EJm+gyXYD8UQvd7JhaL9LoW\n4ntjeppX7fQGlF2vbB6q11SYB6xSJUKq0q0TKDAqRoHvTBOZjP+X6berP3Fl\nQ5UTx0RvP21KLTIcfaQDqAS8r5cADSs+iVFtUe0XLNY31wP9Na5sU1Z+gI4X\n1F0SukEOKCA0+h+V0abqRWbw7LBNRNWXt7NLNF79gKuxeGZ4vZqdWJkPGX9Y\nsInL4ZI2HDvwgqAiOHqFsXH8r7uXS6OQPRaC4c9qeLYvqTUo7CMrFxMcNk2T\npign\r\n=qoGb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDmEXUNQURrQWTUy4NwNULuTJso7KefzcgJUGNXseBEFAIgV1hKakvrmFHFjYPCHWDCCGeOlelg3GhQs+TUBHk3X64="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "aj.stuyvenberg",
          "email": "astuyve@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "hkbarton",
          "email": "hkbarton@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "scouredimage",
          "email": "scouredimage@gmail.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.5_1626446193541_0.8089696754846989"
      },
      "_hasShrinkwrap": false
    },
    "4.2.6": {
      "name": "@serverless/platform-client",
      "version": "4.2.6",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.2.6",
      "_nodeVersion": "14.17.3",
      "_npmVersion": "6.14.13",
      "dist": {
        "integrity": "sha512-TVwlUvYnNjotd4010I9Vh0Dr0c2XByaUTEjpxLJm/Ti51Ka6vLIJ44JxuNZ6TmvkRh66yFZbaZUsVv6W4wNUVQ==",
        "shasum": "bc37bbab64dd39ef8cddcf9b13ac849e4244bfdf",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.2.6.tgz",
        "fileCount": 24,
        "unpackedSize": 765823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhABy2CRA9TVsSAnZWagAAyIEP/25O5hr3nq7kRFSHSP4D\nAWMpgFL1BruzuedTlTWgjwGhFZMcherAF4/32mcRpNQajzupbopQ839jQzNy\nIXfd4yt0Lqv5sozqXPfXhUv0EeGgSFj9gEQUzqD9SYM+9qBGi6WFrpFKy2ih\n+/reDWy9bMPBjc1mifkW01hvEeM3qPmcCObphVSKUirF+LsKTmhsP/v8pSHQ\n37u5JWpablZ2s2JuiJwMCn+lWimzxQeTFNlf9WWDbetAdiuisRm4mdAc1vDE\nmKSJaGwzMvBADI9UkijXG3xQi2O7N/AFecxQdd7FZ2x0TUlZRq4Qpb71jbtq\nOMXhx8p2cR5dLS3tC9KhRDhhAm0+bzsPSNVjr4O67Q9GE9rR4tyReFhouPGN\naxZpnq5WOP0GB94+24qqBbKJRt9kiU/kCDyEB+BQ4vj6FGykLCcKjgKtSfzQ\nLcTnI1LAo0DqPWvTWxUPjM+eDy3T8TEnhO2eEAjjZ5ZBPFBQLA0jpjIw9pON\nv9pmk0I3LqwOzWb/rD0SNxaqVcgQNgMAhoOZ6zVFxwF9PmUk0hRkQf4fLi5F\nwl3FDM4gKBylFmjJNVsU+T9qmYG/MgfoHZEoWzD4QNLgLSK4uxWc4qlZWff5\nqKB4O2HKVOWfAaIwTAYwxrytDrXaO2EJOdnGpOaEw9vnQ8FzH+kLFqZvGFGw\nkYwt\r\n=htq+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEWVuDB2CJB8EMipKRgisZPyY5pFUpEpfyAZ+d0sOiQWAiBIWM1z9GpVn+0wnNFsUonKrzkn5RwfC3gXW5iXanzJ0g=="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.2.6_1627397302628_0.10220265146900398"
      },
      "_hasShrinkwrap": false
    },
    "4.3.0": {
      "name": "@serverless/platform-client",
      "version": "4.3.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.3.0",
      "_nodeVersion": "14.17.5",
      "_npmVersion": "6.14.14",
      "dist": {
        "integrity": "sha512-q2CMqCkKeBaKA/UwfJAZLkdUsbghSbiYPvAX4rl9rsR5APm4KWtjKQP9CTOtVO5JRMWYoysK6jF0d5VJOABRzQ==",
        "shasum": "5eda7b7eb8bdd0da93f2ecf2130b4131349806a1",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.3.0.tgz",
        "fileCount": 24,
        "unpackedSize": 772970,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhI3uUCRA9TVsSAnZWagAAPGYP/02kRuVzWQQoaxlIcVE3\nvBeqt27L4YzbO1hq8P9QVYHQQQt7Gkwcr0O26TpakUECbyICoDEQNc8r1zHx\nN1p079Hl41fGsw2x1mvlI9eaI1et0+M5IGS8Z+3gtTxuOpOVS+9kTLsB3rLy\nCXb+JKPEP8g0sMUUz2dRk3FIOZuc40BAF3Z3uetG2n/Nv++i5kqGo5DyTSEz\nt4UlzgUNb+xHbJ8ZmgCWnee2TfIu9cnTPiKLonEA7IhtFDabgYH+ubjvIr7J\nvf2rb0KHEsE1cDzgYBKlbjZEXGRG3NdUgd1CPPK6cNVSE/2/raSQdOgIi9Qq\nYI9tQkbbPKdDOZFNf3IOm9Bt1p+bpAfMJ13/o28fbm4/cnl5BrqMdJxq2XpM\n9leHgJJqXFvYiF6HxFPN3hM6/4vg/2Tk+zDJhzjAuWJvc5jz8JRfO/3NuOdm\nQ5Lbp/A/m3kxCI68VQxfkzwAmobf9IbAe5qYQwNRDq0Ol42KoMlxDCZsU1AZ\nfgFsMhuR9n+bZGxxlNXkSWyY1DuecyFsAE8nXQMG61l+r3euup9RYmjvSsTV\nb9z+K7YkYJsxwp1GcwjbSWaWVdCknTPFm2jRaApo74Z8hkzz8Txc1RyqxAsj\nv6/gz78MJxq3+7FDWCiYA/T8rxCAxgFadizIpXIluRjxySSpLJyIuvtn3V9Y\nwoYd\r\n=nSMx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDT0AgJg2PIgxFQLhABs8KflJCy68p+HM1mdt4b2IS0+gIhALg2iyeMD4LrP/jXn5hlfibsxECEaZXrkOiCtST6vOsS"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.3.0_1629715347895_0.5326084485125826"
      },
      "_hasShrinkwrap": false
    },
    "4.3.1": {
      "name": "@serverless/platform-client",
      "version": "4.3.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.3.1",
      "_nodeVersion": "14.18.3",
      "_npmVersion": "6.14.15",
      "dist": {
        "integrity": "sha512-VPXeTTgXmWZtZmbzm9eh5FJcOoFgHkcwgfNA59FV3TE2Vcm5JZiXKtXl5AANu9LYcyOtJK7iBJXs8OUSwNbJZw==",
        "shasum": "5caa52321f9b4e7a451748a16d3f851f263ea3ef",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.3.1.tgz",
        "fileCount": 24,
        "unpackedSize": 787795,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh+aWDCRA9TVsSAnZWagAAhW8P/1Pb9mgm7wOaIg3F4vc6\nzXGfmDofrNU+fh167lnhSRD5McivAq2CEgykRaneCRaGsXRtDCZLvpt1+N5V\n9lrE7KFSi/DyV4X6pgqK9XzGF2cNmUrDbbp7VqJ3V0fhpK4HSnZvZycQkEf1\n0zAwTuAuwtApZOYwHRd8JHsM2Va5GSvvY5R694zLelh2mh7Dl702n1xriESs\nL8f0gt0g8zHY2v+jZh/GCIk1jee5P/gT9i4pcn2lZFhGnjLON9LxZeMjPWFE\nmhp/Ez8jdZLF3A0yl1L7COpS6D3Mrezy+1OEsemNH8fTQ9gQf5dpKqnTOgfU\nidMJ6coMOuu2D7lw4y7fCmdModE6aXwClYpZgDHoHRZ9QR5tKZXGuXXk/Rv4\ndeM0l5jW16YvDKLfMl0qZxeGLskNarXmkpwx6L4HR4GTz4xmwvaobDiXrd7T\nZho+o4ulakHjaNIwsmlXpFQKj6eKr8cLy/eYXdXAJ8ylr7oCrQX68SRMlOtV\nCXEVMiXLhHBnIqF3/lZvtVLMm9mCcpSC+FYEdnovKYQbWkbm12jIDlXPDn70\nzzWsbl3wrY8gMsHuVtdeVtnO3ecquiZr49peqhKzW+qQ8MKMhV5DodqXk3k1\n84jEaDMeiawt50ApsKVUPlagRhyMk90jW92jzyuyzRiBDVZkK3WXaqiSinOq\ngm6u\r\n=Dw5m\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDzevzG4wl8xDfpppH6qzR8fPuinyDZ159stEEJxQyotQIgR6IN5VW0KK4QvgxDJIciyhZVj/nuI/SXgz0WaRZgqpY="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.3.1_1643750786932_0.44651587635468926"
      },
      "_hasShrinkwrap": false
    },
    "4.3.2": {
      "name": "@serverless/platform-client",
      "version": "4.3.2",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.3.2",
      "_nodeVersion": "14.19.0",
      "_npmVersion": "6.14.16",
      "dist": {
        "integrity": "sha512-DAa5Z0JAZc6UfrTZLYwqoZxgAponZpFwaqd7WzzMA+loMCkYWyJNwxrAmV6cr2UUJpkko4toPZuJ3vM9Ie+NDA==",
        "shasum": "10cd3ad8cf452a33528cfb14bbb6003d30a74805",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.3.2.tgz",
        "fileCount": 24,
        "unpackedSize": 789909,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiHeymACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmokIw//Xee7bM4xdqxyWR+vfbYXaWNkWt9gznf+lMenMSKkKQQ9ap8X\r\nGOfegSDxt5ZQuAKmvJHMsi46C9qHJLFzUrj/tVKo0miW78wwxudBLmICBmu8\r\nRrIFtMUvBbmYdeU2tZqMy340oKxyd8rg/xBVM7yyjjmDjE3pf6998b/BowM9\r\no/6ZwPnUUwZ0BBbnWJrQINP5R+l737BR/eVexBDgwkHOAMfEqmIP/XD6crzS\r\ngjENfxBwfDCgkb1Mdsk+ZqZMxEJkzGXMMntNxT7tx0v2hi7WzxR5lAJa0Pmc\r\nbzn9fBzxOU2ja/oaC08UETiE0B9ZSzHeAOc+uNgFrbIxcPS0npuJrpphFslp\r\nUTlNDpDVbUIA5wvP2SsGVfxahAH4dVca451CggQsW8qjyfJqZldYV/KhxKEC\r\nitltmzgZW7zJDNQLgtgoSaTtJ7qw/jOe5AE+HldcIfn2taFls2uR3koGb3Q8\r\n2/u8LMwroSVXql2A63vKomvRUJON0uaiPE8jyIhk3xazQQRlOMHaBm3SpGk0\r\nGb/+X1bxbgdEMXmeZvc/ztLfF4Plv6sKkZlROHbOwQfLDgj6gSVCJp6AFwrB\r\nOCAa1t52o/Nwiqs+OD0pDd7HcApiZTEXdrZugKsq6+MSyq81pYA9L2PZX2HU\r\nhSilODOtab+gElwbnOMDm5GJEUMzR8TFLU0=\r\n=zBJL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCVxK4ciSCXzk50dsVsl1rOddLAFA4dYGdCuEK9pJPlLgIhAKHzhJggER2XkyNLQwQ5lxdvMUkHutDrMLC8DhcK8SRG"
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        },
        {
          "name": "medikoo",
          "email": "medikoo+npm@medikoo.com"
        },
        {
          "name": "jdaly",
          "email": "jeremy@jeremydaly.com"
        },
        {
          "name": "dougmoscrop",
          "email": "doug.moscrop@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.3.2_1646128294033_0.910948479694266"
      },
      "_hasShrinkwrap": false
    },
    "4.4.0": {
      "name": "@serverless/platform-client",
      "version": "4.4.0",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^0.21.1",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^6.0.1",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.4.0",
      "_nodeVersion": "14.21.3",
      "_npmVersion": "6.14.18",
      "dist": {
        "integrity": "sha512-urL7SNefRqC2EOFDcpvm8fyn/06B5yXWneKpyGw7ylGt0Qr9JHZCB9TiUeTkIpPUNz0jTvKUaJ2+M/JNEiaVIA==",
        "shasum": "8a1c76ceface3eef6792a35c3e5b295f68beb967",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.4.0.tgz",
        "fileCount": 24,
        "unpackedSize": 782148,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFXFM/TsknOZOYDtk+uplRRmpIjwh6fRiD3sfHfxpnIDAiEA8jfrNANUaAgQeKQ5dKIN5UNnLtZDvX41dwGR7UXVoh4="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.4.0_1694811702818_0.4415553031238788"
      },
      "_hasShrinkwrap": false
    },
    "4.5.1": {
      "name": "@serverless/platform-client",
      "version": "4.5.1",
      "main": "./src/index.js",
      "jsdelivr": "dist-web/serverless-platform-client.min.js",
      "browser": "dist-web/serverless-platform-client.min.js",
      "scripts": {
        "generate-doc": ".scripts/generateDoc.js",
        "prepublishOnly": ".scripts/buildWeb.js"
      },
      "license": "ISC",
      "dependencies": {
        "adm-zip": "^0.5.5",
        "archiver": "^5.3.0",
        "axios": "^1.6.2",
        "fast-glob": "^3.2.7",
        "https-proxy-agent": "^5.0.0",
        "ignore": "^5.1.8",
        "isomorphic-ws": "^4.0.1",
        "js-yaml": "^3.14.1",
        "jwt-decode": "^2.2.0",
        "minimatch": "^3.0.4",
        "querystring": "^0.2.1",
        "run-parallel-limit": "^1.1.0",
        "throat": "^5.0.0",
        "traverse": "^0.6.6",
        "ws": "^7.5.3"
      },
      "devDependencies": {
        "fs-extra": "^9.1.0",
        "jsdoc-to-markdown": "^8.0.0",
        "null-loader": "^3.0.0",
        "prettier": "^2.3.2",
        "webpack": "^4.46.0"
      },
      "engines": {
        "node": ">=10.0"
      },
      "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s",
      "_id": "@serverless/platform-client@4.5.1",
      "_nodeVersion": "14.21.3",
      "_npmVersion": "6.14.18",
      "dist": {
        "integrity": "sha512-XltmO/029X76zi0LUFmhsnanhE2wnqH1xf+WBt5K8gumQA9LnrfwLgPxj+VA+mm6wQhy+PCp7H5SS0ZPu7F2Cw==",
        "shasum": "db5915bb53339761e704cc3f7d352c7754a79af2",
        "tarball": "https://registry.npmjs.org/@serverless/platform-client/-/platform-client-4.5.1.tgz",
        "fileCount": 24,
        "unpackedSize": 860608,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE6Vl+LJRSbyY8WMyHz2DcUEiYjlrTO3b7a5WlQsLSZkAiEArgzUEPbOukrqU/2w5e09a6eoRBY3yc/EBv/YpnR9UwE="
          }
        ]
      },
      "_npmUser": {
        "name": "serverless-main",
        "email": "services@serverless.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "eahefnawy",
          "email": "eahefnawy@gmail.com"
        },
        {
          "name": "ac360",
          "email": "austencollins@gmail.com"
        },
        {
          "name": "serverless-main",
          "email": "services@serverless.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/platform-client_4.5.1_1700155603483_0.04286992373988485"
      },
      "_hasShrinkwrap": false
    }
  },
  "maintainers": [
    {
      "name": "eahefnawy",
      "email": "eahefnawy@gmail.com"
    },
    {
      "name": "ac360",
      "email": "austencollins@gmail.com"
    },
    {
      "name": "serverless-main",
      "email": "services@serverless.com"
    }
  ],
  "license": "ISC",
  "readme": "# Serverless Platform SDK\n\nThis Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform services. This SDK is for the new services, which are multi-cloud, self-hostable and focued on Components. At some point, we will try to merge these SDKs.\n\nThe SDK is light-weight, so that it can be used in the following: CLIs, Dashboards, Back-End Services, FaaS Layers. Please **DO NOT** add any big Node.js dependencies to this SDK.\n\nThis SDK should guide the interface design between Services and Clients. All Clients and Services **MUST** use the SDK and should never hardcode API endpoints or FaaS resources identifiers.\n\n## Quick-Start\n\n**If you are working within a Node.js environment, install the Serverless Platform Client SDK via NPM:**\n\n```\nnpm i @serverless/platform-client\n```\n\n**If you are working within a web/browser environment, use the CDN hosted Serverless Platform Client SDK:**\n\nThis is minified, tree-shaked, browserified. The CDN fetches it directly from NPM, so just reference any npm version, like below.\n\nThis CDN service has several locations in China, so it works well there.\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client@0.17.2\" async></script>\n```\n\nYou can also pin to the latest version, but this could break at any time:\n\n```\n// In index.html <head></head>\n<!-- Load the Serverless Platform (Components) SDK -->\n<script src=\"https://cdn.jsdelivr.net/npm/@serverless/platform-client\" async></script>\n```\n\nIf you are working with the `dev` environment of the Serverless Platform, set the following environment variable, or configure the client programmatically, as detailed below.\n\n```\nexport SERVERLESS_PLATFORM_STAGE=dev\n```\n\nHere is how you require, instantiate the Client and use it:\n\n```javascript\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nsdk = new ServerlessSDK({\n  platformStage: \"dev\", // Optional.  Defaults to 'prod'\n  accessKey: \"JA98JAJFASLFJSALFJASLFJ\", // Optional, but recommended.  Platform Access Key needed to identify all requests.\n});\n\nconst instances = await sdk.listInstances(\"my-org\");\n```\n\n## Classes\n\n<dl>\n<dt><a href=\"#ServerlessSDK\">ServerlessSDK</a></dt>\n<dd><p>The Serverless Platform SDK Class</p>\n</dd>\n</dl>\n\n## Typedefs\n\n<dl>\n<dt><a href=\"#onEvent\">onEvent</a> : <code>function</code></dt>\n<dd><p><code>onEvent</code> callback</p>\n</dd>\n<dt><a href=\"#onDisconnect\">onDisconnect</a> : <code>function</code></dt>\n<dd><p><code>onDisconnect</code> callback</p>\n</dd>\n</dl>\n\n<a name=\"ServerlessSDK\"></a>\n\n## ServerlessSDK\n\nThe Serverless Platform SDK Class\n\n**Kind**: global class\n\n- [ServerlessSDK](#ServerlessSDK)\n  - [new ServerlessSDK()](#new_ServerlessSDK_new)\n  - [.session](#ServerlessSDK+session) : <code>object</code>\n    - [.refreshToken(refreshToken)](#ServerlessSDK+session.refreshToken) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.events](#ServerlessSDK+events) : <code>object</code>\n    - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n    - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>Promise.&lt;null&gt;</code>~~\n  - [.frameworkDeployments](#ServerlessSDK+frameworkDeployments) : <code>object</code>\n    - [.create([params])](#ServerlessSDK+frameworkDeployments.create) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list([params])](#ServerlessSDK+frameworkDeployments.list) ⇒ <code>Promise.&lt;array&gt;</code>\n  - [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n    - [.register(url, [options])](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list([options])](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.accessKeys](#ServerlessSDK+accessKeys) : <code>object</code>\n    - [.create(orgName, userName, accessKeyName)](#ServerlessSDK+accessKeys.create) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list(orgName)](#ServerlessSDK+accessKeys.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.remove(orgName, uid)](#ServerlessSDK+accessKeys.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.get()](#ServerlessSDK+accessKeys.get) ⇒ <code>Promise.&lt;(object\\|null)&gt;</code>\n  - [.connections](#ServerlessSDK+connections) : <code>object</code>\n    - [.create(orgUid, providerUid, accountAlias)](#ServerlessSDK+connections.create) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.list(orgUid)](#ServerlessSDK+connections.list) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.get(orgUid, connectionUid)](#ServerlessSDK+connections.get) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.getByOrgAndAccountAlias(orgUid, accountAlias)](#ServerlessSDK+connections.getByOrgAndAccountAlias) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.update(orgUid, connectionUid, providerUid, accountAlias, status)](#ServerlessSDK+connections.update) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.remove(orgUid, connectionUid)](#ServerlessSDK+connections.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.syncAll(orgUid)](#ServerlessSDK+connections.syncAll) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.unsync(orgUid, connectionUid)](#ServerlessSDK+connections.unsync) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.desktop](#ServerlessSDK+desktop) : <code>object</code>\n    - [.createSavedQuery(orgUid, appUid, serviceName, savedQuery)](#ServerlessSDK+desktop.createSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.getSavedQuery(orgUid, appUid, serviceName, savedQueryUid)](#ServerlessSDK+desktop.getSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.updateSavedQuery(orgUid, appUid, serviceName, savedQueryUid, savedQuery)](#ServerlessSDK+desktop.updateSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.deleteSavedQuery(orgUid, appUid, serviceName, savedQueryUid)](#ServerlessSDK+desktop.deleteSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.listSavedQueries(orgUid, appUid, serviceName)](#ServerlessSDK+desktop.listSavedQueries) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.logDestinations](#ServerlessSDK+logDestinations) : <code>object</code>\n    - [.getOrCreate([params])](#ServerlessSDK+logDestinations.getOrCreate) ⇒ <code>Promise.&lt;object&gt;</code>\n    - [.remove([params])](#ServerlessSDK+logDestinations.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.deploymentProfiles](#ServerlessSDK+deploymentProfiles) : <code>object</code>\n    - [.get([params])](#ServerlessSDK+deploymentProfiles.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - [.create([params])](#ServerlessSDK+deploymentProfiles.create) ⇒ <code>Promise.&lt;Object&gt;</code>\n    - [.list([params])](#ServerlessSDK+deploymentProfiles.list) ⇒ <code>Promise.&lt;array&gt;</code>\n    - [.setDefault([params])](#ServerlessSDK+deploymentProfiles.setDefault) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - [.organizations](#ServerlessSDK+organizations) : <code>object</code>\n    - [.get([params])](#ServerlessSDK+organizations.get) ⇒ <code>object</code>\n    - [.list([params])](#ServerlessSDK+organizations.list) ⇒ <code>array</code>\n    - [.create([params])](#ServerlessSDK+organizations.create) ⇒ <code>object</code>\n    - [.validate([params])](#ServerlessSDK+organizations.validate) ⇒ <code>array</code>\n  - [.apps](#ServerlessSDK+apps) : <code>object</code>\n    - [.create([params])](#ServerlessSDK+apps.create) ⇒ <code>object</code>\n    - [.get([params])](#ServerlessSDK+apps.get)\n    - [.update([params])](#ServerlessSDK+apps.update) ⇒ <code>object</code>\n    - [.remove([params])](#ServerlessSDK+apps.remove)\n    - [.list([params])](#ServerlessSDK+apps.list)\n  - [.metadata](#ServerlessSDK+metadata) : <code>object</code>\n    - [.get()](#ServerlessSDK+metadata.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - [.config()](#ServerlessSDK+config) ⇒ <code>null</code>\n  - [.getDomain(serviceName)](#ServerlessSDK+getDomain) ⇒ <code>string</code>\n  - [.getUser()](#ServerlessSDK+getUser) ⇒ <code>object</code>\n  - [.getUserMeta()](#ServerlessSDK+getUserMeta) ⇒ <code>object</code>\n  - [.saveUserMeta(userMeta)](#ServerlessSDK+saveUserMeta) ⇒ <code>object</code>\n  - ~~[.validateUserAndOrgName(userAndOrgName)](#ServerlessSDK+validateUserAndOrgName) ⇒ <code>array</code>~~\n  - ~~[.createUserAndOrg(userAndOrgName)](#ServerlessSDK+createUserAndOrg) ⇒ <code>object</code>~~\n  - ~~[.createOrg(userAndOrgName)](#ServerlessSDK+createOrg) ⇒ <code>object</code>~~\n  - ~~[.getOrgByName(orgName)](#ServerlessSDK+getOrgByName) ⇒ <code>object</code>~~\n  - ~~[.listOrgs(username)](#ServerlessSDK+listOrgs) ⇒ <code>object</code>~~\n  - ~~[.createApp(orgName)](#ServerlessSDK+createApp) ⇒ <code>object</code>~~\n  - ~~[.updateApp(orgName)](#ServerlessSDK+updateApp) ⇒ <code>object</code>~~\n  - ~~[.deleteApp(orgName, appName)](#ServerlessSDK+deleteApp)~~\n  - ~~[.listApps(orgName)](#ServerlessSDK+listApps)~~\n  - [.createInitToken(orgName)](#ServerlessSDK+createInitToken)\n  - [.getInitToken(initTokenUid)](#ServerlessSDK+getInitToken)\n  - [.createProvider(orgUid, data)](#ServerlessSDK+createProvider)\n  - [.updateProvider(orgUid, providerUid, data)](#ServerlessSDK+updateProvider)\n  - [.setDefaultProvider(orgUid, providerUid)](#ServerlessSDK+setDefaultProvider)\n  - [.unsetDefaultProvider(orgUid, providerUid)](#ServerlessSDK+unsetDefaultProvider)\n  - [.deleteProvider(orgUid, providerUid)](#ServerlessSDK+deleteProvider)\n  - [.createProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+createProviderLink)\n  - [.deleteProviderLink(orgUid, linkType, linkUid, providerUid)](#ServerlessSDK+deleteProviderLink)\n  - [.getProviders(orgUid)](#ServerlessSDK+getProviders)\n  - [.getProvider(orgUid, providerUid)](#ServerlessSDK+getProvider)\n  - [.getProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getProvidersByOrgServiceInstance)\n  - [.getProvidersByLink(orgUid, linkType, linkUid)](#ServerlessSDK+getProvidersByLink)\n  - [.getAllowedProviders()](#ServerlessSDK+getAllowedProviders)\n  - [.createParam(orgUid, linkType, linkUid, data)](#ServerlessSDK+createParam)\n  - [.deleteParam(orgUid, linkType, linkUid, paramUid)](#ServerlessSDK+deleteParam)\n  - [.updateParam(orgUid, linkType, linkUid, paramUid, data)](#ServerlessSDK+updateParam)\n  - [.getParams(orgUid, linkType, linkUid)](#ServerlessSDK+getParams)\n  - [.getParamsByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getParamsByOrgServiceInstance)\n  - [.getParamsAndProvidersByOrgServiceInstance(orgUid, serviceUid, instanceUid)](#ServerlessSDK+getParamsAndProvidersByOrgServiceInstance)\n  - [.connect([options])](#ServerlessSDK+connect) ⇒ <code>null</code>\n  - [.disconnect()](#ServerlessSDK+disconnect) ⇒ <code>null</code>\n  - [.isConnected()](#ServerlessSDK+isConnected) ⇒ <code>boolean</code>\n  - [.unpublishFromRegistry(registryPackage)](#ServerlessSDK+unpublishFromRegistry)\n  - [.publishToRegistry(registryPackage)](#ServerlessSDK+publishToRegistry) ⇒ <code>object</code>\n  - [.getFromRegistry(name, version)](#ServerlessSDK+getFromRegistry) ⇒ <code>object</code>\n  - [.generateInstanceId(orgUid, stageName, appUid, instanceName)](#ServerlessSDK+generateInstanceId) ⇒ <code>object</code>\n  - [.validateInstance(instanceToValidate)](#ServerlessSDK+validateInstance) ⇒ <code>object</code>\n  - [.createInstance(orgName, stageName, appName, instanceName, instanceStatus)](#ServerlessSDK+createInstance) ⇒ <code>object</code>\n  - [.saveInstance(instanceRecord)](#ServerlessSDK+saveInstance)\n  - [.getInstance(orgName, stageName, appName, instanceName)](#ServerlessSDK+getInstance)\n  - [.listInstances(orgName, orgUid)](#ServerlessSDK+listInstances)\n  - [.run(action, instanceData, options)](#ServerlessSDK+run)\n  - [.runFinish(method, instanceData, meta)](#ServerlessSDK+runFinish)\n  - [.deploy()](#ServerlessSDK+deploy)\n  - [.remove()](#ServerlessSDK+remove)\n  - [.startInterceptingLogs(eventType, context)](#ServerlessSDK+startInterceptingLogs)\n  - [.stopInterceptingLogs()](#ServerlessSDK+stopInterceptingLogs)\n\n<a name=\"new_ServerlessSDK_new\"></a>\n\n### new ServerlessSDK()\n\nCreates an instance of the SDK. Accepts a configuration object and calls the `config()` method. See the `config()` method for more information on allowed configuration.\n\n| Param                      | Type                | Description                                                                                                                                                                              |\n| -------------------------- | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [config.accessKey]         | <code>string</code> | Can either be a Serverless Platform Access Key or an ID Token.                                                                                                                           |\n| [config.platformStage]     | <code>string</code> | The Serverless Platform Stage you wish to interact with. This can also be set by the environment variable SERVERLESS_PLATFORM_STAGE=                                                     |\n| [context.orgName]          | <code>string</code> | The name of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish. |\n| [context.orgUid]           | <code>string</code> | The ID of the Serverless Platform Organization you wish to interact with. If set, this value is used upon creating a Websockets connection, and auto-added to every Event you publish.   |\n| [context.stageName]        | <code>string</code> | The Serverless Platform Organization Stage you wish to interact with. If set, this value is auto-added to every Event you publish.                                                       |\n| [context.appName]          | <code>string</code> | The Serverless Platform Application you wish to interact with. If set, this value is auto-added to every Event you publish.                                                              |\n| [context.instanceName]     | <code>string</code> | The Serverless Platform Instance you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                 |\n| [context.componentName]    | <code>string</code> | The Serverless Platform Component you wish to interact with. If set, this value is auto-added to every Event you publish.                                                                |\n| [context.componentVersion] | <code>string</code> | The Serverless Platform Component version you wish to interact with. If set, this value is auto-added to every Event you publish.                                                        |\n\n**Example**\n\n```js\nconst { ServerlessSDK } = require(\"@serverless/platform-client\");\n\nconst sdk = new ServerlessSDK({\n  accessKey: \"123456789\",\n  context: {\n    orgName: \"my-org\",\n    orgUid: \"1234\",\n    stageName: \"prod\",\n    appName: \"my-app\",\n    instanceName: \"my-instance\",\n  },\n});\n```\n\n<a name=\"ServerlessSDK+session\"></a>\n\n### serverlessSDK.session : <code>object</code>\n\nMethods to create, update, delete User Sessions on the Serverless Platform\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)  \n<a name=\"ServerlessSDK+session.refreshToken\"></a>\n\n#### session.refreshToken(refreshToken) ⇒ <code>Promise.&lt;object&gt;</code>\n\nUses a Refresh Token to generate a new ID Token for a User within a specific Serverless Organization.\n\n**Kind**: static method of [<code>session</code>](#ServerlessSDK+session)\n\n| Param        | Type                | Description                                      |\n| ------------ | ------------------- | ------------------------------------------------ |\n| refreshToken | <code>string</code> | The refresh token used to create a new ID Token. |\n\n**Example**\n\n```js\nconst tokenData = await sdk.session.refreshToken(refreshToken);\n```\n\n<a name=\"ServerlessSDK+events\"></a>\n\n### serverlessSDK.events : <code>object</code>\n\nPublish and retrieve Serverless Platform Events\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.events](#ServerlessSDK+events) : <code>object</code>\n  - [.publish(event)](#ServerlessSDK+events.publish) ⇒ <code>Promise.&lt;null&gt;</code>\n  - [.get(uid)](#ServerlessSDK+events.get) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - [.list([options])](#ServerlessSDK+events.list) ⇒ <code>Promise.&lt;Object&gt;</code>\n  - ~~[.send(event)](#ServerlessSDK+events.send) ⇒ <code>Promise.&lt;null&gt;</code>~~\n\n<a name=\"ServerlessSDK+events.publish\"></a>\n\n#### events.publish(event) ⇒ <code>Promise.&lt;null&gt;</code>\n\nPublishes Serverless Platform Event(s) via HTTP API. The use-case for this is synchronous publishing, where you do not want to open a websockets connection.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a `200:OK` HTTP status and empty response.\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n**Example** _(user event)_\n\n```js\nsdk.config({ context: { orgUid: \"3xVy2MWGFqpGYSlRMd\" } });\nawait sdk.events.publish({\n  event: \"user.created\",\n  data: {\n    id: \"user-123\",\n    username: \"testuser\",\n  },\n});\n```\n\n**Example** _(system event)_\n\n```js\nawait sdk.events.publish({\n  event: \"entity.updated\", // follows a `<entity>[.<sub-entity>].<action>` naming convention\n  user_uid: \"user-111\", // user attributable for event action if applicable - optional\n  // either of the following properties are required to be set and if not, inherit from current sdk context\n  org_uid: \"org-42\",\n  org_name: \"serverless\",\n  // the following properties are optional and default to inheriting from current sdk context\n  app_name: \"app-222\",\n  instance_name: \"instance-333\",\n  stage_name: \"us-east-1\",\n  component_name: \"component-444\",\n  component_version: \"1.2.3\",\n  data: {\n    // event payload - required and must match the format below\n    object: {\n      // Serverless Platform object targeted by action\n      object: \"name\",\n      // ...properties\n    },\n    previous_attributes: {\n      // only set on `*.updated` event types and contains modified property values as of before the update\n      //...properties\n    },\n  },\n});\n```\n\n<a name=\"ServerlessSDK+events.get\"></a>\n\n#### events.get(uid) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nRetrieve a Serverless Platform Event.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - An event object if a valid id was provided.\n\n| Param | Type                | Description                 |\n| ----- | ------------------- | --------------------------- |\n| uid   | <code>string</code> | UID of event to be fetched. |\n\n**Example**\n\n```js\nconst event = await sdk.events.get(\"evt_EsbM82sYTVscqYvcD4CKcLe1\");\nconsole.log(JSON.stringify(event, null, 2));\n// outputs:\n// {\n//   \"uid\": \"evt_EsbM82sYTVscqYvcD4CKcLe1\",\n//   \"event\": \"member.invite.sent\",\n//   \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//   \"user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//   \"object\": \"event\",\n//   \"created\": 1600686488878,\n//   \"data\": {\n//     \"object\": {\n//       \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//       \"role\": \"collaborator\",\n//       \"invited_by_user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//       \"created\": \"2020-09-21T11:08:08.603Z\",\n//       \"recipient_email\": \"dev@serverless.com\",\n//       \"org_name\": \"serverless\",\n//       \"object\": \"invite\"\n//     }\n//   }\n// }\n```\n\n<a name=\"ServerlessSDK+events.list\"></a>\n\n#### events.list([options]) ⇒ <code>Promise.&lt;Object&gt;</code>\n\nList all Serverless Platform events.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;Object&gt;</code> - A dictionary with a `data` property that contains an array of up to `limit` events, starting after event `starting_after`. Each entry in the array is a separate `event` Object. If no more events are available, the resulting array will be empty.\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                                                                        |\n| ---------------------- | ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| [options]              | <code>Object</code> | List options                                                                                                                                                                                                                                                                                                                                                       |\n| options.org_uid        | <code>string</code> | UID of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                                                                                                                                           |\n| options.org_name       | <code>string</code> | Name of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                                                                                                                                          |\n| options.event          | <code>string</code> | A string containing a specific event name, or all events by using `'*'` as a wildcard.                                                                                                                                                                                                                                                                             |\n| options.limit          | <code>number</code> | A limit on the number of events to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                                                                          |\n| options.created        | <code>number</code> | A filter on the list based on the object created field. The value can be an integer Unix timestamp, or it can be a dictionary with the following options: - `created.gt`, `created.gte`, `created.lt`, `created.lte` returning results where the event `created` field is greater, greater than or equal to, lesser than, or lesser than or equal to respectively. |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is an event ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `evt_foo`, your subsequent call can include `starting_after=evt_foo` in order to fetch the next page of the list.                                                               |\n\n**Example**\n\n```js\nconst events = await sdk.events.list({\n  event: \"member.invite.accepted\",\n  created: {\n    gte: 1600686488878,\n  },\n  limit: 1,\n});\nconsole.log(JSON.stringify(events, null, 2));\n// outputs:\n// {\n//   \"object\": \"list\",\n//   \"data\": [\n//     {\n//       \"uid\": \"evt_DdUCdz2tsY7gZr1a9Z6Xw9BD\",\n//       \"event\": \"member.invite.accepted\",\n//       \"object\": \"event\",\n//       \"created\": 1600707548900,\n//       \"data\": {\n//         \"object\": {\n//            \"object\": \"invite\",\n//            \"org_uid\": \"3xVy2MWGFqpGYSlRMd\",\n//            \"role\": \"collaborator\",\n//            \"invited_by_user_uid\": \"ps4Vt2phVXsMyD0byW\",\n//            \"recipient_email\": \"dev@serverless.com\",\n//            \"org_name\": \"serverless\",\n//            \"created\": \"2020-09-21T11:08:08.603Z\",\n//         }\n//       }\n//     }\n//   ]\n// }\n```\n\n<a name=\"ServerlessSDK+events.send\"></a>\n\n#### ~~events.send(event) ⇒ <code>Promise.&lt;null&gt;</code>~~\n\n**_Deprecated_**\n\nDispatches a Serverless Platform Event via Websockets. The use-case for this is asynchronous publishing, where you do not want to synchronous auth requests, where every message must be authorized first, adding latency.\n\n**Kind**: static method of [<code>events</code>](#ServerlessSDK+events)  \n**Returns**: <code>Promise.&lt;null&gt;</code> - A successful publish request will be ack'ed with a `200: OK` HTTP status and empty response.  \n**See**: [publish](#ServerlessSDK+events.publish)\n\n| Param       | Type                                                     | Description                                                                                                                                                                       |\n| ----------- | -------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| event       | <code>Object</code> \\| <code>Array.&lt;Object&gt;</code> | An event object, or if publishing a batch of events, an array of event objects.                                                                                                   |\n| event.event | <code>string</code>                                      | Event type. Serverless Platform system events are required to follow a `<entity>[.<sub-entity>].<action>` naming convention (e.g. `user.created`, `org.membership.updated`, etc). |\n| event.data  | <code>Object</code>                                      | Event metadata. Serverless Platform system events are required to be formatted as described in the example below.                                                                 |\n\n<a name=\"ServerlessSDK+frameworkDeployments\"></a>\n\n### serverlessSDK.frameworkDeployments : <code>object</code>\n\nManage Serverless Platform Deployments for Serverless Framework Traditional\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.frameworkDeployments](#ServerlessSDK+frameworkDeployments) : <code>object</code>\n  - [.create([params])](#ServerlessSDK+frameworkDeployments.create) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.list([params])](#ServerlessSDK+frameworkDeployments.list) ⇒ <code>Promise.&lt;array&gt;</code>\n\n<a name=\"ServerlessSDK+frameworkDeployments.create\"></a>\n\n#### frameworkDeployments.create([params]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nCreate a new Serverless Platform Deployment. Additionally, if Service with provided `serviceName` does not exist, it will be created automatically as well.\n\n**Kind**: static method of [<code>frameworkDeployments</code>](#ServerlessSDK+frameworkDeployments)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Saved deployment object.\n\n| Param                 | Type                | Description                                                                   |\n| --------------------- | ------------------- | ----------------------------------------------------------------------------- |\n| [params]              | <code>Object</code> | Create deployment params.                                                     |\n| params.orgName        | <code>string</code> | The name of the Serverless Platform Organization to create the Deployment in. |\n| params.appName        | <code>string</code> | The name of the Serverless Platform Application to create the Deployment in.  |\n| params.serviceName    | <code>string</code> | The name of the Serverless Platform Service to create the Deployment in.      |\n| params.stageName      | <code>string</code> | The name of the Serverless Service Stage to create the Deployment in.         |\n| params.regionName     | <code>string</code> | The name of the AWS Region to create the Deployment in.                       |\n| params.deploymentData | <code>Object</code> | Data associated with saved deployment                                         |\n\n<a name=\"ServerlessSDK+frameworkDeployments.list\"></a>\n\n#### frameworkDeployments.list([params]) ⇒ <code>Promise.&lt;array&gt;</code>\n\nList Serverless Platform Deployments.\n\n**Kind**: static method of [<code>frameworkDeployments</code>](#ServerlessSDK+frameworkDeployments)  \n**Returns**: <code>Promise.&lt;array&gt;</code> - Array of Deployments.\n\n| Param              | Type                | Description                                                                   |\n| ------------------ | ------------------- | ----------------------------------------------------------------------------- |\n| [params]           | <code>Object</code> | List deployment params.                                                       |\n| params.orgName     | <code>string</code> | The name of the Serverless Platform Organization to list the Deployments for. |\n| params.appName     | <code>string</code> | The name of the Serverless Platform Application to list the Deployment for.   |\n| params.serviceName | <code>string</code> | The name of the Serverless Platform Service to list the Deployment for.       |\n| params.stageName   | <code>string</code> | The name of the Serverless Service Stage to list the Deployment for.          |\n| params.regionName  | <code>string</code> | The name of the AWS Region to list the Deployment for.                        |\n| params.cursor      | <code>string</code> | The cursor from which Deployments should be listed. Used for pagination.      |\n\n<a name=\"ServerlessSDK+webhooks\"></a>\n\n### serverlessSDK.webhooks : <code>object</code>\n\nRegister, modify and query Serverless Platform Event Webhooks\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.webhooks](#ServerlessSDK+webhooks) : <code>object</code>\n  - [.register(url, [options])](#ServerlessSDK+webhooks.register) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.list([options])](#ServerlessSDK+webhooks.list) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.get(uid)](#ServerlessSDK+webhooks.get) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.update(uid)](#ServerlessSDK+webhooks.update) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.delete(uid)](#ServerlessSDK+webhooks.delete) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+webhooks.register\"></a>\n\n#### webhooks.register(url, [options]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRegisters a webhook endpoint to receive Serverless Platform events.\n\nEndpoint should be able to receieve JSON formatted events as a HTTP POST payload.\nFurthermore, a `3` second timeout limit is enforced on event delivery with no additional retries performed.\nThe following HTTP headers are set on the POST request:\n| Header | Value |\n| ----------------------- | ------------------------------- |\n| `Content-type` | `application/json` |\n| `X-Serverless-Event` | Event type |\n| `X-Serverless-Delivery` | Unique delivery ID |\n| `User-Agent` | Prefix of `Serverless-Webhook/` |\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Registered webhook endpoint.\n\n| Param                         | Type                              | Description                                                                                                                                                                                                                                      |\n| ----------------------------- | --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| url                           | <code>string</code>               | HTTP webhook endpoint URL.                                                                                                                                                                                                                       |\n| [options]                     | <code>Object</code>               | Registration options.                                                                                                                                                                                                                            |\n| options.description           | <code>string</code>               | An optional description of what the webhook is used for.                                                                                                                                                                                         |\n| options.org_uid               | <code>string</code>               | UID of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context. If registering a Serverless Platform system webhook, use a special wildcard value of `'*'` to consume events generated from _all_ orgs. |\n| options.org_name              | <code>string</code>               | Name of the Serverless Platform Organization. Optional - defaults to inheriting from current SDK context.                                                                                                                                        |\n| options.filter                | <code>Object</code>               | Optionally, filter which events this endpoint should receive.                                                                                                                                                                                    |\n| options.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                                                                                                                                                   |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.register(\n  \"https://postb.in/1598300732037-0682672155089\",\n  { description: \"This is my webhook, I like it a lot\" }\n);\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"*\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.list\"></a>\n\n#### webhooks.list([options]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all regsitered webhook endpoints.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A dictionary with a `data` property that contains an array, with each entry being a `webhook` object.\n\n| Param                  | Type                | Description                                                                                                                                                                                                                                                                                                           |\n| ---------------------- | ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [options]              | <code>Object</code> | List options.                                                                                                                                                                                                                                                                                                         |\n| options.starting_after | <code>string</code> | A cursor for use in pagination. `starting_after` is a webhook endpoint object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `whe_foo`, your subsequent call can include `starting_after=whe_foo` in order to fetch the next page of the list. |\n| options.limit          | <code>number</code> | A limit on the number of webhook endpoints to be returned. Limit can range between 1 and 100, and the default is 10.                                                                                                                                                                                                  |\n\n**Example**\n\n```js\nconst webhooks = await sdk.webhooks.list({\n  limit: 1,\n});\nconsole.log(JSON.stringify(webhooks, null, 2));\n// outputs:\n// {\n//   \"object\": \"list\",\n//   \"data\": [\n//     {\n//       \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//       \"object\": \"webhook_endpoint\",\n//       \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//       \"description\": \"This is my webhook, I like it a lot\",\n//       \"filter\": {\n//         \"enabled_events\": [\"*\"]\n//       },\n//       \"status\": {\n//         \"disabled\": false,\n//         \"most_recent_delivery\": {\n//           \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n//           \"response_status_code\": 200,\n//           \"response_headers\": {\n//             \"content-length\": \"12\",\n//             \"connection\": \"close\",\n//             \"content-type\": \"application/json\"\n//           },\n//           \"request_headers\": {\n//             \"User-Agent\": \"Serverless-Webhook/0.1\",\n//             \"Content-type\": \"application/json\",\n//             \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n//             \"X-Serverless-Event\": \"test.webhook.send2\"\n//           },\n//           \"response_text\": \"{\\\"ok\\\": true}\",\n//           \"error_message\": null,\n//           \"timestamp\": 1599595612876\n//         }\n//       },\n//       \"created\": 1599591851267,\n//       \"updated\": 1599595613099\n//     },\n//   ]\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.get\"></a>\n\n#### webhooks.get(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRetrieves a webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - A webhook endpoint if a valid webhook endpoint ID was provided.\n\n| Param | Type                | Description          |\n| ----- | ------------------- | -------------------- |\n| uid   | <code>string</code> | Webhook endpoint ID. |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.get(\"whe_FPYDtTL37ye13m3sJvtcdyuF\");\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"https://postb.in/1598300732037-0682672155089\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\"*\"]\n//   },\n//   \"status\": {\n//     \"disabled\": false,\n//     \"most_recent_delivery\": {\n//       \"event_uid\": \"evt_5cmXN7kqdu5YY69HFKegmiGR\",\n//       \"response_status_code\": 200,\n//       \"response_headers\": {\n//         \"content-length\": \"12\",\n//         \"connection\": \"close\",\n//         \"content-type\": \"application/json\"\n//       },\n//       \"request_headers\": {\n//         \"User-Agent\": \"Serverless-Webhook/0.1\",\n//         \"Content-type\": \"application/json\",\n//         \"X-Serverless-Delivery\": \"e1701c44-5d92-4515-8bfb-6c9173a89b60\",\n//         \"X-Serverless-Event\": \"test.webhook.send2\"\n//       },\n//       \"response_text\": \"{\\\"ok\\\": true}\",\n//       \"error_message\": null,\n//       \"timestamp\": 1599595612876\n//     }\n//   },\n//   \"created\": 1599591851267,\n//   \"updated\": 1599595613099\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.update\"></a>\n\n#### webhooks.update(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nUpdates the registered webhook endpoint. You may edit the url, description, the list of filters, and the status of your endpoint.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - Updated webhook endpoint.\n\n| Param                         | Type                              | Description                                                                                                                |\n| ----------------------------- | --------------------------------- | -------------------------------------------------------------------------------------------------------------------------- |\n| uid                           | <code>string</code>               | Webhook endpoint ID.                                                                                                       |\n| updates.url                   | <code>string</code>               | HTTP webhook endpoint url, if updating.                                                                                    |\n| updates.description           | <code>string</code>               | An optional updated description of what the webhook is used for.                                                           |\n| updates.filter                | <code>Object</code>               | Optionally, update filter which events this endpoint should receive. An existing filter can reset by setting it to `null`. |\n| updates.filter.enabled_events | <code>Array.&lt;string&gt;</code> | The list of events to enable for this endpoint. `[\"*\"]` indicates that all events are enabled.                             |\n| updates.status.disabled       | <code>boolean</code>              | Enable/disable the webhook endpoint.                                                                                       |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.update(\"whe_FPYDtTL37ye13m3sJvtcdyuF\", {\n  url: \"http://437f01fa092e.ngrok.io\",\n  filter: {\n    enabled_events: [\"user.created\", \"member.invite.sent\"],\n  },\n});\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"http://437f01fa092e.ngrok.io\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"user.created\",\n//       \"member.invite.sent\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978,\n//   \"updated\": 1602078663800\n// }\n```\n\n<a name=\"ServerlessSDK+webhooks.delete\"></a>\n\n#### webhooks.delete(uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDeletes the webhook endpoint with the given ID.\n\n**Kind**: static method of [<code>webhooks</code>](#ServerlessSDK+webhooks)  \n**Returns**: <code>Promise.&lt;object&gt;</code> - An object with the deleted webhook endpoints’s ID if a valid webhook endpoint ID was provided. Otherwise, this call throws an error, such as if the webhook endpoint has already been deleted.\n\n| Param | Type                | Description          |\n| ----- | ------------------- | -------------------- |\n| uid   | <code>string</code> | Webhook endpoint ID. |\n\n**Example**\n\n```js\nconst webhook = await sdk.webhooks.delete(\"whe_FPYDtTL37ye13m3sJvtcdyuF\");\nconsole.log(JSON.stringify(webhook, null, 2));\n// outputs:\n// {\n//   \"uid\": \"whe_FPYDtTL37ye13m3sJvtcdyuF\",\n//   \"object\": \"webhook_endpoint\",\n//   \"url\": \"http://437f01fa092e.ngrok.io\",\n//   \"description\": \"This is my webhook, I like it a lot\",\n//   \"filter\": {\n//     \"enabled_events\": [\n//       \"user.created\",\n//       \"member.invite.sent\"\n//     ]\n//   },\n//   \"status\": {\n//     \"disabled\": false\n//   },\n//   \"created\": 1602078105978,\n//   \"updated\": 1602078663800\n// }\n```\n\n<a name=\"ServerlessSDK+accessKeys\"></a>\n\n### serverlessSDK.accessKeys : <code>object</code>\n\nCreate, get and delete Serverless Platform Access Keys for an Organization\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.accessKeys](#ServerlessSDK+accessKeys) : <code>object</code>\n  - [.create(orgName, userName, accessKeyName)](#ServerlessSDK+accessKeys.create) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.list(orgName)](#ServerlessSDK+accessKeys.list) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.remove(orgName, uid)](#ServerlessSDK+accessKeys.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.get()](#ServerlessSDK+accessKeys.get) ⇒ <code>Promise.&lt;(object\\|null)&gt;</code>\n\n<a name=\"ServerlessSDK+accessKeys.create\"></a>\n\n#### accessKeys.create(orgName, userName, accessKeyName) ⇒ <code>Promise.&lt;object&gt;</code>\n\nCreates a new Access Key for a User within a Serverless Organization.\n\n**Kind**: static method of [<code>accessKeys</code>](#ServerlessSDK+accessKeys)\n\n| Param         | Type                | Description                                                                          |\n| ------------- | ------------------- | ------------------------------------------------------------------------------------ |\n| orgName       | <code>string</code> | The name of the Serverless Organization to create the Access Key for                 |\n| userName      | <code>string</code> | The name of the User within the Serverless Organization to create the Access Key for |\n| accessKeyName | <code>string</code> | The name of the Access Key you would like to create                                  |\n\n**Example**\n\n```js\nconst accessKey = await sdk.accessKeys.create(orgName, accessKeyName);\n```\n\n<a name=\"ServerlessSDK+accessKeys.list\"></a>\n\n#### accessKeys.list(orgName) ⇒ <code>Promise.&lt;object&gt;</code>\n\nLists all Access Keys within a Serverless Organization.\n\n**Kind**: static method of [<code>accessKeys</code>](#ServerlessSDK+accessKeys)\n\n| Param   | Type                | Description                                                 |\n| ------- | ------------------- | ----------------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Serverless Organization to list Access Keys |\n\n**Example**\n\n```js\nconst accessKeys = await sdk.accessKeys.list(orgName);\n```\n\n<a name=\"ServerlessSDK+accessKeys.remove\"></a>\n\n#### accessKeys.remove(orgName, uid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDelete an Access Key from a Serverless Organization.\n\n**Kind**: static method of [<code>accessKeys</code>](#ServerlessSDK+accessKeys)\n\n| Param   | Type                | Description                                                            |\n| ------- | ------------------- | ---------------------------------------------------------------------- |\n| orgName | <code>string</code> | The name of the Serverless Organization that the Access Key belongs to |\n| uid     | <code>string</code> | The UID of the Access Key                                              |\n\n**Example**\n\n```js\nconst accessKeys = await sdk.accessKeys.remove(orgName, uid);\n```\n\n<a name=\"ServerlessSDK+accessKeys.get\"></a>\n\n#### accessKeys.get() ⇒ <code>Promise.&lt;(object\\|null)&gt;</code>\n\nGet metadata for the Access Key configured under `sdk.accessKey`\n\n**Kind**: static method of [<code>accessKeys</code>](#ServerlessSDK+accessKeys)  \n**Example**\n\n```js\nconst accessKeyData = await sdk.accessKeys.get();\n```\n\n<a name=\"ServerlessSDK+connections\"></a>\n\n### serverlessSDK.connections : <code>object</code>\n\nCreate, manage and sync Serverless Platform Connections between vendor accounts and their Serverless Organization.\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.connections](#ServerlessSDK+connections) : <code>object</code>\n  - [.create(orgUid, providerUid, accountAlias)](#ServerlessSDK+connections.create) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.list(orgUid)](#ServerlessSDK+connections.list) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.get(orgUid, connectionUid)](#ServerlessSDK+connections.get) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.getByOrgAndAccountAlias(orgUid, accountAlias)](#ServerlessSDK+connections.getByOrgAndAccountAlias) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.update(orgUid, connectionUid, providerUid, accountAlias, status)](#ServerlessSDK+connections.update) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.remove(orgUid, connectionUid)](#ServerlessSDK+connections.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.syncAll(orgUid)](#ServerlessSDK+connections.syncAll) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.unsync(orgUid, connectionUid)](#ServerlessSDK+connections.unsync) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+connections.create\"></a>\n\n#### connections.create(orgUid, providerUid, accountAlias) ⇒ <code>Promise.&lt;object&gt;</code>\n\nCreates a new Connection between a vendor account and a Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param        | Type                | Description                                                                                                                                                                                                                                                                  |\n| ------------ | ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| orgUid       | <code>string</code> | The UID of the Serverless Organization to create a Connection in.                                                                                                                                                                                                            |\n| providerUid  | <code>string</code> | The UID of an existing Serverless Provider tied to a vendor account within the Organization to use for this Connection. A vendor account (e.g. an AWS account) can only be registered once with a Connection, across all Serverless Organizations. They are globally unique. |\n| accountAlias | <code>string</code> | An alias or nickname of the vendor account used to conveniently identify which account this Connection is used with. This must be unique within the Serverless Organization.                                                                                                 |\n\n<a name=\"ServerlessSDK+connections.list\"></a>\n\n#### connections.list(orgUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nList all Connections within the Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param  | Type                | Description                                                       |\n| ------ | ------------------- | ----------------------------------------------------------------- |\n| orgUid | <code>string</code> | The UID of the Serverless Organization to create a Connection in. |\n\n<a name=\"ServerlessSDK+connections.get\"></a>\n\n#### connections.get(orgUid, connectionUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nGet a single Connection within the Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param         | Type                | Description                                                          |\n| ------------- | ------------------- | -------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to get a Connection in.       |\n| connectionUid | <code>string</code> | The UID of the Connection to get within the Serverless Organization. |\n\n<a name=\"ServerlessSDK+connections.getByOrgAndAccountAlias\"></a>\n\n#### connections.getByOrgAndAccountAlias(orgUid, accountAlias) ⇒ <code>Promise.&lt;object&gt;</code>\n\nGet a single Connection by Organization UID and vendor account alias within the Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param        | Type                | Description                                                            |\n| ------------ | ------------------- | ---------------------------------------------------------------------- |\n| orgUid       | <code>string</code> | The UID of the Serverless Organization to get a Connection in.         |\n| accountAlias | <code>string</code> | The alias of the Connection to get within the Serverless Organization. |\n\n<a name=\"ServerlessSDK+connections.update\"></a>\n\n#### connections.update(orgUid, connectionUid, providerUid, accountAlias, status) ⇒ <code>Promise.&lt;object&gt;</code>\n\nUpdate a single Connection within the Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param         | Type                | Description                                                             |\n| ------------- | ------------------- | ----------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to update a Connection in.       |\n| connectionUid | <code>string</code> | The UID of the Connection to update within the Serverless Organization. |\n| providerUid   | <code>string</code> | The updated Provider UID within the Connection.                         |\n| accountAlias  | <code>string</code> | The updated alias of the Connection.                                    |\n| status        | <code>string</code> | The updated status of the Connection.                                   |\n\n<a name=\"ServerlessSDK+connections.remove\"></a>\n\n#### connections.remove(orgUid, connectionUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRemove a single Connection within the Serverless Organization.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param         | Type                | Description                                                             |\n| ------------- | ------------------- | ----------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to remove a Connection in.       |\n| connectionUid | <code>string</code> | The UID of the Connection to remove within the Serverless Organization. |\n\n<a name=\"ServerlessSDK+connections.syncAll\"></a>\n\n#### connections.syncAll(orgUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRun a sync operation across all Connections within the Serverless Organization. This only runs sync on Connections with an \"inactive\", \"synced\", \"unsynced\", \"error\" state. Call `connections.list()` to view status of all Connections.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param  | Type                | Description                                                        |\n| ------ | ------------------- | ------------------------------------------------------------------ |\n| orgUid | <code>string</code> | The UID of the Serverless Organization to sync all Connections in. |\n\n<a name=\"ServerlessSDK+connections.unsync\"></a>\n\n#### connections.unsync(orgUid, connectionUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nRun an unsync operation on a specific Connection within the Serverless Organization. This only runs sync on Connections with an \"synced\", \"error\" state. Call `connections.list()` to view status of all Connections.\n\n**Kind**: static method of [<code>connections</code>](#ServerlessSDK+connections)\n\n| Param         | Type                | Description                                                             |\n| ------------- | ------------------- | ----------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to sync all Connections in.      |\n| connectionUid | <code>string</code> | The UID of the Connection to unsync within the Serverless Organization. |\n\n<a name=\"ServerlessSDK+desktop\"></a>\n\n### serverlessSDK.desktop : <code>object</code>\n\nInteract with the Serverless Desktop back-end functions, like storing state for views.\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.desktop](#ServerlessSDK+desktop) : <code>object</code>\n  - [.createSavedQuery(orgUid, appUid, serviceName, savedQuery)](#ServerlessSDK+desktop.createSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.getSavedQuery(orgUid, appUid, serviceName, savedQueryUid)](#ServerlessSDK+desktop.getSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.updateSavedQuery(orgUid, appUid, serviceName, savedQueryUid, savedQuery)](#ServerlessSDK+desktop.updateSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.deleteSavedQuery(orgUid, appUid, serviceName, savedQueryUid)](#ServerlessSDK+desktop.deleteSavedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.listSavedQueries(orgUid, appUid, serviceName)](#ServerlessSDK+desktop.listSavedQueries) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+desktop.createSavedQuery\"></a>\n\n#### desktop.createSavedQuery(orgUid, appUid, serviceName, savedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n\nCreate a Saved Query for a Service by specifying some data.\n\n**Kind**: static method of [<code>desktop</code>](#ServerlessSDK+desktop)\n\n| Param       | Type                | Description                                                                      |\n| ----------- | ------------------- | -------------------------------------------------------------------------------- |\n| orgUid      | <code>string</code> | The UID of the Serverless Organization to create the Saved Query in.             |\n| appUid      | <code>string</code> | The UID of the Serverless Application to create the Saved Query in.              |\n| serviceName | <code>string</code> | The name of the Serverless Service to create the Saved Query in.                 |\n| savedQuery  | <code>string</code> | The object of arbitrary data you would like to save for this Serverless Service. |\n\n<a name=\"ServerlessSDK+desktop.getSavedQuery\"></a>\n\n#### desktop.getSavedQuery(orgUid, appUid, serviceName, savedQueryUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nGet Saved Query for a Service Stage via its key.\n\n**Kind**: static method of [<code>desktop</code>](#ServerlessSDK+desktop)\n\n| Param         | Type                | Description                                                         |\n| ------------- | ------------------- | ------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to get the Saved Query from. |\n| appUid        | <code>string</code> | The UID of the Serverless Application to get the Saved Query from.  |\n| serviceName   | <code>string</code> | The name of the Serverless Service to get the Saved Query from.     |\n| savedQueryUid | <code>string</code> | The UID of the Saved Query to get for this Serverless Service.      |\n\n<a name=\"ServerlessSDK+desktop.updateSavedQuery\"></a>\n\n#### desktop.updateSavedQuery(orgUid, appUid, serviceName, savedQueryUid, savedQuery) ⇒ <code>Promise.&lt;object&gt;</code>\n\nUpdate a Saved Query for a Service by specifying the UID and the data.\n\n**Kind**: static method of [<code>desktop</code>](#ServerlessSDK+desktop)\n\n| Param         | Type                | Description                                                                      |\n| ------------- | ------------------- | -------------------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to create the Saved Query in.             |\n| appUid        | <code>string</code> | The UID of the Serverless Application to create the Saved Query in.              |\n| serviceName   | <code>string</code> | The name of the Serverless Service to create the Saved Query in.                 |\n| savedQueryUid | <code>string</code> | The UID of the Saved Query to get for this Serverless Service.                   |\n| savedQuery    | <code>string</code> | The object of arbitrary data you would like to save for this Serverless Service. |\n\n<a name=\"ServerlessSDK+desktop.deleteSavedQuery\"></a>\n\n#### desktop.deleteSavedQuery(orgUid, appUid, serviceName, savedQueryUid) ⇒ <code>Promise.&lt;object&gt;</code>\n\nDelete Saved Query for a Service Stage by specifying its key.\n\n**Kind**: static method of [<code>desktop</code>](#ServerlessSDK+desktop)\n\n| Param         | Type                | Description                                                            |\n| ------------- | ------------------- | ---------------------------------------------------------------------- |\n| orgUid        | <code>string</code> | The UID of the Serverless Organization to delete the Saved Query from. |\n| appUid        | <code>string</code> | The UID of the Serverless Application to delete the Saved Query from.  |\n| serviceName   | <code>string</code> | The name of the Serverless Service to delete the Saved Query from.     |\n| savedQueryUid | <code>string</code> | The UID of the Saved Query to delete for this Serverless Service.      |\n\n<a name=\"ServerlessSDK+desktop.listSavedQueries\"></a>\n\n#### desktop.listSavedQueries(orgUid, appUid, serviceName) ⇒ <code>Promise.&lt;object&gt;</code>\n\nList Saved Queries for a Service.\n\n**Kind**: static method of [<code>desktop</code>](#ServerlessSDK+desktop)\n\n| Param       | Type                | Description                                                            |\n| ----------- | ------------------- | ---------------------------------------------------------------------- |\n| orgUid      | <code>string</code> | The UID of the Serverless Organization to list the Saved Queries from. |\n| appUid      | <code>string</code> | The UID of the Serverless Application to list the Saved Queries from.  |\n| serviceName | <code>string</code> | The name of the Serverless Service to list the Saved Queries from.     |\n\n<a name=\"ServerlessSDK+logDestinations\"></a>\n\n### serverlessSDK.logDestinations : <code>object</code>\n\nManage Log Destinations for your Organization\n\nLog Destination is represented by CloudWatch Logs Destination resource that is responsible for forwarding logs from selected service\nto Kinesis streams. These logs are later forwarded form Kinesis streams to Elasticsearch service.\n\n**Kind**: instance namespace of [<code>ServerlessSDK</code>](#ServerlessSDK)\n\n- [.logDestinations](#ServerlessSDK+logDestinations) : <code>object</code>\n  - [.getOrCreate([params])](#ServerlessSDK+logDestinations.getOrCreate) ⇒ <code>Promise.&lt;object&gt;</code>\n  - [.remove([params])](#ServerlessSDK+logDestinations.remove) ⇒ <code>Promise.&lt;object&gt;</code>\n\n<a name=\"ServerlessSDK+logDestinations.getOrCreate\"></a>\n\n#### logDestinations.getOrCreate([params]) ⇒ <code>Promise.&lt;object&gt;</code>\n\nGet or Create Log Destination.\nIf Log Destination already exists for a service in selected region and for selected stage, it will be returned, otherwise it will be created.\n\n**Kind**: static method of [<code>logDestinations</code>](#ServerlessSDK+logDestinat",
  "readmeFilename": "README.md",
  "description": "This Serverless Platform SDK makes it easy to interact with the Serverless Platform and perform operations on it. Please note that there is an existing `@serverless/platform-sdk` npm module for interacting with the Serverless Inc. SaaS original platform s"
}