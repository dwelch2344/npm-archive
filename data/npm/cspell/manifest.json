{
  "_id": "cspell",
  "_rev": "403-729cab6ce86e2fd8f04399823f2d8b9c",
  "name": "cspell",
  "description": "A Spelling Checker for Code!",
  "dist-tags": {
    "latest": "8.5.0",
    "next": "7.0.1-alpha.9",
    "cspell4": "4.2.8",
    "cspell5-next": "5.21.2-alpha.0",
    "cspell5": "5.21.2"
  },
  "versions": {
    "1.0.0": {
      "name": "cspell",
      "version": "1.0.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.3",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "669f04e3002878ad592b8628cbc8dc40bd0c0d60",
      "_id": "cspell@1.0.0",
      "_shasum": "0aa55263c40b70dd43e418f944885f00ed50e5fd",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "0aa55263c40b70dd43e418f944885f00ed50e5fd",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.0.tgz",
        "integrity": "sha512-yggYs3duzIDsPUOpzZzLn4IHL7C9W79ozThd8lyL8E/q9nInHHAL5xj9Fr6bJtlelmeQy+RKw25mcv2lL/0YtA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDHUTqXu6RfBZghauiSE0VQFYQe0nOTwvJjtmzykrTleAIgI53gXF/0fivTIRwtEpJVEQJn9xdcvYCOoFLcn/1Dp38="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.0.tgz_1485117023489_0.03643994010053575"
      },
      "directories": {}
    },
    "1.0.1": {
      "name": "cspell",
      "version": "1.0.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.3",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "42dd6239691724fd7ca81501430a2ee752e38f44",
      "_id": "cspell@1.0.1",
      "_shasum": "48e1b375e7fdb8a4c92ff932634b2add8f24a432",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "48e1b375e7fdb8a4c92ff932634b2add8f24a432",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.1.tgz",
        "integrity": "sha512-nqBD7HqNHgnqwfTq14Dj4wQKV6QuPn6LR2pGzttZ6cSFuJ6a/w4ajjKDTYgGlE41fkU5TPJMRMEEjQd9XfD5cw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCW++44uWyi/uDEgnCk/oMW4CGm7s/bn/DlVbfxcCjlAAIgbq4VI5Na8ZmBNRnX6VQgnQDj2KLhaS2MphFBWzireCA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.1.tgz_1485117917303_0.7061208274681121"
      },
      "directories": {}
    },
    "1.0.2": {
      "name": "cspell",
      "version": "1.0.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "01c821c32fd57378c7a6e5f96d1b2f0de36e5858",
      "_id": "cspell@1.0.2",
      "_shasum": "5b2a985bec04aacea53ec2a1a0f07402ad139015",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "5b2a985bec04aacea53ec2a1a0f07402ad139015",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.2.tgz",
        "integrity": "sha512-Xozgz0AQH1ndbzEXlFkYaycaVyVu/HRveeSg12YHz69l2l2yOSNZs2dDRva2vvbLCqhZ0eg+c21zbSR/YSo9/Q==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCjqnVMgMlaxUPuUaUUWtxr3dODnZE7u0EBnzCsjCZoGAIgKl6geXm/HF+CTzJvxB0xNHO3VLFuy5vhH6DnXlyq2Do="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.2.tgz_1485189674530_0.657703093951568"
      },
      "directories": {}
    },
    "1.0.4": {
      "name": "cspell",
      "version": "1.0.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "files": [
        "dist/",
        "src/"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "ad4bd72fa8c6152c36d7389fbd5ea7d6e3ceb629",
      "_id": "cspell@1.0.4",
      "_shasum": "10aa2929c7db99148510b0723888649f20d85153",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "10aa2929c7db99148510b0723888649f20d85153",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.4.tgz",
        "integrity": "sha512-xeQcdIoj1nKylDWwVhU5rSTyXljKKXei/uPgbIOfoPue2AoergujANyzWI7XVPoGzEm6f/8/h+06TQU8/OGm2g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBaF6YY4shG6e6Ezy8sRB+RrAjOZvADGlbbQ6QSzlW7ZAiEAhdhvHVxozC5qdfBpINo/NZlE2/LeB0M3k25u89sunk4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.4.tgz_1485191315409_0.7143414516467601"
      },
      "directories": {}
    },
    "1.0.5": {
      "name": "cspell",
      "version": "1.0.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "files": [
        "dist/",
        "src/"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "b7fcf520ce5ba7c2d1e4ab991b80c52011ff8ad6",
      "_id": "cspell@1.0.5",
      "_shasum": "9451dfe5dfc512d2bae6eb5c558252bfefd48ea8",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "9451dfe5dfc512d2bae6eb5c558252bfefd48ea8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.5.tgz",
        "integrity": "sha512-TIuIU9w0B1GbTIccwEg97CvEP8uRwyjBCzeLNZOsMcZhonf+P5irIx3kW4FOgpK1ySN8vX72GSmSrtIk0lbLhA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCBvXlh7fH2Mw4ApntrCPK2XrO8UrTj/b95q8xSuQinNwIgWteDIzN7GuIbE1T0zakA+HzOXIJ/xTiwALsXe5//3zU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.5.tgz_1485380999877_0.472250840626657"
      },
      "directories": {}
    },
    "1.0.6": {
      "name": "cspell",
      "version": "1.0.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "files": [
        "dist/",
        "src/"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "7433e00461886fa937359d9cf11a6855f207f79d",
      "_id": "cspell@1.0.6",
      "_shasum": "44d25e7c6850696ebaf1c9f727fa883edd6da55f",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "44d25e7c6850696ebaf1c9f727fa883edd6da55f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.6.tgz",
        "integrity": "sha512-P6Lz4pyfzhbNbU11vnYOZZ4b+Uus7Du+MM46aDRl92r2qBIyQs4SjPJeQRPvCzAQx6yq+teFlIhttWCyCcl7SQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGB0Aw3aZwcjNOhc2MU2iGhRmYpOuxWQSNkpm80u/WqNAiEA0v0hP4JU3FZCDkOyjyDhXsk8P9OYOqWugr68GhRbzY0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.6.tgz_1485381244343_0.04184128390625119"
      },
      "directories": {}
    },
    "1.0.7": {
      "name": "cspell",
      "version": "1.0.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "files": [
        "dist/",
        "src/"
      ],
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "gitHead": "b79878ef33f9be752522d724ef8d4793f3f7aa47",
      "_id": "cspell@1.0.7",
      "_shasum": "e61089132d6ab3346bd5dd47aa31283001f73abd",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "e61089132d6ab3346bd5dd47aa31283001f73abd",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.7.tgz",
        "integrity": "sha512-KiqZ1R1NJJ+79gzP9c6l5Q6F7jH/g9iL+m8DuBfI6jokdEKUhchB99rNvkqZ/uIm7l02a8DeCjKEj1pN/4MZmQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6eKYqoHJ2vjfJYoxqwiC1U7BsR9EVTi1NKs7JLlAtFAIgfuXYf8pAOph/K5XP7Nm9OApa8OPPxXd+MES4VSBmK1c="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.7.tgz_1485381556235_0.7336613442748785"
      },
      "directories": {}
    },
    "1.0.8": {
      "name": "cspell",
      "version": "1.0.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "test2": "mocha --compilers ts:ts-node/register --recursive \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "gitHead": "825d602ce8f7fb13e3cbaac1d0cf4135c613345a",
      "_id": "cspell@1.0.8",
      "_shasum": "a660aa532d8ba88cdbfdd4ff9058c70a7eee6164",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "a660aa532d8ba88cdbfdd4ff9058c70a7eee6164",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.0.8.tgz",
        "integrity": "sha512-cxc/VdnuSK8FaC9N1BmnQ3a1nQMuSKPrdKDdhQlU18VcchCRoHz4s1LiVKAfNuOlNLRgcoB4oW42+tBhpqkr0g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBPy1FQXWIQgAXXMwTBPLNOsm0usunILTn7rVo17BT4tAiBdp8vJnuzQpb3orF2CNtCf1a1SW24V0dC69O1jwPeOHA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.0.8.tgz_1485436947126_0.9016400598920882"
      },
      "directories": {}
    },
    "1.1.0": {
      "name": "cspell",
      "version": "1.1.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "cover": "NODE_ENV=test nyc npm run test2",
        "test2": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "5e569cb686f1e8b3b35f3e660540be88e52a6efb",
      "_id": "cspell@1.1.0",
      "_shasum": "71e96c0f992c0cb3f40953fbe384ba4caa42fe85",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "71e96c0f992c0cb3f40953fbe384ba4caa42fe85",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.1.0.tgz",
        "integrity": "sha512-CnVgHPWx5YjYnf7lCYcj9YNrNmZNkMrCThHVZfCzRomhJI3IH+UJEiaUdX5MQz5ur5RYG14My/i/kpcEpri15w==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC2yLth0ZDIPaYVnHYnAS1RXRtFwKZR62fg5F8nxzuVCAiBCEBeQgWx7A9FrNIHlRAtLxwXu8149AOgcvvEJYhRrUg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.1.0.tgz_1485850230014_0.40232336753979325"
      },
      "directories": {}
    },
    "1.2.0": {
      "name": "cspell",
      "version": "1.2.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.15",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "f0ef645f702cdf4a0868045294c0aeb67442599a",
      "_id": "cspell@1.2.0",
      "_shasum": "732dd65ead34e9e99b44b619b31e9c10a9e0c2b9",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "732dd65ead34e9e99b44b619b31e9c10a9e0c2b9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.2.0.tgz",
        "integrity": "sha512-+UPVZ8tlOPwM0rIlN4czAllBAWdkn2IXRgkmQhtFf6c8LSb3g5IvI1w4arSZdbf3OmrF2Z8jfgTlWQFHNfx96A==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGEaTvHY2QqfelzZZlMci+N3yuMrZR1lgj72SENpaiX9AiAISh+q1wx/z+rYtrw6IJJbb1tkEEK9GSwJzl0Sgzg1kQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.2.0.tgz_1485944318494_0.7126251589506865"
      },
      "directories": {}
    },
    "1.2.1": {
      "name": "cspell",
      "version": "1.2.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.15",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.3",
        "fs-promise": "^1.0.0",
        "gensequence": "^0.2.4",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.0.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "a4f7e0bb94a4d06cdb82d32c2d637ba2c53cf8c5",
      "_id": "cspell@1.2.1",
      "_shasum": "efcbd3d17217aee9f5528da76834812f20607b98",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "efcbd3d17217aee9f5528da76834812f20607b98",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.2.1.tgz",
        "integrity": "sha512-iIZpwOH+ekF/hQR0UjThKbBRhZ9RBsu+6kIH53wT9HTw3YR+Arj72OAyu5LQoTjDC4K8R6k2hoq0vqhqETYeyw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDsChEfhbGjOdF+6ZSDaKJf7BbIS7/HTI1IaRIGvfMy2gIhANd567w+8p5+9rJsSxft0PgnmobRRmEfCCs6OOsvT2oC"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.2.1.tgz_1485953681193_0.648259841138497"
      },
      "directories": {}
    },
    "1.3.0": {
      "name": "cspell",
      "version": "1.3.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.15",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.7",
        "fs-promise": "^1.0.0",
        "gensequence": "^1.0.0",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.1.0",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "3cc6499dfdef017c2f5ae8c7e29944d937392c28",
      "_id": "cspell@1.3.0",
      "_shasum": "2b780d598515bd3b0e527bc8bf9f1d84384b61de",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "2b780d598515bd3b0e527bc8bf9f1d84384b61de",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.3.0.tgz",
        "integrity": "sha512-NiB1mvCxklqcTzY8HFkGGvikP5AKXpjG4QLUrx7kRuKm0aDKgHxIZbNHUzLzvlZ/ZmyJM2lFLAivoSl+48xhww==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIApml9uuOrZpRaC7kMA/vTY3PMpE+qefAEjsp+mwzAQwAiBgmVwelS7uTAEWwJ9xQlE6hie2ZVSf2fJsF0zyhaTsoA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.3.0.tgz_1486038617189_0.2784124808385968"
      },
      "directories": {}
    },
    "1.3.1": {
      "name": "cspell",
      "version": "1.3.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.38",
        "@types/node": "^7.0.1",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.15",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.0.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.5"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-tools": "^1.0.7",
        "fs-promise": "^1.0.0",
        "gensequence": "^1.0.0",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.1.0",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "8b661f70d5a98b75b393d91f0416b7ef9368adb4",
      "_id": "cspell@1.3.1",
      "_shasum": "608f3400ff0d375e322bfd7a1bc672dc0ed55657",
      "_from": ".",
      "_npmVersion": "4.0.5",
      "_nodeVersion": "7.4.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "608f3400ff0d375e322bfd7a1bc672dc0ed55657",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.3.1.tgz",
        "integrity": "sha512-A2BQHRpW4MeAyLN5tqruR0KL/W7IRVDV8P06HwDCCUNcayGMjvGFEmubQUuNwoOwBJhJEDEzj744/eZJRqNTfw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCmyGWYFiiJrD3+eh7yJLjcgrxhYmIj90wR4Hn2jv5q8QIhANULQM3eqqezQpPNW6xBiLzVa9M7/An6/5RF3awz8Dxg"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.3.1.tgz_1486391457092_0.33276957110501826"
      },
      "directories": {}
    },
    "1.3.3": {
      "name": "cspell",
      "version": "1.3.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "cspell-tools compile ./dictionaries/*.txt -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.39",
        "@types/node": "^7.0.5",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.16",
        "cspell-tools": "^1.2.1",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.1.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.6"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-lib": "^1.0.1",
        "fs-promise": "^1.0.0",
        "gensequence": "^1.0.0",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.1.1",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "6f4db403c7a60cfe58637f12a25a949d9bd47b95",
      "_id": "cspell@1.3.3",
      "_shasum": "8bc69788d0ba0b535e8c4711f6d203f076cdee91",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "8bc69788d0ba0b535e8c4711f6d203f076cdee91",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.3.3.tgz",
        "integrity": "sha512-wQDO8we07cfWf011aBqiE79DtOQ3CSOpc8yaWFAm3jRsb8h/71Bt4laHG8r4cC+LQuNL8euOLzWm460Ic2NAmg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICVaimyun6PeRiziRXBjIQiGtbpZYsmCbKDZJgRyaVg4AiEAualsphrR/VCE9tueT311bYEBrzx9Rz2rNmWvV7tGf4o="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.3.3.tgz_1487333245984_0.03364160796627402"
      },
      "directories": {}
    },
    "1.4.0": {
      "name": "cspell",
      "version": "1.4.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.39",
        "@types/node": "^7.0.5",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.16",
        "cspell-tools": "^1.3.2",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.1.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.6"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-lib": "^1.0.1",
        "cspell-trie": "^1.3.0",
        "fs-promise": "^1.0.0",
        "gensequence": "^1.0.0",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.1.1",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2c55bfb54b502d31a81b794d48d4dd117602ce7f",
      "_id": "cspell@1.4.0",
      "_shasum": "ab23a8c3d3dffdaad35f3c48a3ab69a3f42937be",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "ab23a8c3d3dffdaad35f3c48a3ab69a3f42937be",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.4.0.tgz",
        "integrity": "sha512-QAZCDU78VgIfi4xgWKMwnuJJyssvpJqNJ3L3syUJVIfE33Z2g4sgC+zBXeKSlIJT/dh46eVD2lhBVrY1fhXu2g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHd8MC3qb50wOQMzPFhjapQlFymNdT5rGvUhQGUZfXT2AiBnQw85mj+/cCjoTIoMwhcPp2Gla+ZoQYynxTNgWc9SFg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-18-east.internal.npmjs.com",
        "tmp": "tmp/cspell-1.4.0.tgz_1489233508091_0.09039774886332452"
      },
      "directories": {}
    },
    "1.5.0": {
      "name": "cspell",
      "version": "1.5.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.4.34",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.3.31",
        "@types/comment-json": "^1.1.0",
        "@types/fs-promise": "^1.0.1",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.0",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.39",
        "@types/node": "^7.0.5",
        "@types/xregexp": "^3.0.28",
        "chai": "^3.5.0",
        "coveralls": "^2.11.16",
        "cspell-tools": "^1.3.2",
        "lorem-ipsum": "^1.0.3",
        "mocha": "^3.2.0",
        "nyc": "^10.1.2",
        "rimraf": "^2.5.4",
        "ts-node": "^2.1.0",
        "tslint": "^4.3.1",
        "typescript": "^2.1.6"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-lib": "^1.0.1",
        "cspell-trie": "^1.4.0",
        "fs-promise": "^1.0.0",
        "gensequence": "^1.0.0",
        "glob": "^7.1.1",
        "minimatch": "^3.0.3",
        "rxjs": "^5.1.1",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.1.1"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "a8dd78a63c2019c401d42f882efbd3355b12b334",
      "_id": "cspell@1.5.0",
      "_shasum": "beb7b2534addeee4f4c002490b4cb25d7959c584",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "beb7b2534addeee4f4c002490b4cb25d7959c584",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.5.0.tgz",
        "integrity": "sha512-aWnQFf1bFyCCFy+kTYSORw4V8PBHUH1TV5maLipTmdqKwFLJ5JEhyuK+KhsSQqbVQwYqb9v31eer+P/2M6Kk/g==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxnRP5EgYZH6U3JqXlHSOy6SnaKrXtcLqLKxN7EBODHQIgUUy0ErKDOPJOsDDqo8cIRWzSfYqm9bIABX4A9S40BDA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "packages-12-west.internal.npmjs.com",
        "tmp": "tmp/cspell-1.5.0.tgz_1490042018364_0.34674408147111535"
      },
      "directories": {}
    },
    "1.6.0": {
      "name": "cspell",
      "version": "1.6.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.0.6",
        "tslint": "^5.4.3",
        "typescript": "^2.3.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.0",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.0",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "9fedd3c4a1ad1e3feb4e655dfddebc82d27a5696",
      "_id": "cspell@1.6.0",
      "_shasum": "9156ae69eb9310b2263cd0dc5f112d72ef3b7488",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "9156ae69eb9310b2263cd0dc5f112d72ef3b7488",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.6.0.tgz",
        "integrity": "sha512-1s4DUWTXpFLlszclfpvJAqoYxQ100LA6As+0d3qeO/153280oapa9DjKExtep8JlrfnwsIcl8ICPp33+8PXwrw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFH1fVSCc97nLBzycga0V6gZ9MQ0mVxsdY08tEX0zMpbAiBb1ojGfmt/nS5NPomoemp1AfZaxSNFji0iXMhqJI2AHQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.6.0.tgz_1497112423244_0.08650449942797422"
      },
      "directories": {}
    },
    "1.6.1": {
      "name": "cspell",
      "version": "1.6.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.0.6",
        "tslint": "^5.4.3",
        "typescript": "^2.3.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.0",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "1a870416d14e1863364c6a70e747c14e73ec58e0",
      "_id": "cspell@1.6.1",
      "_shasum": "3135bd18353b0992dac102b4ef4cdd13fe417820",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "3135bd18353b0992dac102b4ef4cdd13fe417820",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.6.1.tgz",
        "integrity": "sha512-zVnJxpwnfCe2h1puYRcxT5Pocm/u6QYpHHEg3Ep4VOL6g1uuy2CvwvE78CUs24czq0P/auFarRsoLw+bgqqDWQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBCJNqvuHjORTWbFDnRtfzu3gpu+ql613g1P1d251ZXnAiEAt8TkV3ZLLgbbJZ6GDXcjamIr7OjKKHXEEN//gE8quq4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.6.1.tgz_1497126910346_0.5587894220370799"
      },
      "directories": {}
    },
    "1.7.0": {
      "name": "cspell",
      "version": "1.7.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.0.6",
        "tslint": "^5.4.3",
        "typescript": "^2.4.1"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "^3.1.0",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.0",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "6223252d47877c508871d365c888a8f92cf1195d",
      "_id": "cspell@1.7.0",
      "_shasum": "02290a5451135f635027cc2e683570932fa9d8ed",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "02290a5451135f635027cc2e683570932fa9d8ed",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.7.0.tgz",
        "integrity": "sha512-JOgzYnxl6m1TlnHVnS8BK9y089Gy0FB146Xy+o+NQ19ELx/hbgSwvp4tNQuGBbfKTSCe5fZjbJ6EYUXfOGXbPg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBIVMA7zZMqnWQ8pOoD1ZRiIZ5EcJ6vBBw82iR5b1TG7AiA+3cxnLMYR/MwogXjfcguMPNWbZfNYzo5R5eLqVUPnhA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.7.0.tgz_1499794613843_0.9094424762297422"
      },
      "directories": {}
    },
    "1.7.1": {
      "name": "cspell",
      "version": "1.7.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.0.6",
        "tslint": "^5.4.3",
        "typescript": "^2.4.1"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "^3.1.0",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.0",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "3bf61e1efe692a0d02b508deb4d2e6daf7e2ab90",
      "_id": "cspell@1.7.1",
      "_shasum": "b6df5de3e55a10f6873c6fb4d729cf250c6910cb",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "b6df5de3e55a10f6873c6fb4d729cf250c6910cb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.7.1.tgz",
        "integrity": "sha512-ld/itjt/4EIiKCSBbNT1U/JS5CyUhOCg/M1Z9EPkT4fUvaOhFwePRD0nRLea65ETzoVdHvnEAnvobdQBPYCjVA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB6WHDck90YcfanqTTM3OHpm+Bs1Ow8sSbxfLjbDdCjYAiEAnO4L2O3in39dNkrA6OiAtgBJO7f8IFBtnKuWAaaBe7A="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.7.1.tgz_1499804144208_0.7534910901449621"
      },
      "directories": {}
    },
    "1.7.2": {
      "name": "cspell",
      "version": "1.7.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.0.6",
        "tslint": "^5.4.3",
        "typescript": "^2.4.1"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "^3.1.0",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.0",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "95685d90390ac2050c8e1b99f04337f4699a344a",
      "_id": "cspell@1.7.2",
      "_shasum": "5f50843923c816a9418098043bd5edd92a15a4ac",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "5f50843923c816a9418098043bd5edd92a15a4ac",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.7.2.tgz",
        "integrity": "sha512-2jlUunhC9hlToWb0Yr7hjfmjKkL/1X0Akco3FsXjf6cuwF3Y5cj8523Xh/g5TNAV4pcOppTu3SotdHhctNm7Ww==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCeAZweNUYS3CketQOUkibB6HGmezayOA0QFZMqpEwjWQIgTHAzUd62NUE2sENa6a6fpfTZrbaPKtpQ1WaYCwN++J8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.7.2.tgz_1499808563080_0.18601347412914038"
      },
      "directories": {}
    },
    "1.7.3": {
      "name": "cspell",
      "version": "1.7.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.0",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "1506120368d691b1fae890edf67fecac567e47f2",
      "_id": "cspell@1.7.3",
      "_shasum": "00880b2096bb325835a7e02d02c7c98159d71bf3",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "00880b2096bb325835a7e02d02c7c98159d71bf3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.7.3.tgz",
        "integrity": "sha512-HuQjlXSz8q5WOK9lnrZUt5G9Lh85DIZDDvLlN+mcUvNSejjkHOKjKvXF2gkUWBPqPp5bpFUJZoihwMn9dTLmfg==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCdnfyf+TZCPEqJ/m3C4GUq8oIQ/QHkWzt1i8qVE1IS+gIhAOiozKKXvastwlD+YkfkKK6fEWeO6X0VgqYuwr11L5yA"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.7.3.tgz_1500668916279_0.5141331446357071"
      },
      "directories": {}
    },
    "1.7.4": {
      "name": "cspell",
      "version": "1.7.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.0",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "ced63e47e59e0fc985ae736cd51ef408f29fc6ca",
      "_id": "cspell@1.7.4",
      "_shasum": "29874c77fdc5d8aadf4c0d1830eebab6baaedbe6",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "29874c77fdc5d8aadf4c0d1830eebab6baaedbe6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.7.4.tgz",
        "integrity": "sha512-mB/ESIx6J8Dhowoz33RFyDg7vnOyfWaSFMnetHdj5vYdoDVBHnZsJ9aSFf1wjHZay04Fvz4/onaYUif9QQajEw==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC96OMY6MGlCqx5+qVMbDidS8VjSWqyVw+MgEja5NL2vAiBbdWIDFWXJCPmnF5IkvP403S6JtXsl3LP+TJn+1Bixrw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.7.4.tgz_1500670294940_0.8335447215940803"
      },
      "directories": {}
    },
    "1.8.0": {
      "name": "cspell",
      "version": "1.8.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "cdc3c42efa69ac7303257c08839ff543b4c72c24",
      "_id": "cspell@1.8.0",
      "_shasum": "a7fab68df15d9f0beec535ea17e3b6fcd1a67554",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "a7fab68df15d9f0beec535ea17e3b6fcd1a67554",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.8.0.tgz",
        "integrity": "sha512-ZP5vch457T5IFhi9UMO/OUyyy5IT2GzixIeTv1SRI8XFVXzA7wdR7uTO0OTT2nWeB7/4Ein8+hPwTvCzVrQFLA==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG3ghGeXw1HNcqJFVIJg+FQR75HXuGsYwJs6Bx5C74aOAiEA2q6goG9lrzXZOuDAxmxSgnUkdEFIznMHdukV0M59DNo="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.8.0.tgz_1500816314206_0.8067309698089957"
      },
      "directories": {}
    },
    "1.8.1": {
      "name": "cspell",
      "version": "1.8.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "7387e26067dff37fb340c5dd226fc07b6ed5cab6",
      "_id": "cspell@1.8.1",
      "_shasum": "8d2c11ddc4b0ed40a8348beaeeff8c8d6d578946",
      "_from": ".",
      "_npmVersion": "4.2.0",
      "_nodeVersion": "7.10.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "shasum": "8d2c11ddc4b0ed40a8348beaeeff8c8d6d578946",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.8.1.tgz",
        "integrity": "sha512-hT867JGFNgVUJhv570QZXv9MAFf5vfrRk8skC1FRLqB7vnyrRHieiN5tR9TuPLSk/o3OspEhpL2mrWULhhCgHQ==",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGgP3OE7vvoXdOxJc3zzVAF3/BMrFqlfgOelMzYh3/SoAiBYeZ5A9e5ukbDP16ePVW8Tx0hsA8ObgZXxPdxKk3j8oQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.8.1.tgz_1500816907803_0.1377329316455871"
      },
      "directories": {}
    },
    "1.9.2": {
      "name": "cspell",
      "version": "1.9.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2591cb654b2ffac826507d8253977730bc6587dc",
      "_id": "cspell@1.9.2",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.2.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-s5sf51FJfXSJvDE7UXiKMXyZ0E9OqfFxDWoQMFvj/MinLrpQhOpAemUQGMFjLnIsw6vmzVEIEnod7m/2hauhmw==",
        "shasum": "a4ebd71adc95dd307783e0795115066ef2d79241",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD41o99Z5pfuaFKs4y7KnYT3Ktb/MxP3gnDpqXl79OJbQIgfjPrqLk0goFBb5pE5QDfrO+R76GPhOQP6lfQrnpYVNM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.2.tgz_1502020620264_0.18589315377175808"
      },
      "directories": {}
    },
    "1.9.3": {
      "name": "cspell",
      "version": "1.9.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "cfc8c3b2612cc85f39fd4e3887893c9ddde8e825",
      "_id": "cspell@1.9.3",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.2.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-HY9AimfVNVnfKP7U8zHTGCReu5FlNxiRxBlEzBLowhGZdDGm2kmLe6CX/mxkiZHO1G+YAppJAGT2BrAsm24m5g==",
        "shasum": "a303bc08998d04de1db8a23d45cb179ead2533f7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGrCnPoBBU2mdqbM16cipL7nfF64E1nI31cBu9+DxR0CAiBDOZXOUsI2cz7psUrf4z7hfRtWGScRBzbh5ufAWN2wwg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.3.tgz_1502307746417_0.8692491701804101"
      },
      "directories": {}
    },
    "1.9.5": {
      "name": "cspell",
      "version": "1.9.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.1",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-dict-golang": "^1.1.1",
        "cspell-dict-python": "^1.0.1",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "bcf49ca01007fdf4f28026f4c9111cead68e7d31",
      "_id": "cspell@1.9.5",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.3.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-1ccXz/tQRWpZ4z8EsuUARbP/21kVuhxrO4byg13rpjexe/owJlSn60VztDFcRgjkaGBwgsCFYWYrgw+j90gY0A==",
        "shasum": "0a49fdbc6b52cdb756b845e4bc143ebd2c1a7dac",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.5.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC4J3jpTFgCvRfZXMoEZnyOxSA6Z1xwHVPLrmr1ArQtaQIgbsS84lwOvtgoFHhZnVXMZnqU3tUA1Wa4g3SnfbCSqxg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.5.tgz_1503917947099_0.4171305566560477"
      },
      "directories": {}
    },
    "1.9.6": {
      "name": "cspell",
      "version": "1.9.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.1",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-dict-golang": "^1.1.1",
        "cspell-dict-python": "^1.0.1",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "10975f3017785fb524ba6a197aa8f67df30cf779",
      "_id": "cspell@1.9.6",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.3.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-vkj2osDgyWnhAwVkp8z1TsZH0jBtFs2NeM3Nk1JzCf7ms0jCd4WYMFqmf3GivNsaZHzoJnGFlvp6ZLSHWoKsdA==",
        "shasum": "173ec6deb4c6bf28fad008afd578bf719dcd9a66",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2HKIZ7Z0Ej8Y4xXtroiSfNSNKNsK3cWax5/2ZZ4ObBQIhALxsXFdn2W4A1T5AG9gyZ7MfQmdpLPiKQ+ypUujoN31u"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.6.tgz_1503937940147_0.7388524014968425"
      },
      "directories": {}
    },
    "1.9.7": {
      "name": "cspell",
      "version": "1.9.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.1",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.30",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.41",
        "@types/node": "^7.0.29",
        "@types/xregexp": "^3.0.28",
        "chai": "^4.0.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.4.2",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.1",
        "ts-node": "^3.2.1",
        "tslint": "^5.4.3",
        "typescript": "^2.4.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.9.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.1",
        "cspell-dict-en-gb": "^1.0.1",
        "cspell-dict-en_us": "^1.1.2",
        "cspell-dict-golang": "^1.1.1",
        "cspell-dict-python": "^1.0.1",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.0.0",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.0",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "ceb7de782cd2eec97e1b4079b55c5e6801963657",
      "_id": "cspell@1.9.7",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.3.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-5n7sGzaIOgzEgFEY1WEhnhPuT2dOnpyXtEhHod7Jr94dV3OUg6k/Mczb0966597Jf+gix9Tv+qD9q+sNMyObMQ==",
        "shasum": "e073c96e19257946ac7cf097682d952766e22c9d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.7.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAhC0sVy5hKBhe9gjJ3UwPYZlXOHBRm0Tdjx0ng86Mi2AiEA0l7hbxXiKltqOV4pbG6rOBR81CYrE53iXZ3vrt/aOrs="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.7.tgz_1504125264690_0.10082981665618718"
      },
      "directories": {}
    },
    "1.9.8": {
      "name": "cspell",
      "version": "1.9.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.32",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.1",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.5.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "6ceeebd9f3916cf448e525e7261c354933fff65a",
      "_id": "cspell@1.9.8",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.3.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-0TzAnbbIk6StMs/Pu/LRdRi0Oq6fMW5qDi0TwFFHGHJS0k5haGeL0w3Cr5ahUrLhZvB1z2ThMN72mTAyWNir7A==",
        "shasum": "d7a6c5e805f6b38327b72c95e07ad594ede608b8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.9.8.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAFiEeKu4qMXm1xWQAnO2CBh4p3G9Z2jS9FCbfGeGXGxAiAqlAJeharQCuC5Ajw2QPPQ1Xwd1l7EK7IrFU38s6LU7A=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.9.8.tgz_1505679335198_0.54835358960554"
      },
      "directories": {}
    },
    "1.10.0": {
      "name": "cspell",
      "version": "1.10.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.32",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.1",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.2"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.1",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "d21cbe236d874066da03da64a84c7027c7156332",
      "_id": "cspell@1.10.0",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-R6Tya09dFH/G56MbzCu6MDNZ4kY2aAeh3NnvldE/2C2CX9EWLFdIe1CG8GMpfioR36vzNP9Sp5KZr+BtrApsbQ==",
        "shasum": "fb57436b0bf7c7f6c0244af01c56d05834cb94a9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDIM/GH7kWpk9nMRzngE13zooEV48ltbdcQZ4x+OPUM6AIgLwNCs6KwVXnaXFq3bFrS63w9LEnz0nUxF8n374ADZ1U="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.0.tgz_1506366321828_0.19142214441671968"
      },
      "directories": {}
    },
    "1.10.1": {
      "name": "cspell",
      "version": "1.10.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.32",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.3",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "ac3a34199d95e475278d0697a24d5bc26c353dfc",
      "_id": "cspell@1.10.1",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-Ve7fLgp0ni1bthtMP6DMNwRANDlCOtgsEnMvYZsJzrEv7cTBVNxvH/Rk+wI3rsCbJNfpt1huRXqbeH4XvhMsaQ==",
        "shasum": "c3d2a3bc3f8fc2974ea346452a4658380b0d9418",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIG2ityskQ5l4usgYux0ysOHS7MoU8ne0koZtt8Q3UiYvAiAceJ4N+Vw3ZpGah0fjNq3R1GdiDos77GcplC/ZREoyCQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.1.tgz_1506810057675_0.743692573858425"
      },
      "directories": {}
    },
    "1.10.2": {
      "name": "cspell",
      "version": "1.10.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.32",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.7",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "0e8807d5d7568fd3d9c7678db53aed665cc18685",
      "_id": "cspell@1.10.2",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-+t8xrVuIyvisJV6wABzEtXBNt5RJr9yW+c0Yxn3T6xBa3NJXx8nfYwq8x9DOmqrtT6mf7O4WuwMKk4sDiWUl4A==",
        "shasum": "890277ebd86386720bf8c514a2ecab43fd6be107",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCKBlH6ovUOF+BeIrSHGRfP9qPEk5L9QoFaw6VfjjKOCQIhAOuUph9BnxjKuQBOn0QomCHe1wzCftjQPXc7uBizE6UI"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.2.tgz_1506887326001_0.9990697090979666"
      },
      "directories": {}
    },
    "1.10.3": {
      "name": "cspell",
      "version": "1.10.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.9.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.32",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.7",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "a84be37b5130820543c129cb247fa68782efdb24",
      "_id": "cspell@1.10.3",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-lyfsQvoobcVRAjRm0Fq/Bgf5O81aH1dfllbkx4izQEmOS7YhBU6WsbFWqjzASUk7vswnhH6DNItA+IWU0pu9tw==",
        "shasum": "02439ba55635f1bba837ce763f1beb9c25650ef2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBy4YwEUfZleG29BGiC5YjBCc0hObblw6JKsBBvf06HpAiEA53cO9p2tJJTPug/RKIJxbPF9EUH5HG0K21LEQzklKi8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.3.tgz_1506888933546_0.7117493229452521"
      },
      "directories": {}
    },
    "1.10.4": {
      "name": "cspell",
      "version": "1.10.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.43",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^1.4.2",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.7.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.0.4",
        "cspell-dict-en_us": "^1.1.4",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.9",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.4.3",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "e705909ac86687d0bd357eb114f3e07ce0367d42",
      "_id": "cspell@1.10.4",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-aj0sV+kSJf+TLyxkeE+yLrZpU/QAVjFNlFzWHw6mbU8YswDzOVBrPPDyezskyjFTxfNrsqXmeSMtrQREmx2ong==",
        "shasum": "f273d82c02c4d929832de66bd7e8aa64317aa7b9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.4.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCRzFi501KGMJ3hjOv6TAT26YN+1dciVpWlFeQwnVcpVgIgGqd13Cwf0PcxOjVcf9FhHXyoZWZ7ellr7c+E5ZjLCA8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.4.tgz_1507585495484_0.9776412923820317"
      },
      "directories": {}
    },
    "1.10.5": {
      "name": "cspell",
      "version": "1.10.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^1.5.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.12",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.0",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "57553c97d229690189022cb78ed47526e4461676",
      "_id": "cspell@1.10.5",
      "_npmVersion": "5.3.0",
      "_nodeVersion": "8.5.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-XJuaEfhXtN7x85q8Lg0D6X2n1J9XaDP0vYAmXFkzUJwB4hSuoOsP8reqLc+DgZLDF/LtYZvZUcm+0/MdzSIFOg==",
        "shasum": "10697c00a7850fa2083820c366826c6a2a5bed00",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.5.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDIPZB0O/ps+CZ+V9cHxIVFnUej2yscWp0gD8ZiVmOcKAIhALOiFv3emwxVdJyWFWM6Da9Ii+pasoviPjmc5hKdPjYI"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.5.tgz_1508665680779_0.5289372203405946"
      },
      "directories": {}
    },
    "1.10.6": {
      "name": "cspell",
      "version": "1.10.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists && npm run build_dictionaries-word-trie",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "build_dictionaries-word-trie": "node node_modules/cspell-tools/dist/app.js compile-trie \"./dictionaries/words*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^3.5.2",
        "@types/chalk": "^0.4.31",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^3.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^2.0.29",
        "@types/mocha": "^2.2.43",
        "@types/node": "^7.0.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^2.13.3",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^1.5.0",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^3.5.3",
        "nyc": "^10.3.2",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^1.1.3",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^1.0.2",
        "cspell-trie": "^1.6.12",
        "fs-extra": "^3.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=6.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "3347e5abccc21a99d096817c51631a0523bac07c",
      "_id": "cspell@1.10.6",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.7.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-q6payGr/gin910GoFLx5w8hkgT7HE7DTep8NBzg3+8IpzJ/dSjOu9XGVdHqKRA3pRjhNxYchAFbQSQsXDa60pQ==",
        "shasum": "1deeebbfc860d34de28c6ea8c3baf8457f55e44a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-1.10.6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD0he1fyFmgwqZvvVJD93w5OoXr47xKmXNP6SuEJ8YHJQIgJ36KYVC/sSC5NWtY7ggVMfucWesWR4VLn7Ngrx8mGf0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-1.10.6.tgz_1508965628642_0.8967279088683426"
      },
      "directories": {}
    },
    "2.0.1": {
      "name": "cspell",
      "version": "2.0.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.0.4",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.1",
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.0.47",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.0.1",
        "nyc": "^11.3.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.2",
        "fs-extra": "^4.0.2",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "c3db25d97755990ba63619e0f5f9eca640c60e9f",
      "_id": "cspell@2.0.1",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.7.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-4ZvRGgi4DOckfBcv3I/vzm4cE2eriAWKC1bDvcOMrs1bClAAWe+MH4a71ckAomXNpSNzHBdNDYFpFSqBRiPCmQ==",
        "shasum": "7b6913526381a2586d8414099f733d9489445f56",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCV2odWj2FvHrJmaGYnwg9SrcgSBIwk4qva7packs4F8AIhANaZsdm0q5EE3Q+FWNygsvbzDW+Ec4qslPbqU2KCzd8i"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.1.tgz_1509215442850_0.1413310405332595"
      },
      "directories": {}
    },
    "2.0.2": {
      "name": "cspell",
      "version": "2.0.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.0.4",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.1",
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.0.47",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.0.1",
        "nyc": "^11.3.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^4.0.2",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "fece397bcdcebc6a7ab01674727d860daa135d8a",
      "_id": "cspell@2.0.2",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.7.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-c2vi/nGHowwulc8Wl1Zp6fM+uRzyFz9/LmosOaCd4kVdyaMRhrG6TAzJNYnZUrsNKS91ZQHld2/JzuDiP4Zysw==",
        "shasum": "96f09bc19d5f1340821e3fe40de84c4a1143e7ed",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.2.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDZv6LoE/nX6tTwz3dQA/8WZwz+AgXSdmnvSEh5am8KsAIhALYQbjaFiw+v2JXOSalrbK6e3nu4fHTowtN55T+ULkSL"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.2.tgz_1509223874604_0.3718028652947396"
      },
      "directories": {}
    },
    "2.0.3": {
      "name": "cspell",
      "version": "2.0.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.0.4",
        "@types/commander": "^2.11.0",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.3",
        "@types/glob": "^5.0.33",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.1",
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.0.47",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.0.1",
        "nyc": "^11.3.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.5.3"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.11.0",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.2",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^4.0.2",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.2",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "04daaaaaf24f2ccd136bfabf7fbd667b3cc6909e",
      "_id": "cspell@2.0.3",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.7.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-rm4ydBrodH8R5WaZpbb23kZisylzJEtljKUhAWMuY164SiG/TXfdfqVxgUbpS7o8G/E1ekBWte4TSnMrClU2FA==",
        "shasum": "2482ae44c724cb7d2503018a6fdb5db297cab893",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.3.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCTvZ/HwY3ckgzIIoWu+I2URk3xDeF3/v5eD69a30vrFQIhAM1/FtFyT+A+CCl9paZEtCjcT/d1O4hBcNu3gn/b7dM+"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.3.tgz_1510851524195_0.9177200342528522"
      },
      "directories": {}
    },
    "2.0.4": {
      "name": "cspell",
      "version": "2.0.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.0.10",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.34",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.2",
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.5.1",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.0.1",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.12.2",
        "comment-json": "^1.1.3",
        "configstore": "git+https://github.com/Jason3S/configstore.git",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^4.0.3",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.5",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "7e87053779ea067691566e157349a427a98667e8",
      "_id": "cspell@2.0.4",
      "_npmVersion": "5.4.2",
      "_nodeVersion": "8.7.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-fGoMqCp1wMtIJNjHAQkeuCekW3ey9cwOj61In7f9ERTDYG07wSiWHlwSqLYa1DlgulQTmkOyqc84ZR2qgU3NIQ==",
        "shasum": "5985007cb59dfae95943192461162328e632afdc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.4.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE/RwSFXKFj+FQE2dDkFIPC3V+CDce/+ggA696TZOE1gAiBZdgEn7um6SncbKol0iWBZ0NtVFKcdJUDGGpzNwUvALQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.4.tgz_1513517530389_0.5882207478862256"
      },
      "directories": {}
    },
    "2.0.5": {
      "name": "cspell",
      "version": "2.0.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --compilers ts:ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --compilers ts:ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.0.10",
        "@types/comment-json": "^1.1.0",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.34",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.2",
        "@types/mocha": "^2.2.44",
        "@types/node": "^8.5.1",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.0.1",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.8.0",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.12.2",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.5",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^4.0.3",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.5",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^3.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "fc72238fce47270a492d90f9d2c0d05c7f260e50",
      "_id": "cspell@2.0.5",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.3",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-xeF0NKtpPTHb/+dnrBx2Is7JyLw7TqzUI5ufAowZv1lDESjPo3kFDGdFsnqR67sF8JgVXQeMSkNXvg3K9zwt5g==",
        "shasum": "c675175d36b981037616e40f45f9f88e0e87f28e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.5.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC3BOMxpzTm8TlXPAtcnI1Ms6zhJWASlsSb5iTtWHkPUgIgbVYHRMtdxzn75ioU3x2mWh1z5IpSlrEwsMlTx22IvEc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.5.tgz_1516772097581_0.7093924474902451"
      },
      "directories": {}
    },
    "2.0.6": {
      "name": "cspell",
      "version": "2.0.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.47",
        "@types/node": "^8.5.9",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.13.0",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "324be956d267afdaefed5c91e4c2433222176eb9",
      "_id": "cspell@2.0.6",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-vX9WdP1raqlTXxq+4AvSzo6LUpoY2xUQjgoHSSqiZ7oNyNBLyEWjy2QnyVQtoAsvHuEQlMe7tueqOtMwYl033Q==",
        "shasum": "0e1bf215e544ac83704930597325f7bab694966e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.6.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC9193Oi/Nq1MaOY7b+gTW1BDNEu0WoNGDMaaHlLsjV8AiBw/1WfRQes5akWfzMqRUzPVNFrBXjFDp/jvf5vHYMsAQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.6.tgz_1517042317846_0.19932836084626615"
      },
      "directories": {}
    },
    "2.0.8": {
      "name": "cspell",
      "version": "2.0.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.47",
        "@types/node": "^8.5.9",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.13.0",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "3983675ee8cb66a9dd19292335f6291016bc7f8c",
      "_id": "cspell@2.0.8",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-9qGMp0C2m95vb1c+Ye7nRo7cptv+m3StWlJVExHPpZwVSt8vvFmnHkLnEsWpChYFoBbUDTWTfC/v8gjCoZAooA==",
        "shasum": "e5d625e645d7cf112ca2b69dd6e907f3a6f3c07d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.8.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGIPKy0YNN7SZbJ4dl13jD409q4gy7wjvHwfd0BcqwJ8AiEAwQZDKjX0xgd3L30v0iO3MvU3F4+SBBd0WI8hZrbMmL8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.8.tgz_1517070811369_0.9457474157679826"
      },
      "directories": {}
    },
    "2.0.9": {
      "name": "cspell",
      "version": "2.0.9",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.47",
        "@types/node": "^8.5.9",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.13.0",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2d972c74b52835efc73ed955b0c5660f63236cff",
      "_id": "cspell@2.0.9",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-cO0yugEa2d6+IZQwlXTpoK/MRzqbtgI08K5wWFAXJ//2kTp8arJDUXXNxnoBwQx8Dt/NHGGO+sJl5G6CEXs0rg==",
        "shasum": "f325d1e7f30c6b153fd9f8c5aeacac160ae213ec",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.0.9.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSvgv42cAzpKZDYNqbFWdTSgOYSkt5p3t8fhXUqZzGcwIgW8KyeV7qgyhZHbS7tPjKrYeJh7vS1zz6JHLfludlBQE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.0.9.tgz_1517072333160_0.7143351852428168"
      },
      "directories": {}
    },
    "2.1.0": {
      "name": "cspell",
      "version": "2.1.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.47",
        "@types/node": "^8.5.9",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.13.0",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "c665430439594cef49227a7ef2151bf0e0af9d13",
      "_id": "cspell@2.1.0",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.3",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-aR/xJSJEXnC4G7/XGosISiG4CScLX4TSFJfpA47AC5GvRQnAxSjYao2+sSepU1Ccw2RoCgrW4x/hmyd8iRzUsw==",
        "shasum": "aad6978a55a745da68c3955d518abe39287302e3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.0.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC7TeUe+fHykkVvtxKTaS5DNd/tSZm5NBxN5Att9z9G+gIgQE6kUwjf9zzJgaMPCOxh+aoAiqkaCq+SeFw2T2KUFCQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.1.0.tgz_1517259959575_0.13930981419980526"
      },
      "directories": {}
    },
    "2.1.1": {
      "name": "cspell",
      "version": "2.1.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.0",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.47",
        "@types/node": "^8.5.9",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.4.1",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.6.2"
      },
      "dependencies": {
        "chalk": "^2.3.0",
        "commander": "^2.13.0",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.5",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "1179c73fe9e9625849eb2822c704c98989b98d96",
      "_id": "cspell@2.1.1",
      "_npmVersion": "5.5.1",
      "_nodeVersion": "8.9.3",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-DkBN1hMTJuEaSxa2Mh1WN7QXK4cGw6CkgLw0iGNCw2u4ld0beGnHF9TLxK8Oxo+jfV+qynuDVzR3fAj/pla8+g==",
        "shasum": "817149ff728a561f8b02901452cd4477f1e86db6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.1.tgz",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCxaEdisiehIr9+foCzh461hLBXqSARCLRVVQH8ig408gIhAO7HCHtF2ELGTo4D7bTcPhJ8ukg2KMNZC7EEaQJtrvP1"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell-2.1.1.tgz_1517342947571_0.2292989445850253"
      },
      "directories": {}
    },
    "2.1.3": {
      "name": "cspell",
      "version": "2.1.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.9.4",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.5.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.7.2"
      },
      "dependencies": {
        "chalk": "^2.3.1",
        "commander": "^2.14.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "b9f9a0bdd7cede1f6c43a96827100718d8c6998f",
      "_id": "cspell@2.1.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-JIUapoF0yaKKTUoGXHliizqwJ/ZRrV+zJ0KjvfqyZjS37KU9yg7gLdOBRoNgMyb4H6cdzUFpNX1uKU3aIvOWgQ==",
        "shasum": "c7c7398937631dc3f0e68ecada5ccf31c171f081",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.3.tgz",
        "fileCount": 285,
        "unpackedSize": 669606,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDt0+0LW56EtnRIGkXFcp6aZ6HChL24CSwqOmMG8CX0FwIhAM/3uZ/Hpmq+/YNy//wTNgGcfl6NAJuZoeYk+Yd4sDLC"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.3_1518981388903_0.1698327190399127"
      },
      "_hasShrinkwrap": false
    },
    "2.1.5": {
      "name": "cspell",
      "version": "2.1.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.9.4",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.5.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.7.2"
      },
      "dependencies": {
        "chalk": "^2.3.1",
        "commander": "^2.14.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.2",
        "cspell-dict-latex": "^1.0.0",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "f5fa9fbc551047054b2ecc729e046e62827ad091",
      "_id": "cspell@2.1.5",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-A7p8E3C6EFU7q6E4Q1At07wa8yL04L1E9n8quxEvDxwcd+ZvUpgV8jzD4IAMTv6MU3q/Wyv+v0voN9aYE36W4A==",
        "shasum": "bb0f5055b689f96ecf51b21cab17278a3694b4c3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.5.tgz",
        "fileCount": 284,
        "unpackedSize": 666047,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD6Jg2KPYtuqEun25DzJlc+nxDRgAYOKsi9QIp2BywkRQIhAISQviksnUgIoImhviGdPiABzYkm+tTKzF5e7AE+IZxA"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.5_1519160839747_0.7966067741101501"
      },
      "_hasShrinkwrap": false
    },
    "2.1.6": {
      "name": "cspell",
      "version": "2.1.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.9.4",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.5.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.7.2"
      },
      "dependencies": {
        "chalk": "^2.3.1",
        "commander": "^2.14.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.0",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "32e6f5a0193429d3c011fd38927afbbf1e09f991",
      "_id": "cspell@2.1.6",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-8VSXOsKv83S+02dXToD4bk/3QV5kx8QzQ4dIKYhtEzy/j6KtFvGSKngvjBxk4wri0SEe5RVCsfqXGpSPGpQzcg==",
        "shasum": "47af3de93e64725d7473ce3f251a6f71a54b2b96",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.6.tgz",
        "fileCount": 284,
        "unpackedSize": 666086,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEhhEt3hoYfb+MDNEvofeHRTwk7GziSbwPw7gkK/bygfAiEAjEKrVBf6TFNRfqetVf1BidwWZz/NbOWdnB4boKYoyp0="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.6_1519161639770_0.9523912136515778"
      },
      "_hasShrinkwrap": false
    },
    "2.1.7": {
      "name": "cspell",
      "version": "2.1.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.7",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.9.4",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.5.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.7.2"
      },
      "dependencies": {
        "chalk": "^2.3.1",
        "commander": "^2.14.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.0",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.0",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.1",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.6",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.1",
        "xregexp": "^4.0.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "804420af6c4a0710ec70e530a2fb659deb2acf3d",
      "_id": "cspell@2.1.7",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-Y1/kTuymg86gDGRJ+pqZLLHaqX8tN6DxaWfS4mB8Cvi8K5mSuZ3dE4PaViTgJzqW8SILOmbB4INEM863hrr1yQ==",
        "shasum": "878e5e91b1019b7d0eddaa5f0bde7a291ed86041",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.7.tgz",
        "fileCount": 284,
        "unpackedSize": 666349,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDExlmAdck1LM5GVoz9KTXnPHS7xuIwz/rSaeE7dMeM+AIhAIHAXzVxDvKYTi0YdZAjsPu0onnoR0QJXPt2dM4gXyDm"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.7_1519637797524_0.5800183447626828"
      },
      "_hasShrinkwrap": false
    },
    "2.1.8": {
      "name": "cspell",
      "version": "2.1.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.8",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.10.1",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.6.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.8.1"
      },
      "dependencies": {
        "chalk": "^2.3.2",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.2",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.0",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.2",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.8",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "1404b74a044da37454efb2305255e199ff9cd199",
      "_id": "cspell@2.1.8",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-yQgz//JyHh3WPrH+33U2tuWG+aRNr/rV/N+JB1IzzpIXoj8EBlqO/lOzwM/IQUYF0PUYpJRj0ZFCHhEX8dKomQ==",
        "shasum": "7aadfd009a3a1faed8e414bed8b7a7fda39c6f1e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.8.tgz",
        "fileCount": 284,
        "unpackedSize": 663832,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDNBi/tqlejfgTL2jSIEsYlIZ2Nfo4A945pQ5d8EKz/dAIhAI2g2D2uM7D9Ooel0U1X7R1Wuw+vvSFv6AUtzKJsAVA7"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.8_1522647794675_0.5224597575980265"
      },
      "_hasShrinkwrap": false
    },
    "2.1.9": {
      "name": "cspell",
      "version": "2.1.9",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.8",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.10.1",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.6.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.8.1"
      },
      "dependencies": {
        "chalk": "^2.3.2",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.2",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.0",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.2",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.8",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "26e16d4c69e7c354a2706a64e1ab11854c31d575",
      "_id": "cspell@2.1.9",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-/DeRfJlC+P2CIfHpXifKFTzjZTcMoVJISURMklsQKAC8jVS9rTMLAzVkVhgQZzf4CDpG+atg4erffqWavsVrFw==",
        "shasum": "d58e5358d70deec8e5f08be3d6de92d0aa8c821a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.9.tgz",
        "fileCount": 284,
        "unpackedSize": 664203,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEz8009MiJAVXOf0XuWiOvrpqJZ4sCMV+3cUvSD+vZ/LAiEAuPysA3+e12rO6EX34IK2rE9+rCjSmoRttQNUyF4Lr7I="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.9_1523092735320_0.6614359928469804"
      },
      "_hasShrinkwrap": false
    },
    "2.1.10": {
      "name": "cspell",
      "version": "2.1.10",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.8",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.10.8",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.6.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.8.1"
      },
      "dependencies": {
        "chalk": "^2.3.2",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.3",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.2",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.10",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "4fe777d23b913ea6b948a6d8f0aab9cd2a318d90",
      "_id": "cspell@2.1.10",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-OYxb38W2rsCJ0qKKv/o9RCJTBBp/uOpEYj4mAoth6doMqWN/+FuWAx1NqqnrhtB1zG9hrgWIAUTXIIPc+rZpww==",
        "shasum": "892442a3192cae6c23ce478b1355431bf8ac6d37",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.10.tgz",
        "fileCount": 284,
        "unpackedSize": 671158,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa06K8CRA9TVsSAnZWagAAsQ8P/103RvwmBc3CB+03C22C\nlQjt4ghAVQ+4/+HqcNgw3xIWaPKkB5+WIxjZXludWL3k2ZRj61SVm9BOLXZX\np8t/uaQ+AUaNuBXoT858XFyvZyBWS/++ukF9ZEprjA1bOoFDDmshWcsyjs18\nrq4XIytbiQcpgmij70ot47/wzres5mjVJ2cF4t5EvFX6qXZROC2M78gGtecj\n5iIP1wR+OOyd5+0+ItGgCHtGzOe9gr4elJCPICOUBBgWpoBf40h4C/vZXSkI\n1tBcPajg2eLvO17NFvv3E91nlXh7wE/vgq6Gh976quFr+Bj2y4ZtEEg+tUoI\n/gZUKA9PB7Vm5sfUikRLcEB3SgaWEsXWsgZ0RuyVsFxzd1lENAx5XP89RH2S\nALSeC4cHsbwpg+5NR0jX2almKW02vprErcGaejnI4rW3gpQHzBnb/3zTyMJt\npXyeEtNYwE1e/zpcvtJFwrET/C86cAQhS87OQ6IJXynaYuUwjRRlQvsdKEjf\noPKS7wsIGD9EykX18G6PUa7E+sB6uR76fOzV/Yg+ngGOiy9rqIGrVe3mdaCi\nWZSgBti7MmERagyG9SRbjQokYp7yVzV/u7AZTOlUwDRaEdmuT2aADXRp6j60\n1rFLn/UDmLF0IFQEtHgGUIWt3he65QEQUf2bpB9UgwxEJxCBhR4/5NF7xrW9\nSH54\r\n=WLZ1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCcqk9rL6PPgSZmvZF+7pho4O227LVkie7DFJmEpIhmkQIhAJSAcYY/I5NWfS9NokLRAbMz61J7pJ76IychW5WPOyGi"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.10_1523819195011_0.6587198387314808"
      },
      "_hasShrinkwrap": false
    },
    "2.1.11": {
      "name": "cspell",
      "version": "2.1.11",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.8",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.10.8",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.6.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.8.1"
      },
      "dependencies": {
        "chalk": "^2.3.2",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.3",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.2",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.10",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2f16883aa375d28137a7c7b3688935a87fcec66b",
      "_id": "cspell@2.1.11",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-hdE5Wzcs1K1qtI0KH4RADxVauvmoMCkGgjgUmhVJwkF363yFBip1HGAc6KyT9SgaqLynM5W+4oOiavP2Fl+emA==",
        "shasum": "27f5a09bb61a5a15817337ddc4be711822cf8e56",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.11.tgz",
        "fileCount": 284,
        "unpackedSize": 671254,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1PAOCRA9TVsSAnZWagAAVIsP/RG2zy6FG7RqiXvbYdk1\nFu3no4xnHfKz0BFCtMfFcCzyR51NwJulGiPo266tEcCOA92ECJ6R7OIxrlSx\nIIXCoY9MEfP2PHu7dfVrzbC0dpU49/588BOrsFnqAS+CBkISB4DFoKGGWsXN\nVSo50hzZC//AaPyvVdPQo5aMo53e1bhM8+KvEpygJ0XzV+NaWqEleCVLYTNK\nq2kPkoOGSamDGquLND78FNs8GLXy6VwXTDHYMwSUYGoeXb8Xq8EgqKrJGS+k\n0FKkzW5k2ms35OdpzfKzicPJ/Y14zVhpG9f9nubG9aeqWG/V/oO6vCAzbG9e\nHw2JzU1t4LzJN1Rk+JHVF+A+mEVzErynBz82NseSSJKellK8M+j4btiqPwcC\n0tr+U2/02L7XaTK8ckrXsIVFxTGqNz7NFdrqHG6ysWjMxWgr2+dtwqLmdZte\nfcMdig3DcAcBgbWBs8pUyMdHMo5aXCktMcvwfh0DNG5Q77pNDrKRM5+4u+j5\nucoetNp1lNz7ajzsEV6HbpWg8iQhbmoqeo0eXAHF1l19+W1pp0YRi6FIHf6h\n72TWoQ5xg3y1oPCaoOAyGLNr4wi7Meqpm7OpXgpF8SttncVY7ZwvcIW4Skjh\nS8KP8fsCxx6gMp6xGrOHmVrHDouHnrM1NP9UFKfZO16Cfsn6RirI3qzIjWbK\niKtW\r\n=IUfP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDMmD7yOYehu5GTaHhSkRSF5gPxQ6PFHw/HtT0K/v1JJwIgUj8WNyLSjAxfi1vkIN9jGzZcLdY6bvyxzxi49DiBJNg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.11_1523904524992_0.08730117373403323"
      },
      "_hasShrinkwrap": false
    },
    "2.1.12": {
      "name": "cspell",
      "version": "2.1.12",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.2",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^4.0.8",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^2.2.48",
        "@types/node": "^8.10.8",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^2.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^4.1.0",
        "nyc": "^11.6.0",
        "rimraf": "^2.6.2",
        "ts-node": "^3.3.0",
        "tslint": "^5.9.1",
        "typescript": "^2.8.1"
      },
      "dependencies": {
        "chalk": "^2.3.2",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.0",
        "cspell-dict-en_us": "^1.2.3",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^2.0.2",
        "cspell-trie": "^2.0.3",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^5.5.10",
        "rxjs-from-iterable": "^1.0.5",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "4cba8bc8ef817456b2021c096c375a76c14d33b5",
      "_id": "cspell@2.1.12",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-6ydTFFhPDirjOAl7ChrtlaVXiyqt1LmTRMpvYU1Jw9FarHxupnNq34itPL5BSDDjqeue5wI0A+VCjBnfAKuWMQ==",
        "shasum": "a7b9095c0183ace7f9827ae3d9a310e135bd59a7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-2.1.12.tgz",
        "fileCount": 288,
        "unpackedSize": 678112,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa20HMCRA9TVsSAnZWagAAEE8P/iqy0YWkmds93YXEGUBz\nYA/IV6NYwzVZ0/xAq5spyUVuTir90tWS44jyBOlmAhbxDiFvmMJQR8TrU0TR\nbLGRQv8HTRh98TKT4qv+jBTT7lgiK4R38ZP5jJJrPqi4Qw/5nb+SDJMMswuo\nFxJ/bDH+1XWtaBTwO2om/0PHGM2NC+q7ahU1ZakV9WA8p8LwyJkmkabxWqdR\nKxyBbVFLiT/AmqvC+4bKP8qsN2+Kbf8EfSnKqWKahHNc3AJBNoGGvwqfFbwe\nuP7D8Sp4W20myHvG5zfmaDgkC6Cy3AuMmluw0xqDjxIf0Z4LJ+odB7fhARls\nhlj2CebBdPPW+3x19BINwn2ztpCiYeOeE8dS0Wd7xW5s0EnbjCUrBanKj8b/\nJdqX6oycSxsopGrlhQcqCsRbxDi0vjVnZspKsDGKTw64CyNV918eIoYsYcAS\nglmq/2oui02xapRyboNuNvhIVfXJuInazsQ37yNZBmK9gnUXcp/q0AoAumjf\nXy5w7kR4S6oy8FPxrpztod81N+KKez3YO5/8uhcjw8ZYx2Fa7A2a02KYls7O\nfc1ndSi6qiDhnVkQBmYHWqIvWOyyNnhRegD9nlbEqQn0xg7+7YVy3GLO3ohI\nw3uvQmMwBfOIV+PRoUZBT7rXh4RyvMfwTuZt/zcoGoxSQ/LSo7GYTpfaxBj/\nRi6B\r\n=f5U2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAjaT/cifox616iBRsH9r53a7ImAxs5Bm3jqb7n2HC42AiB/hkxC0KyV3EUHv/kvVKVtGe3qwo5CwPQtuvvuz65LZw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_2.1.12_1524318666908_0.7320202915398568"
      },
      "_hasShrinkwrap": false
    },
    "3.0.1": {
      "name": "cspell",
      "version": "3.0.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.3",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.2",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.0",
        "@types/node": "^8.10.10",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^5.1.1",
        "nyc": "^11.7.1",
        "rimraf": "^2.6.2",
        "ts-node": "^6.0.1",
        "tslint": "^5.9.1",
        "typescript": "^2.8.3"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^3.0.1",
        "cspell-trie": "^3.0.2",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.0.0",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2338b80092d69cb6ac63cc2b78b1820b28116dca",
      "_id": "cspell@3.0.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "10.0.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-Fg6bVQsNLQ2tF22YoNMbCiSaC/fLYJhHEjQ+f2fcE/JmyPHpi2eU1g8CmNq7XQWr3eHwILATdFm+e6rQtJI3zA==",
        "shasum": "cffbe100ea12176b61766d24baafda0f9b04b787",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.0.1.tgz",
        "fileCount": 160,
        "unpackedSize": 392184,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa5aLFCRA9TVsSAnZWagAA4VQP/11rntfHP6AjpLff/wv2\nrDi1x8hxo89q0jVRzrODoQFGXBNNJEv+CIPSEhdKp5cjGWDYqZk3Eet8EmVE\nOecjsPt/LwZIdacbIrJ2kio0plclHuAUcJsLsalr61knTaYSHz33Q3DcgXNw\nBqawwduromEZhN48EtltvNsXx087gLRyc5cD4B8TcJW+GB5xyjIWfDN3p+Gp\n4a8nZZ03Ro7UYdLXbZukGtY1uBEPZHv9Ls0RaF+brKJ5aYPXQkR8zsaCMR/4\ngfPULvNaD6xnPYSWv9pSyvZbezEh+6Yuoc6Yp3xafhCmbauPsiYOof3BdcWi\nnpszHD4WDk0JmCbk7v648xagFEQO0nxDG1+04nZoAZbEbTHRN1uDuDBwQSpv\n7aM73jq2dOmpLdKKP0idDoH2m0sOz2qiyaH6QKhJ0U+LzKr1vpLVmTN93iT6\nnGD4ybLnwg25iOtpzTW9bpvbY+AtD2EPhslU1D4ea5mINls9VtnA0TsWH2Bj\nzLs2rvhpP4Cb2Nli39vxF6l6RIjmezeBEACCD5HmPeUN4VLes9YqSFsxLouE\ndtaPxxgRs5S5/oLdXAlz3/etVIEZqzkbl/XryDsAj6aOL1mPNeZ9qbRqsApd\nyMhZ6EH2lJUg03L8b4oPumYO0qwztJGFVrb7272QxZyDDAG6NZxFtul5S46M\nl47r\r\n=Cv2U\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA+NrLsl1Sgmo2TY6n+0356hRx1at/ef5IVLjCIX66yvAiEAnT2kGep2yxLThBucMVkWJcK/XmBZCgFhqSk8BI323ec="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.0.1_1524998852180_0.33751571076055176"
      },
      "_hasShrinkwrap": false
    },
    "3.0.2": {
      "name": "cspell",
      "version": "3.0.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.3",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.2",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.0",
        "@types/node": "^8.10.10",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.0",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.1",
        "lorem-ipsum": "^1.0.4",
        "mocha": "^5.1.1",
        "nyc": "^11.7.1",
        "rimraf": "^2.6.2",
        "ts-node": "^6.0.1",
        "tslint": "^5.9.1",
        "typescript": "^2.8.3"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.6",
        "cspell-dict-django": "^1.0.2",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-lib": "^3.0.1",
        "cspell-trie": "^3.0.2",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.0.0",
        "vscode-uri": "^1.0.3",
        "xregexp": "^4.1.1"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "4d8f6cf1b1c9cd6eb838ef7d6ce0c321272ad357",
      "_id": "cspell@3.0.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.9.4",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-aywiGQfjf//7AuQHe9eKio+Wfi9Lti6GThyxCWON6DSPE3PuujnCD3GaX73oLbIxXvQnhJrrZl5RU81SbXDaIw==",
        "shasum": "153859fbd1dae2e3cd51f36971d7b892a8377a4a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.0.2.tgz",
        "fileCount": 160,
        "unpackedSize": 392857,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6LIECRA9TVsSAnZWagAAv20P/jyi3V+1uK0Mt5jcd1Ti\nmJ6wByWM0oZdOcdE2E0Qc5pWgDuZT9ezokPnXDO6WMy3TWqD/UMKnXKdZmWZ\nBBASTp6VEGDzX6LzHLfkBlVgrvNI/RqBG9Gc4kDZoWucVq3cY9vilIcdzcHu\nwZLTiNm0RHpue4uHRoflzqQt37CD45rabLbH4sRR0PFUDMLtSObOHMGIaK4e\n/iN4QokfoDFrvhUQmkVHf+ZoEUBO44L/QtEaKWkF8dksKXsytLvGjc5f1qfS\nbB8KuAqpXSnZNb0XGK85zw/zDloc+d7KJXR6QOV9W0aFhwl9LZjfXShFqede\ncET7X53bdHkD9kzUWTh2bNCNy7ui8Sl23cgYtLAAohm4urxr8TpFKOIOkx8q\ncRphDfZdCDBFLgWHeVUG+lof33yATCj+f5btss7R6rAC+1SEs1XPlwwc9nNm\nAHIKZATKNi+P0i1uvGOp4OQzxmhW0lxF1chsHavLK5HVvxOj1oI0NIlQG5Cd\nVJpPnrZnrK1/dikOrIXE3h53nW49qLXaAZcja1148NesHQHy8rwO13FkEadP\nsf69Uz9+wsl1XCSuQUCo09KWaUQhay280D7UoXYAk4MmDdx9vBNIWiXRCmSp\na+MswQWR4+MygXiXuMXik5KCw10btyAvvhIClOy+GbLICiDQU4Dv7yXReJxu\nUE5J\r\n=w+O4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDeCUsVG2g/Rtsp5L6HEyfd4zeF/nhF6QgA9iEJOIeQrAIgeOBlG0oT4wkzI6nONfhQuzN/1Vet4UzHyuBVPUgoD4s="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.0.2_1525199362729_0.9048530843381775"
      },
      "_hasShrinkwrap": false
    },
    "3.1.0": {
      "name": "cspell",
      "version": "3.1.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.4",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.3",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.3",
        "@types/node": "^8.10.20",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.1",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.3",
        "lorem-ipsum": "^1.0.5",
        "mocha": "^5.2.0",
        "nyc": "^11.9.0",
        "rimraf": "^2.6.2",
        "ts-node": "^6.2.0",
        "tslint": "^5.10.0",
        "typescript": "^2.9.2"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.8",
        "cspell-dict-django": "^1.0.4",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-java": "^1.0.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-dict-scala": "^1.0.3",
        "cspell-lib": "^3.0.2",
        "cspell-trie": "^3.0.4",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.2.1",
        "vscode-uri": "^1.0.5",
        "xregexp": "^4.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "23247284f77938bbe5660c315408d64403e2270e",
      "_id": "cspell@3.1.0",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-VlE12YAFnclniurEmtcwh43jhwNhBvNsyKrHfMn8ua8yozZZCFXAlTjYnM9+Nk6byHlCrbn8Rx5OiVVaaDqccQ==",
        "shasum": "65f5583fc1f62cf4e12d53d9bcf7448a7342509e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.1.0.tgz",
        "fileCount": 160,
        "unpackedSize": 399921,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbLmW5CRA9TVsSAnZWagAAFegP/2tQ39lXPN0PMKlGeHNe\n3rFyP3jA18R61JedwBXVlE2nXXNgHdZTA69+aO03Li/GH72pURd0r8QWu6Ki\nrQQeH+QcMMdWtwWZcOG/QnjTT50OjdcvOrKeOofF0DU2jB1NQgg2o30UJjMp\n0NTI+wHI0n3Wm6ufTk7033B2EyX8i+2svG8LQJ/2TCdxn6K8O+VbvHSel7zU\nbsew9VA+lvnxGt+TSYNWG3o5SL9hcjUF8aJX8oMyTBETR78LgdCwTWQopYZO\nZ4ayhyzPjnA8gwU+JwU4wLXnyNLiS0SF7P0mtl7VfF/eRx0yRQz/AMbQ59+G\nKDOgeDtdgk2RIhYowuWh1oEEBZ5QICE9EKVXcahNe+1+PGEvaMRonVvM+16g\nz9U7cJQ8APFZ16q13xY3M5xEZBGWSPLpXnqI44pPxJtPrDsjkFG9WnL+Q3dg\nQhz8jx6El1DDQOtIMfcZWcgg03s8qGCERKvpslvwscnSMm6/LBLDN8h4PJXn\nDtUQQNe7hWaBm0ZXSsk+4hZfCamXaz7BtOen8bIFQwu+RTVDjz5xRoGJvcIp\nF0EchwuZT7l3glDKIfLZDHC83XP1y+YkmcwHFMuZ8CXb1aDcUo0iyakUMjjR\n1sYAeJHugDYfQOT3lTQ9d+ThpRRhy3ugCNBp0UkcvkSjkJT7DoCa5ng3sxtB\nop6/\r\n=pk1M\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBc/rcqRgZoN109mWn4zWGI6GwLm4w5wbyoOltXb+ACDAiEA+7Xu7OatfjlNJ6BPOZJYkNzbBjhU78ligdoTLHkfCQ4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.1.0_1529767353229_0.25157693165907213"
      },
      "_hasShrinkwrap": false
    },
    "3.1.1": {
      "name": "cspell",
      "version": "3.1.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.4",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.3",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.3",
        "@types/node": "^8.10.20",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.1",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.3",
        "lorem-ipsum": "^1.0.5",
        "mocha": "^5.2.0",
        "nyc": "^11.9.0",
        "rimraf": "^2.6.2",
        "ts-node": "^6.2.0",
        "tslint": "^5.10.0",
        "typescript": "^2.9.2"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.8",
        "cspell-dict-django": "^1.0.4",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-java": "^1.0.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-dict-scala": "^1.0.3",
        "cspell-lib": "^3.0.2",
        "cspell-trie": "^3.0.4",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.2.1",
        "vscode-uri": "^1.0.5",
        "xregexp": "^4.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "fa2afe577c5f43007c49456bc92fc21c3a9ddcfd",
      "_id": "cspell@3.1.1",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-BSFs3LFxvmb7/uwjlVpK2T0t06eTgsB2X32zrxguCcVGj4w5aqSFsKc2yFUfjlWBqa6HNMrDd/x1CeTLUQCg1Q==",
        "shasum": "80bccb7f3d25612c6cf68745d06b1e63b630bb40",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.1.1.tgz",
        "fileCount": 160,
        "unpackedSize": 400169,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbL0quCRA9TVsSAnZWagAA5+sP/3EdZatxWDfA7Hqx/0c1\ne2/HfMg64bqYbgeTRvbn+c0qrvPNrT6FkpDtF+ap7SW8fkom1U0gu8WcplA9\nkgeUc5QJGv08T//lWhNrET4zIRt/2y71lWywJy+rxc8D3krnEmpBPVDGsutK\nSDJ+esxgAFqPy9PFQE6iC1zYjgLKNhNkD9gL4xpmxY3Rw80/lNEjlu63rTYm\nfPukkZZZAf2uQJwAVjrlxmqQBQTd9CgIwvLHO1o60IUfOxoelwyh4mwvTOfJ\nHkIHh1PvPpkXU5mlP8/EJ0zXc69jTgqUr8lgZNJZ7pb9l4RXfLoVBUevfheM\n5eQwLfjSqoy7dUls9enH8OncCUjCsWqnqTqcOghUX4VEjIHoOSObnDqtlVU6\nRSa7O6LkePhR4otjY5QsSshehfHdMbImm5lO5ZwSjBRleFNz91/m7KawjRjP\nDgttHWHzKOzSOxz4qECGq7jASqWus36VZqbDLKX85VgOYBejmqkfZw/kUkKt\nkbAi9hKX8JRiwlIYXhxRRRprcTrxN+Pfqw7F2CG4jhaJwev1iqRCIVm0b6ZQ\nYq1lYc3y6PJogQGewjGWlJk+WjY+iB9+5jKWChjqsW41HdU38qBuwupkQKly\ng9c3JT7oGNoK8RQuOz7mTyvYDvQFxafk55QEfWU/S0vKef2infUkaDfuJT5u\n4rLp\r\n=7plx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDcxFmVHvSnQTr4eQ2hsB1xP/kNZl8OT4Z2TfPO/qZuEgIgaxia6ZGjnpL2zem7A4sEsoKxr1X447TpnqjHAUeQfsg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.1.1_1529825966474_0.14960619679088127"
      },
      "_hasShrinkwrap": false
    },
    "3.1.2": {
      "name": "cspell",
      "version": "3.1.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.4",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.3",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.3",
        "@types/node": "^8.10.20",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.1",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.3",
        "lorem-ipsum": "^1.0.5",
        "mocha": "^5.2.0",
        "nyc": "^11.9.0",
        "rimraf": "^2.6.2",
        "ts-node": "^6.2.0",
        "tslint": "^5.10.0",
        "typescript": "^2.9.2"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.8",
        "cspell-dict-django": "^1.0.4",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-java": "^1.0.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-lorem-ipsum": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-dict-scala": "^1.0.3",
        "cspell-lib": "^3.0.2",
        "cspell-trie": "^3.0.4",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.2.1",
        "vscode-uri": "^1.0.5",
        "xregexp": "^4.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "fee4ef75e1bdf3a9fd9aefb37c5ec6aaeae91029",
      "_id": "cspell@3.1.2",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-c+9p2DU+y/xIYm8oALHbirlqbAl0poyk5REFqQk5cM/2fZh/nuKF/4awTPB23GwkmHU0COW5zJc9b/mzzQ4mMQ==",
        "shasum": "30211a4c4e2b93ecbe80d07a200f69856779e0f7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.1.2.tgz",
        "fileCount": 160,
        "unpackedSize": 400328,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbL4HqCRA9TVsSAnZWagAAGl0P/0pQeXBe1/g2LTYS3h11\nLHycquhRDqmeQojaCiv7a93wNk/1C2YzQKxB65q48LWe75vplIo4mYYD2moF\nmkrDgS/X3STPxSPAonfmkwty5TpgZceYl9mvsJ9NYhc810uhnKEg0eqIwfk1\n6z0DeVWqj8AYso8Rmc5kgsdXUbPs4FqHp9Qq4y+8Db1mtbsERDFq1CqRGfAL\n2dQ21yvzXB4eHzt+AGj08PkAYW8V9OKuJJ6srPjC1SfapS6pZGPuwDCO1TNR\nx8Isyl8uEf0ouRMdwXDUJj+NazO+Cz5nMHZURHlX7FkZcg0MI+syCSQwpQ34\nHOkzELF734VgkqWeyXxf3k7rxyJqDHNsxsF56H6De9LZu7XIyFlMsRei/Vfu\ns7pQT4n8X+aP/HjKZtx3M6wGf95hx93+gEBsqwcCmv/OkV3uvlm9eawQHp05\n+95QBCbsV7LGcvxu8wL2KG3/wYhzwkyocPNRJVlEfAt7M126WuKGgURrv6h8\nRWhzq0LWusZiPQ3sMMLTCfXs2KHfUSy3JaFO2S9PzxyfbztfvB3UUm6r7SWd\nZbCikQNARlgoViFiBUCPRWvPGBttyDMZ+34cELyfgNNrq7TJEctax7/bXHSC\ng5yOo2iVbzNn2PZVPa399U+xN6PaQ0A45XK58uXbzry/L3SY2zdgS6xLXwXO\nUdrJ\r\n=YfP8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCL4bFM19I7nAEYWwoCYtsqtxD+C3mLj7Sjj1F20as5CwIgUoevHRo8vxPon2VNJbkQjxZm1n3+OsHfKmCtrfaWHE8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.1.2_1529840106053_0.1652866330721483"
      },
      "_hasShrinkwrap": false
    },
    "3.1.3": {
      "name": "cspell",
      "version": "3.1.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "./dist/app.js"
      },
      "files": [
        "dist/**",
        "src/**",
        "!**/*.test.*",
        "!**/*.spec.*",
        "config/**"
      ],
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublish": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "which": "which node && echo $PATH",
        "zz": "set ZZZ=\"Hello\"",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.4",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^2.1.1",
        "@types/fs-extra": "^5.0.3",
        "@types/glob": "^5.0.35",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.3",
        "@types/node": "^8.10.20",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.1.2",
        "coveralls": "^3.0.1",
        "cspell-dict-nl-nl": "^1.0.10",
        "cspell-tools": "^3.0.3",
        "lorem-ipsum": "^1.0.5",
        "mocha": "^5.2.0",
        "nyc": "^11.9.0",
        "rimraf": "^2.6.2",
        "ts-node": "^6.2.0",
        "tslint": "^5.10.0",
        "typescript": "^2.9.2"
      },
      "dependencies": {
        "chalk": "^2.4.1",
        "commander": "^2.15.1",
        "comment-json": "^1.1.3",
        "configstore-fork": "^3.1.6",
        "cspell-dict-cpp": "^1.1.8",
        "cspell-dict-django": "^1.0.4",
        "cspell-dict-elixir": "^1.0.1",
        "cspell-dict-en-gb": "^1.1.2",
        "cspell-dict-en_us": "^1.2.5",
        "cspell-dict-golang": "^1.1.3",
        "cspell-dict-java": "^1.0.3",
        "cspell-dict-latex": "^1.0.1",
        "cspell-dict-lorem-ipsum": "^1.0.1",
        "cspell-dict-php": "^1.0.2",
        "cspell-dict-python": "^1.0.3",
        "cspell-dict-rust": "^1.0.0",
        "cspell-dict-scala": "^1.0.3",
        "cspell-lib": "^3.0.2",
        "cspell-trie": "^3.0.4",
        "fs-extra": "^5.0.0",
        "gensequence": "^2.1.1",
        "glob": "^7.1.2",
        "minimatch": "^3.0.4",
        "rxjs": "^6.2.1",
        "vscode-uri": "^1.0.5",
        "xregexp": "^4.2.0"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "7c2605bda06848c4cc7a99cf523a94c4b581e375",
      "_id": "cspell@3.1.3",
      "_npmVersion": "5.6.0",
      "_nodeVersion": "8.11.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-7N+ssYKkeYrwGRGlScUh3HvEePseY7VIHUpQwpMjDCdcRD91hUfuvphJEbvkWY++s4qjIF2w+9ZWcDO06sqPOQ==",
        "shasum": "f321bd75b3c1a4b43efa6beb2097dccacba2e8b8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.1.3.tgz",
        "fileCount": 160,
        "unpackedSize": 400472,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbL43yCRA9TVsSAnZWagAAYHsQAJCZ+OPEPB0Th4ez7FQE\ncCWabLyLUJjU/3QU+u8C/nuQ6jDPhpS5rN5DafFM36mdfntauW+KmbPy8ky+\nCI/VoiR+GRXPYQgtbQMe5poPROigaG8k0ys//dkEy2aoVUf9rc+sx6VHEXcU\nFySsACpsyhJgySFp6p7rqOmvCmctkYb59QEfj+75YvImEl2hJzKzsrlpZjDG\nkxZ6w8V6RTfFKGMj1PEY5oEcVzoag6PxisOtcrdmJ6bHMo3f7f9y4dPhzMFO\ndKHvwRnwT2PHMgdED1WtnqIRuXUsX3Ej8+zQK64Jr4KK00Oa8E7bE/85Qni0\nrpa5aif3G0Q/UP8BMInxc/quCsjUyEBle1p54R0Pxp4DX4qSNUnSXNDBBxct\ngxMD3LSNVsBswOu7oArJHWHaQHMftFHkIlhhLlCl3zp2JWlHqi5i7YayQkgc\nT7fTgrlzcvxnXhcPvPZ4leW1tC5MQrxIYPnxscxYhnmwPywAFZfQ3Ec6rwcv\nsMqscrdLxKa56wMd1Epwk7udYPjxUmzBfJy4xCJAMZK5oD5uiDyklK/Zu+k1\ndYz+JsNbjQVtJVnidN/pM/l8gfvWoHMKVX3Z/nNSjt5sZgIHggFSDF+87pZT\nr+xhIlQgmQv/FaWQPNGcO7dnJTmdVyj7tA3plgQYBN7gMacFaOegt92Ui71y\nOBiW\r\n=XtcY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICpRi6zz2zyBgwcc+uPCG5XmhN6V+MgCk5QOEACtcKpKAiBYMs1UWV0g08xrbvAOmbXnc3DSkIDy7fGl8s9w1sSPFQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.1.3_1529843186813_0.9645973870306541"
      },
      "_hasShrinkwrap": false
    },
    "3.2.1": {
      "name": "cspell",
      "version": "3.2.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.4",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.5",
        "@types/node": "^8.10.39",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.2",
        "cspell-dict-nl-nl": "^1.0.15",
        "cspell-tools": "^3.0.4",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^13.2.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.0.2",
        "tslint": "^5.12.1",
        "typescript": "^3.3.1"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.19.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.3",
        "cspell-dict-cpp": "^1.1.11",
        "cspell-dict-django": "^1.0.7",
        "cspell-dict-elixir": "^1.0.4",
        "cspell-dict-en-gb": "^1.1.7",
        "cspell-dict-en_us": "^1.2.10",
        "cspell-dict-fullstack": "^1.0.6",
        "cspell-dict-golang": "^1.1.8",
        "cspell-dict-java": "^1.0.5",
        "cspell-dict-latex": "^1.0.6",
        "cspell-dict-lorem-ipsum": "^1.0.4",
        "cspell-dict-php": "^1.0.7",
        "cspell-dict-python": "^1.0.8",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.5",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "6.3.3",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "8e9d17cf95dab85a38df12644eed7499b175f71a",
      "_id": "cspell@3.2.1",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.0",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-VjEcxU+WUfJn1/ShgYVsH4fdT8MaOBmLATKZ2DpsY+zdh5i07NmC8fVlsF56F4rE5Ybz2e9KHMi+HcNN08ruEg==",
        "shasum": "c943c8cd59320200b2f224ff814811311cd8dfda",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.1.tgz",
        "fileCount": 160,
        "unpackedSize": 397392,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVsBFCRA9TVsSAnZWagAAuBMP/0hVkSqZwjyy0RvcAu+P\nfe73sVuWq/SjvR9tYYj/jASXf5Fy3MoYwv6/azIlLmaeXNEMW87/LGmDX0Lw\nPDLcqewm48O6eDg4FZnj3nSPBeKJIGVkA4D5kqjlzgLUpZU4ndGxNsGiz8DX\nJ9E1bz7I5k9M86xzwwI5iQzFtynoaUUqFkgs9E71MOXnbMEuzLD2CJfEtLYt\n6MMufwBMrc9RSBGeB+oYq4T3F+aJemGyMt27ME6ImPkrvqnjfMrDcrH7IkCf\nBNfYSnnRC3R9iqrkOF6Spd6e8g9eCWl6WHtAh7oixEVJYLT8J4Wa9jn8Dz4n\ncpOYYAtXUNE7E211Fs686IeP2q/p2Os/IsEk+Qo0s2sB6yHXdPCTzv5JNp8Z\nThllocgGGUg0B7SEISrJ7zrWV1CDpai9Jg99jQV8CSzr+tMOCTYDOEwi0PAy\nsH52CMZiDgfOw1knqkpP/J65zrt3Bjmju1FvO2GP+gXKMDoTQxLHS90WPkkz\nsnyX5vEaPFNsJycGWGsi36n9elK6xzvzrUuutEE8RsihglF2MC0YePrrg5ng\nMrE70BHS9R6+3rfGHOu23bYzFVix5lRRtyUcOSFiUFn3fQNKFVMP3bbg/wiq\nShbR/TbNOQoehvsjC9Sz5pqKVgtbLo3AzX//yNUddHEaB0Sp9VeLJOeW7TbZ\n9QS6\r\n=ASK+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDnCt/FKwMEYuoWal+f8FLJpLPVauV9y/npzEYre2jNrAIhANgnr0+UrvzJeuE5FgadQ2yufzQG6edaoZy4gYCVjccs"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.1_1549189188821_0.3920237222881966"
      },
      "_hasShrinkwrap": false
    },
    "3.2.2": {
      "name": "cspell",
      "version": "3.2.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.4",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.5",
        "@types/node": "^8.10.40",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.2",
        "cspell-dict-nl-nl": "^1.0.15",
        "cspell-tools": "^3.0.4",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^13.2.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.0.2",
        "tslint": "^5.12.1",
        "typescript": "^3.3.3"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.19.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.4",
        "cspell-dict-cpp": "^1.1.11",
        "cspell-dict-django": "^1.0.7",
        "cspell-dict-elixir": "^1.0.4",
        "cspell-dict-en-gb": "^1.1.7",
        "cspell-dict-en_us": "^1.2.10",
        "cspell-dict-fullstack": "^1.0.6",
        "cspell-dict-golang": "^1.1.8",
        "cspell-dict-java": "^1.0.5",
        "cspell-dict-latex": "^1.0.7",
        "cspell-dict-lorem-ipsum": "^1.0.4",
        "cspell-dict-php": "^1.0.7",
        "cspell-dict-python": "^1.0.8",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.5",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "6.3.3",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "079cd92bca8085a54e6d7bce20fd1c85bbd5834c",
      "_id": "cspell@3.2.2",
      "_npmVersion": "6.4.1",
      "_nodeVersion": "10.15.1",
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "dist": {
        "integrity": "sha512-IRylgPXAipr4HLKOTYcr2EGC5DM33DdtmTxqdJU2VxZcuuI4pT8jcinfvYq38t076e0hZ34UiiMCQ19TPu9tSA==",
        "shasum": "85159c632407ce65ec89f1d1c0cc40e646e03082",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.2.tgz",
        "fileCount": 160,
        "unpackedSize": 397860,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcY0YtCRA9TVsSAnZWagAAaqMP/3e1uDqyae9VItdmU8in\n/SmknQq7nD2SzRQdJXU3jJq+ltFebI1MD6RmEZsDyK/sLP3okdYLudmwTpPi\nOdu2mQTySBzoJcIyHBDnxUAxlzjMxQVqJiiiSlRgDldSEwQ55PE34Spk533T\nAzhrNjzjuBP0aQIdBqAq1OtGcZI6mviKSTKo+44PoL1iENI4IE+RIxNfEP56\nxIApOaWmzGzLkpHEaIQFFgSMfmzBQGxB95/YuAVXLs4lG4RmypSNRf+zRb1Y\nHOGrEBSpgV3jpGAbZgjvanwH03pIlbBQso6ktk4GBCLU5Uu/B3Y0L8w8nl2+\n1P33XK4ETKs4MDH6QVw/s8JwZnqLLIHR0NT65ZTFBqyc9+BiZpo+oTN4Gcnz\nl8OiC0xFGhOgpazIwbQsXDnfVY7pFvDrfmJsBgcw4s8nB4xVcMlliyD1JAXV\nDZdMX6BIOdwBPnwR65pPoq69ccFH8eiSmog80OEGYn5vbAk0vF5Lx7YRMzaq\nvRgTuLzGQ7iqXNnDxvnc9gWCMNtJBax1rWguoE4VjkF8Ejc1KsbpKs8y20Ug\nvjHa1k9BVywsuowcJF90iHohbaRy3EZURsghEhWFpfMobDXjrfRev/QkC5a5\nwJRImOzgSM3HvFIzW96/XxuZfl+ShrfRJz4/5oNUiT4MY3ptmPCTFtsmfdRM\ncgrP\r\n=Xr+V\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCWBeAhl3XSF/mupVf4Pa0dYEoyBMNLd6W8AHVmyz7TDQIgDeRF87nkx7EliGYfbjUhZM2Hr430F2zNcvIDu53rLbE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.2_1550009900721_0.4145589096694946"
      },
      "_hasShrinkwrap": false
    },
    "3.2.4": {
      "name": "cspell",
      "version": "3.2.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.5",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.6",
        "@types/node": "^8.10.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.3",
        "cspell-dict-nl-nl": "^1.0.16",
        "cspell-tools": "^3.0.5",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.1.0",
        "tslint": "^5.16.0",
        "typescript": "^3.4.4"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.13",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.11",
        "cspell-dict-fullstack": "^1.0.8",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.5",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "^6.4.0",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "7d1aea70395bb56b3b89b2af4f9ae3f5587b1b1c",
      "_id": "cspell@3.2.4",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-lEev3QMrqPVX1t4Je3ASZN/4P8QYOyUxR6RZUpG/TW/j/0I7aVKKwHOQX53wicRfdUsh5opeHSih/V9vSeG8Aw==",
        "shasum": "cc2ce2d648d5f1045a368cba406f085487974af0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.4.tgz",
        "fileCount": 160,
        "unpackedSize": 395845,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcu2hxCRA9TVsSAnZWagAAZB4P/1e8GSa6QK8Vz5ayiHf7\nEoTcryPPiE5CqY/i2Bw2zS/yHkeD1OBcHdfbta8ZcUSO/3JVGZRC7fuWy4yv\n2HvFoK5Im+D1bx5+CZXSX2azWvTY3df7n6QaJhJDJgYZzLVlRD6fxqjrekgJ\nfwfX1AB08SdCxAz4x3TVwkIqsfccwyl32p79Vz8PaO9kKeiSv2lfQi2aaOVs\npLA6CuyrSQtmwaTth1BtFs7WciwBlYZqFYTJ5KBcyjsobgU4fXOLt91skg4x\nOIti/HDiITgFSY45+HLvaq6TzmcN4qrdzJUgGHlrtGQvw12+llCD11r1JQQi\nvHl0yCHeEiwavvH/rxpoNXI4W46WJ+7Ai9DPhltKz8UcaXdyukg5e9j77pyJ\nz8rkZYiFXH8Qk937gEecsRH/PqkpXVyH1WFZNh5ipHSsQc+RQSEzoMsLJnB/\nWfuamJ1wCLAJYXugwoViOVZLi6mcXwXNvGo8Kgoy1BH2KTiZF8St1x6SdKzd\nrY8LMxQ+lU87BtS1nUOs6hmpP+CL54SlT6HJXT9Xis5GJiNeYzjhmR0O5oGg\nuq6lu+oWBMiHzOFgoLmK09v2i3evhaTi35Uh99fIuov+VsMmtlpe7B8yjxdp\ni+c+1SGGIKJ+54BYBCFrxUhEX5mpGld6T1uoBN1+Jt3W8FBDAikihkTdg2cH\npSZL\r\n=KL5h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC6dW0JjAC9gheDpbpMN6T3oTStpamx6o7PQbWuLbQC5AIhANJA3NwLw44bXewj/bg+fHgWZAx/iwUdJtXXmsfzKpiN"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.4_1555785841133_0.9567867262779726"
      },
      "_hasShrinkwrap": false
    },
    "3.2.5": {
      "name": "cspell",
      "version": "3.2.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.5",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.6",
        "@types/node": "^8.10.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.3",
        "cspell-dict-nl-nl": "^1.0.16",
        "cspell-tools": "^3.0.5",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.1.0",
        "tslint": "^5.16.0",
        "typescript": "^3.4.4"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.13",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.11",
        "cspell-dict-fullstack": "^1.0.8",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.5",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "^6.4.0",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "6e676e9d174fd5098c5251f627fa23a3a44eee75",
      "_id": "cspell@3.2.5",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-EFkJtrogFXCj4frofKMk2SBKuntiROzlVOjnMf0ea6S0imtbaPJC2KPONcMKYPTRnzoH+2MPPtC8wIcvhR3PEg==",
        "shasum": "ef1f16d25f0e997be9b69849a8879fec3a88e6eb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.5.tgz",
        "fileCount": 88,
        "unpackedSize": 190430,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcu2mbCRA9TVsSAnZWagAAP9AP/RfldVxs9myFAR5JiQpw\n+gtd6SLk62+rtbjfGry9f5ZAHl4VjICiYMI18vmxs+2QGpHC5ONbti1vw4g4\nGf1h62nL6csdao+JovecAlySTKZIt7fqnEBFBFFrXNiZyIjCCCGNidMK/PYX\ni1T/oxLAp4qdpk0EZQLs5nqA7KICz1jwUyhZi46r9xgDzw/5nTVsijM65zaA\nlmsZYjKSSDINmBcfYcqanSPgZY3x1hJi8tNunmLdzsDZgZpbpH+rUqniFNLi\nI2Am6e4krBwxJ+HBMRnLCqYtq1V1GW7HY2vDERYshfrTiBLW6ykUsRBXlpeD\nckRWLy75tNWb4N+Xc3P//qxjB6m8+N9PgB+r/Hkxf1zc+NfqnIWzgSxGQ/0P\nFGnZJg6cmQQDb3ekFbXzjzvUGQh9enmaOUYL281foeR8c4QQWuadPtptz21k\nWHpV6twnBQvn8a6pymJjEEdnVV1ehoJxW3VeEw8cQJPfjCxLcKkykHTfTWle\njek6WD2M7alcANQp9/KQzQZKTknDprzkI6mnHyhQdQYyn3jloHm6wXffnu7/\n8DT0Nw1HydswN9r+Ncr0EEEPz6VAWB4Yd8cZ9J+44b8yxV5PgSUdXDzQGsoa\n0hNvDCS7NTpIm+5UGBzdAokue4vmR9KMXVJTq6j2BNTgaegZ1J0O3+28UlUY\nFgoo\r\n=P32h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFo/GUBodv+vSF2fXunA6+0DyBWVNg5UPS5nd245rd9MAiEAsmHZw379fUqTVVsFJufdJGgM5k0zQh94nKxhH1QdeVA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.5_1555786138654_0.44095463418439507"
      },
      "_hasShrinkwrap": false
    },
    "3.2.6": {
      "name": "cspell",
      "version": "3.2.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.5",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.6",
        "@types/node": "^8.10.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.3",
        "cspell-dict-nl-nl": "^1.0.16",
        "cspell-tools": "^3.0.5",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.1.0",
        "tslint": "^5.16.0",
        "typescript": "^3.4.4"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.13",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.11",
        "cspell-dict-fullstack": "^1.0.8",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.5",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "^6.4.0",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "2de941b6fcee165978462e70fe5f510fb1d6db60",
      "_id": "cspell@3.2.6",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-nlLXCXAkV7NHEnbSOowu9gx42BA37f+HvSX0zMrenaKtb+k0wpUdzP1Oam4S/3oxirj4cq7pXcYJtfK5Fba0fg==",
        "shasum": "8d12f8284af703da7669735d09c5ced9ac90bbfa",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.6.tgz",
        "fileCount": 88,
        "unpackedSize": 190430,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcu3DUCRA9TVsSAnZWagAAqTMP/0abJWqYQkseoQM+FmAW\nL4M46BoBnhMyEDo99jov1kdmt758SjGmZAMwXHgKtv8NMfg9HhWoFw2xdF5Q\njnezbllq7tE7m1AmqjulmMYB942gGBHJDqy9l8wno94SlG0ijSavFoBJkkPN\nthuRh2RWF7Q+STokepQMIHviCfBsTQCrNtZsaEPHjamMF1fIg1bjHYhXb3wF\n+YHDIpqgu9F4rKqeJky9nGiolGgH9nu2bZpiiJ8IKjtYtuwyyi7iW1hFyrZW\nNaGKY1B3GJZiOz0C4DsnoyZRtdBGnBc7CGugoxFA7ErG6jiKNEJkTd5lJG8z\nlMExJXT0We1DI0ljZ+G2GM2GFMeAEwmPVRTL1Oyr03UJQQ45NNDGIwBuVV0B\n9fZfVkYhdEEC5lIkH3oqN/qQnURWsy94XyHuVxPCKos/iVq2lBvw7crJLsEX\nBwX3JhEJduRoE1/NwOwERKVXvJ/rteKNuBMExD0jtd8C5PqHpb2dvMC5uLfy\np+EKdN1xDSnxeQe4tyuwqumIuVh6J4et297sF0gt3qS7VPEv6I2QDrPqcHlI\njb90MnQ0ewByySuMidzuxWti++/a3uBTydiRNg6bQ0Uv6Ogws8nUs+YG7Eud\nUqP9flknwdlo2LGe3U7fFgwldpoSreyNmpYrZvACXgexKUlTUu6Do9qSMBy1\n8fKW\r\n=XPSi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCTRiRWPXLj0AgUjh5axgamp6xWLG0vCWMGxYRK1uMulgIgGWw1H20gvC4I8XAf3Rpgq68KzteBsQJIrQKf1FSky88="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.6_1555787988032_0.4107970785690085"
      },
      "_hasShrinkwrap": false
    },
    "3.2.8": {
      "name": "cspell",
      "version": "3.2.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.0.5",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.6",
        "@types/node": "^8.10.46",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.3",
        "cspell-dict-nl-nl": "^1.0.16",
        "cspell-tools": "^3.0.5",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^14.0.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.1.0",
        "tslint": "^5.16.0",
        "typescript": "^3.4.4"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.13",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.11",
        "cspell-dict-fullstack": "^1.0.8",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.5",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "^6.4.0",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "994bd406c67c57db8ae1a2dcb618804afd15f056",
      "_id": "cspell@3.2.8",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-HL5/I19FHJYFaRaoF6MG8t9EA/fThNibroGLl8/NoPSjjSyBtuk7z+DEkKIx0cgjkUZfdb604es5R6C7o4+boA==",
        "shasum": "f223d6bc36a7c868fd3a50bdb9f3df5001a9f5a2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.8.tgz",
        "fileCount": 88,
        "unpackedSize": 190454,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcwHJrCRA9TVsSAnZWagAAIN0P/14fytJhVUUUAC7sX77U\nvzsML2DEQseK/vZsO6wptt3C0MMxDj44fPLHI2S4ZpUhXt+WuBIkmFfbkI2h\neztBt154/PWsVBjMSvKUTLvZigfgmtvly48oWrZvhndCl4gfX3WfnIEly/Eu\nBTADz28cawX87uafQMQyD4vBxCBuPzPM5zQ4r8M20Xho1xmSBJPDAwBofW3M\ny5gTFXmDzX6solCgXVSYW47aNbRTWKo3UbLzXpAPqETmnCo3aGdg/IeSXDtb\nVNIInTcgZ+EWzL5/b4N8qwZqemJDy29iW3tYK4xTYq52oTg5D61zFO+tVn5q\nMuhHep9k73jPgNTLSq3YtGV+DHZRYXggN3e722OAkO2k60brmnIKGkan2fDF\nCrwWrJu65Ori+9f4aFf/yJl5pWqumhiu0Od+90ABC6LLoFYvpgrowzTEgwSc\n89yUOp28JhaRlOkpIR75QC+/xrrKcrzsKFKoYJe2r28/3IO22t1rUI50y/iP\nChSnieKELE+CIpd7zRH5WwGRosBx638XDlmrd317aZJJgQhZesXVpLu7lSxZ\nFIhE2w8lKGhl5DqDenmZuFYAyf3FADb7K16RcVyG8a2acOLlx6aKZhmR26Y9\nhFLsVnC6716EEY1O617ouLeJtCBed2MlnmK3zZyQie8q0G6dCERArlXnxi48\nX3/F\r\n=o5U5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDwZVjrVl8K5AeQqILddZSInA1BsoAbSQsDixc2g4pH4QIgIHW4fVChHTrtvFWbCufhlnqI9z4pUfdOL5bg3bx18xM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.8_1556116074662_0.6606420830495907"
      },
      "_hasShrinkwrap": false
    },
    "3.2.10": {
      "name": "cspell",
      "version": "3.2.10",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepare": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "@types/chai": "^4.1.7",
        "@types/comment-json": "^1.1.1",
        "@types/configstore": "^4.0.0",
        "@types/fs-extra": "^5.1.0",
        "@types/glob": "^7.1.1",
        "@types/lorem-ipsum": "^1.0.2",
        "@types/minimatch": "^3.0.3",
        "@types/mocha": "^5.2.6",
        "@types/node": "^8.10.48",
        "@types/xregexp": "^3.0.29",
        "chai": "^4.2.0",
        "coveralls": "^3.0.3",
        "cspell-dict-nl-nl": "^1.0.16",
        "cspell-tools": "^3.0.5",
        "lorem-ipsum": "^1.0.6",
        "mocha": "^5.2.0",
        "nyc": "^14.1.0",
        "rimraf": "^2.6.3",
        "ts-node": "^8.1.0",
        "tslint": "^5.16.0",
        "typescript": "^3.4.5"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.5",
        "cspell-trie": "^3.0.7",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.3",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.1",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json",
          "html"
        ]
      },
      "gitHead": "ab6d6f332b08f6d4f3151fa8dcbb2fd90c3cd6c5",
      "_id": "cspell@3.2.10",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "6.9.0",
      "dist": {
        "integrity": "sha512-wATyF1NPPImkRH1RwYbhFPD2YTrbegFPp+BypcWJYr3WhJTSzR1HBeetmTzqObfmdfhVrjenf+Ig/TbZv0rV5A==",
        "shasum": "53e3d4eae7bc45af9953040d8ce66e6391f0da08",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.10.tgz",
        "fileCount": 88,
        "unpackedSize": 190436,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc0Ar9CRA9TVsSAnZWagAAmWEP/RhmLzBNgvt8gKNg01hy\nXXK6txZGUf9sHC5ncyp+b1pQ8azdxiBfF1TdTqXMEeTGZ3NcC2/iqbG4w6HZ\n28bb7ACc+K4KiIiIYcQ4cVMyZuHmsHxwlJx7XsKnz5NzzFUDGqvseYlQkRHQ\nPNHd7p3ezODjMfkoArSfySWu1dyR8EML9BNGZpIXcF2hXnamk1EHjJidGUL4\nqpvoIguLl+HL6J5iNeP3/gWICJCZsisHkRyPbSPvB9jw7iQW9L2XDquDbsEg\nwDveaokPAI+0L262J9IMMtUpKf0nfroi/3G31kMUbYd4Mo81loDQy/uhScph\nUtbsyvgUxo2I4RU5+vnEqQD3dYGgrNUFa7hKtlpHpO6H8pxgtsRwXCnXoeHG\nM5hMl2Z1EnI6SnKOy+zzu6Yfqxxsvzd9Bj+WGGmvAiEm3+Lez46lWwSfmqSE\nevVub+wW/Kxs0tR1Vte8wn0CWhJj6Wm3AYSo9nxi+cSlt+J4sXYyDD0hV9ce\nr47MHvxtInqUz+0/R6CU2oDMwKKw6WZS4YylbMkc4vgFO7zU9TjspEJMj505\nniu6P1KZxYatn/Pd1nVDfLSBsiJDQrUJ/YC63ZSBI6SvFuhPtRv/nxDwsIpl\noNyzEZBJwrwTv9GVl8RRoC5i6vLeXyfPf+h8KKeVZKVXcPpWXSdMe76MrFXb\nEch3\r\n=2QOY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBnS6gY/naqWPhzhw/1J2zKfCGK2u5RbXXaCk4CS7vNyAiAlHHhpKFDfXRKu6XNCKrDPsj12lQ1twgbRCjRHdx81lw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.10_1557138172634_0.9700615260195997"
      },
      "_hasShrinkwrap": false
    },
    "3.2.11": {
      "name": "cspell",
      "version": "3.2.11",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Jason3S/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/Jason3S/cspell/issues"
      },
      "homepage": "https://github.com/Jason3S/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.6"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.6",
        "cspell-trie": "^3.0.8",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "6fc7471b8bb52590a43886b2de1165cba1f30a50",
      "_id": "cspell@3.2.11",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ktEpafnEUjIJfOW6Eh6ATSmV43vUiGrYaoL1hZ2mkV0/2Qfb4l4GIpzkjkY3A4ZrUxTG3PGk0BlzU7FCpRtrtg==",
        "shasum": "14c3f108654d3890c67253c23948211858357bd5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.11.tgz",
        "fileCount": 88,
        "unpackedSize": 189991,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2R5rCRA9TVsSAnZWagAAQxEP/3DR4xyaFUyTHto/7M43\ne7esEvuHfEjXhhQ99iaQz4X5riPExOodH9zOsU18xlw9FyOU8nEa2fkJmsiG\nhL97a+xDO928UUEJgZydddHOoWpK3/lO1dfOKh5OnAhtGX4TGm97pA9xyMSj\n0bmu2iDdCRBQTgHtiNMs6bPY4caAn5GbtMYeoUhU3sbpZzEwFUmFfDfFEGLy\nNgDpIKk+c6Fgsz1qQZ6SjzjoESZRikmOLam70cPYVzRT0iA80lhKinFequdB\nkq+E5PylStX6+kageTII75y4VA93pmZxroimc2oN/ARX4xrRzOVpnUizBt6A\n3xBEzhxxuPIej/A8iDInyK2qOrgLPJEU7E3HUCI1MTHvwUpku/5/yU0SEgEC\n0Yjg2ohoVfSC/lOMWdEuX5Yf4B4+2jGWRHTN7t9YHgaBoeE1C0aZ/9aq02o3\nk+AnHW+nyMO9RqsdTRQfFoxEUk+N2Lkqg3E/Uj2AvY/87CEILkG3cPWQMc1c\nWS+AsU6khlGgv146ooIO64eDOyPIYkKSNaeqaN5DDXP6tj1hd93quYFs/YR1\n1sx0EkwfNRFZ80jfEWVIgTaxL7vMBuGuXDthQZMFk/XHhiet4T1w9LLCJb6/\ndOBKFXxI4f6M8MWjXLyaNdpmRUEOVlVcJPwkWz+EuLIxOxSc0kDxTWg0JBDU\nGi6x\r\n=pEUk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDBUzNW9OdGyLshFZHgrGIXPi9krevOagtM/umsMtoTpwIgFD5UCWJhk3gfkTU7g6ejsQaOBQo3waQpqQ7lWSzM1Tc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.11_1557732970798_0.2202207564386911"
      },
      "_hasShrinkwrap": false
    },
    "3.2.12": {
      "name": "cspell",
      "version": "3.2.12",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf ./dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "npm run build && mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.7"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.7",
        "cspell-trie": "^3.0.9",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "ecf9ee8c40bdb943873cc5f55e614d56b57fb879",
      "_id": "cspell@3.2.12",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-q1SjfAenb4dAHUPlwgjirXAoE5pypfCir/njZeHL31e+chE5v3hDOpySxaetUQ4liC/LpHth9x8sLdhvlEm5wg==",
        "shasum": "f232cc2e2f22dc41bbf4444d1bd0a60de1c79f29",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.12.tgz",
        "fileCount": 88,
        "unpackedSize": 190263,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2TFOCRA9TVsSAnZWagAAs9sP+wZ5natrCffdEchN0wiT\nQTdjLNQbIbJBYTmpdC9QVR2GG2XVKB+nhJtFanSdR2dEA6odx9+R6mzQ+hAh\nzakZKuuPSbSz1ajCRlv5+YhUxhc7yDPuy5AK7Tzm3d9LUZZ/+ERPndAtsCaB\n4sQFOQve8syKlpj3AHu0g4ugFFok5ktAb/sGlr0lhYficP2RFPd9CPEhCVBp\nkUqXgovMRoPhnCN6S89RMTQCK2piVnXDc9L3Uh32kW89nfiUAFgUKutzpa86\nlmWoor9lRxTywvqJqcEJVBho4U0Z22JRqekDRHLrM6JYcGjOmzMb4x6LA+Mr\nhxORdR0iFW6lBwHnk7g6m4fhCD26oVUjOMhrztyiKKqJFM+fJ/iefsJICyvA\njUnSa2wQeV0auYSXHsKwWq8MhmhI51TfZ6CT8TZfEexWZw0FqMpqg89w9ZVb\nMlsu8c618CCVFIY5jvHbqzxrjr2DUbL0AzTUiru9tPPY7XF16Bl0OrJDPtbG\nFcDyJ4oUatq1klbFlAEaHsPilV62dMHdOV+pHPIxJ7EnCNZ2ileCp7dly/cM\njnmdt/71rMQICJT1Yb54DoXDtL90US/H/eokzXhGDNAgSxxuJIQTjt7x5ooY\nsmsKfAIHDYzANm6y777id+Io2wGuVdcu+xDAdSMuLkdQ86xukx+8Kg3hu6rT\nKWaj\r\n=5k+Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCBvEoNkgvV1eC/ra2PYEJUdijxYt6sn1xm8aHFUGraAQIhAJsPPHhPxVhli7cqnyzhoRAp3qdkA6YW5dzIDIV6/0Cp"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.12_1557737805271_0.46989444185466045"
      },
      "_hasShrinkwrap": false
    },
    "3.2.13": {
      "name": "cspell",
      "version": "3.2.13",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.8"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.8",
        "cspell-trie": "^3.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "31a7b585d2968c32257e60857515f85f2953e5bf",
      "_id": "cspell@3.2.13",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9+j+UWdNc7K1gar4yW7+z77d14q2lqTA0XqorigXzZlEQnKUfvr0UG2gQ2ezK4ViQoN8UEuhuT6+GYw5RuqCsA==",
        "shasum": "de1e1d786ebc1a5a19d91e79dbaef605fc2f57a6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.13.tgz",
        "fileCount": 88,
        "unpackedSize": 190761,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2YdfCRA9TVsSAnZWagAAXm8P/0bk7hzteU/1RQgHce0L\nWCwlao99IfEdMZKkFe3rPAVRt8yf0oag+9/jaOrixZD1k+qHd2IwzBL3RVhD\nJ2uSOqqnzKQy/fRLVG26hIk/P9OOQhkDlugI1iRjxjawfOpGjcNAWU2VU+9B\ngAL7NBERTzjmQyONWSOWzTTHlmtoqytufEL4ZTQgRcJEt1cGssN+oDS4XVb7\n5HysrpO63Vq0nO5HV4cdN/wj1dCza5iz/TJv+WiNg6DUxCvlsOZueLCecJAW\n+ev5cmHVCrrNp6X0tgNs1EFKkPU3LxDus9979fEHVFZFrT1ScUcg2KJ/AVkb\nOTIoPiy4chzda+iQzhautgZEYs15JQBPuBNfgajSUkNzeiKJLUJP48PeqhOd\njCt6KRnd1ZECVnX0ffMp3UO3CNm1qoKjrPkRlMm8itrAIq9iFtX2+c7G94TM\n50Ukkr3uoEPfuqovh5fP0nxcRs/Nhg3sbnIWOSK5o07sX0m/5unbN7He2mQr\nw/wXCwh6weJxmwh/jfpEakqVSIb/GR308fhAOOr7lcHuUXjsDItG/L5l/1+H\nbYol9CL9/4cwShVvJor3Q/eSjxCgLXy5je9mC0+rvSpAik6rzFkl5a06c1Dn\naM6jLYT0J41F5gN6tktY+FTz0qj9N5DjKFW/AdECGN2IE4YulP+CaOqpJYXi\nwhsW\r\n=035r\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCQkjVhUQsItFMOREXEsIqJ+Jj9yurFaWsSpvL3BMwxPAIhAPSvUfmReIhM9JNyjU7FIMzgzqEFUvrvfV6r+vRzvZTA"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.13_1557759839026_0.7108514278444202"
      },
      "_hasShrinkwrap": false
    },
    "3.2.14": {
      "name": "cspell",
      "version": "3.2.14",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.8"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.8",
        "cspell-trie": "^3.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "025bcab6b7fdbac1f625249b2c7227ff3006bf63",
      "_id": "cspell@3.2.14",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0TdUO0RR6ok1vXYmL2DQoqHVKLtnEF5sylDh5rZaDocwQBF4lFnfblOH+YBVidDgLxQ4gc+MIGbOZKXMvcK8mw==",
        "shasum": "98e3bb5166148b70c487ff1d46beedd349a2cfc2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.14.tgz",
        "fileCount": 88,
        "unpackedSize": 191183,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2aoUCRA9TVsSAnZWagAAwIkP/27bi29zCVcKlYoMvCwf\nmPDZXSljjPr2thQ4Wo6sElArw4YQ3UPVi3QOpsmbYkdWbRPBk2vztDnVvl+7\naDdYZ9aDoNoFKhYLCig+eufnXJQ0T2dTMAjF1gAXkxO/F1uw0JOz3suEL73v\nTT7NCWIe3ImtFy08JIKNxElwI/HpWAm2iS7DSwZafFJQA4gwhhp5WD48rFy/\n728ZmgAo81dig9pRRllMYqFD97h0KOQvNKbwK8S1srvjemzLIYU0bi7tVcbZ\nh6mNTGkLPODNxsjjrF3krMF9aapJrT+VLDrEUX15WuSv/9z8wLNjFugIs42c\nfTQxHe2iTOFVDZN1ta0O4GVVT5cJFC0qd2bKy6RI9dYSntQ4yv3DfkE00DaG\nzTMYcYtOXsECwe8DA4eK5pXNPuJugTcG32WUMF7Y/69vtVsMLFwQQi+KI7N6\nwNa/DHFkUtOcg4vqbaF8W8eZTGm4dB2LoTkEt8bqZ03GEeS+d53+3wwhuJkn\nxWOeiSHRBjuKSgbvS029q+q9dobOK7+EAbd+2CRId4woSPJLXI42pp4FnQPO\nPfBsiD5jbG7KHPsDlC5y+Q0fDz3vRsWPHDx+bZqyX6/aYvveG4lS/R3f/a2b\nrYbh7fB9B+tdDa3kgirYnY/p5UIe4iVcwqT2C8RF2MhI7hzBPloU+SD5rJ+d\n10cB\r\n=gym7\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD4PZIaCNmzN6rivUx90FHrGsNjSCdQYhkKejXoYe+xEQIgGziufXt+8wuhwpWSUk1rKFU81tCW8FJ+h06V13esSC8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.14_1557768723380_0.14142834745334865"
      },
      "_hasShrinkwrap": false
    },
    "3.2.15": {
      "name": "cspell",
      "version": "3.2.15",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test mocha --require ts-node/register --recursive --bail \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.8"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.8",
        "cspell-trie": "^3.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "40e1f67483b55175c5905f84bbc83ad655138ad3",
      "_id": "cspell@3.2.15",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-DQnp8rK1P4CuPmhmAvV9KbHUaO2Q8n75cib5PHrVmSMNZFr2swOe1aiN4WHc6zXsweTmkponS/IqA3lc/UO6gg==",
        "shasum": "a5196f5bbfe26496801396f81a70b79ac61ed471",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.15.tgz",
        "fileCount": 88,
        "unpackedSize": 191440,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2pb0CRA9TVsSAnZWagAAxXsQAI5m7FNqOLvT9p3rmsit\ni8q9g9iJRCsD8KxVX2V5EbzR+ixdq5Nv4JgXlR9JI8b4gJ/YlkyiFir4xR1/\nUMmDemjl0hhU0xU897EswTBOtpOmBQ6AGQoBef3KZb2IREICK0/HEHgaiOsx\nGhmnJXtOrg4N+4o/o0ph0zM2n7qI4HL1/vbjF/FrLIF8OnbsNvK7AuxbXbLF\nrIfRudMcxLpb9M40dw1Xg8SDzu7FJSYI/Yb8DkrVQsSAz2EiDIB1WBFgzssQ\nGuwNRRRDN+e4vTXRVB1u8zF9aQoZUVutQ4K3RLCjFtI8ASKYpXFredwqL3KL\nT7VKNn4oGqZnmAiwknKmlbl5HO4U8ndm0ljtLR3WtXXRVhIxTXTqwysBy48N\niAlP9YPK/S4zPcgdVy6oFGHeQ2i5ttgIEjR+KZoaoTwKMGX0vwJdk0wY9Pmg\nfbVlkNNV1QQyY/qWRGRjrF1LZYITAMqXBVDsxo9dYQyASfoApjD3eHSsrBTJ\n4CDkMAX15ZvseuoziM8eWutskxaXHPenCxxosVAcd76CW1xGX+ZLPlfMkx0c\ngWTfQhQNjtjL+ZlpCLE0PZCRG4QGBfuihl1PLz3SiA3XGoIBQBlPWx+tuIip\nfVpJleJ8raqP3YKRfoIP1ZUAP+qLv8+ToaARSNxwDHLu7qb6tzc3VAqeQFz0\nNhXY\r\n=hizv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDX6KzHkbyZUZMTdBu4uchE5iYgptkCL4TRIuvfYEN0HwIhAINZuEYdUUwCF928hG9eqAOuzDrLP/fAHZ3zlklbMorU"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.15_1557829363602_0.07933652645443257"
      },
      "_hasShrinkwrap": false
    },
    "3.2.16": {
      "name": "cspell",
      "version": "3.2.16",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.8"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.8",
        "cspell-trie": "^3.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "d449575c1700d6ca0e4faef6470ea76a5c35e1c9",
      "_id": "cspell@3.2.16",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4hjEEEHqC+YzpHgmohoM0O/ns8PHRb9PC7aFQ2qTI2WYyOUDDIPJBRDcUyCPo2Ykq94ccneoYT97L+u3BcFKTg==",
        "shasum": "7b99c3478f6d240b5f80c344832aec69605bdef1",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.16.tgz",
        "fileCount": 88,
        "unpackedSize": 192277,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2xzHCRA9TVsSAnZWagAA7roP/0vL2gamzCs6ZmhVi0Fo\njpRXrXvihdsOVbWZpnr+CwxXmeGgN5KPcVoLmIN2Fninc6cHuNtU3+C9Kszl\nLc1Tcv6Iu3mbHlCjn6IClbQB3hgcw5aBBNWrXyo+n19DZOLxyLpGxiydobZP\n6DWEPNvasQvWeUrrKmdbAbGOvFttTvNgVps+9F7uK8VN/eG7n2XSjhX4lhJh\nZXuxTjSqTOMg8NMzRLzAic/XUbqlqj6DXOqvgvD9n1IJNVu8QFOTLJ6ShcoC\n+Sx9PeKeth98Jtd8giqTYOLrpUC/n42GgnVoU8TWiJEDuyIiCiX6SKUpLFtj\nW4YMMwJKGdL2m3MTdEthYYFlHUFfhwDowRexEqD4FiQBFFQ59WicAOywqC6j\njZUQgn08eZlkNvEFBRaPllzKnQRONZpwB0Q0BvTriDObpv6/86NeHgT3WT25\nKJTXo2tSpPYl2Cb25j5R2XXw2dX/K7M7Y2LKzIwmZDCG3kWDLrsCgY7CwuJt\n0ht+/FC3Rfnimo+damVyT43dI6DV10Omlo81oFwHcAUJga8JtONr31ORknDy\n5X7rJsV2i/7K3OlodteR2hvIDRedWJvd5bMGAITsp7fZ1vpQ9W1+6SKPP5zx\nTPRFx0EFZ93vAfr6vLrGM1QurGHOSpydcNxcIw7khzR8NWZJ0EJap/EPM/Fm\n8FlH\r\n=Q6tL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFowscuSQCIsYnuj1u++xs1DcY+ypuJZjj3BcUw+p3DFAiAD8Z924vRM2ZMeh5U9e6W69ws/8RfM2NDB39zY+RXvuA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.16_1557863623073_0.8708328405617214"
      },
      "_hasShrinkwrap": false
    },
    "3.2.17": {
      "name": "cspell",
      "version": "3.2.17",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "devDependencies": {
        "cspell-tools": "^3.0.8"
      },
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^3.0.8",
        "cspell-trie": "^3.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=8.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "bd94f9cf0640ffdd42bab7f4c019cebceeb53ce2",
      "_id": "cspell@3.2.17",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ubl9KnYgigK06Qo9tUx0xGSlyNpV1M68HDPnA7UNtL4yloOE6/K1GVw6J9prhV2KZZgBxqa5GATD8T6nS0mxMQ==",
        "shasum": "6ee27df2e11edca4684a85a754175e6db40652da",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-3.2.17.tgz",
        "fileCount": 88,
        "unpackedSize": 192678,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2/8UCRA9TVsSAnZWagAA/aQP/jb4O3Zr0t5VSLXiPA7V\nl5aRIpUKFGO0uLvNL82d1uZkZElhkcg44m+AK7zV7tBvbOtciQfyYT3l/6pI\nYIV7ITAuupq4eD6sUphte0/S8UfOIkVFJLU/XRj906ZUBbaUVuP3mVw++7jg\nMZzuhdcFXqnk29kQyh7Nu/DMTmkjQaRyY/IDLpPPPepzsknmYDxqTNksq29K\nxwL1NRQhYqqsC97CopVSnUrgLn72P1xG04Uhx005ViVwjYUcCieWjqRnzAgy\n3ggVmQANE2it92LcHDHXL8tXTQkMbJtPu8XapJiVno0DRa5KG4f5hC3+Jf8e\nmbhpK97nkWXjl18ZaNpk4rFw3AmSFFG5/WKaBxi4SwZ8OP8q01JGLI4RGSJr\nFmKAkAD6Wz3WE22U5IBzpaw2fLnem+UlWGkeXLcFQ+EPjqtPG9qOIFR0bMZT\nVQXoocjoenQJXXe51zkEdJXLE4L2DUkNuQ7U6cGuetqsGuzK3qEPNxLxnrHk\n5PdomtcaLm+KyuaYEAECIcGG/7f92SDM/dv9outTZgQ3An73FKdmqGYt2koB\nquJCf+d/ykUyI/JjSiIkKZIcn2XDoXOKSwu1scfcZCEGT4QbkU3JyoIyOzkB\nuqbZLMvz/AN9zoMbKUUKZSnHRufI/FC8sYpGEr1q5TLc+PrsMH5pSJdV5cio\nJ/Bd\r\n=JuwM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBe3jRfgrSY99J/4/vNE2JmKRVLflCmsCjv/lBryLMMPAiBr7lC+0lbpFsnmo9K0E3P/4muYoEYYyvv5OWe7kRulTw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_3.2.17_1557921555994_0.7911954747365246"
      },
      "_hasShrinkwrap": false
    },
    "4.0.3": {
      "name": "cspell",
      "version": "4.0.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.3",
        "cspell-trie-lib": "^4.0.3",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c6a27a78dbd244d2d2d5d476d9a37ffa6ca25e7f",
      "_id": "cspell@4.0.3",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-vUbajEX6nd4Sh+6Ci3NCgr8wRD7FNJTe3lwGSicRHD+hKWAtONR+Is6zI2yV/T0XjWwadW8BLMlRIhmFjEuFZg==",
        "shasum": "98697f239e1a62f854a7061bdeb39996831da224",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.3.tgz",
        "fileCount": 90,
        "unpackedSize": 193021,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc3p5rCRA9TVsSAnZWagAAeFMP/AxOwchIpbRyKOC8kdQd\nHyTtFJB/2SCw9pqaMtOEDMsKc1ba+k6QYl05rXtvRcX7eNMl2e5HkLXFAxRk\ntG1hWsUxXSRynzUzhkU7t8RaEV0hAiWkndQEjuLbK96Olyfc1dVgdI4GxGqR\ntEDXtbussYgf0rm3K4U7bs3uNltyEdntryuvAZPkB3C0GDxMZn6VacBXXCV3\nRP2Ak1Ws/Ff3LG6f0HZtG6X7SkSa6eNn7lSSvquyCDxZk0WvugRTR+1NzVNq\nJSTs/RLbtskGoIEDJ9xmegLtRv2cH5fj3SPlAZR1F8iPZ9EeG0LrCX9FTe5W\nVAWEDHZxoI3urlpZHPN9Li5gJHk29QN9UQloTGTA/gcrkrZQRbPWtQVqDUOD\nnD8rlLxmoQoZgG21Fp6Rnrhjwclbomu2glU2qYrXe6HX4Z/0gayhtevAWAQi\n+wu2khOlU6RZ/D7UiGDVjP5f2oCNCeAARwTqI16IP3X29zIGwBdFQ23ZSz17\nf13wC+5K+u4QN4B9tA2mGrI6b8GAJV6bQL5udr4nQtg9zsyDAzBttP83CVSM\nisSGDKdShWFsnrTjD4Ti+t6K8+7ZY6a3fjBWguGJMvS+Tp+y8OTaPqs72VWq\nD+uUSU9U4dpK+H9QKl9VT1hJBu8f8bXQMHGTZHPCizt8D40F0uQ0f9q2Esu6\nxNN2\r\n=F2Pu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCOIHtrAfhSVSUr3rIcKnl/QreMMQ2gn4ZGFEEdaEuA2wIgMaap2o35X2fvY6fr6LC1OkrqeUucTMo67b0+ONv1YFI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.3_1558093418963_0.8030293125862074"
      },
      "_hasShrinkwrap": false
    },
    "4.0.4": {
      "name": "cspell",
      "version": "4.0.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.3",
        "cspell-trie-lib": "^4.0.3",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "e167346c048f0b172cd5f0cfbea844711504c666",
      "_id": "cspell@4.0.4",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-DqnkTeFW+N+1HmEWkGDsXGtPLj7fkX6ES793/L2GBYRo8xUSfbcZFwOFswuKoAQjmK65+L+8WpH9b52xwhW6iA==",
        "shasum": "4302ed87bb067b6ce43f35a5c0c99918fbef8123",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.4.tgz",
        "fileCount": 90,
        "unpackedSize": 193053,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc3thUCRA9TVsSAnZWagAAIm8P/22mQHoALtA+Zd06NqZZ\nQdNTQWvC75qu9Or7zy25rmaxUAFQRs8k5P287KiY5orK11lIdc2wD2qpkQ5L\nGt58emmtuS0XHqlghs2I2jC3GzZ0ZYiy6nuMSy51Pq7rKGMdvrAG1O3zsK74\nHJnONfr3BzGUPD6zaBvEof5BrnzcCE82tABnZXorTQbkk7tVtSh2CFYccZEo\nhgqWAIz/zDG/2P+ZxwU7/8rgejfCryWIwut4qF5mERuoU2PmteDJ7Ja2nshR\nOT5Eh91+K+9Hkd9nG3GK5+A4Pz1+if7oSTnfw0A1rADFj6MYvPgF8GtwOP4d\n/NSEBF3+pm8C8Lmfg5CHWAB1LBKzAJIt3CesgufxEDDfMDvuUI9K01XVNAYl\nNbnj+vlySQ49vAoMJyeCIAueXtSwAxIMs8/xM5OxJHDJtTSTqVg6w9vLuhX+\nd7KxY4HdCl16ibKl7q+760leOlh3XaktRXiLOPu1KM5p/xrBxceR33ByR7NP\nXYRp4/kQ0sij0i2S59Bs00NMQS6gJlt8PRsCBOPut/osqG86arEWPGZcD/F2\nBkmodNczqUaZGQf2eUpsM506DmPVVhdzXLe3ny2JXoEZOgXO5VTzGKvVeuX4\nrTeSrPld5sxYZJP+HawF60DBVaKdDvtQdJ5F44f77V1qlJkSLATaCc4vjr4v\nOQpq\r\n=wbTm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGsUmWUFXsLaRPoH07gD0wJE6rW/pKuWSIzeq2W6ZrQaAiBSCabVB00QRyqKcMnAH/ACACPqXfx64stpyd+ka6h1TA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.4_1558108243682_0.2667607285423357"
      },
      "_hasShrinkwrap": false
    },
    "4.0.5": {
      "name": "cspell",
      "version": "4.0.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.3",
        "cspell-trie-lib": "^4.0.3",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "8b5726c9483d475656ec552de11ffbb047a01af8",
      "_id": "cspell@4.0.5",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Eq82CoBFBduxCAWYV6JuAg+sdBSbnsO1wEbIFucRX+vvZpH7an9RxE7E0vGaDU22tMYyqUZ3Et8AYsTPIOnfSg==",
        "shasum": "673ca3178386ab44fad1393ded54419269dd40b6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.5.tgz",
        "fileCount": 90,
        "unpackedSize": 193053,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc37nUCRA9TVsSAnZWagAAESsQAJDfUx/aVcoFok2ep1k0\noU3SRKVvuyjxm49d9rXGSN8mJ+ymo4KyTGnnTrF12r2GiOZ6tRm8yBvXbbOz\nmBCSnciyXYz59KuRzfVDl9XRDQsmTF0Q1OP8iZgSkfm2m9WP29QRhUm18Atc\npCjmyr1uMlhVxzKFYifQZDDqfoT6A/WaZG1PYmPMjvWWYkZuWaVwszi40+mE\nBpzYvBH05h68c+nkc8nYs5x55vokw/YXnnfNXjMVvQP8FqLdRH6NIQwQi+u2\ngtvpWSEHGBqCvKB/KqvDSxja2xoJcRwr7Wa3HfcBPXFK8x4R0KXFb87B/TvU\nUfgBleRMIrTP83Xmzbi14sibl+350Euqa4BOlBMDavInKPEQ5UeAVbHrMLVX\nRt2EneidRnNFabJ0+5OETKgHFXobX9Ohr+PkIZ30ORtr6BMYA7qNIl08xjC1\ngb640/Vc8DRKCi1Wqz4SNyKr+4dVT8Jy4awk7IlczvYB1NfBBsuGzkhr/cf/\n2iJ6bq1M/5qOkUFWDyZzTr450MEldkqRoqrokSoWoCx/kOtz3oo0yv49psjV\n89hIzSsyiYW1h1O/hScwSbCJl9KF4sRPH0BC49WOWvBQJvuICpobADUzbiDr\nQQM1yV9Tau5GYaMjtw7KQp8tGdylxh95pFpJ5RyiU4C0V92AAhN5s+Z4yifN\nMpEC\r\n=9GnZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA4Z1r0rcBwMB5pASKxGsC2c/Rjr4alyzSOadQIrdYzgAiBJ8lJCd/DAoWu54luSeo0Fr5B0ltPDpsHQzzPizeE6wg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.5_1558165971626_0.7683155284869665"
      },
      "_hasShrinkwrap": false
    },
    "4.0.6": {
      "name": "cspell",
      "version": "4.0.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.6",
        "cspell-dict-cpp": "^1.1.14",
        "cspell-dict-django": "^1.0.8",
        "cspell-dict-elixir": "^1.0.5",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.4",
        "cspell-trie-lib": "^4.0.3",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c195e9a47d65dde469f2195f9a8dbeafeddd194b",
      "_id": "cspell@4.0.6",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Bkyzzu0POMMRHVWrER9LSQ+pIHq/65yoKXbuJjmm2LH203oe/nizjzRoLrZ6YoNj/W5GueTZgKcgFvl8r4cNMQ==",
        "shasum": "2982abcef66fc8cd8998b181b37fe736405e41db",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.6.tgz",
        "fileCount": 90,
        "unpackedSize": 191587,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4QJeCRA9TVsSAnZWagAAs6sP/1WWU4x40OusPvAivTCm\n3rl05mxdLbNR5CKDykgHLEzTCrUqRoKlXNoWlPiTReGDazu0JeEzTfujyen0\nFDV6O5OiGFz3hEgsNHJPO6QNrBx5DKWGqZXfIWWpYU0nVeyjBLZaM4uKRWBR\nm4uNGD+DPkIrR6bZ5grP0zdDhp5Si4pNhTq/SI+DaDtqQOcp/qxGzjgDySbQ\ni21uLUfJ/CH+mx2nfrDMUn9dRaShqxW85fTNO2PJxP6fKo9lrLJifC4Q6Z+7\nlzaUM/nGYdKNK3aJaYK+zWxfAXFJuBVCTTNQMSW8v4ZPoCasIPR+x3zdtOkf\n/zlTc33i4RbUYJgK5lnecY7fXJ957LAzrgv+58CEMWAd5YUuRJ2FlBArmtmR\naT6mqPs5rIGiUWO0R4MGhopMqfsy7OhrhJewLt073dN9Y/vLSUbm/WzrGbVO\nVzHCPAKit6pKdRAuUsG//E4mkNxEgpdTxOsYlmPhDd7KmA6ZSISdj/5VCffN\nCz2ovuUMRvU4tGbNqYjitiCOhhd5jskA4lu0hTHnlu6Bi1VKqGNdVMcv/2ig\n7uTOjhlVCS+hfvkt6kw3jiWDVIG1W8/iqfdzjOimDJzPIGvR7nYx231HKAO4\nHEU7wNNyMJskGOihsraIIvmUYFg07QqyVvPlbD6X4HsjyDiaYKoUZDlsnYwn\nytYh\r\n=0MSg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHiAUrNA5uj3RV33qkI4p3YboPRArbR65iamCFz0UZnEAiAYQko4hWSwyIF9n7hUkNO+f3bHIAdR0UGpK1RZTwM8Aw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.6_1558250078166_0.3272659718374207"
      },
      "_hasShrinkwrap": false
    },
    "4.0.7": {
      "name": "cspell",
      "version": "4.0.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.8",
        "cspell-dict-cpp": "^1.1.17",
        "cspell-dict-django": "^1.0.10",
        "cspell-dict-elixir": "^1.0.7",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.4",
        "cspell-trie-lib": "^4.0.3",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "5a4e3881069c4d42e86cfcbbfe7788ff934d0f8d",
      "_id": "cspell@4.0.7",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.13.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-FBgHaLnEw8Nyxk+dl1riulFRR3I71zVW/k6AvdXFCh5ga3Pe1LHIrAhDFmbF6tIQBy/bRMBVphSczjUYthZsEA==",
        "shasum": "68d08d282afd865818fd1f6f5581f2e4be3af9da",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.7.tgz",
        "fileCount": 90,
        "unpackedSize": 191588,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4QPLCRA9TVsSAnZWagAAH2YQAIw+ixFrQoI/cDn295tf\nb28YnsO2Mm5S0aX+MizDSiGgpMuQHkB7ZTONyvDcinT00FHQy1GYbecWQSi1\nxlw8aRwOvQFucHymbEbDiNGcLOY43uD9GiwVzf4XM+yIQmFKqOGXdgp15zZa\n+slPPrM1jDvUxVC2u371utX5OuPzxJ3h9wKih8Fdl3UflJ87D7otml5QGOfY\ntIGqqtrtdfMtz23rXBzrIFPqpH1WyMi0Dn/7Rvi+h7iCxyNmxC/LpeLFk0/L\nL4rCemW0gCT/ruD6CNhp/aNTV7XNAai6WfkQ3gD73MRzojOPL2XUkXL8mD4J\nz/YJtk4QPZ6UDIxDXVq6D9uVKiU/RPv4lFUxnxs8T9XaPGwoFO75hXskWI4y\nW5RBJ8OzQFvAsLPZWX7qBTBqwnOfi9ctsgG/xLQxnL42IfeM0Oxqhqvfd4Qx\nOvC11OvrRE4FV7gkxWcIIBX9GjU1vEz1PT2aSE/wF4pVSuIp12Q/36DUqkIt\nX4XvgF1rrdPP/gY3gAWcbU0i2YmkydWgLX3amKnrQeLxdxBQDxGHwUOC+Bdc\n1/z0e5LM16YAXi4hRE43z1FHlkgVoFFuaqJHrCVRJ3bh0BCHUR/PXgYR6PIQ\neTJQVTdnVhQX+TwQtK3M+hIyE63xOobqjgc/bS2Xw4VYFG2SH49lBeFzP78h\nMhAd\r\n=ylMt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCDKKMH2wLKj1Mo5Mwp2wPFgW4S8P6DVDa+FNEoGt4DEQIhAKhS98EuCjvJGL4Lt7D6Ev0bTXhDhkcIb/p7g8d7HygP"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.7_1558250443130_0.17642532020515245"
      },
      "_hasShrinkwrap": false
    },
    "4.0.8": {
      "name": "cspell",
      "version": "4.0.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.8",
        "cspell-dict-cpp": "^1.1.17",
        "cspell-dict-django": "^1.0.10",
        "cspell-dict-elixir": "^1.0.7",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-html-symbol-entities": "^1.0.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.5",
        "cspell-trie-lib": "^4.0.4",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "07779dd50ba053e31b0837877453f3eab9f2f6ac",
      "_id": "cspell@4.0.8",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-PSXPgKgIqhbEqH2NXjEzsYG+DoFfDanIicZKu1bGfeBEiHzZAqqpyve7gN9oHvhzQfnLipb4NdI2mjZKO9+vWg==",
        "shasum": "5789b7b172f5bf4cbf1011d86cb6c79a976bca2f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.8.tgz",
        "fileCount": 90,
        "unpackedSize": 192050,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4pFtCRA9TVsSAnZWagAAOKgP/RtXyK/8flyR6eiydOSS\n7wssjv2BLvTSl+mYXmnqvhl4z8HRKLueOEAzcOYufv5Fl6pg2FNsGhgUfHfD\nVvkSkOY5JatQJujDdxx/+dZmFLR6uI3LjEk1IDwcq+zocRAKB8Lleod3OYol\nX3zm3zCNgi8JH8qTaN3d8AbMscHol+BtkkupfqrwSMjnJtznDpmgD0Gem3SA\n5Z/mgCpikWPoSMwWKOTbFA1f8z2CIY1b/gWQUkbCPICH/YpzJsgBg2yt7uPt\nDZj4pU0+m7caUNLgFKG6c7VZUEqh4/4yKBDjUrFnlI/v9P+KZLYIkYEFzBU4\nqw3NTQHPaAn4C1B7FO5305fEXtW6bi3jcBNHzqRVtOhqng6OPnTVz+ukMXvR\n5euF91jQJMySd2ZSJQ0CsFm+l8imnUfTom5nCrX8t5RDd0SlfDBb5AI03cqV\nXj88sL96gy9Qkcopc12MxfreGM3oIZ2gTiEtD2qtCNOqzzD3fRw6QvxfzFD8\nAhyRd1DH5J6qA2ReqjkjiIymCflFv/4bHJLoroka0NVZGQg0HWyreg6ESLzk\n8Yx9IsdqIG7J5YDVQMm1dUK6m8KkROMV1J8mms/maEj31g4ztqU4Ry3cHgEA\n953OdNFNssiTUsUbiBO8p7G+xYFQnA02cl6Attp6hEDZCShqGDq1EXzdnuyU\n7JMy\r\n=trnF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG/wNIBVfF7Z7FlNXkGESEvQrvps+XQ0pV3qL1ea/s5LAiEA3VfcHOvosXQu9FWGPwa6gmmLt7WtF5d7g3lqZO2/VfM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.8_1558352236362_0.937558040440664"
      },
      "_hasShrinkwrap": false
    },
    "4.0.9": {
      "name": "cspell",
      "version": "4.0.9",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.8",
        "cspell-dict-cpp": "^1.1.17",
        "cspell-dict-django": "^1.0.10",
        "cspell-dict-elixir": "^1.0.7",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-html-symbol-entities": "^1.0.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.6",
        "cspell-trie-lib": "^4.0.5",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "2676efc3d7e21f95c5f90685c9010065b0818c37",
      "_id": "cspell@4.0.9",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-LalJDlh3xtS/Vz/pPlGEGCdOycfiA15h8QlgpER1Oi5xlZqni9GVEmRuvkbew9XRgQccz790/S/Kqqi8u80+kg==",
        "shasum": "6cbb04d3e68e7828f422c3ed7e1b4f40e172b1d5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.9.tgz",
        "fileCount": 90,
        "unpackedSize": 192050,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4pWPCRA9TVsSAnZWagAA9vkQAI+I0Ryd30lzWtJvDlam\nUhONzpyMIikan0uIa3wZ2q16loyW1abbUsce3T81GJoI4KqlNZOc68m5UAqT\nv3NmwJ9ehLoNxaGfHMXW1ZW9c4QJkb2Wch2wZGsnpsudACcM2xOzsuQvGG6V\nkXBJpUwISJ090Mpkn1K9S8FXfBY7wGgj6V94lRJ+r+LedDx27f4JaJYG+OZE\nvT23shcgz2Vk6kKM6U5BrdppLlBwwmSJSxUMwhBi1CRiT4BLLMIg9Pgg6I0V\nHsuzZcsDG8TSHqJ62DapKZf348HNBkOMd7rnjAW/8waTdHwSCbkXAHz5kTfZ\nQIRzyuPACDRsWBN6d+YWnhQ8U6pJUxY6RKlI8Hr7dn24PVK7GniuReEXn/+V\nD7f/vf/2zs9L1K5D0Wc4FO4ZqDXQx6VUE6V+zYVd9i1Yj3x5QezJjCRZZrav\nmFCf6BYV3AUJZPbJVImn6LsshkJ4q2LKZexPCXwp3PfZI99+5cWP4amVGf2R\n/6PYT/D+HvIouYxpCQoxqaPg5UFahOZKbsJsXenanpelXj77wgLzDMxt8GRn\nSJUH8HUrSbBiN6dsR0y6a71IBcR7WYw+YTsJFKAaFrfLDWr/Cl2Hj3dSnbuZ\nT242sjsUY38PVG3QdKje+gHmoWR9pAYgekxL0IdMg9cyjkv+bSdJcSfNWDDo\ntyeB\r\n=DT4h\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDZnLFJ208BehZK9ISsNfBKK858TPUrFGgkF+jY4T/43AiAjwo7AZgoAoN8pi3yIHzP399lNhQvWuLMDpRPx07JRog=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.9_1558353294322_0.49832181478683935"
      },
      "_hasShrinkwrap": false
    },
    "4.0.11": {
      "name": "cspell",
      "version": "4.0.11",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build && npm run build-dictionaries",
        "build-dictionaries": "npm run build_dictionaries-word-lists",
        "build_dictionaries-word-lists": "node ../../node_modules/cspell-tools/dist/app.js compile \"./dictionaries/!(words)*.txt\" -o ./dist/dictionaries/",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "tsc": "tsc -p .",
        "tscv": "tsc -v",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "coverage-coveralls": "nyc report --reporter=text-lcov | coveralls",
        "travis-coverage": "npm run generate-code-coverage && npm run coverage-coveralls",
        "test-spec": "mocha --recursive \"dist/**/*.spec.js\"",
        "test-unit": "mocha --recursive \"dist/**/*.test.js\"",
        "test": "npm run test-unit && npm run test-spec"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-dict-companies": "^1.0.8",
        "cspell-dict-cpp": "^1.1.17",
        "cspell-dict-django": "^1.0.10",
        "cspell-dict-elixir": "^1.0.7",
        "cspell-dict-en-gb": "^1.1.8",
        "cspell-dict-en_us": "^1.2.12",
        "cspell-dict-fullstack": "^1.0.10",
        "cspell-dict-golang": "^1.1.9",
        "cspell-dict-html-symbol-entities": "^1.0.9",
        "cspell-dict-java": "^1.0.7",
        "cspell-dict-latex": "^1.0.8",
        "cspell-dict-lorem-ipsum": "^1.0.6",
        "cspell-dict-php": "^1.0.8",
        "cspell-dict-python": "^1.0.9",
        "cspell-dict-rust": "^1.0.6",
        "cspell-dict-scala": "^1.0.6",
        "cspell-lib": "^4.0.8",
        "cspell-trie-lib": "^4.0.6",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "7548388d134496e9ca23b61bedc2fde662d5ba03",
      "_id": "cspell@4.0.11",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TPtMyYwosoXfv2AwGzSCfz0CxYMD3yvr5XHBop4vUXfnaoCSrsIgfSBYRcdSoVWHSt7q4oCBTldsimqq/PnkIA==",
        "shasum": "ed6d3ea3eaf925f0b7a5967d21210b9d1b76b52b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.11.tgz",
        "fileCount": 90,
        "unpackedSize": 192067,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4qKfCRA9TVsSAnZWagAA2v8P/RlnZaf7y+R7E/kScchy\nzxJ4RK4c5lk6NyI83npo0Ll7pFx8q2pFUA18ryRlxY3MW5v3xCHQ6kIzbcxk\nP6vATWQUTj8aXH3FIKspiM+OFl63UJko4rQ+3tW1aSscFvclCxU5hq+kwXql\n6t0CAIkbTUPjcpE916z+5N6n7ylZtPw2rkaI3y87UMSYGNHdm6CO31SLdmX6\nDFUZO/WmyitQ2QtlR015EFhSRtVXnsJqY78bbOUymcDB4lqKNrYwyzje8W3B\nTLqB2fFX7zz0BWwkSz/q3A+ekb6CB9gjLYxQ9ho52x3cryCIFqr9Qz1QTZur\nZUtbRG975XVLCAdgLdgC3AXot2uS+5OFRuUmm7FzV1mBMk2ed6X46z5Eo9Ph\nMCFRiT6leC3kY1EIJPlqGETNe8sPZLHFZ/MiXeL7PcCs1YJf6GWAaML1a+Zz\nkBIGsThLBJFLeU2dpK/WUUy7dqBeebn7U2ECqwhrS4Qc6gRd/LK4zFhYUsJt\nkxpovUX9ZZBloapgdg2Iocckz3algZocZFqTlB25W/GCU3WwlbUuXTqs5u6j\nb982XTL2Jn4ER2xSP3dgNapiec/IbyKY9lMmzznjUfZQ5nXyIqWxQZd/wGfU\n7eUsVpB6sY0byXVMWQirvG8emqb5eQOZ0w9XPVAWKOpuhfNcpz1UDGcMPW1e\nez6r\r\n=djqC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCaLJNm/xH+0HvTI/SpwsEvZNUc0UuHavrhtxFw9/OGGQIgZAOP3rDtlpPnL8kBMoZR077uxtwoDdeJNz5B+nhQ/u4="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.11_1558356639135_0.9540894106445024"
      },
      "_hasShrinkwrap": false
    },
    "4.0.12": {
      "name": "cspell",
      "version": "4.0.12",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-lib": "^4.0.9",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "37f2d11a4571965ae8fb22ce4dfd1395b3c37846",
      "_id": "cspell@4.0.12",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YjYKc56PtgH0glw7b8jTNKUXB7hiTt9d9+Kqf2rfJ8bIDSZ635KfAw5KLWFGDA9WClA9zoANVWKOF6oa00Q+sg==",
        "shasum": "779b59afc4d82946a814888f509537ea2c0b2e50",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.12.tgz",
        "fileCount": 11,
        "unpackedSize": 51567,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc4wRtCRA9TVsSAnZWagAA5koQAIuti7/grgq9YI1zY3Vq\nZXbvtkZf+a2+juu2W0KMILV7pXmTkAr8sa15RFMMKbG0vyI4pvon0Gc6GS6q\nG11IHG0YmOzpVrHhfyQ6xThji+1AvELKnqn/DG5dhv5urv5DbMX9Ne0c/7Kh\nrh9xgmv8+8xq110wJ8EDDHLP9moHV0MXwsPUhRYx5HjmjWRCzoanG3WYWd5h\ny0DlfBO/6EmFRVDNIFTr1fJO6cQieNC/ZYegFp2+98imWrhNArqIJhUxpdk5\nFu/SRNR+lvTX8ycNXBIppBnc2GB884AUPq+pTj0zhrNlGtZ6BafEf//zxT14\n4JQQt1+NgqOz5fTEc/+rIkVvW4jp8cUmv8muZr+Fw19EQyQj8+ij2DymAk7o\nvGoUxafxqn24bp3wyQzb+57gHx/GhCbPXTEKcoIL18gMO6o3cUSBzJTwQnyC\n61DoEPFjn9f1EZ3Co+/VjBddnWoH/JrVDYmB6zR0+E+VUOe1ER/1t5rjg5ph\nUPadnK+MyJVxrQnkpBpqCvUukZEyeBpWNXTE7D4u1Fe+MTCh6SA45fxvAGph\nJKFbhjT/qW8t8gg8Ln8Qyj9SDuiONTNnYy63zmN03AC1KdwJVv6khscAIeIv\n9jUqF8rESKvYUWez4IEDdirtjWrySIM6dJaXdRivGBsLjWx1aXmwKVhwgFvM\nUsoP\r\n=CLdi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHHfi4Q/M4f9OXY3M/+VYvKiRt9CkQxlGgK4VAlNTiHCAiBIiQ+Ujbpay3YJoyuRQNbcVj+jXs5kEv9/LsnA47RhIg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.12_1558381677139_0.1239663162767568"
      },
      "_hasShrinkwrap": false
    },
    "4.0.13": {
      "name": "cspell",
      "version": "4.0.13",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "npm run generate-code-coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "NODE_ENV=test ../../node_modules/.bin/mocha --recursive \"src/**/*.test.ts\"",
        "test-watch": "../../node_modules/.bin/mocha --require ts-node/register --watch --recursive \"src/**/*.test.ts\"",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "mocha --recursive \"dist/**/*.test.js\""
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-lib": "^4.0.10",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "f0870f747b05f0a2b6fdc1a5118bc4224baa7700",
      "_id": "cspell@4.0.13",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-fes31V/1PjGl7swQWklh1x7OdY5EdWwSUl+oEIArWqzGD0xj8EO+5umxGCRGqrBoHZvKXQbzSNQgr3XGHjMrbA==",
        "shasum": "5cbb7870379540b6ab9454f2cdbb800721429047",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.13.tgz",
        "fileCount": 11,
        "unpackedSize": 51568,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5AyMCRA9TVsSAnZWagAAzAAQAJYsRZIT7U2ni/w4lCFM\nEgCkjVdesHWaPlRSxIfgmHZxeMDCFvtqQrGTOVJuHmrk8dVlBmyhOQrDcJF/\nzx1Yjntb+vHus9dtS8vjZetdT4bY5aCVaMGEWle4iwdB1ddjQ4XjFW0bBqAd\n+bypOyBZJsLGrUgWYFfvLQCJVxHLgjpegWxxu09iDXYzCH2w9WCA8beZBA9N\nwxMtfR0TWpGbbyvR3eMjc6aQT5qAtKhNAkTahc7jtsfhoqw5IrSSfxqVrzhy\n8cknKW8FAxTvak5+M2vndB4ctn4md1tzqQni9KN7zcas9nERPPVPO65Oahnr\nGApiiNA1gQKEmzUlDMssyq5/OrYI4bRLSLMVtfMNbW3h6+S58dIs/Q23DD9e\nJ8tLVpjwXTkBwJpw7RZdUqijHeosX0yyJh3FD4EVWswK1JgWYkhC6mVu3rGv\n87NP4d6JLvh8eSv6GrgmM4J6F3iYbhTLw6Km3mchxIRn0o/MM9WRuXa1cNg+\nYh/z1EtFOS6JglL+zqlNc6HtSMk/PPRgUAcFoYmGXqgpOXW+NMy6jGQqQehw\nkNZV/y+jbOYeNQdBmQaGviqPQmN5/npHZllU4mzoGeX6RZTFeb6zD07CocyT\nVs2CSCNvveSKAIi685OMltmuR1aKR9lPRHJJsemDi4nlIGmV0K72au/eUf8J\n5Y5G\r\n=RIEf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHj3X5EZBM7Lgm+u5jpU9fQmOdO0Mzrw4J7if8fYI8t3AiEA4iNe9al/cCppoK0N1tUso078XcoHSUjSHgPASt8ojYg="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.13_1558449291113_0.5161142335252848"
      },
      "_hasShrinkwrap": false
    },
    "4.0.14": {
      "name": "cspell",
      "version": "4.0.14",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-lib": "^4.0.11",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6",
        "xregexp": "^4.2.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "a889d1ac70724471454a4189f4082f3af4971074",
      "_id": "cspell@4.0.14",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YuNLsDJCgy+QEJb4QsajwtAsR6sz3Vh/2U+l5dPkqCHsoQqikUo+0uGrKxdfBzHrT8XyYqpWcoLtDuy7pN54LQ==",
        "shasum": "d95b3c2df9cc08287faa44626d9397151883b08e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.14.tgz",
        "fileCount": 11,
        "unpackedSize": 51409,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc6R45CRA9TVsSAnZWagAAzecQAIG8BboVP5F9kOiELPPc\nmaO6JuHktzOz+vmddQvdu2j334TsyGyhnGgeCh1ox8ca7tA5UWRwy92zq8Vf\nNAG8gNmbbhA68v4CAHqCwD9/pamZPdyZq/pTsFO6unGGdr7tBDemedHbdMGA\nLOrkyLaQ/0HtGIDZ+WdRq1i7luMjeuFK8c+G8F0jm1U1FNo98DcqsVcc507f\nKBVjgb+wCCezTNWSuyGBmVj3nvE9B6ZW6BF1vjFYCp5sUBeQH4rWsHz/BhVq\nbi8aFR0V+rNpGt1v6fyjrb3kyjGFsFbr7zXDGdvaDNHPeOAesPOenUpgUV4W\nGIYSLc5vcDDlUzl8MGhnasXcCG7NjRFgtX2ccZyM0jnGuG3Ny8ZR5FdvL0RH\nWrgz+WXqGKPyLg60/g/Dr2xJ2oMTYSEe/p5SH2tcCm5ft5sbJFSkFGz+0QcO\nD/cIad923C75CXzqfaVSUlwB0Zau6Zj5iuKbtLI2qjDTg+oFNg8PSVcHaEfT\nfcHBteM8yzNQFvZ/3WsHTiulUojLMK1tcW1dRRXI7s3CBEO8tUrsG4nK2F7j\nwYSpI1oWhU5UQiP0QBFKZt/8fjzppO1b4xGGGe7Itm4nWeRvGVsXl6MvghvH\nKRp699TcSmjT0ndO4C+t6v/H6bbU6c9j6sSYRR7MfaTQWdk6IvpnLf48RleD\nIZnK\r\n=p2ZQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICavYFiy9czVVsLKul9sKyN+RFkjt1tyIwufPQl4RxawAiAFLUYTQeFR+V9zu6Eui/H3Pp2tStIGdhVg/OaC/K//gA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.14_1558781496946_0.9350281747435618"
      },
      "_hasShrinkwrap": false
    },
    "4.0.15": {
      "name": "cspell",
      "version": "4.0.15",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-lib": "^4.0.12",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "d2bbe5704b69a738731a3761d521418c6dd0641d",
      "_id": "cspell@4.0.15",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-+Ou0QPzWOso15skWiJ/XXIfCQbmfzDiYVCFAi7/OBXyo/J0ZPZsL8yydW1qaDyVnN89Zbe1hNl8UXxnYEU+S7w==",
        "shasum": "531716c3b53dee67dc1de859f95681956bae1fd8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.15.tgz",
        "fileCount": 11,
        "unpackedSize": 51384,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc6iIuCRA9TVsSAnZWagAAzk8QAIZiHVBo/pxNCpurBAYn\nxunnHGf+KJYvy8oGJISUqjKOkf4YXIgKvgs1+L2qMLSAT0cPp3KfS2MIRgZ1\nsQ3/k/H4Rd9eBKSiQEDK/Vx4of/MmfsI1ZTQlJOgC0dwqUUxcA0RtKV+XGs3\nj4Lz9mLuBWhJY49u4J+5zPEvvy6WIhpm2AqSeD4qFE89fC34xrgfkqUiIYJw\n19mVHyGC6VoMWgGgh6gyY9diZx8kGRZ2VWbrnQeKUVCJl/HtBmwUw5Dbmfja\nqPRDsuN5/Nb/6A2Ois+Yo8zxY7wC6Zk06J13wo6hc+q284iIksrP1t/NAJ/Q\ns5C2N0DhpiHW2TThVTM/xYLEEv+/rPeYASu6OpbDm2MdxwAOrfMGB4uVNFfX\nYQMLGjvhDGU5f9pU6UfARrRHyPCfIZ62ByGNkv7oQ9VbK/4qXmCxRSKKOt/3\nhgxLEizxx0p9EI0udt19Uh592nc8Z3Jht9VtPEZvj1Y5vswkoJVbzdcaZev1\njjsUVlsYwzS/OFOoaKz226G0jAAQHMHDZYyiJ8nlzAYe0UdYw1FPNDLwKWTN\nyXDgXpyMQ4wCjPQWdP+dOYc93Z4ASaY+REtfE/W7g0w044QUkKi01B6P1Fpr\nqvlKsM0h7xgW3zcNFufBg9qi4OaUTRhhMAtM/G3OGM4yOmySqfl298Vi+fsE\nQZVV\r\n=SX8m\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDh3Q5YthNOcLYQwri2JTbbJ2uM+JS2A/4Nr23niOXQGAIge9zPS5MS6EXsWKO4X2MPIW4ZmzV2oeh5qI7vH5z0tpA="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.15_1558848045486_0.9119281020473651"
      },
      "_hasShrinkwrap": false
    },
    "4.0.16": {
      "name": "cspell",
      "version": "4.0.16",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-lib": "^4.0.13",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "rxjs": "^6.5.2",
        "vscode-uri": "^1.0.6"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "85e6ca3af255ce75436bea6679a9099253ed3c82",
      "_id": "cspell@4.0.16",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-yg9arTO193o6+bG4+IzeMfn5/0b6+/SafirtLg79r9hxlh6ZP5Cc4f/F91TbnYBlwIYwlYw6onq5HFVFgsyFkw==",
        "shasum": "314736f7171ea855032a7df22b230fa6c36a839f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.16.tgz",
        "fileCount": 11,
        "unpackedSize": 51518,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7lFWCRA9TVsSAnZWagAAMXMP/3NXUr510y9LzuF0CisE\nRDYO/RzoFX88FNS88lfRTpS7YVDazQgnPQo6uo5xY3Qh1GFjDjF1PRlt2rih\n3VeWG50snQZrj0UHjTRUQfQWcOS+WxGpSluQXQGuecSkpobrU4WTKTxkYZ4z\nHx3yFfDNc98jNaRYB2GF0NxgNz2UzBn8iyOQRpyQzGve5+4ePxoIANTLwC9L\nTYMFCVYmzfryj6hF1W5VozXI4sjGSQG/3aWiJM36hLMzPpAcZIebd5Z2cYjB\nuwjS1hLH9pEN5YqIkZSD57P1H3S1HdF7Vv0NWZZO7VYhTdbh2XYbUzLP8yRU\nMb6AKhDvEB5EnEINqTWztaxrRMV1mdOaFnTgXP7J3MQR95mxQKYwEcwxfT2m\nxrTf/7dQUSHy0xPudrlzzQ0IgoFEAgV/F7z2mfHTy6d3zKzgwWTGv1VbMT2b\nKAfa2UJo7/hVb2VpUan96f9eEsbf72hAkbXZmPQdEel5VITUwLWHFqcjXziy\nq12rU2wewi/SypVveSklyqkoq6GuEbvUDEIcEnGQGHuQ0aLNQeD0T3VIS2Wf\nbUHTKCNXN7W69FTYTl+FNfJdPuVkjYLWVPTpswAmMPH+GM6KXliEYnoTUEmF\nQzfJoSLSzv6PcZneUEX480XqgAOkvWI2JrvoWa6EbCVO6a/I+I9GwvL8yU55\n3xH0\r\n=oBlK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCXgs68Ga3gK7vUYTFCCMohkWER1vowGm7nOHrn4nCADAIhAOzEvcK0mnPMj0Wu/C3cA9CXG4g+8gpxcvT9OqpmPGQ3"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.16_1559122261951_0.11788746718633925"
      },
      "_hasShrinkwrap": false
    },
    "4.0.17": {
      "name": "cspell",
      "version": "4.0.17",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.9",
        "cspell-lib": "^4.0.14",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "vscode-uri": "^1.0.6"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "281c90b6d747cf6e9a93d85448880dd9aa5565f5",
      "_id": "cspell@4.0.17",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Mnm8Q4NFFdfJ/P70KiW0rv9MzNSny0JO4gGpNF5VLQFSpozJRDRbzpJ1qQW5vGlOocJVp/03hup4lSzQHK4P4Q==",
        "shasum": "7083f4dec5e64b7c9c1e7dc2c552e254bc427ab8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.17.tgz",
        "fileCount": 11,
        "unpackedSize": 53879,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc8PruCRA9TVsSAnZWagAA6r4P/2GgQ56Xw5SOVYTgj20e\ny1Onlc3/85uwcM5LM4W3FYF2rX9+O+F9j7FV+Xo0Lc/FotVKZWgirJEb45UT\nZIZN5En/BaQShWZh3DkrWSg9w3bPIh60txSYk/R1gAP+Az25EsxGIcilk+oI\nAMtcURwyRYq67w8RQ8DVyAYcsvyO+09OfHr3K/63Li6qyWVKFgP4xI4ElMSO\nG3CDvI9bX/uKD907d/jand2Hio7ncDRVAfZaGd/v3LVxNFmUoE4mAB2e+36G\nff/suD96nSVVgLNIrkVN/q/GrW8Sl5BFa1xuG9O98b3pBp5wrd6n4gHlpBJ7\nrPnR7O5cZbPKeIh5wf3Z9dJVnVsl4esp1BtYDHl+lR3Ll7IA67wmye2euj/1\neIAG3m8KL2EtfqpnDfl0D/6On5/tWvDI/e3IhuUgS5ENZOXze9Fp9bdm57Qf\n1Sh59yH1uM/Fl0AYK+hYyBI/QqIw0loVcCP+j8lk2FOWhZIizXOnymdvmhBT\n4LucxQzb6ds4MgBm+mVo+brBhO94tR3qm+ImgyctZSr2P4zUbQMY2wA6U1Jx\n+TzsnHVMldhoy72BLuw3rhbUyvV/jC0d2ny/D+XkBtL3JupYkDOZA3qYKmkF\nXalkpnQwOBD/jOT4zS8nuoH/6Ivuzu9R8r2mxl+VkbD/ij9g6gcNdywOL5+y\ntkZ6\r\n=hnLy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEhulSCx748lNRdHAOTO9wFe/etnp3J/NXSS5IJpQsB5AiBPrNH7l9uM3+9myji6GgfkpqCa495bMcZiSnuFA5+wFQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.17_1559296750014_0.9797110632006059"
      },
      "_hasShrinkwrap": false
    },
    "4.0.18": {
      "name": "cspell",
      "version": "4.0.18",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.9",
        "cspell-lib": "^4.0.15",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "vscode-uri": "^1.0.6"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "e0d3262ccafd6d6fdac79f824f43d7e22901b878",
      "_id": "cspell@4.0.18",
      "_nodeVersion": "12.2.0",
      "_npmVersion": "lerna/3.14.1/node@v12.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-XT4XOatzoi5Ku6zOQ7KBq8XVPrFH/hk8GBYvUNAbJLaE94b2SFQ/HcvDntyib0Ighs8XkKl+C/bxe4quN7yOfQ==",
        "shasum": "e9259fe0007628a0ca837724b17d8fde451e1877",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.18.tgz",
        "fileCount": 11,
        "unpackedSize": 53879,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc9NOTCRA9TVsSAnZWagAAtW4P/3c+rL6MlSnvCuc1FumW\naV3XRtwoqjGSJTClPQfIVQ+hIpYzLgR+4UVQaF++rWLkbKvC0dVRIaiD79zo\nVDWK6LIQMaEHHzsXYo7IQfiTVe1OuLSUuYb/wm1tMEDA6amTZVI+U7mEptgN\ns2zu1RGOB8RgZg7HNVC45DfvB8pTFtGOFAMYnXKiFuOh8JYvC5sz3tWue2nT\nd7NGA26nSxHwL/VM1AF73t1RfLYPoakjt40W/osxoqTvQcbRdOYGvIQ3/QVH\nx5iWwZm9vCc4ZFRyfweEJs7qp47plld2AsjJOFcSRTM+59zQGyVI7rqzd6oI\njYc+8SVj1JugljxKUE4+20nVY+fA6mL6vjI1lu53mx2jkV5n80QZtIBDDriJ\nPOixSL6QH4nbVDRLTm+qOKUH0k09eyPCfgglrBoymOiqs6dpeyCa12MbFzLN\n+pyezGQVUNaT4l7jN+ffgE5j9CoRbN/MUdj4QrA984fw2LO0NxjB5vs8Xe7q\nCZHG9Ne2DVN9m49cZk2k8f8VZ3L7KxLfFJ/dT4A78xTATKrNTrCtBzcj5geT\nTvYpsRPgndwQLpttVvmTLph+gXcC59GFoy+eRBfoGUUwKU1r2+aiTK9z6FE8\n318A6r5l6zO/8rgyXpM1Q81Oa3Sb1eX0w/eTJDdSTCOeo3XM4qj09fd3oL7N\nCvNF\r\n=c+1x\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFVaLRehwavHo75Mu4j8KKNqVrwr5Ljv6s175nZie2/jAiAPJHgTYwl2LfBFwt72YC8+WqKY9WDBOls02sFGHUklaA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.18_1559548817948_0.5229934194568178"
      },
      "_hasShrinkwrap": false
    },
    "4.0.19": {
      "name": "cspell",
      "version": "4.0.19",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.9",
        "cspell-lib": "^4.0.16",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4",
        "vscode-uri": "^1.0.6"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "be75a8577a4a95097b4cc926bd2f835b46a908b4",
      "_id": "cspell@4.0.19",
      "_nodeVersion": "12.2.0",
      "_npmVersion": "lerna/3.14.1/node@v12.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-vaJBp5zWUEKvy6jCz+UWQkoJSgk1vL+5wnw62+cwKtwLfR+ApIr2xsPVlJJZTN0ttfJn4CzLWm07wvg8eCezdg==",
        "shasum": "443d3e71faafdaecb5a18085e3b3ea710248757e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.19.tgz",
        "fileCount": 11,
        "unpackedSize": 53879,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/lYlCRA9TVsSAnZWagAAQ70QAJFUEE9q7s2Lz0qarTHD\nVQp2GYcSdCn3ujAPVJXmVALgXZlhhUNDxMqlKjMIjI+yCIhMuYEAP38avD9H\nhVBZ5E/Bj4cTAEsd6obc/TdH13g67Wo5BOICU67kRxKRFKCJ0oN2wFxsMWZL\nubPPKEklfsiVaHeA+3ArQ/SnP95Eu8oD/YamPVCb74QJbfizcu17grXCq6AA\n0hIcbCpxE4TSmpYhg89pvyoBpRhY5kHr70Eno6cVgCgdY44IzoFPSIKo8ThU\npkodDbN6v/RFPbI6tsgvXOFOLqJPQ5ktwHX6hDPGETsz4GhAn2mJ6YmY+7Cr\n3vd15lJoQsQKGgs2DRP0YLkqbF7gPrGwRXo6EU3BsQs8CLRgqCEqk6eU0Icd\ndrE2UFYr4skG0cIKLQb0EwSUkfHW8dgGm3FP2DXNrfJ4U8IEv78qhLcdQnnT\nHxZOnrzkP3QwrFXOBptY1WzGZ6tMrQ8bTo2Y6T25CU4vXi+bsVlQ+PwVB3J8\nUaoVnWr5q/7dFNamxpSPyCpgewUeL+XJ8HX5Qai+7K7tXFZGrndkL9usRvt7\nN8f4vDr+5CaYhu6VOmToMGpF5tu7A/bgi9TS4AXPPQ3255hMW8ASkvjWw2Gc\nJj7yv5rfJwJbwDuXYYfpeoLvVQUAMguzEFlQT45P9JmHHWqYQRiU4A3ZB9WS\nmKnF\r\n=vQS2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBAGxxx/xtfDunSXAYnbPLPLFeIngDPBucWgKe3sbX1NAiBJK64dMw+DLEvenSsAJW+s9Sk75HFyF/T43aCfF/6hQw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.19_1560172068787_0.3996566938230084"
      },
      "_hasShrinkwrap": false
    },
    "4.0.20": {
      "name": "cspell",
      "version": "4.0.20",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.9",
        "cspell-lib": "^4.0.17",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "8a9bc6174ae63efdf02519094bf5e160d4f5f02e",
      "_id": "cspell@4.0.20",
      "_nodeVersion": "12.2.0",
      "_npmVersion": "lerna/3.14.1/node@v12.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0Abuzsb8JmK6LgofWePDP+r+Vulytz1dcjg1rUtj3yUDwOF6yiGRHn7gUZ80w4NElsVXSS4yCYyTk316vW15eA==",
        "shasum": "1a0c1ff428518980478ba98921994f3068ccc566",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.20.tgz",
        "fileCount": 11,
        "unpackedSize": 53851,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/mJwCRA9TVsSAnZWagAAV+wP/2qqQ++oD+ujWebRuTI0\nuIEPF0qdV+wniz9oBOC86RBCIfodBbBAXBs7k8ZCUkVBBQdKcGc22wh5/HiH\nIiMJPnI3qVyvMZLco9ipx2+GeniC9cfQl75lgfkcV13zIPAwVI2kbL8fR72d\n+za8zlbbwKRDg6hJF8ouxzKDjCNAi8xLh+X3+j72u9U5mNhW0ZNzqNBGA03q\nWrS6VB49jM9coD5ZT5FOIojdMnVjEIDDqFMiH8eX0Ilxs0SGngOEEGxevysg\nXnaI5sX67Bu5m6EAbd3Keaa/bj95H6CM4VLVyVvXV45MBodoeY/NlogFZR9m\nXV3vzlxzNDNb4Kea6ahF1Yk2zelVWsnuQrihd1DzAa9+hMhMSYYz/mCTul+A\nM0kaZL3SNQWOnCwQ/6K3F7S2pUm3eD9HVlpPTUGxJwZdhhzQJTAaMFVzlhNg\n1vr5zOG4ZpTO4GyCM5bN2sH0IxWh2Q5yOKq73Lo1lHHDy1EqtEzF//mydzEd\nzHtrahUsNmHcvPwC4lqR9K3fH4joXREpM+jA7zzYpKIEnY4H3XjOpSL+iLcO\nBlygyEDOiiLoFmcSjI+qAkwUI3XZnzAgmiaVFKZXjaNGCqggG7+l0BeU2lES\nZ2OfG/midYKhjbMGK3gsp+cjRUjZ1yOIEH+mBxRbWIfJoXwsvVbtYgXGFVqR\nAO2i\r\n=hhGq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD3BBhuZOgeqEH6RIsv2IcUnVFDUry69Ay5OHxoThE8TgIhAP8vhlkMxyGWnhq76G5p2TCsPSozZ4gLvhl+ew5zcHuf"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.20_1560175215850_0.6495013131093659"
      },
      "_hasShrinkwrap": false
    },
    "4.0.21": {
      "name": "cspell",
      "version": "4.0.21",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.10",
        "cspell-lib": "^4.0.18",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "446b571a7a34a3d4258fd5c7c866541c4cad89b1",
      "_id": "cspell@4.0.21",
      "_nodeVersion": "12.2.0",
      "_npmVersion": "lerna/3.14.1/node@v12.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-J5YB0iMKt3BP/kFzy3T8zquAUulsjiWo9ZW2HVVycSu3cn5HjlHPWtOT+bRI2MvoDP36mu7Ce3SHvX85qyZTxQ==",
        "shasum": "5b4fd1b922d74f576ad3150bc45a0c7a59f0f7ce",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.21.tgz",
        "fileCount": 11,
        "unpackedSize": 53852,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc/mg8CRA9TVsSAnZWagAA67sQAIx3t+oFxfRsoj087WE2\nxEbXd2bOrSbxcCGLVLqP9OIn2C/QeebOhHJMxuFQsyC5VpOXFOkmfWmjgGQE\n8O3W48QRvP3tkebxI1F/eiLYCV3VdNHSp5QEbk9tZMxXxYRR+oSpD7QkL+Kl\nJ3YVUqK8KSIgLpvazH1+mQDOKmphJF7OkPaUugqUemJ+xlDwv0udA18l+Qto\nhHUCwdV7sCQnacAtwbpribkRmuKvNfCrJv3xE1QkHJkNOepztUQ+VZrKzOUP\nv63pVZDOttiObC7xBymyb68ThmpJGrB32ZOqQLxZ3CBgMS90QQMzOKbSiOb1\nDGyEI984sSfE6jaC27gN+78T3vBMzl3qW+voPJ2mOXDPhhcQ5WxlPFxKQpor\nTTGd+QyRgI4LpGQlOOs4TblgN7RMnIJ3Yt/OuU4ctpuNKag47JQUItS2S2dF\nP+4J4bfYEUWjoPDHKPEm/zke5ULyI3jxSgeGbBK83pEv5NhL6ctYsAPgO1zA\nlVrYkK9l63BN/4joaDRA8FPqQxoE3TOyBGdBpPPCPwBaOLvqAadQ7f+Eo0qz\nmNDSRAxfcbCtZ6Z1vPQntXC+TYsE30lFVK7nEryIjo1QjNDuyMu9LKZjEHkU\nbWgivm3mXYkzYqUVlrjJaiUs/PBY/thC2aC+meyrjO6RTJCmJcpauGQRUQCM\n7kMs\r\n=pA6o\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHcBaW2lYS1kEjul1QdGvgmlqoXhrP6MPayKpzb1SpciAiAUvNoOFboXvfAjYqjt3g7nIg1pIE7MwAgK5NsR807dFA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.21_1560176699732_0.5043286464600849"
      },
      "_hasShrinkwrap": false
    },
    "4.0.23": {
      "name": "cspell",
      "version": "4.0.23",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "configstore": "^4.0.0",
        "cspell-glob": "^0.1.10",
        "cspell-lib": "^4.0.20",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "2ae0ae5b5fc1a94644d9dfbb6e9fd0a7dd703959",
      "_id": "cspell@4.0.23",
      "_nodeVersion": "12.2.0",
      "_npmVersion": "lerna/3.14.1/node@v12.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-RQEPn+e0hTO1zaX9ci9MHOhnZYLquKQYzbnhM3BYe/0QBwnCWP5NyUl/eMAjxxI46LePsyAxC1g4PiLdxtQwag==",
        "shasum": "0b33349c984cc85203f6702d52065738324b435b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.23.tgz",
        "fileCount": 11,
        "unpackedSize": 53852,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdAUO1CRA9TVsSAnZWagAAWL8P/j0i9DHTN+VWaD9IKlii\n4sTqJbC1irx0dUAsM31xpHa5cCQUuY4h1JoQ5OadkgbVzXmaCib3M5RdqyYW\nT4X/gYCIixJnccZTDJEiB2xljqoUYTn2w3R07OufpzFECh4BiRVHzXpJJRh3\nXQCqdheHS7ezSPA8BlPYvZLxA3SdjPA1xG94/I+NBXY2c081u4LiYR6j6VO4\nB7ZB+pYVWzO3yYQf6TqsXOoQ7xSTnb26+YzMq19nCgkz/TBl15uzeBSvwkdl\nQWk3Vw2r0nqJSKUmsEINC98Tkniz3/1aeZkbpE0N+JatWCQmT2HHUWTTNUqP\nPCrhy6IyEAExD/xeENpxSimXwJ2SB7RnSBM/lvFNgdzd5OQeHVArPr8abCFU\n/dRv34NsxfBUJ06KzKhadibyUKvdhucyAyt2kJ55WUpt5aqYHzfuq+8k45ZR\ndqfLr/afVPbKfHGlLXLLrqx9eOTvLuBjSQREvH9MUA6eUEV3Gd7L9lxn7ru1\nLHIGRghzA2058E+kAWsmBbwAdUOehxh+tCtk4FMCCLORF1l5IsI5WREivuEQ\nRy65tp79SrxIzqmH9JvOiGISMV+R7jlJeyhc1HWhn4cXI2QSYzL4n4+iQ6jQ\nWFanuDsOMoooyPFIB8dXvxac1S7b1XzLALd7xdtWVAaXsgRK81spL3Cnz+oG\nBMES\r\n=hjtE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCpyo42WkozCGNYm/K3jhrYM6Ojkb1tYrE8d1Dyl7lGOwIhAPSduTMklnKUeNvHO5tDzaRvsDwnO3J9Rp78bWmSR705"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.23_1560363956518_0.7388850934648505"
      },
      "_hasShrinkwrap": false
    },
    "4.0.24": {
      "name": "cspell",
      "version": "4.0.24",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.10",
        "cspell-lib": "^4.0.21",
        "fs-extra": "^7.0.1",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "b677cf75c934c98a60f03b25a1065ffccf6f3b0a",
      "_id": "cspell@4.0.24",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.14.1/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-EkTEVlslAPguqUsCAQVwrxthlJQmCa3M1LYX+IG5EYDzJq/2R1DgVFg6AQ72/GoqTvtjiWu/CWJZse8ROJdcUA==",
        "shasum": "eac6c28d46cfdf594e25f7df84bbf22c7458298d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.24.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJf49CRA9TVsSAnZWagAA9QYP/RZqxysRDRcV9Dj/ftKt\nGDu/hrz+duwkUeonZbiOmgZZ+SrAvGz/15A6cFI0PV1WzQpXMjTNIUpgw6u2\nqpP8PAmvnGwFe95w+8Lujbr858Ingjg3OfdrdzyGj1TvRWbVFJ5eNy7QmCVz\nzkfARpgD7rKH6mA6HUO9upOvVBaFk7P0MA/OYecGUm/sznApG2o3c0wpHjnf\nTwrWPnEiIOcPgqkIaz2X4g4YWjiv0Xk+4GE+2aL4g+JQG7kT3ZiZnVU/e6R/\nccU3OwNtECHSj/zSpepPBtUtXnYD+yab7cNyMfUdwE/jQQn1lfaYiEfcDwY2\n9P0KKxtCxmYXuYTwzLW6gdE/6MgydugQDDuoQYIwHqFegiEk6yTJ8+gnmXex\njLok3HHgOUqY1m+HOOI6Ytd3xw8zgJIpctgurG0xaQFpdoNH4GNUwL1SSb+Z\nksAEoo6bK7dOZ2h6mFMjhx4tkA50L7Emt8ahmjKp+fOuRXGlHFI/TWdIrej5\n7fAgmdkuDjJEWBo9rZOUXpD3de19NbBgAgY6SUGYoEkAPBOsAHwdOySMvuKO\n1VXt/DeT94fGh8Kn9NogbdA0vJDBpjytAyl28wl/I+FVp0u1o+L6tUftegam\nJyg1ZQ2LvQsMlISqieTDIv7cLgsee4sU6nzZo0fOLbi5Sfu72u42PO66vrnH\nANVb\r\n=Px2Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFh1qhiMokfjEMQ4Vd4NJDKUuOkULf5u/q2UB/qJJjagAiEAwY6DlCoaMuBpsYYx+3FpzYkgFpQZKosgYLmmuCyYj+Y="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.24_1562771004252_0.8258719826482619"
      },
      "_hasShrinkwrap": false
    },
    "4.0.25": {
      "name": "cspell",
      "version": "4.0.25",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.0.22",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "d0bd17d824aff49d1f0cc3d7fa384e99c7586715",
      "_id": "cspell@4.0.25",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.15.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-No1IaiVNrXX15MRyuf8Uz/VHUaaPBCmtTT3BCQy0VI8YATxTlDK4oJfHhnTFJUcu9bjMoApi3o73kmkEDc0lew==",
        "shasum": "73904850b5b3d10755893ca33f67402304526f5a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.25.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKxnDCRA9TVsSAnZWagAAN7sP/j9Hen/r7CQBp8sTQ8R9\nZmJCsowqFyFXWEjbx2lBsDG26FtHaomu31kiP2+br6hh7jIQKdhH92N6vInD\nWdjt4wncQDN+wenCXuUOueBBLIcnNjHREJSUIkMO3LsOZ3PeeihwdC+/JFIQ\nLhMXAZIjGjjWk/bXrduJ3QhLzRCdAjhih5RZgJS3MGKF63unq+W6tw3OvR1x\nMZ119ZTQhjRNzZ/xLVmbRDob/h3hsZ2NfvdhW8Zb8b7yNyKs28CRfqY3cCrO\nmaeg4H3DNvjXaFTapJmbJjAxjeRjSmd9lBSrrRpcLPVH7S+yTRUxMVG35C6h\nh5LEsbb/jOw6v41bgIY6bEM/jPfUivYWVKfC6dqWE1Tz0vvaMaTsAGOx+Jrv\nagWQDAhQDYkcl2J31lQbB2+0ejCxw2GWkEEhdaP9ZVMXEkz/5tvs5ThnhFOg\nUVIY5Y+4H/CF0RM5Zqnng+JIdx8ED0k2b7JvJCIfrPG+ZVCJrMNIH0gbYjwH\n59WWYw2iFAPS/Ch7laxdLIv/WXVxVx/Ty8T3B+LAmByW/G6jhS9bgmO8bleC\n52OHU0FHCxLJPsxoypntrdGTPlIUPbihp1N6smvi3Bb8GHN/jiaSSiqDjO2G\nBECB+FEBiqNF8eDeIWA1E3z6/f8CXUmcSFdL1zI9CzKZ5BuZnmkCE4kxJAbt\npinN\r\n=YTMx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCEGOz7sJ7NzlllNhnYBPIxCotigQ+6YCF8AMgVYidylwIhAI5ygoL+xKRDgrVn0re8V90JezMCAPzT4pV+qqXoSVDO"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.25_1563105730182_0.509474031895895"
      },
      "_hasShrinkwrap": false
    },
    "4.0.26": {
      "name": "cspell",
      "version": "4.0.26",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.0.23",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c12a821c13a242508060d06f54d277d127b96be3",
      "_id": "cspell@4.0.26",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.15.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-a/9frQ1tMnUQLVojzpqyfYg3adHaEZv2NQiJa7DHouweTtYYYzBllGVzLbTUaqFDvKY8/w9iImh/TRw7FnlVfg==",
        "shasum": "1668b0407b8574d090a3bee8dbc75266165f70ff",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.26.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKxr4CRA9TVsSAnZWagAAmCUP/jnG5v2yC6nruK+ocUZQ\nvUQ3H9UsK6D7d4mwHsxqtVgiAOZhWbZmp27OMgp+Qrw+UaIPVkotvYROeHJW\nysJD2iTtJMT8o/HiZjyV0ON8zvbUuMrr/4Uo9ghcHc2dNpOP+IwX0/Kxmo95\niL09jmsqmHBoKY1cFajbnv705Fq5UbbLLgV/Rg+zL+uHb8DaJ6gv8Y+3WYrH\nVNsdLvK8JyJZrrmIq1xes6O97jqG52fDVA+N/teC9BudjNVk9BZdrTW9t0Tt\ntE7ecYFoBinBlvGS6V9jcy8NwQZiRhMkePadFYdfee1fOxca2PGzp0lmk2fF\nDAI5Mc27rm3pGgIP8y6GFuS1LKWsLYrZrEEjHizTB8DF68mGW4EoZLdz9q6u\nZ5PFLs2VH2e9qkOpElBwkdISqdkDitxYWU0ofQAuvy1fCKJiBMSZQPxIHE+d\nuYi8dYTQ3gKLQlgq1WGKhTOSii+qohixngp5GadsFbb852lV0Tb1btL9XfOB\nB/oVrSXUb5SqOkmhvjztpuko40DOxGNAmzOQi/TP/X5SlxeNikhVbRjhLd6f\nYXali9L5tBYB9wy8Ys3FCPjjoG8hTPcaJmWwKhdH519ufY6VuvnBlanP0vZi\ngLSGgzHI+ErId1g7avcrVvrnGZAQqr0W2pBwinZFo90P1YqvjJh2XTVoLTKq\n2rBr\r\n=H5Ay\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICXKNTUK6PTvmn3SulrRyyKbIWIuYAtLusrvR9sYhc36AiA3jziUt+vrbxXio2LAkMk4e/fH8Hg05HiEH3lqpkVYWg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.26_1563106039805_0.07944285119132743"
      },
      "_hasShrinkwrap": false
    },
    "4.0.27": {
      "name": "cspell",
      "version": "4.0.27",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.0.24",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "cf7da021d8e3d9a4f12ae00c148ab327564e7289",
      "_id": "cspell@4.0.27",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.15.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-fdGDmdrnplaMbuC/2JlaHbMLXd1qy5MV2aXA4WycTCJLgM1KPZh7PQDh0kxYQj3x92sh0CLYd+KKoQNSLurVHw==",
        "shasum": "876e8707cdca1adc3b854e88a124ae336553ca98",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.27.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTpI1CRA9TVsSAnZWagAANBsP/RyLshrSmYcOU3l9LIvS\n7bTKAAJZngbr0TuFlelXXwMOP81adi2R3Lnd6DZRFxW92RNBzqzzlX0l78Q6\nM/aMEfI7bAl+rRXnTYISaHZ71YFPU4HLvwX27sqV8SH0hAXINzHXSQnvxpd8\nEQmhXspXwwdJ2osIj/oRreZ0tPl8hlpB2CAYY/7JFBJOlpPBGjlhFYVovW05\nw7jpvIVLL0fMNrXwMf7+tPWopniA54Y6gXzP5DeJRj6uTUzuSe2WWg7y/AvB\n6Jvir548gvK5zfoulOeyho4T+n41HL6ygIkrOPpAM0P9E025hOCTn7YS8SnH\nVmjAyK336xfQ4Fow8mOSUVykkizSW8SuKcxlIU2wSpBrpxP/85/TLc52c2BK\nJepp2U+hxugVUVixT+lm06xx7+OAB6Tvtu9CUFjU4MTo9GwExxIAOlSIYMdE\nCp08iHLXRNg4sRIADgrjpvPemC+IvqFHbdUrQV8z+QL8r+Rg7MLsTXogVuIi\npCI7QbhF+TPgA2qZMEb9sTAh2x/ISv7sf3pCRAhcxVIwhiBB2pZhnhIy68rG\nQfFcFehFntqzJsb4Nj/P/GOKaGlONpcE4xVy/kTninxKc+nuhzrbQosRFlk/\n79dP0qYD7Xu+nT12ixcm331eqfS3T3cIb5Hv1+KNvAhIDQoC55j21pE3K0us\n8Fie\r\n=J1KB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDhOz32p82NLPb7Rr19UlLSwJWjqmbNt36qOVIa5Of+WgIhAOa+l12k+Wjizbl/aAVfUSKr7NuDadHDD+nQ0yPF+Z2S"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.27_1565430324981_0.709940694042974"
      },
      "_hasShrinkwrap": false
    },
    "4.0.28": {
      "name": "cspell",
      "version": "4.0.28",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.0.25",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c2aa06cdc5c238503be555c1c38dce8e81ef2aac",
      "_id": "cspell@4.0.28",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.15.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-2YH8pOUnaGCjHHKKUC2K247nAKx2/ah/JsyMYgSe0U3R1Lokl6+HwTsU2+I01o8u5GbM5sLjxsQRPzceYQkzLg==",
        "shasum": "d58b0536eb430737d20e117392a35b37e3393209",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.28.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdU/PMCRA9TVsSAnZWagAA9U0P/ikkgHFVmghbnARtchlN\n3U6Pm4zYe4FA5nSuissYDCFXDp47Lgi1KLy3FdawIrNfQeoR3/iI2LbofWkJ\n9oO4h+pnrwhD/yYAXIEFPnO2yr6pfuGLZGfJMSuL6uqmY6+VS4r9EojuNsoE\nrRJJJaDMvtx++UOBdu/iStDB0LwciirowXTzEXlz2R1P+mbYQBYuEIGM5y2n\nAiy8UnV3gwUsy5vHvD1tCrYKi2d/A5RAZGmVmN3dgplOmmEIBL0iMc57MQoS\nUcK/bnSAFwrQ/pc3uhHZMINN3Cr8MXRmPhkEfZDAwhsRgJ3NTHnmH3238ltj\nMOPs2/BgCVGeXDI2czKmc/P+4ptsc+U0JtmXPIVT4Zm3hD+TWFoEHn8f80QC\nTPiVT5SETlqpgdrbgjIZ0NpnJ8J/3sy5vA0qGcyJy/J+InZ14HwPFo1bCy+8\n5bCb50JyQYhZdo+81jp6/qjydGNwC2RGvqRRzle7wTB97thz+dpfa3rqlNd8\nuWZXt8hJe76mZe9gq7RUOZrgX3TmcmzdfA5rTS+idL7ewWIbA+Yz0ub24dkA\ntiLfOL/5+6u/DtHrG5iGI7HycqyF61G8f8LaOD9H8SXzX3Y1kjjd8STp3pZL\nQH1/xVQ89QSH21cXYaDaxjULKgfLIpapVgvzr2a4MWDOvw00PqzSrCFNIXn2\n2Ke2\r\n=G6/q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCimXw85uTzHUd3Y6vedI1B07MRBDlVthKS0JBaWiXttgIgM7eEsrpcXI/Lenl1wxml0cHYuYhhrKNpbNBDVHtHHuM="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.28_1565782987864_0.03217373578117777"
      },
      "_hasShrinkwrap": false
    },
    "4.0.29": {
      "name": "cspell",
      "version": "4.0.29",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.0.26",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "b918b39bc90962f48043d44f7a565e8026f08118",
      "_id": "cspell@4.0.29",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.15.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-EMk2i1d8sETTQTR2eNogzSieoBoUxb/qhULUQ+xecnBFP+aECaU3+MZlyj+b/FV4cqz7VQ/riStt5v9V22NgDg==",
        "shasum": "fa3c0dfb4e3b494d2f119d1dc6f994a72fcfbbc9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.29.tgz",
        "fileCount": 11,
        "unpackedSize": 53823,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdc05ACRA9TVsSAnZWagAAXOgP/2lvqaYXq1XP9ky3lGf9\n2G1pBuR8BpIC6sUZSBbvVaGaNxP/nx1s6AzlF6VEYFhaJKR1XmaRNDwto6DC\ndSBLtkhHcZfLFqZDo90dYgDSua2Pwro6pI+1dcf6Vd4+GhbJzQCl0p57J3/y\nOvufxZJCS+0Z2v8RJKiraRdVSfc+HLYvQ3YbhH2uFJf/pZgTxrqTeq1jWxsM\n2dorpMPGSfaSzoJVDkld567dmNWmXu+4J8hUCOSccTeDzPbuyo+a3stLqAuM\nypyYKKR8w6gwpcZaUSxZe9M+dJhcB7C5fz2TfDP46dO+JWgySo4I1gYOkvP1\nV1eaDiwG10yPu7FjJmPPcT+N4MAurIT8M5lYvvZ0zq3zSLfvObw7dP14a0np\n/zMwLAyZ9OiaOHJ9mo7u1QxQO4RfHDegJ1KP8KhAPg8ZgUBEXHsQAfKMynl0\n4jhA7G5tbCX3qzvXpYb1G3qFAc2rdlxi7JqfNXFOfnnl2k1Q5dDcOEOnBBNo\nhROdoaa46NSm9pIw8qVP2gH6v+HEdsUEcYnKDFfFNzjJ6tiKpHkQeAzNoznx\nHMEEqsuf/44nvpMvsiQGW+R7T6lrt1t4Cl1LVeNBEkq7K8glTVyhPG2DREZN\nJLSgxWxUQgGI+u7zAJs9Uz2PvYFmnNSISp4Q2+YvXrwoKMLczOTAhdMcR4Nr\nBOkj\r\n=IrN3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDRuE2daIvZWz/gTb1DLVuB2+xlnletr/k234gaFly25wIga0Qdu5643gxFI1sE1t9prqU/QEzSIaPPBFTuHCF6mPE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.29_1567837759579_0.7854127152916284"
      },
      "_hasShrinkwrap": false
    },
    "4.0.30": {
      "name": "cspell",
      "version": "4.0.30",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.11",
        "cspell-lib": "^4.1.0",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.4",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "ebda8f0a8263727a73dcb3dfdf75b9f7b85e344e",
      "_id": "cspell@4.0.30",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.16.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-dazX00rCgRSL8TAphqFSw7D9p3QdBGh09J8/bFH+hLpz01Yry/XzXjDiyKPlAXFkeFH5Sikgq0Cy/t3cHaLBeQ==",
        "shasum": "4817d29b5bdf5076d937b7c1dc053fcb9b2adafc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.30.tgz",
        "fileCount": 11,
        "unpackedSize": 53867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdc1vUCRA9TVsSAnZWagAApGMP/2UhPGroc/Pmw+GgRLBU\niwXvZkH+LDJXSanZo/KM+6gnPvSHhCq1prr9KOzknyqhXwSZnoysf7xSb6dZ\nhkf7t8G2mHtKbF8fKcJJFOV6DKqTzxDU4rSvZnOY8euD6fzxjiNLVV5ejIjw\n+eXHjchy5xDK0QFR+b6UgefsjJTtcrbAnFkc9S80ry5v3k73aAoZgT+/KaYO\naZmSuh+psOtw+CATatzFVtj4199Gkc0Ug/o21fANEluedpoddiVvJFk4R3z+\nkB9BgfM8O60RdYzzRHsqC3XPQqk9DWBJLZjM8ZkECehxnzwII7HQSd2gWZHy\nlqUKTxxnA2W+uaxLzkYzHzlOg185uH5iHvQvOo6ur4qtSpW5jMjVHzD/O8i4\nRPCmH8stM5kmtDwNBCxFiZybr6VwOswqT+YSZeKVg0nfttx/+AEMMD5dUOUO\nXTOo4hXKe+AXJOzr8AF3+USBMmth/D/M809N1OPJZpmrWX8IyxmmSCBI80Uv\np4AFtxqCOYFM4T3kndA+Sr7XcDj+EhwsRPfObbQkVhnlDJd3Ffkkx0nDqsSb\n3i4wYpQNWV5fgCFElBT2raJEQRFYUmB2C+v1fxSnsaoMQApT1xc/Rgi5ha5R\nHKXh6E7L2iAAyZA80h6vdBjWxl6/NG35vfOOBY4JhdkWilrfOOmud8d8JjX3\nEPfj\r\n=kfVX\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMHWu+Cnr/KEuowD5LllLcQzOfFcGtRXjljlONo0EW5AIhAIqBt4evxHevZ6XE+lHBptUqtLHH+sDfLgiA5cg3Gb0m"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.30_1567841235521_0.525414230264829"
      },
      "_hasShrinkwrap": false
    },
    "4.0.31": {
      "name": "cspell",
      "version": "4.0.31",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.1",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.5",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c528fdc4f86777aefbc23a18c3ac7a51c0c9d2bd",
      "_id": "cspell@4.0.31",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.18.3/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-C2x8/eZvEXtd9aO/MTiTS40FVd5uqKpChTRXpvnT6B9aiRjCzWvE6YeIh1QhwR3BQrPZP8JGFahgoDQpNitR5w==",
        "shasum": "b5e82948e208744e35c911d2759b897c4b39d1ec",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.31.tgz",
        "fileCount": 11,
        "unpackedSize": 53867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdtAR1CRA9TVsSAnZWagAAT4QP/jyMTx/oQ0ZtPc8zOLN8\nfRNbWCXlOG4ycVk4HV1bxH8wLwfsiwa5yUyleRdWmCNS1NWhRyhz41WEANZf\n/AEZp0VOb0iJJhnopKUza1h+khzUw+k/WrcJJrVyjaFosreq/GhyGkH7XBlY\nuos7ztNuN+9b9SXvLThu7FusGYWJTFlGXAa2MYTpb5E3fABi0mPuFA679zCK\nxQqk/OFCuR9hUs0Yj0YAJObcf8FwIuRHOTVkd1XWzrdnvgQZPksRKh4dMNc7\nTZof2OWrPVTiCs24eN3gV7q7F0mKqXwmmDcXY/t5TcH86P/3cUatPsVQfBem\nsrvtDlykF6y1J/rq8vjad34EYAg2TWDQpWq5jLYustDNNnPmR9CD2eESqX4p\njxNfgBA94GgY/qeiSaN36ql4sgyd2nnQvJIJm90E8kBcyQIAb+XihMPHpCEZ\n7f6Z3XHtXsnaaJSm3O0yEb7uoAcipRKPUpkRXqw2wXpHxbIZ+XpVmBwXDVkY\n45+tDqvbfQdu3BWJdoldb1YyF8T3Kw6qOReOuwCFBZcHVt1jGRK9hKlgxTLe\nhQWqj7+N63CH6Oi5Oh5klpimJqN1icYU1rCib5SIorMVk4AaJmac2kLTQqhh\nvv6sdIoFsKAMk8PtpPBKHJKsh3s+I9U5XrLR2BhNRPBzsVNrKGsFZUGvGsIx\nxmbZ\r\n=UtQE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEHCuTS8aFFNBd9PaxRlKiPw8QOYX9SutJ8bV27w/DbRAiEAuPAUMInHpbtrdyI2hCDyV6qo0TsJWWQfhbx6e0kcqZ8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.31_1572078708834_0.6532530285322977"
      },
      "_hasShrinkwrap": false
    },
    "4.0.32": {
      "name": "cspell",
      "version": "4.0.32",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.2",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.5",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "1fa87431f9dfaa9bbc75c2d8a1c8e708355786a0",
      "_id": "cspell@4.0.32",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.18.3/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-sFSuWh8PCALqi23id0DxLRBpECXhfUqA92lQ4rc1GCfvioNSV91avhhzZvtDkxmVYqaZo8jvZjuM9KhRMLNVkg==",
        "shasum": "541bb4a6e59661c99cdac0a24ef28e7b5c8bba57",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.32.tgz",
        "fileCount": 11,
        "unpackedSize": 53867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdvaGYCRA9TVsSAnZWagAAbbMP/246oliCaOl40RDXhF4y\nsZSEU2+5SErBUty72ZX3JLQ6rMvjwv04OY5RZICIA9OidS+c2npRro4RknXC\n57v3fzVRj+X+VtmGpDgo8i+jcLpDIJQPWgSrrgpP+/vHQezqGNDObvu7prYK\nuW3HcLZ56ZKmi0zGW/YTopBPWZYUfgAD22OsoCE/d5V8f+MOIGEb6bUxDR3F\niW31SY33FAeeH/LdfJLb8gNJGTDo+ou1R+U/814j/ce6Bsk/CxuALM2CY+6B\nVY0fgE48cvJIygcyv3W2hHa/XeAIbvNrImvks3UCBLmlbo595DqjjK8klSHO\n9bV4Hqe4BAfFqQxeEwPvHwf2gXw3I0/ArwXyRHXKcCy7u8YRVI1gI2sC04KA\n4qmAR7Nki5fKxdcWjpiR6FiI8p6w9EdIkWkbfxuZVuxiv4pvoDHbURgfRUzP\nOri64gBqiDExZIA27C+nQ1FnWO9uXFQxeNdI5JQtSeXQpUaMSiwjM73Qhrpa\nHrGn8PGSkryVMzAbqZhhg6n9ns6+b9ydzqP053oN4y2EHi+UD6gNSKhez3ql\n3+G9afnCpIueVCsdGWLdkXu/YVOiuPPBgQmmwOZz8oPWkqHsbp2lFNjvtz9S\nrUTShjPqSSv7DN1kTHKgCPud2rMRRgWyLSLt6hql2iQ/gnwaGcUBiT761qCD\nVk3e\r\n=LWMu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFPPfyBgKqdXYJ3nqh/8p6VYnmECYIKmHMVjFj/9Nx+KAiEAoyBvK4xBfk2hwUhlYTYzJVLok7Xppgw+rC2omWswvI8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.32_1572708759752_0.2701255477012874"
      },
      "_hasShrinkwrap": false
    },
    "4.0.33": {
      "name": "cspell",
      "version": "4.0.33",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.3",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.5",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "2b9271c40a31440d82671bf9cc30f4517efb3e4d",
      "_id": "cspell@4.0.33",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.18.3/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jFtXC+08Awb24qlnNId6YSvend7gOJPR4PmbeGySuBxQTrRtds8aoyGDpYgSChLp083UNYq+Ox9WCiAB7CWkcQ==",
        "shasum": "c2ff4771b98adf3d1de294ce5f35e664eba1c8d1",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.33.tgz",
        "fileCount": 11,
        "unpackedSize": 53867,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdwnSJCRA9TVsSAnZWagAAAckP/1D/RAmgq79IBGgc5tOO\nvlbESv119krW8TaSCk7JfeMeik+CoYw/Y3acjiBmdM7bZL6s8adC/FhpE3TW\nFtA8D20EB7/+k9QMGu3XMWaH+rcrkGPJhtAn+lNFrTL6vbeRMLF0z3fBzsYG\n+jGkvy1BmDaq1/q/6gwx9zJL83ZsgXR8mdpdLmt2MhQmA/+cs+MUp1oV2uui\nwGjCdmQGqhPWE8qVGM3+os4sPNW4cR4bUz/lXhMFWabf7SYvnUKEnvDnikos\n/km2rkhp6BJBp/KKPp1DpTTF0jdRcMzmmXtIFEi/b27fjXjr9OlCH1fV9Z0g\nFG2Sl2YzVgEMBuSzSrbNKA5vVxr/Aa3WhRV2R+sOgTw6KWN0e8h7Hhmj4tex\nAiLtJm7Nv8ZG7AXVSxRtb09KXnQt7HoMlw6FPusaHagY+0i2obo304WENmrj\nKDIJuGCR+krIW3OexBdMwK+cAqkdywgWR6vjyDfL0h34BmsnlHO0Np0po8F1\nNqpTbERsCi3dxf/IDBH0TbOIkUAAswxnMxkJFvnXIDVo5Xxxar6fl2VVqxEk\nGBlz/wZcWxT8+KOBYj7JeHs+hjVtPiFnjMkjCzTCm/LMursGd592xV+hUYfQ\nJu3qMHt0IhF7GJRYQiDwEKjXErMTpM1SpvLpamuOGVNSw0cZFxuXuxnh/i8g\n565d\r\n=XCLc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCUiyKQUVOTxUqUdmVj5XCoym7L+kKpy0ImKsSDLbBZnwIhAL2Ra7pNI6VbdJj8oqqLMYyfvCX3W/k40D6ZSGM1ciLe"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.33_1573024905413_0.13765623553222683"
      },
      "_hasShrinkwrap": false
    },
    "4.0.34": {
      "name": "cspell",
      "version": "4.0.34",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.4",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "1348f4d82dbfa469dfe25fdb082a4edbe8c3fdd7",
      "_id": "cspell@4.0.34",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.18.4/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jNPmFEsr/ngmOpCSJGSHVi8p5hBHfS2YC4wzqEHD0fuKrTazKTpe/jg6ef8pG+HVsTsVve+93umqknp4faVUMg==",
        "shasum": "ccfe6e46682d6922971b067f27dd12a99892a6c5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.34.tgz",
        "fileCount": 11,
        "unpackedSize": 53924,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0DlTCRA9TVsSAnZWagAAypQP/2YFv2DRRVTMMlo5CEIQ\nRE4O6dmr2r1KDd8u4TsyrLZID9U4tNfIrHaZEahqQ1T/4+vZctZQ4B1t017R\nyAIp9s9vG0NXPE2g8xZzrquCyG4yBN1cS2KlBqLkfW6kkyUBWwFHeDz0icMW\no/PHNPgJ/JmfTbigpNMbFiK3qhV3aRA/k/SoBbD6gGIT6wCib2natKNgzA9S\nosnVUwFNI+JSu1v29miT6JjegYKrL2VFmCGxxXeYtVMaTiLk9F53T1oMs9TC\nNjjtOFrMh3Jyz2vIbD3MkS6AvcHgR2SS+lY5nK3rRkctS9v4loBFZyugb+ZU\nTI7jKzVctUqp5Xgj8YLWijoHOxsHiIB8oeojeNdhtww9rDRviAq0qChvIbws\nAv5tpywiig6MHfZwGEkfs47J8oAii8RgLC+0kD9ZwUIbPVDLuKOHefFIYVkU\nHJ6g8XCK1jiVtkZCfPDsXa1XYyOh5lJ/Nv09xxyV0LE8sL/KyG9O8dSXgYiJ\nE8kaQJNhfqlecV1cgGHGOneAAxjf1qVlWwfEeebsnNaBsLMGnkprQNLkNTkF\ncaiAhsYm3T4zBErmzzdRIZo7VWzxrYVgfTaW3s6XP6WSZKPtoTglrgMsVmYy\nPWpZV9PBIViGoF40ySwSplOxf7Cfks56EvEySCkBoaQs2mc53mGOlvjefF5s\nz2Pu\r\n=TXwc\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAGDsj4s6tLs0MiKJAGNGZQxgNG1KdBLJGWqRfaHE3uyAiEA0+gsyXeYiq1X6fakeT5F4dIIKgz7x9j7XHFJou/ErKU="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.34_1573927251399_0.3487978744842588"
      },
      "_hasShrinkwrap": false
    },
    "4.0.35": {
      "name": "cspell",
      "version": "4.0.35",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.5",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "a83680425a8327e46d0d77e6fcbdebdaff95b05f",
      "_id": "cspell@4.0.35",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-dwPQXuScMmsNUCu4rt6iGHzJpC22MwQXqulChnhSx5J47ZOivEUW5yCQDbKhCVvIySNcMmcKNo1e3nZRBhBL+g==",
        "shasum": "5a3d5cb2ec6b3455eb118e16db8254281f582dff",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.35.tgz",
        "fileCount": 11,
        "unpackedSize": 53924,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2PhxCRA9TVsSAnZWagAASBkP/iyZF9NwyOpRRiSzo3SM\nB+Gkvdh2Tm21HO8sH4R2RCrazNPBcNexHPFDgJDL83swtDAQ+tpaGjOWxbK8\nphCNYIpK4pNxd2o6c7oDt9nBdK1N3odjzIYV4W7WRQUrKN2khtPBEQZm8A5q\nuvjDNxv263weB7kmO0T0/a8OfFpeJchx1+zeVenMWTVwfbpOKO91K+A6Kt2Q\nXX4JIdH46YIwViFTJyU5cnAkOauK/UclNzHQr2GH45lm0VHJVA/y45CQazkn\nTrF77xLU1wn+6qsaKjKM9f+DHZ5DcXYeCkwuWc0gg8X1ELpW4Bpk63z+k0o2\nfImw59zzic/WibBzEsdCQycAQNbH15BK5LqEQ0qE1s3XJElSMR0GpLE7r1XI\n3DDI5WS/cBJyCpfWL9vXGl9xpSz3mMquc+pDNklqg/RaySEfJAtXNxJGGIR4\nuFsruU58SMLEia3pKXu5AlkYfwy3ArGk/EW3vpFimGPoBk7M7QrPSfP1iNPJ\nA9sPNhqTWZAh8uc5Rq74Jhe0nEPYoFNVG01fs8+Ek9uD2K2q4nLdPvFSjpd+\nlDDVqEZ/tj2SwgOvPPkQQ9CZmstLc83MDUYg33EMxQcDz+5PNV9SC8OcORiH\nirsPum4TlvW8ybBcTRrfDZyJmibmwdKTD2gmdjAu0w0dU6CrOppMV+ImAuFH\nlE1l\r\n=pY1q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC0FgEObAdBVCB8CZIV0WWbJpdaVD/W/m+5zDvZNT+efQIhAJ/Hb7Ewz+dC48l8AdBENeyiCcJjrml1JxwrZUit+odi"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.35_1574500464597_0.08274950111561585"
      },
      "_hasShrinkwrap": false
    },
    "4.0.36": {
      "name": "cspell",
      "version": "4.0.36",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.6",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "9d52c7f6a94a2eda973234583b46a538a3e80cd7",
      "_id": "cspell@4.0.36",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-wOY9Pij/VvHTfeYV82BOiaGzG6LLZDZfsc6FLT2QmctFigHEXN2NOgdm4wzXFiNdSfucCsLjdek4yBZbgP+xSA==",
        "shasum": "8656458ae39536709d3d241e832d9e1d2b7b7ba3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.36.tgz",
        "fileCount": 11,
        "unpackedSize": 53964,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7SLRCRA9TVsSAnZWagAAbGcP+QFA2oi+fyE0Tk884n+M\nucol782PZsVaPjX2iRJqBfYzveguE73F3hk5EHyYJN/l8DC9LzEnqVM+DSkW\nu3PJLjMtW+4U8Wukz4SkIIFrnikvPu0Ae0ALabUFpFwGEnnECsemm387Wkwz\nEm/yvIMxbeAkRuoLX+8LwZ6qNjzqjM2L1CDL7Qx4dDr14t4lQrVQiQdxTYdA\nbUBkcLqZciis/S3N12TB8kxK5ElO3szVFQxLNRDysYpMWHKEY/IpXpjvt21V\nuBw15Ux2v7PeJGWyNcTs1GXJy8sJ/R1sprpggXUvhF3LPxkvY7BZG+TJ1BNC\n4mhO8Fn565lOJ+J6BPBfPn1woKr3+TaD4ygNth/b3E61eAPG0wNXrdt/UUm0\nqQ8kBKCbKULzSy28itGfWJ+bK6FO/PBNUaDdDd1bTYa7ZghPkhC9HZaGPkeD\nV1Mi6spitB84BmfQLUzZyYECJGE64JuBFhU+6nyuzq9rUI1vYCPsCJXpRHUy\no8w//gfijlpUnIodPsnooRgVfZ3REUYHBw96gNAFSULRxtJsNkGp1gym8Seo\nW8tTnWgVeF0XYSrbvtdlxqkfMPtB14/5SFbjgKtCpiI0llszlsHm5fSSxPNp\n2dZsG2P76t/B1E2tiu1irRvBtaBGrOSSCgePL//vUtAuBd5yKx3nJ5nlKHz0\nWxHu\r\n=fNUG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDlK4xBwYrplqggYm9lm1BB8hTdMUbG3UIFVlpztZXXHgIgb22IgkgsnLt/NOqJwXGtQZ1VgsebNSsWPurGmFWzSc8="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.36_1575822033354_0.2111194577733162"
      },
      "_hasShrinkwrap": false
    },
    "4.0.37": {
      "name": "cspell",
      "version": "4.0.37",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.7",
        "fs-extra": "^8.1.0",
        "gensequence": "^2.1.2",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "331057e642545d13c2ce019636b99a535f8f966c",
      "_id": "cspell@4.0.37",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-h5cQjE1Mov7TIhgLnpAB5Ld1xnKiqextBe6AX+6yuqTaR5aoZEsrrMQSXw880YDRvllnbbT41omTEuKJjvQ0NQ==",
        "shasum": "6d38f24f09aad2a44e68cec9bed1e7f32a736797",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.37.tgz",
        "fileCount": 11,
        "unpackedSize": 53964,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd7XKXCRA9TVsSAnZWagAALRsP/jMA2LZhAMGIMSjyOqLP\nX9ZEObHp/bkBlFUuYG7UCXweDFKJHHm9b6CKobUo+3wZWB2rs4TwvQqIgvpP\nbnCRQ6iz+JRkZmI6WL/UxlPxfdcveGXz3DjtL4SzGNJzGM6sFBpobfJ/IYKo\nbd07A6fwEyYWuArQ0WOwVY/7Rxc1GKGN6TYpXje9ErCUHfxporjA6kIyD9A4\nDM+20icV7pfCv1/AvNnFbuPQdxmHHYQEU+8a7FTZFVTm2bDF/cc9jFuqK7m1\nx6ej0WRslZxFOgw0tOz5ZA3XU8VQmHzQ8p8hKWeKmJwe8lafamql5gcUL2GS\ngwE6QvUPuOLgQkYtRdigYK5ZcCW9gp/qBdppsZm6fD/WIU5q6PURLBR3N5kY\nuEdOAu+hPTCZgBMcuPkXAa5aMpg3ehMwZMrABprdh3NB6tpnB6q0vJZkMlLg\npV8jzsI2a8gMz+0XbAzccxJGskvj+qn1+bGfGlG+eJxZZnj0tQQWOaamh+sz\n0ExgTBxm0sS75/Cc8VPLDYtLPg2YOyg+d2+tUCBHGZ1fMBoXB8dZBgot9kSW\npRWjeALWlPqgQxTkCRpsrVY5iW0t/A5CS1WtNaANtEoK/QsoOKjIae8MnBwS\ntNRrYT+nSMIj2Yufl5DgmHeyOrDVLAFcStdL+gniLmOgU/8ECcMMsZNrLW8Z\nAZdP\r\n=1k1r\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCyhth/q8dpkkzkiTUpKwWhVoSceglFtHhUFP/6I3KuvwIgerO6ojjN4sWgKJkx4itIEJZ/xNP1EV3gMVbrQ2UpzqY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.37_1575842454573_0.1820248360391048"
      },
      "_hasShrinkwrap": false
    },
    "4.0.38": {
      "name": "cspell",
      "version": "4.0.38",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.8",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "f0658565489fa4a2fd38e2f31820ce9fbbe9bfba",
      "_id": "cspell@4.0.38",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-bvabWLjCl3vwVjMwIrn8vSNgr/8HQTzsmZSBCxbeVJfN7DOYp4pyo4Njt7DTgZwvlKfYOUD9N6bDSsVRnrGqPQ==",
        "shasum": "4d55a1373f50e002b9422d1a71c1951a08dc079c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.38.tgz",
        "fileCount": 11,
        "unpackedSize": 53964,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/grsCRA9TVsSAnZWagAAjVYP/3JxImJb9r2biIlOvOW/\nhdoC84Z4Er/vq/zZ8qiRNu9C79lQE+MUJ0Wf+irTH69S2hKsmxeWbImhEU/A\n7g47wGA4DzueI6A6rFTXjrnqQRkYM8EIlHYk6+qJyFEh+1uYX9rTSFOMU+hH\nouwPFAtR33M1afU5xmdYIVe/PfCUzqNv/bdMTxoO9rNB5Hc61xvX2i8Rkvho\nmGtFktciyfyxZBQHDY3RVp1cxUheNYrIvti57y0Ydwl3KrlFPWwOXE4fM0/M\n184tjDYxsPm5bBZLDXCFIV8e4HV/W3s8+jzOyBcZmbW+pGv7M4jFATxdATtU\ndJbL5aCoqtzAimgAwEN9NamIOUjjwfUvJKZOi+vBg3rhO/8t6ql6zr5hPQyk\nWSzNBggidPHl9Ntnbvi1fA18dB0gpXp6hlCqLbfN6Il05Ity63mYWyno0CAg\nWeDWjzUt0djau9oz+RaQjQWQ/HThTvgoAQnawBPv9IKvtoxp4y9/GzMomkER\nQFxdVltaHbwesj9zoxCO/KCc9rSOA+io0B9NkI0D6e817q+Nt7BGdA1T5jsW\ngE93r0P4AlO/GQHO7jzm+8sdpQ1yz2d5lleVEAepIfwaNWFFvoyB4VHIUg1C\n3Xdl9yH5eI6cYDGxpNtrQ0CSzXsZ11UQAsczj9sRZuh59y36cAeBN/ttP+rS\nF32F\r\n=4KHe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDnALf1iv7yWKV0hb/pF7csMmw1Wfn2SfkopvWr/qmk5QIhAN1aMfmtEhWyuqetlVpN3LYGqmWHDiKG9ubuk2uGY9o2"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.38_1576930028117_0.3233508292517815"
      },
      "_hasShrinkwrap": false
    },
    "4.0.40": {
      "name": "cspell",
      "version": "4.0.40",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.12",
        "cspell-lib": "^4.1.10",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "92b46011da8467d15c7969aab4572a8639e3f685",
      "_id": "cspell@4.0.40",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iToOIAFbTe4RHZGSl1RTnzVXzQU1k3sNPbfdZbZTga2sPG7B0qjvqcwU+/R/5rwN3Bv8dX0fmEoo9xqy6pwTiA==",
        "shasum": "a61a88494449678c452064bceb0e0a8b5063d1bb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.40.tgz",
        "fileCount": 11,
        "unpackedSize": 53965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/oJ4CRA9TVsSAnZWagAA0NsP/jMwSChYhJ89kz/fhJip\nB/72uQ7nCJMvyCHJhxKovPRz/IdqoKADxBzswKGrUd4pg8owQsumRq/kBXu0\nlEVLa/HRZteZtGzhzWVZglTea9fzw6iBtqA4yoFVK+TwmI7mZkyVdldYGt2F\nMp97mqJy7tbwKIIQiLAAjEDk/f5TXJ4UGbCMEObPp9ddFJrBS6Ec4jLkkwq3\n3zGVphC77tcr8x5sw3pm2mb9gkLpq6NWBuAopGNLl02IXXn36t2KZpMYdnFK\nOQ6ZGfJzUqpCdTGe7X1plVNZPbHylEZxiqC+tAAXvkO2qIa7D8O+MKqzoI7h\nBK5nM34MhiLjm0eiy62iwtPBxC4fGqUm9m9YN/+n+0bjnuGGv3KMiUh9ep2s\nrdiuUEQaD+upWiZaHz9y44DHBxhmrUWwaUb0T6hUJamfgCcCX3xE57/H02e9\nZM/BBr20ZpKDg4weuZpebXxQkBRKXEiIuSFmQWXHq7TxrjPBuDAPkxVBwys7\nyc0864SFaCuEB265RYyIBLPOHiIC4YWFuUwD+NS4qxjwuy2hing7YXjoxx4l\n/B9iTNyCoSXyTFmRxwI09jvlpAnkl+CD3e6tD9zhJJm567wlRgfw6lCPbkX3\nAtUlGvfnWiGrJk4dR+5ufEZxoaFn1VwXLHVlNKeqlvBn3LCWLJFsqhDgqMcM\nK0Qq\r\n=fRsH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAcW34lYp9pLHupwz9zy+cDGeZ9ki6IYkDD9OJpkeluKAiEA0Dd2sOva3pbCinwzkoZs0jiNp+DIlEYYd67nlXLNyyI="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.40_1576960631696_0.9078906125915689"
      },
      "_hasShrinkwrap": false
    },
    "4.0.41": {
      "name": "cspell",
      "version": "4.0.41",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.13",
        "cspell-lib": "^4.1.11",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "9682c2d23fabc9e823cbd5d610fe590feac78ac2",
      "_id": "cspell@4.0.41",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-yekSJwAXwA2nzkvY3O0H1UxOLkERRF6TYMqWQZTTkg1pXLXSIfeVe6UYsRP3209lVTCTmncQuCb2cN4NJ0BDTg==",
        "shasum": "fbe98fd951e5c5d5937b662f28da85512e08017a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.41.tgz",
        "fileCount": 11,
        "unpackedSize": 53965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/p6uCRA9TVsSAnZWagAAlD8P/38XA4porr/o1wvGc0QI\nsxOk0f+7gE6C8a3n7QHnY+HyNT/xfjk2ODlRPIpAd0ne/z4sojXrx7UbqB6M\nlN0M0icBhPKpRWqsWn/jWRg1wmmKfPT60EKoYzZUA8voGsb8ANbodRN2KtXb\njleQVfS07f4Hz4VlriUhP+c/DyQ/R03Ef5v538Xm/qqpVmgvxTKVWu84hiae\nRkuVfB57WIHDvFNN4ibs7VAIMYGlNB0DuMk9f1r/mNIas1RAxrX/aSOpMOYg\nsIjd1vl6zSnVAvSsCmvE/MH8e9QYaEb5RiojDkLz6zz9LSIveGDfVMgIhxeM\nNln+Z+gLdgzIbdzsoZGv00VYaSVBMA+EAqV6mJ11dkDBq2Yytg4RGH5Dnt5d\nE4pFPKGNxX/41/GrWHNmwKAVnpmIpnMkwbPHHx56Sf6/kf18tiq68mnaydEp\n066HJG5EO3nhLJwSPJAI2fR85E/oNBRogUxtCM7C3PCVDKedP30rF3aJQDhL\nxDwnW12PeEhrEhhp2Mi6PEA2luZSJRDZEwXMeAd9eNu6TTb+9XugRGvtz8CW\nnGcxYOhWey/1iVCD/KumjiyosNalqZBcJ4ccNj4kDuM9xjhutjw1fjivb3ra\nPgwIrDzS+mer2Bc8bV2hbbeUOaRozRKOGUdGqJ9hSrDGwIfy/UMgcD7ZYtfE\nzD3g\r\n=aJWH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9bgHpDncuUvF3tv7QxoH87ivQ6D1cnsZy4vEdKLQpmQIgagozPXBK77fuG/RvFjhUGrAIhjfAjfRTz4P1fU0Dv+I="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.41_1576967853924_0.19275703149408852"
      },
      "_hasShrinkwrap": false
    },
    "4.0.42": {
      "name": "cspell",
      "version": "4.0.42",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.13",
        "cspell-lib": "^4.1.12",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "d3d97247b35d1c755ae6dc95cc72e4b8381b68f6",
      "_id": "cspell@4.0.42",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-N7HgDg8hZYe1SKp+X6UTh1xiEqKwp5elus/+N/BzXA/yhn77M5eUKp/+Dk3WKHd3jSZS0q8Y6YUcsTrwcONR6g==",
        "shasum": "4b5132ed7854892f5fa4d2b5e8010e442aa1e36d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.42.tgz",
        "fileCount": 11,
        "unpackedSize": 53965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/+zJCRA9TVsSAnZWagAAqwwP/iLbz4Eisb8IQIeCe/m6\nam4Zh499DMBONSUFvVwv1IWn7bXpKWyLqojb6/k9Z3yi0WFJ7yU3431ryxTL\n6GSgfXKe+v5XbLnv9CVB/XPI6HVN2oYB9Z+klZdIvSmD3dCMhSZZmSxPJ+EI\nVWzdVpC5wTkHH/LtFjrSLlxO/+Odnw4hJbsMi+OivKUaNKQFzjktjLvdmAC9\nB8x64uCp0DptOhzMmUNXfgtgJN30UzIUoiV6okds3hsBi0mDJwY13z0kQBlT\n0Vw3sRfLtPHCnD/QXvTlR6R8Fh6hxLaj67mxBRPueS9ILXCFEtBEeFlGV9n7\ncpyKHA9xihSoGWr9xoRoBbmVqMOcAi+CC53TyNaNw93wmTsTW2u0cB6j7zzw\nXOKWdTBN3xeRKj/GX2N8Hhl2gm4Ec1hn6SLS8/46l/ZUck3A0edYWRglNxA8\nhfi6ZHKbRlbwzJlsguMs1JSRwIkzklwPfDRXhATPthmSguiU9SdkKIexeiCq\n5IBbdqRmTRdQYtSh8cBA+CE2+LcMazJXS1HnHZW3p9fdaA/whX1zdn+fA5P8\nLruAbIhdBoItKVTeAVujt1akGHDJUz/0kMrKyOibNpn2uepE6DyJLl8jlWLF\nijhP783/FxiJsV/jI1f7qjWEzEdjZBnX2nbLLGotfrfYbangxNRgJd4E9SfM\nv5k/\r\n=F+7s\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDyidEkhckZCXiLV9cY9OcJVBUv42lcoabzEUtMCq9+eAIhALhIuahgRQW7wNyo1dvvQw+ds+DgsuYr1EM4PbUi1n+X"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.42_1577053384705_0.959712235666871"
      },
      "_hasShrinkwrap": false
    },
    "4.0.43": {
      "name": "cspell",
      "version": "4.0.43",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "../../node_modules/.bin/jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.13",
        "cspell-lib": "^4.1.13",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "73f2223b8b222203c2e996d865564ef85fb67075",
      "_id": "cspell@4.0.43",
      "_nodeVersion": "12.14.0",
      "_npmVersion": "lerna/3.19.0/node@v12.14.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-msnehTsodBA7XX/lnEdQPC2jqhvdsb7Mqd/Ps2OSNmN0nS1fHYAC9wx2hD5E6wRCfsCmxxcaW0s1VXi0v26ujQ==",
        "shasum": "2467936f880b2700382f5dd59ed210cc7e4d0ba8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.43.tgz",
        "fileCount": 11,
        "unpackedSize": 53965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeAI1TCRA9TVsSAnZWagAANKUP/1Jtdk5NN3BTHDi2Ezix\n9K500VWJok+gPCxYAJ6iIA4XFnrmdQ6Rql899UmP5m8vo8/Hg+2Wbkj33+xd\n4d74S+fFh77swCdpBhO1vQH+6wF6w/AJ5U5j6vhECZ0f1YTcbLq2IVHhxyZh\nBtNQborafaKsROdKo4hWRHziu6sU2E+DbXoELTP9xT34Au6Dt2H7fwk9nUD1\nh+bXAfs9yxjU/An1JNpx9BJaHHN/iwvZ92nJIZeqpJ5SNw4xSeYDoJJWb1Aq\n9oX3Qyc9KwOTtsmhudwxgKh95fmuAZnwYo/mmQoivNbCeEq1AlVaVPKSMHES\nUKaki5zci4KgPMSJPFoxZIHA6mQrCPmbkOJNdELvWVi5MU3qUIrvv35iFOn7\n6DNynix8+Ws9siicFHI1BH130l1zR+hvAMlu6FAA9JmQV7xraC9VvL+3ckeY\n7fj0a6Gh/nVql3KttwEoVDs7h9bQCgj+/hL4fzpHGRHuEKgAOQXwmN4mD9uQ\n07tmNparHMLrp3rBctA68IcVXbW2fMqFyT/aSGuuFQirxFZfTOCxLkIAQmUV\n1cuHcybmiqR9SQzyKJkHdEpZ6T76mt3z+WTEX8QeVwaHdzyfaMXhysU8OioO\nx7j7yuwscoogtgyyaANdpZoSBi7a5GrMDWxJkBSvfkWfagSrfyz8xJHdBZja\nok0S\r\n=sfEF\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC6jc8fye78HMWqFVfjjomjDTwS7tV69po/4gWP+2nJIAiACZn/2iLxWMNaKD/avuvtul7GZ63LDw9GgbwXabOqMAA=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.43_1577094483183_0.3410173470194455"
      },
      "_hasShrinkwrap": false
    },
    "4.0.44": {
      "name": "cspell",
      "version": "4.0.44",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.14",
        "cspell-lib": "^4.1.14",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "cbe103ba540d0ec7af38876372722802f80f4098",
      "_id": "cspell@4.0.44",
      "_nodeVersion": "12.14.0",
      "_npmVersion": "lerna/3.19.0/node@v12.14.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xrjsRbAPyx0s4QOdZ7gDiEPlqKQV+ua47FOvFiZqtq16H082P2O/M9vnDdwiEK4j6ypJQT+GkmR5QVdXXp+1qw==",
        "shasum": "53a10f7a2cd9aa89fb53c284c4a90260957b433b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.44.tgz",
        "fileCount": 11,
        "unpackedSize": 53941,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeDGqUCRA9TVsSAnZWagAAc7wP/iE/zh12sa/WSWEr00s9\nEj/Da/FfmwTLgZWRP+DbA2HpnRBhkgeGSIZ06GpmYJGsIARI2HXhhuSdSZXT\nPoRPwYWhmNOI7KOKsM2q/E4vYNtQI+vSBXFltznOI3rQcfgQ1TUdsNOGqBit\nhPoLdM35iBK6wWBIlEHEmr8nVmSQdU8UrveVhu9YmZGeVBi2YV39jlhSOEB3\nN8ZDaBiIlHV8NuBdAhd1QPos3AAuL0l1sWA1YrQuTWKUxd4hafExLdPb/OIc\nClxY7Hufg6sWH3RuZQvfqd4AqAL44J3q6HXy9AA+xmeEuT0mjvzGQ4zFc2+Y\nZ7LD/1ZWV74DblnsMBsWMF+PtUFs0TvMLLTmxoNR8U8yGnPFHytZr2kU+RWl\ntJ//Kz+E/1lmcqPbyZT5TfY7OlzD8RviIwDlebu7JnGU+Ye4FPivmjU0NpJ6\nlDb1EgPAR5SZEzO+EP+3Bg7ezO+1C54zaXVmTK81WVOsZoR1B5DO/RvPhcxX\nkxbojDgmQuxbbkjzJ5APypXJocwoudw9SsqcPH5eo3DtOX1pulpRvL/zq5za\nLXWsZAynDcXf5ww6rKzrGI6GTt0U/EIYvcds+e0Lqtirhil+elzJh1vlLsTa\nf0KhCGHxhCMVt+LeojmITGtQ0n3pY/0zOvVoU49xRbUhkDGNYbxnaFrL6aY7\niKGg\r\n=SsR6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFfEI0BY9N40QM9zkZApwri1hn7LCqRpklMUjfkVB1aGAiEAyOGjgPSAxxrn0uZBBFQHjsu3TMb9Xo1+9uW22NpeUAE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.44_1577872019824_0.03236665522164239"
      },
      "_hasShrinkwrap": false
    },
    "4.0.46": {
      "name": "cspell",
      "version": "4.0.46",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.14",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "670c3f99fbbf021d1c2156f733c5ee01c9cb2f95",
      "_id": "cspell@4.0.46",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "lerna/3.19.0/node@v12.14.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-1OzY2LGMQmuoe4odLhabDAxQoPMMwYPCGFKSiJXPJIg+w50iSBpUy2fWu4ExLeMjIUt6jOZ9hTQsq6WRMyXq3g==",
        "shasum": "e138d4c930e2191479eec06401b8c6fca4592a8f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.46.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLEDUCRA9TVsSAnZWagAAV1cP/jh7pDwtnmboFD8O75AA\n8rE9MKo1lNBof4ypn3nYOLEIk931vyfaY4kHHICXd1bPhB5jPOl6PjIvXNyN\nqLsTYtg+tKMvuws/MkjvhIBhksxkhHZgvdp1FVNYkenDNZDv4jA0eI9oElVL\nZSVL0zFqAnWf55/mcYP2Dhg+OaGRsLX8v7kvMbdJcTOL3IT+GxSzae4DFb/M\nnpn5OP9tG7hlRbI1zJFvl5JirwiqfSN82pFt919Xefp0UcyMXQC2u02K9m7i\nqdp6Fx9M5A5415EFLD2+3HrLOIpQsS+0ImKhSaU0mj5W2epX77CI45d4n8g0\nimmIt6KaAFnjWbJAime949HBa5pqN5himzKGPBsost+98Qj73XEzlTyqC0yd\nZe6cafEVEOwJp5gxVdJHvri1eHBfXs8Ob/Vo/8F5O73FfXHF2WfCj74nFb+m\n3Ct9iFbjOsk0SEwyhOB04gzcgM2dYXu4sNR8Dx7EbCWiJBaGyymq4WjeAhSD\nAfzv7r/qfMgAcLXPvdlP8nFFKBa/OB3k0G3MGsH6GXgVEZ1dK1FyeamV/eTn\nny5RD/XiBo6MM8yquXtbPW6N7RJsrXgWZZhSDp0lo1PJCQkNtkZaYr98OaQy\nIvuy7KGGCPjz7RIK6y2DuvfaOaXiYPIZWdMyYJhd/uxQjQohdIJIsumhYVK5\nOyCy\r\n=YUCq\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDJ9COPdLYlgwGqu9SrgE6sZJbr3mo6lD3/1syDUSEEAAiBQ1F1bn0Ll4lwX/AAtiFez9U/bDOwOpH+CIFfttpOLcw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.46_1579958484065_0.4870310942950067"
      },
      "_hasShrinkwrap": false
    },
    "4.0.47": {
      "name": "cspell",
      "version": "4.0.47",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.15",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "c257d2dc26e14f2bc44deb936d263d0818a6ab02",
      "_id": "cspell@4.0.47",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-r8xnNWt2jr51iMxjJ7fef7pOgvq2HR5gMqmFagwtk9ayeD9Q0wy0nDAy4o+DY7vX4ORBN2oLKlT1Zen/XsMd7g==",
        "shasum": "e6efd1a653561ec9b49269e14905252a3914e17f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.47.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeR55QCRA9TVsSAnZWagAAkiYP/1jc1ZzcygFGAW+DMPty\nCHsEIgAvuDekpTP1+LKPaVHRljD2SuS4rTlqsUrXtgbLVnYV7RB8NHNwRpVQ\nvTTvZqxhFy6HErFYKW2FL1OcZIA1lFZbXoao2nYAjb4Rqpg1ZOoU0mnQFbOm\njK4a5g1RJv1sAR8xldtfYdfMkqgQKrzPeCJ+Rs3xo3pgrAr5o0cZ61zjlvYD\n0PTYIIHpht9VXKUZxakOkvg+yyri4ZxPwJxTu1Nf22BI5QJ8m0Imj+X95Nya\ntCIGM5qSibYV1UCekQ5Uqox5ZR4Rbrb8XOKp6+y+44JD10/ZnfM+9MOP4vnP\nSk+sfzfTSzWojg2hxio7DmxABvB5R3o6UW7txXXcOnLGIMk9NpRXXRWARble\noXw6iMKpMdKZ/nkJyHOsCQ8o0pj9UN4aU6Hp5t2S+s9FEfUn/XkrV+YUsw53\nexbFtOlxlp/679fuVpNVT3oxWxO2mFNeLhmC3E0SuKTL4nhPJEN9S0Vk4tY3\nNiLp2081IR0VNMiap6ERtBSJvIpxsQMNy0BH9gOwiMByoGHVWmZAFGOlhyp+\nNCg2bvOCnMbw15p5ofk+IOWLbkhT5m92gdHjBkm6a6Gf1OT1A2yM+DM7FHSJ\nq2H+wAJoLyheUo5xlLVOPG9349NCI2yNyT89xJfNa801qqmo7wYuIQh/eFCf\nspG7\r\n=K6q8\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDN+ZOdqkGB5IRXleBPaNmqfmsl+XgYkHiGiJ2eQ43yKwIhAID+KKpqXX4LdAcDFNEI9w6bZ8cWYYkWWiZHjSWmlSCC"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.47_1581751887649_0.45013866942783687"
      },
      "_hasShrinkwrap": false
    },
    "4.0.48": {
      "name": "cspell",
      "version": "4.0.48",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.16",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "1f2eb25f600746128e9bee2237e1b213649b7ec0",
      "_id": "cspell@4.0.48",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xefhBWM/1HzV00+ZPpV/ioz597HJ4jmRKyZl5QCU4LSZrkEZ15HDm+OQqoEZEfe8o/PZ+wjkNTk6CCJ/n1oOSA==",
        "shasum": "7a79f793f40312f687dac5da1a5d106b7733940e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.48.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTP4UCRA9TVsSAnZWagAA4pwP/2L2e47Uod3y3HrinpLw\nXBU0oW7bFAcVMWOtHwtfkg3J/9mjObEzQPlTUi0SoROJJJ+Io/bfSEVmJQ7h\ntJujJKnUsblZYrVhokOyKQQ9m4wQdG1SvYiLEzjc/lf+j4U7m0suUSgNXDYb\n7/o4ZPDgyBfwx/yBw7g+uNWfTWr7SrsRwOrdRj+BAJTXfvlF1vCrGbBIsm3S\nG/yiCHB8p+Lb/M7AqLzxo6ne5dw7b1TM+Ab2sb6Yra+jPdu8bjogux90Kmqy\nZ2HdNq/hDekoxJNvEKs3yzkAjSAR5k7lS78WSj9Ja37Fqvwn34jCiYtnpFtO\nBeT5lXSv12lBW7IoD/wORYwk6fMEPKrOromncIxIOLab8gUfGbPxT0zYpdZu\nXQk5OZ97UwutMsME+bXjakTeS1wrxhffRMBaIsWJXAKpmImTfMuULjHD8K1h\nucu8WROsJ4Sk+wQT8Dcb7krD186I8gqm2a8dhlysEz67zODDMz1PWIHPD8iB\ncwuJdoyGrsTjYrMqvXQ3qo9eIXlhm5kV6V0ml3g45gqVq+7hoTqhagjjukyI\nUwwS9a1V/74UjJkGeK0lQ7HfcyoV22nIFxsxyAvMkiupVyx6E0je305NZAbn\nkeKDn5yq0YuNEmb2TlwmjWH2cMPhgN1Ho85GpWsMt5ueSyZAnZNH6qtAoguR\nABIt\r\n=7+bZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA9iGCvTfEmvL9lJ1uur2m6gQnO1iNwEdj/A8mH4lrznAiA3Vrz3IKx/D2Udl+lCKlxQqT1kqNeEZqFCHgqcSE79xg=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.48_1582104083870_0.15446818583112054"
      },
      "_hasShrinkwrap": false
    },
    "4.0.49": {
      "name": "cspell",
      "version": "4.0.49",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.17",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "26a821d361eb33d962cca4b3e716740c43a1311b",
      "_id": "cspell@4.0.49",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-HgvNkakRrV30xx6oJnrW81gAKyvJgXxbKd5+IIlQFRsKF2ik9CoeE2XlBF3dfFVcBBiL2uGmK6KjbsU6nMjC2Q==",
        "shasum": "d49c681b685b4ceba9c13bc0572597cc0dab79f4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.49.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTpCLCRA9TVsSAnZWagAA8JEP/RhaySbp2u0G66itoieR\nJV9E1EK5S+CcR1zgQH/0xWhjS2xU3Ej5NEapZZ/a/va1rTFm1YxgYjftVlG0\ntsDiKXfR9hZuzbdXuVVRrgV/3mW4y2iX8EXjqa7bo0kEmCr7xIe3gRbzBtIs\nE6nKPaZoCijGCcYFgzcQKUju2cYJs0FUO94BEVgNGGykHBRIm4fHh9OnekEF\nEORILxg7qUfEhxF/ZlQZYCP3MjOyG32zDumMuz+EXEu6M56l8swCVxYvpXwe\n2OhEIfdDQVz/As/Q7+7dvleAxrkgm8EJvnSxKAz5WmQZPgnIStrBLmjGHG2c\nLCBKb5TsIIPo51NJ7hvkgLfP6nMcoDYDrDTptc/9GtzjOWhqJYn5ojg/TPul\nucAtKtOTZbynycGJ1GCe7lQEoKSL3K5F5wrL+qLnktw+tNKK3v6qJncSGQjr\nVYmdEYYG/SgfUFXfwx7LDvi2o+LbE4zIWVwkgEQxzjXWy5MiZctWyG6hSa/7\njZLGECb7D3rHqqZMk/OGIxEsXGcnuGUJ36wT4VsSQzq98NEX6P9TVRxOiJnY\n2aOaXiyM7x/XBq23i4sF/8kkp9dfx5x1C7lZMUqlKLQcNTfNTYIOE6b6tEcp\nxTGlDA5yQu18BKk4UIpiyONeBgaCca5dDnJfN6bIcDBJFoSz923NDTp12uPP\nU370\r\n=sKvA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCc1BKpBluiNtrrEtPGsE50X6Uz1WlPfGcmyFZHTLkCIQIgYbKCWUoHQi2L7hE/hd/cxe5femoWWBw7D9BbHz6Igtw="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.49_1582207114091_0.6914163638571824"
      },
      "_hasShrinkwrap": false
    },
    "4.0.50": {
      "name": "cspell",
      "version": "4.0.50",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.18",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "a29519336fdd75c3fd7fd5cd861a71b4020b0a4d",
      "_id": "cspell@4.0.50",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-zZd0dTpq11f8CEja3R2myqC0ks3gVpe6aApFj0xtLpXP+iegaNOJXH2/vswJwgsLns2/0/u9V2dVeHvolLCe0g==",
        "shasum": "255501dbb8602cc2a66cc49fb0915180142f0266",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.50.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeTqTiCRA9TVsSAnZWagAA1hMP/RkZ3D7u0o2zCADF/V5T\ntrSZYPvuO1z1sGbDXFqL1MuRy5xHQU8BpivBKCHTwZXLJoQY0iHzstQg28tM\nSYs/WC8mAZIQb5UCJznKlnAMsS1g6LzmRdOXddH1rsXVqBmD1r5wuel46iz9\nBRr0lnB9ESJNugadVQ4adu/07MySppxYqr0Yy/EhNS4ynePpLgaEOpDRmOY8\nLxh8KkM46nnCY97jpwPg7pTV0eGHI0Zge5HeSI2mNZ3GjCUsVgL1ers+hHgB\nh+vTxDpoUTcBQjj54LjlBs/wxBcoBygvAgy7NKSOjQPQu0+3zFk5In4PqZSV\nHvpp508rqZ1tsXVguYfaQJ1ZAu7HqIrIHAr2X+LYgfH94O1s6I8Rpaes8xi2\nRFNMWxca996CjXYwoLraJeTdk4oiR6WWxp8WUDzMbnolsCwCcfZM/ny+jn9M\ndTQr0B2f8Qa/F0Fq7cKwt2crhhP0Re1BmKohcGNci+vNOd2UtnTLTiYVyC1W\n+5TvJD2/SwQGPiTCl2aXJI0tD3gRrkGaZpk9mpEXhAy3+BLI15EV2nt7BcwH\npQs2nRPJKr4pcizipPSLPgMqkdNcQzyc6NFCCEVK+GEuLL3fYbAPZoOUWuW+\niRFmnphAgMoHgv5OYsLy4nlT0L0rSR1ksIOFrRX+9joDyVTwJkyvirldQxn7\n1Dyz\r\n=krxe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNXNxp8JLwnGhnUOJT+hB+IqDf0x3iunuGDu4iZH67kQIgL+62ZVmgQmid1LyI9cNDSau/KTd5AM4bpaylXMSEhzQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.50_1582212321685_0.27494955439507773"
      },
      "_hasShrinkwrap": false
    },
    "4.0.51": {
      "name": "cspell",
      "version": "4.0.51",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.19",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "92378dcecdcdf6251af9fca5ddaea781eaa95bf1",
      "_id": "cspell@4.0.51",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-NggI9P8CnWdA3u0vxsatvpe0ygyPoopJzFJ4Pu0KNfC8uTIUP7hO75w59DZFjCbfAagnoulyTWXEvSESUKE9hw==",
        "shasum": "7fa8703dd9b912910323233674e9dacb5a693da9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.51.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUi+BCRA9TVsSAnZWagAAS4IP/2aUrOnqpeWr62K2Z5Dv\nR92sLpqJBIwI+6ohgoTYZvGlffHUXEhaWp8lfrwIaXeZDc43OEaC0EVM7/Jn\nMOkcAdQdsm36LBYCRTo2ezVeQp0JC1f//Ggueq+E5hIn/9aVv17GC54o3Ntj\nZAYIPhe7HQmIMq4tfqumlFPp3TQHgFYIUfe0IaELQHPP1Wyk291y5XU41jxS\ny6R9OG8cB7GxtaBzJ3gHIxuCxuBAaUeyJTrelx1iFsRccVv+/yhwB+ALwOJh\nKDE1UH75sYjpeJkoNjZ54wZLVs1t9Ox4jX9QKIWTbbm3qVvJr7Jw+iheTSNN\nm+ffrwxt7g4OX64lEVJIYL6S7xTxZmuogn6JMZrDN1knfgSOsVn6RDpnALKF\ngp/MCRxcTeAZzR1N5kcJQ1TWGjat9KC0Q3GI8XPfCP17RBZBAZTFRz9NsyTw\nlb8maBHL+LfJv6+MTyapmUJRElAUjJukc0Xv5J1hG8ZLzLF9Z4kdQm8S1Vz0\nlqB2XhLjaVw/1JgUh/Uuh/XlahxB9Ar18VEEYeyHdsKihWv+Q/MksV9ZizHT\nc3aaQ1alnQb6kD0t9E0ep7tkucATobOySfAN+/iUOAaL/BJ723ZWd3sv+8bl\nKNm/S6SvBr19Dl4BkJT6CW/tPJR6ddqnHqWAbIZZFA+G5EK4Jw6ym4CSpqBw\nSXVX\r\n=L97D\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHdCrpg4+0TJyF2LDdwW29nI9KvSyw1Y5vmHjkGtfyS+AiAeoGiL7dI27sltsb38jn+UXPjJNics8cSALfFxOQOOjw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.51_1582444416977_0.7868818704456846"
      },
      "_hasShrinkwrap": false
    },
    "4.0.52": {
      "name": "cspell",
      "version": "4.0.52",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.20",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "28f6aae48fb90377fc44924fcb1ee839e9f91853",
      "_id": "cspell@4.0.52",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-oBxKuTJ3Wuphmcvx+WQcJyfe9cpDb4o/Yo0+stfg5vYY9o9vQhtdlZbOTDPLrLhPXIJGx6jOv5b0x746Ntv0eQ==",
        "shasum": "fb5505775a8755e3a07ec9469d79bf92d6cabeeb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.52.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUkrrCRA9TVsSAnZWagAARRYQAIslM0ZuEnDlgy34x/ku\nQq+IgOFRPnLdmkEyYxa6YH2xkarHv2uDYsw2IxETvM5STsBWfnxnnI1RDNZo\nFE8WE+YKjryiOn2tfJhQc8QMs0AYSC6jDNL603GVuqDudEVWOOVF02u1+sKp\nGQByCT8BiLnZVSPdfTRYxKXsP9r52alfiXbpsFzeieKZXs09Wim8g+twN0en\nUad09zJOqQX4tb5uap+++zlOq0m7Vtc8y1RcZkN0BqoV0muhXPsm9Crcwpnz\nVPOrw6sgmcScq8ZThs4NhoDp0utOUHDjYeX9F03EG3mAKqgkkpTst17v9GlV\nmuj/rgnEG+p8v63pij+Gqftzb8fwNtGJTEdF8re9RBl1Y53bpBrV6S/nb7N5\n9dicCyBLC1eiFC3HrZ5PMR2nEJm0RUzQF+tsOgp/cpamRmICoxpjUMCSVNeT\ncgoCjznYWieEY80K/EZJsZgzcAoKMywdkTsy73ztZul4tjT5iCf9PvnhHV9A\ngNQZO45WrRSYvJ9C2G6OILRYM5EW/BFgBhRm9TE3SjXqzX2XNjZW6IMldDai\nLNPhLViOtgQCE4nLdAGmUARS63TkeNwT+ATx8/7thQQpl6cLwvKNhq8fstqo\noXUHhJzZBQwasxNMFBn4chHr0ZzgnPNf6FlaPKR7C7Wt4YfYIAqBpvixFVQ/\nMyzL\r\n=qx4F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICDhU7eBN7biiKae8HTMYBC/3oEAiIhhkiUYPseRAiU5AiBm0fvTMZRX487dU7fML2A5Zr/Gic8yJnEd2bbGPeJEpw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.52_1582451434722_0.9443094551973972"
      },
      "_hasShrinkwrap": false
    },
    "4.0.53": {
      "name": "cspell",
      "version": "4.0.53",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.21",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "8af1a917929aefc26bf90d265c3919575cf41cb4",
      "_id": "cspell@4.0.53",
      "_nodeVersion": "10.15.1",
      "_npmVersion": "lerna/3.19.0/node@v10.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-SCtSe6zZ7KhzidM+eFYVxtZZBijX5INg4lGFz15Usw7RPWlZKDGzkfYK6GXNmY6kLyDh0bILXiZPZsIAfPuT9Q==",
        "shasum": "e68a28471e9e00d47ab80edec1f21af92bb37d9a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.53.tgz",
        "fileCount": 11,
        "unpackedSize": 58022,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeUmQGCRA9TVsSAnZWagAAYG4P/0lHDYBgKSgIy1RQHhRK\nkaRJ14vbkWDrSFf2T8yS2AQi5XJZXqGktY5gYDwzQkFGyk9qgcUFJX1yWTGe\nKvnWJ79DMaWvNl2jte1dysRWf+8dYx0P2RQoin+DQrEho2dAV0IIjmXUrGxh\nk1t7Cy+/fMfC7j68mkdP28LjEJJlw05mM2zQOuUfIO6neAX3Qn1iAaGSpPa5\nR7oVSEG4WqwfYX2nrZP/aiud9SDna3MLRO8kR21VSs4rONc6AGdiYCarH+DU\nRHLxPP7y9hwnkEHon3Mx1hDvnJDNA82oCQSwJAyfsFAhC3Fqhstm/ylbVZ8p\njSrqdL3WhwJ7aw6kyLVj83X/HfvnSxWheo98JAn2s/OWUpnsdfSodLSP6SmW\nujWFSVIM9aqa7OAAmuFfBvF1L31PwonucnG5IifCaHnj6DjzoO9Du3MWYaX8\n5wRIgK+qMZq6hyCui+CM958dMtsyZSyFLreGXraou7Ak1op6lfGszY0s75A8\n4ORCibstTb/ayBPxQcsLhnvJgYfTJ5VFnuBPMiJYISc9sh1LYiL2lhdNuPPQ\nuwRbPPvBXgWEIxp3mtNKwexXLUw8uydG7vKxs+RGu3VeVuDKTQsKKQLhxCLi\nKiYNG8RTLn/ywtjGAvV5eXiI0EMH159drd/qm1+mDggvJV3ES08zwCbiZk19\n9N4C\r\n=bnEt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBjDHtyXMNxl35XlFPvFNqOYvhmtx1zhv/3QIhO5HXNKAiAc9PqusAPI/V2x/QAqtEh1UOAtszFBh4Cz1eyM4koo3Q=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.53_1582457861888_0.6256477073349513"
      },
      "_hasShrinkwrap": false
    },
    "4.0.54": {
      "name": "cspell",
      "version": "4.0.54",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.21",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "064c1bab1cb4008a17eeb4eac034d35c752f3527",
      "_id": "cspell@4.0.54",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "lerna/3.19.0/node@v12.14.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-NbrafZDmWOenR9p5h8TMbDQxg3vcN9n5Bs5sGC+Dr6Fh/Ch2ybcSgnUQqx2VAbFoafJfL0J1ANMJldXL10sy/A==",
        "shasum": "e7f565c8bc154a175f4fe9ccee194150afff80ef",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.54.tgz",
        "fileCount": 11,
        "unpackedSize": 57443,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeWT3HCRA9TVsSAnZWagAA7NkQAJSEq5mYnoUq8APUcuqe\nY2sGRrZIXXf0VUeeNxGEzdx3TKTGNVSVBTKKKGemXC205VEfjFfBNh+iwQsz\nQy7JjmO4aTFpsdWLi7mi+IFxB26gG3pLiYE/q7bxtj4Z5edaSx0/f/D8miXT\no+beFMfw9cXH9/pDEQ1gGrWp7T1G0uPMZYKe6FVrC0Tc3jzK/tIyc9VKA+Lg\nX/vNDJqY+fTDyongpAelUyExiDhWAF8btYWASu3ME7E5J02ypeF2xB436ksQ\nCGpyaRUolJc62NCg0V5jYWfz2kM00H2gJh9l9zJuw3z5AkSICnctnL+hJsvL\nGHOhY/FVW2VECWXljh4qMi5DPVlr6MHP3RaNgnzp5+Hi8/fe2nTMTQIhzh4D\nSDlYjlH51e4LCxZwdRLLWiTrxBmKoocfbcqsf1HEreSD/dVE/4xGxRrtKHbW\nUah3fmOFZboTR4gu3gg73TOnOhdYHb0tyzsZqPVpWIUEZMTRUcK/lYCzJGhA\nYavK0X3kxuUkjF6K6F7Prp3YG8S3ztJ+4WQlgFW7x0mcSMcFkH6pvxqvNiHl\nSfz8PXha1Kb3jkNOdhy5XUbJOQBzRXcuh/2BPkYj79hTPt8T0/TM4DUGA2wd\nOMbXk4pRzxrvHByLoCY6RVJJWtqCw2RjHsZ9qJm8MT/Nk8tkTkg0+fE9DqpE\nr/Dv\r\n=ZXOx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDlHhvRKkPGRkS7WWIhBTWoGZzhqEDO5204+MoDiwlEOgIgBdqSbThGWAxEvPZ8apoyZ6qUW7FHbCkLB3VhTCoqXDk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.54_1582906822874_0.1728640875295704"
      },
      "_hasShrinkwrap": false
    },
    "4.0.55": {
      "name": "cspell",
      "version": "4.0.55",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.21",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "e0e1fb713ffe2533635a23b4aececcdce223a4a4",
      "_id": "cspell@4.0.55",
      "_nodeVersion": "12.14.1",
      "_npmVersion": "lerna/3.19.0/node@v12.14.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-LmBk2VNrBSXFPOpmhJalqYGdDF1x68H4wI3c7RDMRLfG/zOaFoZUEuJUYOC07tFXDosczXMu38Qt9cnEVZmrAA==",
        "shasum": "4295b88c9cb7b1bf7290027212913203be5f3f9d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.55.tgz",
        "fileCount": 13,
        "unpackedSize": 57717,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeWUy5CRA9TVsSAnZWagAAGeoP/0g/KdvPagWGlVEh/9l+\nBr/jLTyRopNCQwVXUCSAXi/AIYX2XBFmrFIqZ/vm4SD6jfiZOz6eqjHo1MMS\nGGhF5KsMVj64qpqVT+zRhhizZpKYSyN9eC8T7yECF/S95BC0pC42s5yOcd2m\nueW3TCe3J5aVgkGgbKX4K/2hdVR01A98/DW1STvfa26KM4PJ/bBFAdceSh9Q\n1sVFk90zB2r0DoWiaQE0Bvu3mB6alWNzJLWGKb5xahrk2zRcgZRPiz0iRL2E\n5RH3LC4jGV8f6SgteuppVOZG9LxtxpUFEtMxDrJ+b5SkC7UTDpt5AJecGSPi\n7pX5TmQFlkyY7UACxoTs1xPOkiJ1EnYggjy2XrYobqcCr82DZxYX0t4SGDGq\nLkHRgwc+VfGGN7d0mhK+3HXxgqsx3tYqw8pzYa4YIzjaoSLU/TF7DmkLLUWW\n7QA25GC4OibpXlLqiQElzzJwKojifHJlIWVZufToHCGCa4J616IfaXC4NIn1\nwhhgAI6gim5pRhcdzXlH8XEckMu1NdVmCSVdEhPivgudwg5o3lSC14G7vwGW\nbLZ3Z4Z8iphm887f7tfu2E3cJ7ou7yORrp8mOO/oXB1sXTB3Mw98M2RPSbPE\n6dpr738VmgjTWe3fujH1umDuRkB5lBIea1GXK91Ohq9CwtPl2osTP6WOZsB/\nYiDu\r\n=0TMw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC0szEMXeSltAUhcsP64YnhU3xZDAjbu9zRR10bxY23vAiBq4ezKTDXv6VjcSspnAEc9nPgtudgHS/Sg95jzwI4o6w=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.55_1582910647370_0.0005250251441153431"
      },
      "_hasShrinkwrap": false
    },
    "4.0.56": {
      "name": "cspell",
      "version": "4.0.56",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.17",
        "cspell-lib": "^4.1.22",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.0.3",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "06ec0485b49bc73f175931467b8eaf6ee78391df",
      "_id": "cspell@4.0.56",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.19.0/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-5lbuNnXOdh06+Zi1+p/iZLQDECtC/T4Kr/La3NSWdGIOLKDExA7/g0T6YHlGZnVwdNozo5Dvm0hbiC9qxmSGMQ==",
        "shasum": "d26b7da80ff01ee3c8b6fb15d79765fdff302931",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.56.tgz",
        "fileCount": 13,
        "unpackedSize": 57717,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekD8QCRA9TVsSAnZWagAAzK4P/2ArQGdMvTWL5Y4JCF0n\nOkMKukkuaJDqgO7Au0LYqtt1STChf6GQm6mVP+lGeVAm/ldH+P1KmLn0ZJpO\nhzTAaXI8o1gnjGhg214FyMiD0mDVUqhyZCEB701k+7uhwZ7GkkPBuhcad+Bv\nkeMltfm+LQYc3Jsih97gZETJ3/7z21MihvGy/IiBse9WBMR8JlJRzK37EgRW\nWc03Kf/cS+xGgkO4O3Ey+H1xlAtvaQbVjQzmEsHsBqy1oD4HQ8z2gNupsZu5\ng0D8bRk9lOWef3hqdTDtxmOHONqZtzDLiqLP6sVcJB3yZb54mvyIaKPhFHrg\n2/YYKr9KUC7awuAeoZYPUyoPPc809QhnSK2+7DGa0TqQ7kdLvbn1r5XYCSKk\nPKotFzvKy2zvrc4R+GO4biY4KvCREsdsePBpmyDLAoWJ2Bo3+9eVmCs2lz9T\nItBlqJN/j3c8cx2YctC38AUEjiFWSu46Df0UDCA7or/ncYBv7qtGjbII2WRX\nl+QK4Dg0MbJ/wapfsFXiz/j38V03vAGKshfIKI8z6y6wxz+WuF4rLOt1bn3S\nV354doz7LT2k5gUw3tgyCEPs3QOwjUpvr2Sm5Qco+20NsJ0iQiTJfcetB2cy\nFlY2Mns4kCDNtMl80z04KBOctt9t1nTxSleFLL4J1b2u030dgimn4neltIsg\nTkMV\r\n=lFOp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDDae6YGY9b3eJEZ8nF9p0CWKBJUTnFufJ0xykc/eO8jAIgeotP6z8PswTNrNbhEbJzDQnrma/YgmREW1pCKEY0KPk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.56_1586511632333_0.6824264998632052"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.3": {
      "name": "cspell",
      "version": "5.0.1-alpha.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^5.0.1-alpha.3",
        "cspell-lib": "^5.0.1-alpha.3",
        "fs-extra": "^9.0.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "efceae2801b83dd00d976926ddaf29069ac97a23",
      "_id": "cspell@5.0.1-alpha.3",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-HEU5LEsmqV7mlVIV5/5eW0wlADJmkBf5CsErFxkGJq1EjMuSeUuD3o83ckrzI6F27L0H/sKXS18u7QoVOZPIBw==",
        "shasum": "7a3e38dfb9aeee12578722fd8ce40777224c5bb0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.3.tgz",
        "fileCount": 13,
        "unpackedSize": 58017,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekw8tCRA9TVsSAnZWagAA3FkP/R82a6HzaaqiYldEjBai\nnuposO8nJ/dkGZ6e+XK4EBz4QC1acVn5vn7XnuBYDi7zh6qlJDjaGMK2s9g8\nca/iyOIK06RYrJreccavo7rxvSFRWVvbPlpjyq7A2rsJapr10wJXegu/zVy9\npgE+0GT+xxqBKCR7s8LzL8HsbqHSYMa9zcves+Er+MVQcxXOZtzUAlRL+KQI\nHa7ouRKIZrdaA2f38AQ7XKqPXszB/NqIvtLwxeA/sfuJUzD2a5MXmAFU3Oww\nCGRmow9RWwc6gSRxJlIAgs95djxMCJQIacDBl8sYaM/EoXCXs+mgqwKRzOVl\nHbcCyUjfZox30/j6u3Yne1kSNlzAoPkqVYr6VT4rHHlpWZcMllPllP9O3EoW\nY32LGaOaGJDvmoZaRmN2J0RI4vdQIq7Yv/ZTvU14P2qTLDhx7kgv9i1XAcMv\nmarr3RYLjAQIThhD68SYC3Ag61ZWNPPDozU5At+gZ/eMAvUT/jiVeigsk19b\ndaOzMc/qs+1QvsHDcX/Hr6d0KEec3DebG2DaA+GAek/Yi0tOntbJn2j1sF/z\nr2HvyLXWJWkItWhhLVdtqJAAwvUmCG0QwyA76wbRhlwPIXWnIDb2xGnAyc+u\neBxxkxpxCATUMT7PTsvIKpKXnqt0Ysud8vM6IFQPTb6avOdo2Pcx+PXU+Vyp\nffxQ\r\n=zVqP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGFNHkopjyWLXkPom8SyXjEvEOCkvXFp3S62dZa4efRJAiEAsuUiNUy4PvYga6YOEACMnVtTF0heBkynf2KyRLqD7HE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.3_1586695980773_0.9033741130495738"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.4": {
      "name": "cspell",
      "version": "5.0.1-alpha.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^5.0.1-alpha.3",
        "cspell-lib": "^5.0.1-alpha.4",
        "fs-extra": "^9.0.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "85f82aa6f85d75a27bce98fcbbf36e5c846f4a05",
      "_id": "cspell@5.0.1-alpha.4",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-X76HC501ykhLq/qupoL7qhRqpgEFtRAJyHiMoGZoa4mDBoUKFn7ZChTokBvTfSn9Hvpy0f9Hix6moW8Q7Klaqw==",
        "shasum": "b85f075ba3694087b9cfe2ed590697641b5c74ee",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.4.tgz",
        "fileCount": 13,
        "unpackedSize": 58017,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJenAsFCRA9TVsSAnZWagAAtWMQAKP5Mx6RdGPinLD5r3w5\nkZ91tyCH8VpIu6cuvcltjx/a0aWQ9bLyCeruwpI9ZUFreh/anN66nvQXxjSc\nKsJWPW+ezcaRgYcD7FW8Izo0uLEBIgUgA8emSsIVimNxsxbJ8vDnk3kaFtVp\nDoGyN/tRxboCbfJwZ90xykQz4qic8kzhO60R481pGcyqCORb/eiz6t0C1/to\nxM3+3yo/GN5e511/2Jtt13yWr54sQWdB34OjvE02uRPmr87SivBfEX24rbAn\n6r7lvlMyleoqv/ILPKzO+ZIvczMJoR8iRajO44brBlsLOVNd6G62mMIRJ5Zm\n5FXv+mTCeYw/5VS7y6oQMg8FOKo3eX7bZxxTZwcY/+sL+FvgEm3ya8QGr8fO\nMdoW3YsLgCHQkxnjjAjajPu15aojkz8azC91RW5AgvEbHi94ty9haWiqN2Kj\nz+rxqnIi8xiloOVo64dQGF5vGZ/6ndfW9TO6LInYl39SQPKMKfgSl80dt9ds\nOhUYFffhZz4qw6o9+y4HN0NzENKxAXnvKWe8p+ixtSgZ86D7ak+HQZwbjGb/\n7gHaTKiWQNSFoNsYn/nA2zO3fhd/AEnZsdj1/fFAZAvDeMXCxVhsg02qbiZv\nPw4BJHhIkC1MW1RfbaebecEzZet3Cay2rjF0Ouy1S88A+PAYl+GzGYKi59vD\nNrJl\r\n=yLZC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEHMDyEwaAmOhbSTA+LOzj1UOO+Y9BNHCLboCqUx0PjDAiEA3s8l210Z7tqu5G3IxPYJ45GOo/BKNRViebF9VXpZR5s="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.4_1587284740818_0.9677910272700927"
      },
      "_hasShrinkwrap": false
    },
    "4.0.57": {
      "name": "cspell",
      "version": "4.0.57",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.23",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "710c11198d72f879a53f6c6f8528c7c356bd68c8",
      "_id": "cspell@4.0.57",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iKQ6iWP4nhMiuu1PnbcVGfZ0tE/NXRqRjYA1Kq/UW35a90WLSecIq8YgJn2J48FtnfWujPzXl/U7Tj4WqleGXg==",
        "shasum": "8323c9d198cbc6dc90bb3ce42f2e5a9585bc0f6d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.57.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJenAtMCRA9TVsSAnZWagAAW4cP/3R23ML4hoocxqdrC4SQ\n3gxk9zjvh98muU/O77f3Vi5YF/oAE6pJKduNAlgDV3Wy33exkZmCKWbfnVIF\n/u/E5cOhrPWfLSZWbXNarJDrkePQ/x2itAlE/rdSLvF+I6PYQHXtY2ZBQe+B\npZu/RsEk6qMRaCf5dUXC2B3r0e0R9Gei7BN1+XWAmeCx6XLPlkg9RY8t6sel\neHMtuhkkwfOsW1GyMkmTyPqPlL3q21o3Xnc3t5yGHmFqJscWwr9KOvNywpbC\n75wH+iv8JjqJPM9H7ofFE1qhFXK8Td/bywI6ruEA1fX06eUqHhaKtYpSPwQg\nGB5doDXPsrwHNbQwoXnDObT8rNMxOdECOUVjqAdmif/uMGuZaGETv2ts986Y\neQE1RBr5Nk6Nfjj64GQzJ5bBKzpuMdX2uaPd7eGM5nRUopyTamywTk3pMnQ0\nU84VMT9J3AX/yfanjpgnjtFHr/9goefPDKZZhQcsDcMv1S1v1GpAyryRl0TQ\naFMkzS6bdIVk2Iy/4TOXnRv8fwRA06YKXXp9tCMzPNzra67rno2Ei0yJAUPQ\ntUyFO/6fICON4mEHXgO00lYfaRS0x8D90opN2+UgPucx3EBc9Ta3uZU7d8vK\nFF2Mx+wlnNq6iTq8J2jQKCZ7vlWEuJaBXOOdKPOSJOLcmg7c36AV5jvOmpl5\nfDz0\r\n=xb3E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCtsOenEq6ljL/9wxRKhRUSYaAcqDMS6zX64EYtyQTYTAIhANZbgH7Iseg+to30z8C5hOJNmLtpxbRil25yQe6jbk87"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.57_1587284811582_0.7179883542534427"
      },
      "_hasShrinkwrap": false
    },
    "4.0.58": {
      "name": "cspell",
      "version": "4.0.58",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.24",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "2f5b596ac06d06b5784b31dd0551876c024bfce8",
      "_id": "cspell@4.0.58",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iDkrcUVKr1q+JFq0LfXfOYPJ93PHIy1HDnb/GJISUJ7OEc+2fJnVuF1dHnBIej/1ZZoAHm755DpiOEhl5g7bLw==",
        "shasum": "416e480c20908b0b82a7b7f4d084afcfe1fdbec2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.58.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesdH4CRA9TVsSAnZWagAAMggP/1dyOChSXdA0kc9eBOuH\n+RZxzOGbdPZ7eKFcfp13e9hbQl8AgXW3GJ5SdzQLXac2vR+lpc8cUh6rs8iq\nMWbIsmM6rW0ljoe3k1NRSgbXolxWYNXjR7vI4NLw3iaxON2KF9lF4kuYcTtm\nLfQACYnVSGggJEKJCWn210BMAwLtsdcw9bWXHZk7NKCC3tnCb5d+w270/Rfp\nGl+6VilGrmadppP3f8pepqjC5pgnoYxKv0o1PkS82Zbnmnbo0uv71m0g97Bo\nwhhB5c7QNc9plKRm/V9tKYXBQNqytyWLgtT95+9XRC7XXbvqUUSgR+gaeIg0\nME1WlZau9i7FIc7g8oCRxSM6WolFOG4ChUhfjSnuQwLwJKyPiZy7lQpBFu0V\n6GGow3tUet99J5Iiwy+52Mpgffhjk8L4sS0seCCY6fbM67TjFGlnDdbhVf6e\nyB+hKRZIzYveSI9ov7Eu6jMltbqiZrqJCvzjQRlIxveY4lDs+7183YSU87aT\n+o3raPqqrQM0Es/Dc9EayjaZQ/gEPBUtyjeLw7X8Lb3hy2d73uIwlN/Bfa/D\nt+H0JhqitU91mV/4/hXPeSv5dwUbGN5M7ZifEyje2OQXl9ChSmIjG7bFhxsu\nyrQv/H7xL7HuN200GbYKx0tEAreXNY/O4qcZAzq+4TDAmSqmMKpmDktkCrLs\neCdS\r\n=6Qd1\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGQNseuwCIl3GgL4EWQ4ROynmGrKyxAj5T7IAxt3dX2nAiEA4/t3K9V8MJocF50SXJeZsfDymf/K1wC6689yG6+gZIk="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.58_1588711928062_0.020906214553998437"
      },
      "_hasShrinkwrap": false
    },
    "4.0.59": {
      "name": "cspell",
      "version": "4.0.59",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.25",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "1350cf2e9fdeaebf201c81af192e63a81fe2eb71",
      "_id": "cspell@4.0.59",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-6CYM04PcogPp7nra/ZWstC6QT7XFNDbJnWKoNBQMJX4Xb5YsElDPLgASc1zadDgWROppJNbElk581D1b5U47Ww==",
        "shasum": "9549ffe9e18db8e8c8422411ae08ff8bcdcf58f2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.59.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJestTnCRA9TVsSAnZWagAAoqoP/3WcHK5BIW+iTMobaQGP\n4CJGboNmrSl8hX2XYUInommCmCd5KMy3qYoOFvq+mQ0gl5eJxnwlHdJ2kc9P\n0yW0amevnEcTqwC/uwuX1X/OF029Gzs0Hg7rHWZXRZE9k7YMOjDiXgbkuWSM\n0gFIBl0mQWSmJQsojDVaZdJm5IuwzFJpmeYdLookmaraOnKRdWo60CKGY/m1\nF079FX00Hl2vBqw3gHJ1UJltLfwVNeXiQPR5uk/6PW+rE0WUCZzVNwX852Cz\nR4yw2w2FVZ5LCI20GxJtrCdeXrDeyu4j9Z6qKXQqQH8/XqQFk38BaS8j2qgB\nZXOqPAkHTGA1UagRBrH+HxhCUDLQeWZFCNbr/2Ui1LgJKCZpxphjMHuAz7MW\niJ4fDLPNC7JiU6SlgOemYcXQWNP5BJQHbGPp3rnPj1+nq7nKi87HLsxftol5\n4sZPfcmSxDoDqsGE+dJqFW2Z3mkwnkW0dLBQudF5n7UmYOAe4/8d08aeKpal\nwRB83JkkqYs0oShl6Y4XZ2OeN+E0grDVoGvKSSDv1FcHrFwZxUEaFRh8LiHj\nRVr7qomdYqDVS6Ceu7SASjP4KYE71EKqhdKKbPmEJSoG3Hs3ShzTOMXwXqjr\nd6SgfiAU+yDzIklcpbvApXH7GwD0KI/4qz9V6o/VK4OC52NFlLb7uTKug+9B\nNul5\r\n=kV22\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDnizqdBUm5uCzvj0yBjRGjnwgU+8POA9bks0pZIRxZ4QIhAOqGxnBoZWeWOo1MedtoJAoCHhchc66TLl+mj4qeMPvq"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.59_1588778215166_0.706543535440705"
      },
      "_hasShrinkwrap": false
    },
    "4.0.60": {
      "name": "cspell",
      "version": "4.0.60",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.26",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "9b5723cdd72f6a60874c1af391a965e3081542e7",
      "_id": "cspell@4.0.60",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-OV9C9lR5plNuikzOLr04eqTChfL+sUFRHwrUgj2uLGJRf00bcAyryXzdojGp3DkCFR1tvJOZZr/ZQGbOb3Ga7A==",
        "shasum": "3723ef23bb2f51bfce613ba471f2a147c9b6f566",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.60.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesyzbCRA9TVsSAnZWagAAoSUP/1vVbtQ38X2FZR/9TPoJ\nxNTA7eGbyQy+m4G1CY74m14Uw+t2AHRy1hRV+y0rwsHUDzb7oR+h3nx8ijQh\nyYBAxrSMU6eROdaA2F5PSocvyXUThFwTD/zkd4tcLXo9I7hC7hmPtbVLnoNN\nc5NBBh5Pz1ZHIO0UJCxWE1SyeOLM4e2Fq1TP67xuYnvlge31EthP83TsGeZF\n4cVEXji//ObOoIJp2ZvDycukX/s/Dpc1DYUc9lmJ7opQum9qzaSC/0S430cC\n0bxa0owAkAKzpzR3L5xDqBD2Xy6+LOgYjWqkfJAZ+54H/j5qoYs7VNenLRLp\nYV45aRE+EapHrrUJ3LGoRiUOXwOIJu5yAe+vz+xIA0TeyDH5FrAkRtw0E8UW\nVXM+hve5nZ9hgYm0yzw8FRTuF4/ntg/Tn80/PE91AqIGbVsW19h4pADAg9LD\n2HbWeg3KcMf8Fi5GEmgxXbt7TpeLy4uUH3axEvHTbfLmoqDZFcLB8rOsyu9T\nJovjIJHwVsdp1SQIq0JR5oittpxRfcRdeequ1B3ZoxcQ5OIHfSFQ7Dgpqsdk\nseb96u2F0xLiZrNIMRkFa+NLv0p4pR55EmY2CH4kmHfWwoX3lKiA2N49k0CG\noz6rKAEUm0BtRPTnWvL/JneRZQavHqd3wNHAKfv02ujFt6iOuNTLqPGWe6fx\nGjAK\r\n=J2pN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDxL9xlTz1MLFQWdRf0yZWoocubI8SBUtz1vKbCVEaKbQIhAO8UGv9uiKPXL0rU24PfbxyRlH+D6tpMFa2RN1qkD5c1"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.60_1588800730554_0.27700921418949886"
      },
      "_hasShrinkwrap": false
    },
    "4.0.61": {
      "name": "cspell",
      "version": "4.0.61",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.27",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "ca4e522a5f1a3733a994635fe271fd389e115d5a",
      "_id": "cspell@4.0.61",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-aRDKzACufP8aYZm7cQHUBlvEIyWFO7gaaVUm75oxFGpWmc4zqnoOcCnciMHadS1W1r0mqMNfBQ4w55OORCQWnA==",
        "shasum": "8572d1e21c54db09689e5f55b808df5e6fd478a4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.61.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJetEY8CRA9TVsSAnZWagAAlPcP/0C0fQzdZwZt2lBmHjso\nX7kqE9rrfsT/xXteRhaLTfjlg5m3sKZ2+o+8wMv55aWc/HlIIVN8CJ4JEfmn\njEiKK+VNmPQXqhAotzq4gX5mFqXOC/KVISs/rAxuRT1IaDE9BSlxvqJ/iwc1\n0ZZqNqSB5AROEH+A2cO0euc3HhmTSnKqdIwaFUJ6yXzykDMf+XPR8SnEUFdR\ngmY8oVLWashESB+/iGQmXWRCt6CIen/aeexw98jq7IKXwoJC1LGv7II55ZQf\nFeE0iIcOu7lzCBbJK9xhMRCFF8mxxy6o1uxB/FNdpvpMf/4u1ePARfrZXI/L\nUgYoBZ1RD74SV90kioCPhxmaGKF2X6mIUba6yPV2s54Y2dIMkbOuxzukPERx\nNoG1McPlm6MJivTj+Xpp7c4D0jvWa+Wb0G6z5+uhzWMdGi6YHC5hsQbP1XNF\n4VumTz5AiUgtGRp+/+R0ugjn+iYZHlIzAjYO34IMil9Svd0i7MXA/Rj95hTV\nkJJmBtOTT8Qrby2jFt4puEKILINXpaBIuTOSqy55xMo5smwVrQv0sgVlmy7c\niqi8T3RzM6hbArRHCo8rXDnYfGCn+zmuNjfuqdOrI9xa8BDKBR6lASkw+FLi\nXb1N/UIYZEq3vttB28aU3rItgGB2cWQLJhpi0TVlBBG8HFus0QP6U6+BG+pb\nTTW6\r\n=aOKT\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEO5zVz0r+g5F1dENat1xCcPiMv8IXH8F5do4Jtv55xoAiEA197LhvlhnJWjrj2RF2Xu9e4hsRuQfOY9kDEUkT77GqY="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.61_1588872763902_0.9913777582797878"
      },
      "_hasShrinkwrap": false
    },
    "4.0.62": {
      "name": "cspell",
      "version": "4.0.62",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^1.1.3",
        "cspell-glob": "^0.1.18",
        "cspell-lib": "^4.1.28",
        "fs-extra": "^8.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "038c4f73016c27ae0ad9257e8d614e351ee8fc37",
      "_id": "cspell@4.0.62",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-P1KwPXgBosjtP2eExa9DpapRXIygjiV+MbTGwL/7ST6rFIdvlgjrz9W/hyVIK3+4+i/iiIuHTG5jrkXiizqasA==",
        "shasum": "053e144c7e31ee6c635690352d4ed95b358f8dbd",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.62.tgz",
        "fileCount": 13,
        "unpackedSize": 57708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJev8ZBCRA9TVsSAnZWagAA67EP+wWx9RS7JZSqZPixQ69Z\nft1+MgbYvfbfrWIBFedumJaSwi9j2WCQXMc3mTd6uvs4X+RSKtzVSWvQkfCS\nBbsnTKb0uLt3Giik0uCIxHufJjvhWuhyZ5YAYmFC4dQh1pDjFeCZJGgt8AUN\nKAeNDrIs3yccCjEP1LBeNHBOy6L1pC4LNemvsCYcClSvTEFUlK48i0ymvcP3\nQhO2IdJtu6CZZN2dMiWAnq8zxq7byHgVjMtBdRkxKLJUqk4mHrIAUeX5RnQn\nhbpCy1yVmUdfPHSQ3jEJQuNuF/Q11Q8iBkYsuowC1YyrOj7iUsnIWRPmqxYk\npQR8v0cM2bqr2phMaKZwsH9sIpFrDTwExJ5g3TH1oHQSptkxmLvXIsMYYvTw\nKbvbigGDEhtAn78PMuhEHz7waXI0po3PfpNazOOIQjgZi2qyz9uohK/unLzO\na20BiqH98YwVyYJAc14j6cevyn8VhCAo7XrhJt0l9XivB8oUJCJtWJJHftuc\n7b3Jl06eFyzKr+P+YNRlaiZ2gKznNDCJtm+TQC86jzqCi7FjwkyC4orhjWT0\nyOg17SSHKVTSray7pneO+tOQtLNOuZT8CEie2jbNre5RkB156HJSXASnlsYP\ng8kqUzXCzPhCJKzk2VO68h22rXe+pS3DADOtymLAjk5rvwEKziF+Xi9juXPU\n7A6q\r\n=En5Q\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDaogGDOiEv6Lx2b4FVKNzts85VHz+xk/6r20QpQ1cy/gIhALpkhIBXZ0AVak4HKEp9Zt1SerX4R4vPCkzcAZoVXPEH"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.62_1589626433503_0.7844483159228228"
      },
      "_hasShrinkwrap": false
    },
    "4.0.63": {
      "name": "cspell",
      "version": "4.0.63",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^2.20.3",
        "comment-json": "^3.0.2",
        "cspell-glob": "^0.1.19",
        "cspell-lib": "^4.1.29",
        "fs-extra": "^9.0.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "gitHead": "68f792d0df311560b42156a0e71e8b249c753b88",
      "_id": "cspell@4.0.63",
      "_nodeVersion": "12.16.1",
      "_npmVersion": "lerna/3.21.0/node@v12.16.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-dF0oq69CrTFArISxKhih5p8Mcb1RihzQcQ5LnQnuY66Df/qtyScCMvPgg+G/gUtLPa2RYb3WSy8surZNVS2c0Q==",
        "shasum": "af42bed1a149c5fed9beb69b7b57e25c5a0ec38d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.0.63.tgz",
        "fileCount": 13,
        "unpackedSize": 57449,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewF69CRA9TVsSAnZWagAAMgoQAJ4QtvcXvS0LOT5sGEuS\nlPwEo211cKcF1nBGY1kEiXg/4aIdq7nzo0LliehVWscg3Aju3jze86deh1d6\nug56vxgBcyMDGOpKUXNnbTOpsqVWoKqtIugbzxnMa0VemBvGv5d+7OuEbkGl\nb41Moy7qkswz9O8rCfZmfUF5sO03af2SZv7jXrC3oU0hJYWtqrot58mZl5PC\n44ZXA2SfutFa7096c3j1gsdr4TwxfR05CG9UOOYCfIp8a5kR/bjQKGSmVInC\nJXTLHFc2GE7ivZy3OQIk/yc97ePcqtsQ8n0NFEIQ6eF+7MpdRFm+Tokyg4Uz\ni/mX7xtrAVHthV8euuNqVlyYBtbqoNmfAJ6PRkOPG3qMuqyan58gPaFs8n0t\nSeJkqFehTOKtJFFGxUXCxELVg5/9N5NsyX7XaAAQ7XN3hmZjxbJDlJk7ppzv\nWzF2g7M8J5q3Wzi4Tx5oL5T3cff5Ce0/AFxrDf8q94sbNoz8xX4Pa/VjL5ok\n2FnFPApkANjToTemleOHVhcVap9y1UOfLYwwc16CMNHoCabaoT6P3Rm57Tir\n1Z9/zR8oIOtO+upj4k9fQD4zUOJ10MDYbXhC+4oc5FBdVCYAU1X71aiJQ2vj\ntq5GQzdhXMh2+R1DjnZpkV56WGi06lJdxDpCMw6lkgBcNnEv00hjKv5Wh9dN\nKq8L\r\n=JjGt\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB9UB3sq6JD7ODVPoSa5UGtTsnWJNJsXqsV771COzpFnAiEA0+qeA/Jh7qJ00eDsmt3HX3jMd2azEUYbabLfS0cqX4I="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.0.63_1589665468894_0.5360548834630683"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.5": {
      "name": "cspell",
      "version": "5.0.1-alpha.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-ci": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^6.0.0",
        "comment-json": "^1.1.3",
        "cspell-glob": "^5.0.1-alpha.5",
        "cspell-lib": "^5.0.1-alpha.5",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "e3c554df4c7bdedd2dd71c72d87563ee44067e49",
      "_id": "cspell@5.0.1-alpha.5",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4e9FwIYlAMAqz4x+08PCdGdYt7o1zuYP0lOosyZRFZR3dqpgNz5kmjbu1YXieSHLB/Q426vAJoSd9jx9MbJRGQ==",
        "shasum": "4461e51912ff7699af832ce1fcf4749f02a6b3ae",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.5.tgz",
        "fileCount": 13,
        "unpackedSize": 60626,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNEcQCRA9TVsSAnZWagAAVXEP/1+ClIsbNUeYuksQWCDT\n9jZZzTXI9jgpS06aik248GTCf97IiiBewRv8yV2PaMGE0vfm4aUNLFsnrtha\nSPjS1UdlmCWFUUikPD/s39mDLyomc2Mh9s98KFgPq1QazN+RSOigvXf2GhF3\na/keWAC8g0QVyOp/9qosyoVMHKacXViqZyD4sRhD7APeUxOraYCyCP2IaOqQ\nJV0rU3D/2t3RnLktXOTCmnX8vnGCJWPkSxCZzK1KK3e6pRvstr/j+bhjP2Rz\nEOY80DX6xCtLwoHl8upP2xZG45i/Vv0GuwsWeez4bqo5i1WJIBGoBauQ7iQp\nWRRTjDgFbaFhpynnlJ/RunDEoe7vZm616tfMhtaZSuMmSWvQccGvD5+5FYXg\nZUKa6v9sjMGW8F4nBzK78DLIsL/gU6j86hPqN/sSjmoD6K43nzZzDC1P5a5D\nmrDv334S+kN3f0H8xKlgv1w1x8jaHmZHk7JNi0FfHFMR2aIfd8faCsJkEUJr\nXbJK40BSUm1FlCYREyINzpebHDdSrFkm9dAf3IMavLmWnMn/t4oRuu28vvgP\nGPtYxoz6cfWoFoxI4MQqAiZdujTI44qTewPLpKlucaNsg3RBZ6RuA3Ul7cK9\n8D+5uapXIm1/g5MK3pP+up5QyAQZ3jWmrlgqAlSmzUEXQNWueV2g7w2TUKso\n1Y2n\r\n=t38A\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHU/q5WbcoRw31g9KAv3ov2535Zd08faTt7Evk+4OpdGAiEAl54x1VYV7CenFjDK4rFB8b4mLDT/UrhyL5sR0UqLIIc="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.5_1597261583649_0.3904516130988922"
      },
      "_hasShrinkwrap": false
    },
    "4.1.0": {
      "name": "cspell",
      "version": "4.1.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^2.4.2",
        "commander": "^6.0.0",
        "comment-json": "^3.0.3",
        "cspell-glob": "^0.1.20",
        "cspell-lib": "^4.2.0",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^7.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "gitHead": "51dd14f887ec74a9a6854b0ef5c59c94fc2ac1ff",
      "_id": "cspell@4.1.0",
      "_nodeVersion": "14.2.0",
      "_npmVersion": "lerna/3.22.1/node@v14.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Wnf8Fz7OZgzM9Z4PzR3Wuu4yGLE7y6sGoQnJH7XZ/UtZC42FnycjcTA8X9qaEKehm/s2imPEMBNuGK0NJealjA==",
        "shasum": "f265bbf58801f5662119e99cb68f058e55a0d4f4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.0.tgz",
        "fileCount": 13,
        "unpackedSize": 58222,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfNEsoCRA9TVsSAnZWagAAebcP/izxUkUq7bno88mxQAqA\nBeHRcNtG4ogYuVX4pNakIWOXdmKUMEZdl7aaZl0ILMrOXcRH/2RnF4j7VtJn\nEJFdXMPHExgIA0KeaK+cr5H695ozBqns/r/LPSKinU9Q/UL7/dBdxswqWmSS\nfjcEIpbCJ67uRci1ly0njR5igvYDwDZJ7/bFI4ABBbnm+M8fDNJiig+pUr7R\nwj7w/m+R3JadTAa4dXHIqsN0HjkuVMOLREur4DbSTkLb/VOx9ANN3YR1Im8j\ni4azrirSijr2yx+id986m468IBtZoev6H2UvyneDD1Olt97knIs5Iu9EXa86\nQcgh1UsiCPKsUbyMTOLzrMDPNIL2qHtQn8C4giHRjmCTWuftVhmINF09H4MM\nPFC94O6COTsqVwZ86W1c1oq+DgGmDZqFD8CC4F2pFCSO4hMG8ZTgpVyQvmwU\nm5WtOQ/F3XNh9036921D9ux4qGLqs2EDCkt7pwgkPnjCOmGe1MD1jrWzDf73\nsz35yZWh5UTGPwZ6D8VDF2Gq+aDlwDhk2kyfZkP60UaNlFyVCb/UnS5L/3ZR\nCpBlzZVvCsMCh4Sq0Bw1+huM60V2GzoAI/A6cK1TRTmEP9QzWEug88JS7iBK\ny7lajNP/aw5k46tg+RxrOLFnk/Sd7KvJqqC/tcI9Ji+Rhgpd1WGxvcCqAPtx\nzDN9\r\n=KlIJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICzyPExQirNtRUWBvWKjwu5FpPhu95ya6xlxqgkZnu75AiBLPLwHuvohphhEH8k9R9X2EfXCfHrzBmnwmMitGSCwSQ=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.0_1597262632452_0.5354871186659118"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.6": {
      "name": "cspell",
      "version": "5.0.1-alpha.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-ci": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.6",
        "cspell-lib": "^5.0.1-alpha.6",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "ffc22b5a4f721b114b95a8c521dcac86faae0851",
      "_id": "cspell@5.0.1-alpha.6",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-v1OGDYHEVRRCN4dWMpolDmO2OW+oRpgLp2J7ClEwS87jcmhtcOhoy6mKjV+Yu0lsgtzfeKrrWrVXHoGxneZsMA==",
        "shasum": "ddfb1370945bf0637ccac2683f8099cf3adb57f1",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.6.tgz",
        "fileCount": 13,
        "unpackedSize": 60761,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfi1GnCRA9TVsSAnZWagAAHeMP/iudTljYHemczzrstEj5\nPLFwX5vJ63WFgi70B7S57r5RhAa6PG0njXVHx7QY3RZiicOgvZWSDJlBdg7i\nYHKlQCSt+Tz4jmUKh70OB/1jd79OkpelueRcmu6uQOYbEGdAk7BLh/qgtfdj\nG93sXjQmp9RnNXuiiol47jz5CHydZV7nW51KonNDD2rGtBTBCEiM4Zo+vgU7\nvKqjhyqmb675e/cqZBMo0IFO2QFh/Nk/R+ZM6NofZTxhYtL2lpaZ+bNgDljM\n0wk39XtVPQUX1fhHOKTTdWSSqqBCFMl4tywqc2ZtWhukvvjAo+tUFB9WZkhe\nrZ2K30doLgTADEU7Q2NZz/k2gY+Nimb7CoIX3bmTWnD/xsALpX90JIUTiYkq\niZ6cpg5aZtDbuJH9KMjDwb9hVlZn90aE2e9Rwvou4dPRVUABjp8Pv4uaaleR\nzJ6kjE39dj4u/X+OvqtccxN3uNQC7GmRu5HSSVUUKnxOBbnbO/P/0WzKCPb5\nXuEDamrH4O4V/sWu7ACf/sf7KPSWrozPM/uShWbUb65cZ1xS84SynHKesvqB\n0xFo/SqLqU4XMmnIPDru9py7gJPaQJBjuOm/+J28JSTwwIPw5k+AXXXiCtdw\nJsWyYvaKqWdvrI4G+BqEbWN/jbulajpEHtkGknvRpTn1rb47BtLZ54WedJJb\nmTl3\r\n=40GW\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXFNAsvnBU1CQdWXINc7VP/q2mePjfMdQm3pEQaqP63AIhAJ7tFp7QjZeHeNeeN+H69Lsig3Vi1amdepm5qgrM0R3s"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.6_1602965927217_0.04704033331596369"
      },
      "_hasShrinkwrap": false
    },
    "4.1.1": {
      "name": "cspell",
      "version": "4.1.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.0.0",
        "comment-json": "^3.0.3",
        "cspell-glob": "^0.1.21",
        "cspell-lib": "^4.2.1",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "gitHead": "d1b8d25aa3713b481094d1f1063fc9d031674672",
      "_id": "cspell@4.1.1",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-EjOVanmui3a1aNmscSAAirKNB+Qe1Fn22ZWjBS0Zstsm82K9FLX/M2Gdy4IsMCsGzORwkf+Vc90YkGsh7hM8sg==",
        "shasum": "bd22ec9fc09c895b47a356a7a3ae96a55aac00d9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.1.tgz",
        "fileCount": 13,
        "unpackedSize": 58357,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfi1G1CRA9TVsSAnZWagAAcVkP/i4B3Bq5xU9GFhxBSu/1\nc72/4ZDaFCWaQJei+cB2dfv3mI80rghTGpjzGmhUw++DzJznvAjmfYcUjprf\nWzoMbGc7B951o+pDBnpoIVrvPxF2AIh6uuEKGQM+6D/7cVAsiC1voG+BMcAu\nqEpJYkwgs71nd2q9f4X173/OKssZZDZ92sDpr9da1+tnXJYQLwyh+oEIdj//\n9dQ00Ub0d0+lztPFQeYGW4Vm3TYryAFMygY6qPfnCrjgp33ku+XcfWMVwWSb\n+cqIr+edFsVef6SfXHUuf9wKyRqaSy+EpEUmRIreBaHbEbjttyIwovmE0tks\nuPwvDXb5Sw+0OT6lfvNHuelzHmTKturiBxLvexsSMpTDupTH3hHOXuqCgAro\n5JE8UPYQxIT0FskeJnu3lmyBqbP9fMbSKyWgqCpJAnlGXJ65/UNOMg34aB/R\nVQCLV3RCqP7NugjOmicMsPE5pHOzPiuSoI8svDqy/AeVk4ge8ay8Vy8tcnRn\ndvvaUXr3xrevRCEsZ1dtmvUuC5URc3f8QZdv6Wwq4dPj+e09hVxiD62k09dh\n+7xJcvJFPVMLIjGPnRtg7W7IwdTNMdWXpnqo69Z4x8pop0imtNdSbpjm/SVt\nCXc+hAE6rKYNfMHrD79mPraNJ88YWfTxrGWa1I6Kmw1J+lFrmBQv99Q6ng1s\n8Apm\r\n=CaXo\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICN1tL6eGSVNnKLh+lYdMXkNRduN7zeHmeA4GXWjgOpnAiEA7zmnuym1T05JQdbbaRieeHGoHK2WHX4vPGw7jXjEpyQ="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.1_1602965940931_0.11538883645402187"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.7": {
      "name": "cspell",
      "version": "5.0.1-alpha.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-ci": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.6",
        "cspell-lib": "^5.0.1-alpha.7",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "nyc": {
        "include": [
          "src/**/*.ts"
        ],
        "exclude": [
          "src/**/*.test.ts",
          "src/**/*.spec.ts"
        ],
        "extension": [
          ".ts"
        ],
        "require": [
          "ts-node/register"
        ],
        "reporter": [
          "json"
        ]
      },
      "gitHead": "04c26a28cc2876893b583ee0507f1e42989606c7",
      "_id": "cspell@5.0.1-alpha.7",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-KkPkBXPyNzhcdGI7vvaabtY3zCbH4URB3PB+DVH9E8yo0DLeGDIxDlmNfe1xDOa3G9bCIVgzIMfns6Ax4L810w==",
        "shasum": "8569b87e82b9df0e2c498dab7c3f4e9bb09f728d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.7.tgz",
        "fileCount": 13,
        "unpackedSize": 60761,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjA9kCRA9TVsSAnZWagAAb28QAJJ1o6uMO5marfPgJd6f\nQEIW5K5QWzYaIzJJJDIr5smP8lF1Hs6CRh2QgSwgsARNoCdFwnh5zP3yGWpA\nK4Il6BC5A6a+iu1w7yYB0HBhotBaW2VQDCEeN9sSBaJ+Ztzdp/Zc4EtNKskv\nwlCwPdAU+DjbTGcJMk+fIr/Dto9cRni8YBp6wSV2suqd5i+k20BukYCqbOEj\nOBbOW4YUUH+r7FaAAXl8XR+oOFsjnlgsuU+qn2pwd0fT/PJmBnhyDzYKPH8D\njEUq3KBXvqaC+uYEWR93qs5EILF14kgsAz9VU9aEKouXQMAazmqe6P+yPfIt\n1XK/vaQ+jiZvTnwNXtpJlxyCejbp8BgYGeLanVDgHpNNs7kWTLQ/O6mTJvYJ\nZmy3LiEuK0xO5bH9TlqLAKnraaihJ6VLjUO0ifOnUApLz6imE/zl0aICsz/h\nvQIbR6eZKeBlIgBeh+7doVBu/56OYFloI25GxNuOSAF4AJusx+e4vxNwDxC0\nLaXpxlYji0DOnXS3+efFSQakG6729CNLS4JeciBwx/GoOahPBZdenDD7yLyW\nukSVcM5zPZz9OALpn4F5gJR6rPrgVOtz72jYiNtPS2zjD6oFlxPyndHdA1Nv\n0bCJ2bKY+ZyNJppsHW9ICrSMoS9b2tGwVhpsy/R0eQ1Hgmfj/agGM4FmEZms\n6YGu\r\n=0V7F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD9eAKFhFLL5rVKu3LG19gCgT1IsdRUEE+we/TiT29QVgIgSwZWOP7SZvDQ5UxmxOcdGDSQJRiwBpO4G7AnbzMUnrE="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.7_1603014499543_0.1834131897613691"
      },
      "_hasShrinkwrap": false
    },
    "4.1.2": {
      "name": "cspell",
      "version": "4.1.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.0.0",
        "comment-json": "^3.0.3",
        "cspell-glob": "^0.1.21",
        "cspell-lib": "^4.2.2",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "gitHead": "7e399de6850700ad043603dd1528b883567b43fd",
      "_id": "cspell@4.1.2",
      "_nodeVersion": "14.8.0",
      "_npmVersion": "lerna/3.22.1/node@v14.8.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-K/JLpd2YyO1xOModcu6A/WjAf1wZPlH0CECg9p3F7XokGKqqhf0EJNpHh/0ryTn/Nxl20U8sMVCh9Sibt9Z0oA==",
        "shasum": "220fd115e6b51491f204621ff524c856461f2b72",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.2.tgz",
        "fileCount": 13,
        "unpackedSize": 58683,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjCJPCRA9TVsSAnZWagAAXpgP/jKerPBBi2VzceX8ldIg\nmkk1pxi6xTjHt8NsBj2wh0EKJKVP+Bbvo4t4O5Xu7O1iAHqHmfHJJ+HAUNYq\nLdpKb1TbRu4ba8xbn7vWaC4NetU/41nScuz997VQ5lGbIFL9xAW2u0RGD8B4\nEnIuOITDLzkDYQutTG7m+Qsc29asm+ADn3a95S4eXEBwzcJ7eo7iGZMEq2oO\noKreE59fQwd49mrAUypH3srGtv1eZ5YIe2POEJdcLSESNPFlvX0nwdOSemFL\n+KvILS/NzzS77dMtuOTlClzIetOMLDLqHl1ypS4mvIRouPGcm2+O2/Uob/D/\nMWx6L163vd8uZIAXSHSJL75wpTRazMqY7kq7o1vFxgg2VSAxRpvP87JzMnAU\nsu8pBwHo2kZ6pKWfZY8Vy1TVMG1hCpFM9Bxw5d9klvlTdO5h9beEFpANEiuh\nXB65oHvPmhzU9vwZqeQhdEu4kvpQ9UAx8AX8zrRlVxEqQNo514sWW+qx6W0w\n/BdYvhE4utawo19CGVJE6fymZSTfkK4Fviwj2Z6iem8SYS86aw84AeMEX5un\nYCoFXQNeGVJuv/voJnLmiM2mjH/N0Cob4fZGIx1CyMyr7XJ/iEcE1wXWLPj6\ntACkkD9qQX5JAORyT/327v+eaD+7vOoLqUG3e8ZoJ7pLE+HYTje7u8GJU7NC\nhftb\r\n=7u4F\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDU1iViK54AeWEH8HpE2LfrPI17ZDxpfLw0frFcPc2nfQIhAPsJ9g2fN9bjMyYJih1lhESbU8/Ykbq4d5V00zJ6Paxe"
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.2_1603019343440_0.22970065008595109"
      },
      "_hasShrinkwrap": false
    },
    "4.1.3": {
      "name": "cspell",
      "version": "4.1.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.21",
        "cspell-lib": "^4.3.0",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "a114e7769ddac7f85f6c5837cd7b0f62a9baae87",
      "_id": "cspell@4.1.3",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xOoNMswrkubBlGnVs0xcVOjRGLovKYf1y1vtZOUcnGooGTxX7whBkpd02QSTJttDrwPugR/LbuPD7z25gm6fFw==",
        "shasum": "ba316864e65fdad5efb0ef64277630d75ef9570e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.3.tgz",
        "fileCount": 13,
        "unpackedSize": 58893,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnn+ICRA9TVsSAnZWagAAG54QAJtdQHuhdkEh6soxgHxy\nrJ6HsGkn9ooZFvxJE5iWiIy5nx0uJD2b75dyHztsHIEcrUCpu60Uj1F4f6sp\nhdGiy2wtzYksu9VaJ9KBQQPXIZOcmLdBykb3VC/zIvpfk6cjqJcTOJpSJ79T\nXkk0qu3RM0a/KMeoMBdgTkOtxGZxwjwnHg77YRb0BO1inbeCyov6RmopPbgv\ndaA2uNo+A9OHZccY8jw4wWwo3rycqJ+S/MXUGcQm7O8EH88eG5NepW7UNFL3\ntde2cfh07cpRswqp/nMIzgDTfFAEhJPsxoRbvjLB/JDWoSk8kEwg2Hd0gVk3\n9YrXn7lyI5tx9FYmT050cs6jqtfZbMSQUw7iUUHHaFwXAjkwfroj1YUvVXyH\nzDeSibAUAyY5Qib+TZKEtXbW9sTLPvz2fcvmGYqfEhDWfcSJwCom2qNbXBin\nwnUQYRKI2ExLcu6w8hLODEe/MXWxJeFKdvhWS3WN7pcF8G2Ac2EfyJRL1JsE\nDbdpSQJW2OatPPG8Nfc2cAGBTyXU828aGLzl0WAgrpCiNAADPvAnZa56nNew\nJmGPs62u+HiMBHPrb68UZYvBeK0QOuUbDQ7rPre3YxpEW7j2B/pjt/wzrT8x\nZojhWqUDWYFxzD+/LoyWiodjYvX6xPHE446oTSlwDbhn7F8Pa+8xyAxmR4jI\nyVUL\r\n=t5i3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCpelZ3WgmX/Dn181Harw3kZ0MJlJJJfCdYhSmXpkOD6QIgSIiGtju5McJqtv5mgGYwhSrQ/YBSB5hnP9tM9Cp4C9A="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.3_1604222855526_0.6045705439905416"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.8": {
      "name": "cspell",
      "version": "5.0.1-alpha.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-ci": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.8",
        "cspell-lib": "^5.0.1-alpha.8",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "9f7c166e6401ace55fa19a0515492980f7ff1d34",
      "_id": "cspell@5.0.1-alpha.8",
      "_nodeVersion": "12.19.0",
      "_npmVersion": "lerna/3.22.1/node@v12.19.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-pud25X4cqS72ZH5cRr9rE/zPLW1i75xCyCsmU6+E6gs4H+1ekzlWF3eMvLU8Gwzeg2y7NAWbYfQCMlTpxlpXDg==",
        "shasum": "6a9831d5181d89b57ec17b81511a25fb0e98294e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.8.tgz",
        "fileCount": 13,
        "unpackedSize": 60553,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfnuD9CRA9TVsSAnZWagAA+lkP/jjm4LLVUsjlYQaxZ+YO\nZ91KYhsRghoRiTb8ANP3W6cATmtJuWRLNV72GlYq2vtckOTfkuq52uhdn+4W\nwrrQDtWyZMlaCBPIfZrxc4Di40ldsaB/tytgXhDyUklgKIKKxxoH9tS04fQM\n8+lgnntOz4TMrSFhb5pvpp3iRtJbEfH2C0mfyd8B8X20dZldob7OFuwZ6U+7\nCUzg+9in/8yp6ws4uaBmOvox9KjjC+3ge9b3wBZgNvr0ZaXmmrPHDdU9tWn+\nmj0QoV/lqZfCztMw4c/Yb6tqo3/aIy1B8ntwqESTbVg+Oi1pZ6+De9lwI5X3\nll+q/36qGGc8E6BtBpQ1+uRhWB7U3aa3cld6ls2A6i8YoxjcaEIiJRkr3cPf\npeuTVd8Db+jtxkuoR/Hp+CyqKG8HexxkBtJfLSAs7xRigVhylYbuSGDmimRF\no92mt6T6BEF0+nZzsM25DPipD7zurBp8emyKUDz2TucKdaBjbrbe5It0iy2X\nY8Vu2/9wF7Ua1MhqiyNQl3V65jy+imtGlfeBk3Xvli64vdiYLP6gkgXmrXdd\nkVdfKnGV/DmN2fLxi7S4wLWlOpdCvzEzuwddR1MLbViHZc0jP6T5zM4ZR6ly\nhsnPuXlcDJGZazfbRSlrIrMdb2+jhWPTqe2/Yi7VZLXdw1zo1GCS6pENKe3o\nhieZ\r\n=UgiG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDSBGyKnRRbmO2EjJXq5moG91fjq5DnDcWJ39vBGiRJTAiAJPMA5pZcS5ha/AjG2PBvpw1TTNRcWixN9nhfzxXV4Zw=="
          }
        ]
      },
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.8_1604247804698_0.21740511218874392"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.10": {
      "name": "cspell",
      "version": "5.0.1-alpha.10",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.9",
        "cspell-lib": "^5.0.1-alpha.10",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/node": "^14.14.6",
        "rimraf": "^3.0.2"
      },
      "gitHead": "67d998cc3faba9a1a9f581dccfcc3f3b065cd61f",
      "_id": "cspell@5.0.1-alpha.10",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-8OmoQBrCmeikXFoDS8sblR9pcMZo3YxmxsE8TfiHRTB2LTmJi2VKLig2zPfjay9DmudZCtD0tCKkxLY0JzbbSQ==",
        "shasum": "3ff8a3a636f9411c2b4e37adbb9a60a38470cee9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.10.tgz",
        "fileCount": 13,
        "unpackedSize": 60476,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfpyBBCRA9TVsSAnZWagAAjDcP+gK5YVdAWKTBEph/R2x0\nn/5d1nP5GX0RNH2/VFLtCf8JtBajGHdprCBOrk4dI0KfC+7fUQtAM7Q+wokv\ng2PheDDrSn9gl8YN6TMujF6jkJg4w6snAd+7vAq0hK3R8viJko2fLa40xB5Y\nFxwyVLeuhx8eSkUqQeCR3/b3ezLQ/YdEN/eQ+xdhNXbQ3BlTkGJ8NVsELNA5\nVNvaAHFICDh3Y7UVhRmwquSeMdOhK77mjjBL5h5iBnDy6u4sM/9vD4kDWGYu\ncNqchccEjN2KwahhMHiJlyTC1CSRkUcroglR2TOAd54/EqwFGXXMFjpC6tWr\naqDUGrAsSErqIJQ4Y1SFwq99/8Hc8ry80Xfj15Ld4lxeuESrF8v5jsBj5t5m\nWUmJ2/YPIMxRKfv4dQq7bWDeViMiZ13xoIaX/Nq4WCWmZzRyugyo/IerU5Ky\n2nlvNtIXPNJBdHSLRUQoCA1FS/8v7qgPDLyJHvg4JcuzGnmpjrLfYXzaisuc\nQgnILNqXaNSWK18MnZaZkMqUdSAX4pi31njOaOt1UNZjYXxrEWXvbbcaP2hU\n/+Hhxhw3pWxTxy598oE0wYjVBFkl7z5f6G+cZw8yEU606k20zGC5JJ+G7SP6\nt1ldLoOu7CFJMbyxsojeksyBN2t8TraSsxWI4NCXF94B/o2GVvyy6PFndFzm\nxaa0\r\n=krPY\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDo8Krdl8tUKQ0Gwb4ujtPrl46hN3H9OzMja98ai5JpKAiEApu3R9m15Dl20uyNxht4y8y4DjtShigHXbELBkK4i+J4="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.10_1604788289141_0.6096896005072654"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.11": {
      "name": "cspell",
      "version": "5.0.1-alpha.11",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.11",
        "cspell-lib": "^5.0.1-alpha.11",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/node": "^14.14.6",
        "rimraf": "^3.0.2"
      },
      "gitHead": "500477f91a8835156c1842af6555df1fe1e6893a",
      "_id": "cspell@5.0.1-alpha.11",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-MdD/HiLsKKJ79pxxuO5+zo/Ks6oMHWSbsMMgaM01gJ5qE1/l9Qm15R/CO7xnmaruEoWUsIABfgSO9u2hU7rStA==",
        "shasum": "89d9f4ec5f0229c621e236885df1ba86e0c27dd3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.11.tgz",
        "fileCount": 13,
        "unpackedSize": 60477,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfpyMGCRA9TVsSAnZWagAAYs0P/1AEutlV+g0mOnRbX6sB\npXXIJ8IatMXhIVl2nepMVgHByx0ckPyjNj3nvSBW8hpcxrVQvR0/3byeVtyS\nPz2/pQIE2SfT+Q7XxLxiJLX76sUHo/Z6d/CcoysWF8yRsIkjXb36l3f8WAmk\n3sQU+rfqr6ikh/uEnE7Do2MqmkwMyW0aQorQjGc1vO1Yg6UWIKOlh/0xZEeB\n9+/xluP94A/myJfQeuNAImgVq/XnmeDLjJtJa5u+WEj3fKzOcKrV6Kw4Aidx\nw6FdK/Q5TELgKNbTGqtnxQOpPfNZBPqH4hI3rcoX21QHTUx6PqApFaMfHIo6\nbWV4w7bihdp/s/ozTUvM6QBtuAFU/Qy2EcdL9+zZR8zpCTp7+YvBK5Q0woJb\nEA/FI+fcE8CovKaQimXXlCIKXwi8Mkcy3Au5ORnE8U9RwBE7AbDVMMvjmSR1\ndTM/9hw5P1aZgBhWBSMyrBxk3/VXbgGtPJImM9z2dNYrq/9qLw+ZZX+7XOF2\nqQYHV21PP3NTAudL6/YdhWWfQn0Rv8YW1ryCuJOJqwbRAiI+58EfBnCWSpjS\n9lMJpHRvptNc5eQnqylfz7ASOhiM27r+UaA+rX2rTSoSfBdzsa83bMdB5zXU\nrVkVhm3TwctrQehgdk2oPA//wFU72VdCWWlxwcB8oV7JMXp1T7H4OztV8PwB\n1X/O\r\n=5F1y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFWj/3v/BOUfZTizYEvnXYNdI/Omod4qPfcmS9N2eb7yAiEAwkY38WGIhHEZvEWe5x2HEu7fUEPUFFojBWxV1G7TED0="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.11_1604788998040_0.06792951063021335"
      },
      "_hasShrinkwrap": false
    },
    "4.1.4": {
      "name": "cspell",
      "version": "4.1.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.21",
        "cspell-lib": "^4.3.1",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "750a102f35a742428d9c3a08f3039f30500c2909",
      "_id": "cspell@4.1.4",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ayt4G6ar+mWdXj8Y5fW42dQKtSvpGcaCbJHz9Q8CUERYiNWayo3yi4HC7r//y+NfAbjdAngVOli/FHpRezlM7Q==",
        "shasum": "0ca3c22fd89c4f53fc96baff126d51d647a3f1aa",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.4.tgz",
        "fileCount": 13,
        "unpackedSize": 59052,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqOmeCRA9TVsSAnZWagAAwPkP/jqb4nFZrfN76vhD2QoV\nsEgnyjlT9VRYHTW+yMgnze1RnpMebONO61RpY5x5tULvFtb7iirJO1Ob8FVw\nUl8Ta23UM0MOdYBuFdCH6OAsVMC0tLpELPpilZKLbvrQHL2w9vZNC/+qSA1y\nGzaQ0m986tvLtOy1gz3g26C7qu7kyZwCax8yLnWa6/qLluAMpo0Yq2a8NIAd\n9FlpUjQ5/fj6qGhTQrp6opzzjTUpY0uv43tvQt79Nj51bBvHyYynq/RBLzgi\niddx7VqTOLZqalE365bC+2bWutu/R3dt2yzkj2C5SRerL5vmyJKHAQbCG7hM\nJYLjsSyDomfsXfqSvYpa7rk9oAT8g8DIVSvqK6gtbqcYcrjIHu0xFIbnXHmk\nID+J/BCFmFWshBA82rdAc6NYIkGotOU7y+v6YDiVQ096Crj3cy/EsFzarll6\nRLKgS9IH9yW4M9WSu7hiHpA9RleU73PpFb8Maon+5Jm3GXyH5SKSHuiYo52E\nGmhQVv6hlAxnCncSnfqeFNq/CYPqVM8DvIVrvSg6wZa7TTW/j1hCP/hdelp7\niIFW9plBIAi1ZI8offOsJLmQ6c+8atknYKsg/cu9BW4V8Z738zl63yLTjCqg\n+ec0JmT/uwtroFjSTrruSf9skmoZ0H258VKch6Yy4x6P43WBKIZY6+VF7U+b\nD9Gf\r\n=0f6W\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCRa9mu8R8wITsKgAvsstaYOkzRYyD30Ies/E1iWcuTvQIgNhLbBkxrvmkZBqY+nK/lwKeCMUZ72K+eYhvUBb0khF4="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.4_1604905374047_0.1853997628379398"
      },
      "_hasShrinkwrap": false
    },
    "4.1.5": {
      "name": "cspell",
      "version": "4.1.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.21",
        "cspell-lib": "^4.3.2",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "34b57da05859cff348bf5949660ea660ffd9561d",
      "_id": "cspell@4.1.5",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-KIVZzQAMtSVsYGeFP5ljXPgbMor1jR49sVkSEHH2MdGFegTyMJZEVkgcwu7pTS0VRI+6O2k06/K3AKOJeK4WSg==",
        "shasum": "cec599568898ccc401b3564dcdcacc8e519b9c2a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.1.5.tgz",
        "fileCount": 13,
        "unpackedSize": 59211,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqU4wCRA9TVsSAnZWagAAizUP/R9iCEyBItfNdzeoUDnR\n7qsLb95uHy8UA1V6gw/V7lREMWC7oa+rXqU9jn/NqrzngTTFLNKh1+FZnuUI\nAc567Ojc23IWvpG5Mnur1enxjeWcmB3hFeQ8bDjCuGBcacxH9p7mUiV5kUtN\nrc3uRb4Gj1xGbGJgQi2OJNE7gZhqbuZPxzF0S9YmE27hpjIZyeejJQyb1pLK\nyPYEdRVkLHjCgFLU5sj2M1FpAA77iiJJXS54mTXxVlVUy7i11U8LHktis8XM\nIQ/v/rvYqrRVY50StepMw7LBD3LM/+XAXftx+XrvujDCg5D0k8O9g3/BrmLS\nzQpN/iyTIluU3n0dpS/Gkd+okOXT94k33UOpj141jlhVTu0m5ZWPBD/PZWNW\nnBmSAsFE+d0AS7zXj+O+Rg91H1SgC+U9uFuMsBp5ZzMY5a3jhXZNFMUfoOYL\nxRez7jcgs6nhPuwZt3ogyziTa9hN5ruaAlHMpj3ewLQGfuAyWzKj4Xrm9xol\nCl/Y2B2wVOtRFc02peWK3MZZh/OGJQKYJXjyK1zGyVMn4RgTk7c4MeSCczKC\nFhmbVobqlO/zvBztfmBLuRLroTWN6QIdiKqxivKnTJJvFymSFB2Awi9bwen8\naycLWAfDDs6krksl8Bywi/59MO7w7/AtLjFbXsZZjNKi0r/jFEyzCJPYFc3S\nnwTj\r\n=mkaN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEy3Jl1zCFJpaLGkCbhZy6bnJKw9RWqPHPkp41DYLF6/AiEAi/B/XDGO3ilhJ2UcKmDG5aB2kzI8AA+xv9PASiWqXkA="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.1.5_1604931119625_0.8716651402291582"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.12": {
      "name": "cspell",
      "version": "5.0.1-alpha.12",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.12",
        "cspell-lib": "^5.0.1-alpha.12",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.3",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "347018e778a780ecfb2754435c7cf665b3f9823c",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.1-alpha.12",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9CIi/FWvBh4EKd1iKoM6qilfA92Y02+yhuqqBZM+fUW43OVs4LhSBDpOTQTJpAMzSv6WtYNyryDKVFlrfQUnjg==",
        "shasum": "c647ef5f987c65949c1dc690cd5a3e646d531411",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.12.tgz",
        "fileCount": 15,
        "unpackedSize": 62707,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrTuICRA9TVsSAnZWagAADBIP/2j9vatvmdwooQz1CR07\nxnMyNXWy6JDVBUZBGtkHVYGR+b4oYnq46UtsAkMWvxszmJGIxsUhFwuGxn3l\nsLaKunt8uMyWn+f/Lna/z1vaJQLd/6YH8mlsOLwZFPUNOYO0gbxo0XPhg/0j\n71z239Josrk/M6T68CILwphjuNHZU41MqcD9F/nIWIMQu9/xwch76phAdSKm\nG9H1fg9JQhLVlvfxd8Y/yrq8Lf4QSdhGf0xWUEE2oFTkuQioLO4IeDNncysb\nUF8hUX2bjXVDAYPJcDenCvqn8OBRbBgD+CaznV4GNuflKg3msofe4d0JKoED\n5WSaQtuyoK7JNhS2DIb1qGjIDRTF87KlYzxC164xKGtBMSLfkK3PhV+fAxB6\npG9Mq7OYmXy612lrmOrg8A4T3Xz3MpqOIPdmCuOj99zJCUaV7KBjqlU4pcUl\nGjDxxYxUcVIzKVOSRks1bPgGCC13cRpcQ+bNce7O8ER3VVfwaMGh9p5a/7Hl\nFbQmrdP/upvg8H0UJ8Q87oiMPo3WlApDo68EKRI/iVIcR9H02csf/sxsubMY\nIi3hmEU2vY0wquCEGQGwepAJgMAG42Iezr5y3A6cL5/6T13H2DbyGHTsibVt\n0KzP4LVW9w1TCkADmHjhmS/CxtXC+Ua/1tqDzslCDM98+sNJ/jeQtEfyGClL\n5g3p\r\n=fubO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGLD+GhiN0MeO+hiI3VyiKl9oOYH50oyPDTaADa7bGsEAiBiuysgYrsEtJpVuXXP17VxvfKo88LGG+y6vUXrWWtQKQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.12_1605188487814_0.44965960027418417"
      },
      "_hasShrinkwrap": false
    },
    "4.2.0": {
      "name": "cspell",
      "version": "4.2.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.23",
        "cspell-lib": "^4.3.4",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "c61478d1cfd0955fe403e0173ee696b45986186c",
      "_id": "cspell@4.2.0",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-5hKiPYapirbSoCuPpTXnDLA47c4vMV3U+ScFP56YF4lhQiz7yAJnNrgK31RiMHkv/pIUIlnuaKZYDD/7fgEgxg==",
        "shasum": "01fffa15dc7d102315edc67fa0b385decd4ee2d1",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.0.tgz",
        "fileCount": 13,
        "unpackedSize": 64904,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfr/hJCRA9TVsSAnZWagAAqEYP/iHgY1AO0O3W3iwOlXHF\niU5LZOnmU7dGYcIslroLPcIbbuRbb9QWp9wvbARNWFz9kJb+sMh5sDdIYzjF\n9vsVHBjyBFM/Z0FMkm6hbTG0vXcqZ6MtZE7FlD4hqKzewL3qUiQw49F7N5bh\n3CBQuYwI2uktURniCe+TlTR3hY4zieKDJz9G7UnxCoLf195ZvwA8HDnhwxg3\nlWpP0PCOQ0HZgHnQL72vmgP8JHsMGZhh1/sZw4h4C1KTy4LT4GRKKD/kEaxY\nSxd6fme9KG1thHQWUS26NA303vZyA+Zftr122MASId3Tkn56ho69zUo/zzPo\nkxpQBgA14jzNrEVHh4v3R47DLKfnwe0ROMR6Q5+WpjiUCsmBghKdlExZokp/\nFXIDIHenTFS29rR5WjsOB5y8M3sEKC3Y3sFrXTDDqzLcT+hj0ij16uZVzRrn\nQ1K25neBA7QqXi0FLOt0x5uj5XvuMLuMOlmobbEx0wt8SbX91IBDwrKYq1Nt\nVjp1LUsPvKaaJLKxB06AA2UmhU1ucUQDpQU3gJ75U6AUbxNswb92LT+sQWYQ\nKp52/LknLriKaLH/qT7PHO6eT3twL66xHi7lgbMqTcXqMFz1qlAMkCjRXBUU\nQI5XMA1KGwmLyOFGj7jP1t3nbk2u4Bt0EWOTOGLMAEKdnHvTNCpRsmD/8GhH\nuD4K\r\n=/qpi\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAHnQGgRnzWQIvyF7YGv843bpnJ8jh2eGlmMGLIa5DNpAiAn0D3TyGwVyTcbV4WtmO52VxZDwPkpfQbdlLTuNDmPQg=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.0_1605367881394_0.3848837878600133"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.13": {
      "name": "cspell",
      "version": "5.0.1-alpha.13",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.13",
        "cspell-lib": "^5.0.1-alpha.13",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.4",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "0e078dcab8c63536009126d41884265fdfe2ae63",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.1-alpha.13",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-AXQR02Pg782wLRDikSGNtRdLE5s7ARZDwIBFeiIhACYyQeNAeu8tGVffoGo9xY5PVPOu0TgpHyGX8OehqcvLbg==",
        "shasum": "982a460e25cffb624f0abe09b6f24ef40deb8f29",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.13.tgz",
        "fileCount": 15,
        "unpackedSize": 64776,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfswUuCRA9TVsSAnZWagAAI34P/jfrthTohDp+LBmRLAF6\ntBRVTtbTKyObNp2CUwSXAQACuNteRywcMTKMbNQcRJVXj8VXKto1zBBaT0oU\neoPil9pxe/2P4aNFJHZLcL8vKM4/E0iCO5aujhk21iK1F5D0bGONjQtaiz5B\nRiEKlkq0JSTSjlHcAklWLG8DkBwf4ZckDSbKb/sPOeW2o28BsowoYwt3xr3/\ncdOwC3tZqoJh1I0Y3/zXtuRoElj5TocctFASRIGibfbOYYXnKvtxj09Lo2iB\nJfZXhARsImTLwIGKanYioLR9kOgH0TVUDh38RTZvHSxS6ZnaA4FlyNJfvuAK\nBAwuNgSiWXtlVynrvL23G3YzdldatlA9cDv2oOprroKU0g+7VaDm3n28n/UJ\noGyANGuOxfaepCDDOa0gIXVz4KJm5Lfwo1EsuMePDac39Kb5ZLSNEk51wIq0\nBNDLqQh8EZLKJjn3+eBBUU1h8ultg8lVBhR00d9FNhjxGQkIZSVWJz8ompJW\nVDiD6enRoBiN/OOpSQl6m8ZVDuZuZOCYBVPTGFT6ufX9aQQEgillOcBD3ciz\nlpKrvIOWE+b8nO1bfdTeRizK5A324DWQYr0cETNEripjqtxD63l1R4dGEIoz\n01+2u1oV8oW8unoHlZP789Gn+LluAoJmNV4xWy3QMFZxjrESPGrH2vE/7s7j\nNAiZ\r\n=jhlj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCHiGSDwXwLBFJZYxTtK90UDYWtjLzxtbah3b7fN/YkiwIhAPVim2vxUQl8BlGAo5gqIlyOtbnhHb6NPg8MjJ71uhqY"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.13_1605567790411_0.7746822127826496"
      },
      "_hasShrinkwrap": false
    },
    "4.2.2": {
      "name": "cspell",
      "version": "4.2.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.6",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "9e28c1b0632b8da82879cd3a03eb42169cd3d95e",
      "_id": "cspell@4.2.2",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-NqObIP0ljFs/f//pA4D8rwqC9XHW2TY3CMNunp0nPQzVk/GanIqTEtMDZEZrVG1wnxHEndUIHlw05+rEYejkQg==",
        "shasum": "cecc6b82c733fb859444a04f9d8df0dd652f692e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.2.tgz",
        "fileCount": 13,
        "unpackedSize": 65364,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJftFqOCRA9TVsSAnZWagAA/i8P/1Nadvs78XfcSAz3G34z\n5TXxDPDLYiMtHgxcpFFmfHo66u5wzQ7tZbwFPfDwPkWQhCxmrD4/0j/LDtRb\n39SbCdQyC+uL3i4vXSRb/dKlUDBQvNtbcrki5hWevPy5YMEmI2RwX2sPAj9L\ngsRAc3A4gn+au0gNQBuUC7he9DovncKN5AFgudbg6yPuM4OTBNa30liplACB\nijLAKX8xZB/u+b8vYVzMo5H7YOIcRrRS4Mf1Zr7LiGpsw/NO/YyYVQ779WbP\nY7YHQ4xr521XxhaWsu2uXEa9pyN2t4Pnl74OF3Z/RmaweI1h/ipCmzUFzAEW\noRvg0Z5tva2HskH5pX7B5Y4wLNXN+LS5b8ipK4ioYl6J7xEO1ggKX3BoGDWI\nXW+3CwPF5vt0bWc2g6Sj9d15QZtV+0n0yS4j9pg91+ofHyhIAh0oMLtmaE/u\nhscC5GUTZY2ozw9EEeui2QA2uDYx8vE/kpnbhk2kBLOSCuzWjiabPfcj8IZx\n15uYOg5wfTeAC6ZmnP8Kqtob8Y+oxihqtA4I+8vIgSOR3HEo3+INQnTnjhHD\nKDr/yByaVZzeqXjkVEXlL3M9VPaDSXntPLim2CZ961wsGzvvq9NHxojLe+i+\n29KRQhEpTRbXdx8dlEoWktdNmSh0r6o4rNNRGDqJH6nLcg4U5aOQu7iZEaRO\n4Q3P\r\n=IL9w\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDeTFissXkIdtaqDvThvXspRqRxYtBhuJ0mbbjcECU43QIhAKSk3PFJkD7tSXfk1CrluWGyc8LxOmHk44VHRLO3HLpJ"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.2_1605655182249_0.08234108975000654"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1-alpha.15": {
      "name": "cspell",
      "version": "5.0.1-alpha.15",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1-alpha.15",
        "cspell-lib": "^5.0.1-alpha.15",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.4",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "5ba1c5a41af896140e9a318438ce66197a8a2445",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.1-alpha.15",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-cso7N8XnlGchS6Iaprg/4lSx6GCW/aDCLk7a9Njn1MwJPkitHkXAepuCKZ8ndexXgSFjwfwB3vGVSLeBRMCqRQ==",
        "shasum": "29a040f5f0c7a8360751b5bf4b9fd46de2fc64c7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1-alpha.15.tgz",
        "fileCount": 15,
        "unpackedSize": 65228,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJftNDHCRA9TVsSAnZWagAAJksP+QGPrtLrFbGkd41oB0+K\nNrn4cH9YNUh7a0lOv7zQkpZkqDPJr2rTabstN2rvvJYgqpfF0L+RQSDEnrOv\nrGU4QsZciUKQKRsMJzCMkOKicTO/cJKV5gtWOwIYXspVBds53mZdXzpvIRsR\nmxb13DbR2eYp5+RFASY6rtgl/x5XQzv9TlQ+QTqWnG2/uSHDcO8cSJGYiEQ3\nFM1rjOAmvEBne5vvNOg/apygtTHBhx6G4lxtk04qdIW0BiGFSEn2g/xR8AjM\nkSKKKHWHPisTrIVThieWt8h2DPS0SnIQaQJpJllAr0FDGNSZd5bguw7NYDZv\nXE02hFQ1Uq+eATmKLa5bfTFdic1bcXomzwfbk4XQTac1QktdQ0t2GxGFntd1\n50mFiJ+0cz/KiX1wuSGfFt6DM16vG5ibOi4KfUk+t6XyC6qjAkJW3I5Mnilc\nBKdZ0C8vLEiays98Oq8de/L6arcdmb9mmTgp/sMiFe+ifLHlfx1+8CCf6HND\n4o54BjSzYhh+cpz/XaXcEkRyBIDz3lqQwz0pCSYDnWtQMFce6zB4TkXYtBJ6\n9ZDaH2jqPzwBLJ31ULeoD9rVWqyxMko15wqGMt9sZfzZ3g4ulw2MqAw2Ebyd\nm/iciRa0nI3piUbmNwfk/KeQvm+t69p5qR2LnymS3AI2V399063x2vgHEbvL\nu+Kn\r\n=8WiH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG9ik5sTZey4cyPQ11f3RRAV9d4n0pa9Y3MEhYrK4BwYAiEA3ikSzzeEFwYdlhfa1wPhNR49IEp9qwtAIEOWKemjisA="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1-alpha.15_1605685447303_0.539325833268786"
      },
      "_hasShrinkwrap": false
    },
    "5.0.1": {
      "name": "cspell",
      "version": "5.0.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.1",
        "cspell-lib": "^5.0.1",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.4",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "f1cdc7357eb5c1634a0d0e05e359f003d71a794e",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.1",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-BgrHk3l8VRMc0hiqw/3UCv9ud30qD6eAyCicL1YIhAypnb85lVnaSmK/ZohKCKiYRRJTaZBqeKCYIOeBQveujw==",
        "shasum": "c649bb323e9d6db19053b974d36c81dcfe20a32b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.1.tgz",
        "fileCount": 15,
        "unpackedSize": 66208,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJft3NACRA9TVsSAnZWagAA+e4P/1xKDk5ziIO7A1xQ+O3/\n9J0pSmT8xoK50qKUSep8prYOjmd8kKOgToO9ViDQNbi+DPGu1V/amQ18sdsd\nLQysKmpLOPitb76bJKkQ/Y5BktCwoPlNOrvIGTEf7eghYf0USszvvvNTKlix\nBiSOGlds7mWC+wMw5dTJ0tLV2CTsWN4A3NCpnwqwrAIa5o+0e9YX7Gi4L1ur\nk+wtofMWnd7EXCBoK6JbEWacA0AWF0+9B574EGOB+bHqbrDuVTnwlHQce5Be\nZIJesuEhf302+wYqym8ImUMqY2Y01D9kxYqblEwFkP+dsdzfCEXblPKh/+/o\nSrUbUAI4nA4wrhIhO7yNojSBqNipe6WFDyep/RnaVV4lCacCNcpqJixmrg2z\n1zOyrIcutimSR4fPnI617oJcG7LijqaDDkQmdDb2sYFIC2iT5QCb3katd6IA\n4cyrCUp59AwX8E+S+IgNFiM/mNDR+BX4+rTHlDQE3aIIA9W3j3qaNydN0ACC\niWaCwKoE/ydyN/095Br8+F27A/M1sOaoHaSSinxjkz8e9m4tSs6gtmdw+k9T\nmB/Ft5ysyHvxJCePSAnNPjAw/BpNIGfijdBxHtKuWPqSVafCseNoEq2PXHHW\nROubvq1O1O6ei6Max7mTAUgwS564031Cnj/HSH2nDUHDl71N4pB4T758N7aP\niLDD\r\n=uHtg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICswDukNN2PemRPQyFm7oTVc+G8QPHZ40bU1NmdTuQQdAiBEKPKhk4AVvM9ufoU2zaFRsutyNKK4/tsLDUpEzWbfGA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.1_1605858112006_0.17180408607290154"
      },
      "_hasShrinkwrap": false
    },
    "5.0.2": {
      "name": "cspell",
      "version": "5.0.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.2",
        "cspell-lib": "^5.0.2",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.4",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "e4296487e191726638c44ce22fb52eb186822f20",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.2",
      "_nodeVersion": "14.15.0",
      "_npmVersion": "lerna/3.22.1/node@v14.15.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Jqr08nYlWfF5YZLijiq97s7JTdjrkQPbzRFYO6SD1GTbCHu6MTWXsM/owytXN8GcO+HGBpVoKy0cageQxLTcyQ==",
        "shasum": "0dc317710415b33e116f22861f5fdfac2bb3e21d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.2.tgz",
        "fileCount": 23,
        "unpackedSize": 77064,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfv1KpCRA9TVsSAnZWagAA8MwQAIkH1y8b6IjR3nLl3qqJ\nQnus158p4C54jzzJ/d5c8k/TkY0d65T8+t1wh7/HmV0HqiRQk2UM0QqnGv4q\nZJzWHoeWGNCpiUxN8EHEaToTjx0oGR4vyMmd4gFi/R05cKyMUCwX/SqjTllK\n6e7fEdILxeZoiapf/beEmYZ3G1vbFuEsVmxa8RjsXm5H4zxDP0NvZUZkoifl\nTiX9zwO5bbhLJbo/dZ9u0k3mu50B1V+rb9Vhz1XHTUmzJtzejYKGEzLQ3OxP\nzHrJWy6RP7U1K9TPsdm/SDRZleXgYq9tXIBR56FOEYCcTQU0m9Ut6mNCGwGr\nFm0YL8SAczCL4PK6w0n4qRm5ACNhHcemL/ylhOJhWk0sCdujNPw28qzXydUN\ntlJATA3B9ibj4BONhR0NrNWBWsTY2dhp47sKZfKH5YE99QmBcJTY8w5TE2P7\nH1IrHr5AzYGS0l6FN23vVLDlL8q78Zn1EHLgPFv5JHcjFBCAsea9QtNV/o5R\n5+mD0DhkHJr9g986W8oMHMi86UiSRANQMM+dFW01vLAMoQcjjUq1FmvQO60P\nB/8kNptBnjztgTIH4n5xNjUcJctL2DiOfTMEO7SvfG4QpoDZ//OIvXneGdXQ\nZr73SuQQ+grkPNEyMiiVT2yHmZyZi7cNtJrBq+shWBhqdfDfU7amVGM9g5bq\nYknZ\r\n=xnJZ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG+8PQpTYTXF4oh5PStgIjhpm+0vO8Um5Nxo199+OhzmAiEAnx+Nrx6ONwnJJFVGVSbwb8seCMb+VELS8QfUBkKNlYs="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.2_1606374057318_0.27402679355545856"
      },
      "_hasShrinkwrap": false
    },
    "4.2.3": {
      "name": "cspell",
      "version": "4.2.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.7",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "1b26b54c14f282ec25d374dc86027de51e5feeb9",
      "_id": "cspell@4.2.3",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ox83ITQ4+HZFDANS+rMuyBkv6TxZdwq6FiLQkg+Xv6zJWnMkBPkGrTm03xeuAIfGWHlO+fOSS6p9c7rT9rBL7g==",
        "shasum": "34a49daf8ec8010ed7a2a3d09ba8b186d6d2ff86",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.3.tgz",
        "fileCount": 13,
        "unpackedSize": 66398,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfw82+CRA9TVsSAnZWagAAg+4P/0SxXaQFCCIJ33mCi/9O\n4Es2XOCw/vUFHqFATn+VYIjT1mhB8nLlh5FiXtSrhkJdDIh2sO29kwf0kriH\n6pnfnppQcbQe/ZgJgcp6/y7bDj3+lj10aNfisVs3l43RA8k2rRa0wTGgbXpn\nASlkYXPx4OblsyEnMtPAiD3IbxHmDKktFjul4xSCa6LQQgSUz/w5+RuY0ekc\nnoHKmz/D0/jHwPWVmAsAoANoZlXtBv4CF6VSoQVo3YEzfzo6TjWaRPDqfk3Z\n3mQqT8bU3j9Jm1TlRGIjveDWkSPkFxuk+4AXmUL19LBlGPuMps+Oo1/Ra0Cs\nMbgx/9t8PW05Qj+diGNj6FUDE3AqgUc+oc3hnjvQ2RuRkadeKwavKwpSNBlF\ngf/i2omtC+Op2rcdsetl1DMu2IBvLwEdBCJhQ5rXEv6e/iGlfxVnIV5pLwq0\nDKoM4P1JuwzT8JBlGEIwOg8MDtRkLCtyKTQvO0kEgKkdHVNzB2SE38GXQyjl\nvLGsf0tMdZwNVP7f1DyQ3JObokzwEziagkyGieNRlZ84LGcZXwyKZZ9YdBbN\nxJ6fslRLlA62PmWvQUW5VKl3/vAmsAeqJt1U/wdJSbvHfGAyGlutBW7tWOPi\nlD3noZcdUhkYpRt0lin7lygIeJwE5uNsfjD4AibJMfCrykpZ+xiucxL7auSm\nPuqH\r\n=U3q/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF/IzzgtpE9ICI6iDLoGWN65Yr7JJTubizorBeFsVFtxAiEAotkCxGXR5rn2waUAagorkYsr0qwMd+vKdi/2wTt4CAg="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.3_1606667709925_0.368640735823607"
      },
      "_hasShrinkwrap": false
    },
    "4.2.4": {
      "name": "cspell",
      "version": "4.2.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.8",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "b6cee11cf4f2a15442fd20bb7b7e1a525d46e5f2",
      "_id": "cspell@4.2.4",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-y4fkxtijImJNJVgIXhKuhncK62zMkSJrfs6WsGAVQKxVmaB2cWbEWQzR5LHEQpVueXU/NPprj7aD6ZNdmLF0+w==",
        "shasum": "db9c4856e1b2703c0c6423d77006c14630edf4fb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.4.tgz",
        "fileCount": 13,
        "unpackedSize": 66557,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxN+WCRA9TVsSAnZWagAAjzAQAI6WD8COcO0LtWnyJQY+\nxAn4Q80DLTqMUfyJfUPdR0C71Sb4rUxyzxTBgcjSBwtgItAYgBP9anAIFWe0\nyMHFw9qA+YYgEeL7UHZMmaWmAKpiFly6LIZDHOc4hVkGeoz4VvR4CBXnBJo8\nQhCSOTCRSpcDz9g3/QN61PQ9bjCWW4gjkwQPux+++bwZzrt2fRUZwJMIAFR+\n5LbnCMgzfQN39f7gLoqzPHVvBUO088HnNTwO9mVZcrjL8EYDVDz4sSkttdXP\n5gll7KNrtdWAuxejb6mGeY99CqN/nDnikbcd0lCOubvW5bypqIGIM3Yd2N3i\n1Q03+6LuGLH6RB4zIKJeFVRLtXPJiemt+I5iF/XpMwj14r5SgnpHZ8WU5OhW\nsa1+/+56XDdAWnbHFyNXIzQ7TZMe+I9FOeuwBTaZvckMAzy4FL3s8dUEsArZ\nBxteXu0rfGcdRMJf9GmVlAT+ip8KvTJNs8KvGLxqir680I2ZmNjMeRunLP5C\nfP1Kv1aGIxwgiuPqfqfkiyFn1/fBLiim5UKGOTDPAa5uMGy63XeKzB6Hx784\n6fMQMBcmzno1IgSlzyIOpzuvGQnTIpZh1N/FfOrwwp0xlcrnuXMzYTmPorvM\nPGrclkdY6NYl+tEx8FZW+usiPkpsh3vLgHmW5BiUu9vbYuxkd9T8msjkNLRG\nd62M\r\n=VWgm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEpOmLP1g/VAT9TkECRbe5kUDPaBnN+W1wJ3j2kIClAfAiEAhxZ190km/tOuw7XXaQkyu96kHCrUq1hfbSg2RDXqtTY="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.4_1606737813999_0.1810717100974122"
      },
      "_hasShrinkwrap": false
    },
    "4.2.5": {
      "name": "cspell",
      "version": "4.2.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "lint": "tslint --force --format verbose \"src/**/*.ts\"",
        "lint-travis": "tslint \"src/**/*.ts\"",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "generate-code-coverage": "NODE_ENV=test nyc --silent --no-clean --temp-dir=../../.nyc_output npm run test-ts",
        "test-ts": "../../node_modules/.bin/jest",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run lint && npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.1.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.9",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "baaaf49df458aea12986c00b999398313f269653",
      "_id": "cspell@4.2.5",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-JAlgs1I4hrqkfLdzkfCA9ynNr4EByauH57oGstIw1onsi25Htv7rzAz0E9rjXlARr3cD4lzoTSylrPI4dfmLmA==",
        "shasum": "6678d480b3f63501f0c9e75447011f5236e063ce",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.5.tgz",
        "fileCount": 13,
        "unpackedSize": 66716,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxSTWCRA9TVsSAnZWagAAZ1sQAJA1LL9Xy4pIcyDeV7HL\nErHlp8/DqTrcnksEGXKIgDUMZcZVoYafZMOzOSxZQpzzmRRAkyWFB9Q0H3+Z\ngQN35kGR+FlpHOrN+eWlFrxjs6i23DwiIrC2BlidxX0gMEFjCOu4avPWd31m\nO0wKpf/adGxjlbljpKrCa6ITtsrRcQZbL5ivs5PMPU1LPvZLybF7ubNl9pp0\naLCFrry3DkprAKauboW74XKY0R34g/dwU0K+eqFhhKVl3Mx7mcC3ItdgRiOh\ncTCfLdtJhCPihRT2B8j+jRX798feW45xF8JsbeIu0wNjGa6UMFvEMrFeeGGZ\njA5coz5RC2vm4QRwmpm7MStG8Hqbap7gbkTQIdIeRhbqGwePLSGmsIHCPJRa\nixLLq7wq1uxovQHLzcJA97pYqCN8kJjzZHXsj7plIr/X24m91ojUJFMHAhVx\nkRc9aDBBf/V2KxujSlrvjHEUcNKuVUzekAq7P8OMySFWB8XN1Jj7FvkX4zHa\n3kKJSBcuMpo+5CXsYsFgAI3ur6MbRHvGjVhcKVGUF0w1YP3KNWjxPkMn+tLC\nrKd2iE5e6EfkjXdZUFrZMY6QDpEzbFDmk2orG1mZjW7DVugKoYvcFps9PC7m\nT7dVI7V6R7n5u88RbRrvjduNt9aYOzNI2mdOZFoQ/CG9rnVVDmL+/aDBh2Od\nkbbK\r\n=Jx7W\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDPitZ3fuWIASF8LBkNrNCpbNqpV1vWtcGzwqxorOaIawIhAMUpxZNwYkhXG0GB55DAXzaE826h836nJmwkvO6yGTjj"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.5_1606755541567_0.2985147843275"
      },
      "_hasShrinkwrap": false
    },
    "5.0.3": {
      "name": "cspell",
      "version": "5.0.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.3",
        "cspell-lib": "^5.0.3",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.4",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1fdce53974f151fc74fcdd7c184fce9ad3a62f29",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language local to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for Typescript and Javascript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.0.3",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-D58jGvQngKgldPqKAKA7t8i12M4Oe7SV47EKHN2si7w1HIsp6+6beGBykJHZIr/kkI6L93HfLS94Zl0Pq75OBQ==",
        "shasum": "995625a74be3d3b895de57202f994dd4f257daac",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.3.tgz",
        "fileCount": 23,
        "unpackedSize": 77420,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfyoQiCRA9TVsSAnZWagAAcwEP+wVGwgBLPgIJYDXY/tHS\nciRFvzTHewZOYFsVqoa71g4PS0dvNF7iqN8/damT6ZXtLq4543Ys3LLd24rb\nP7d5eUrYSxaFPP+VIChj9AnzFssQxw4gwGR+Zo7KgViSnqfVDGBDJ/jqvisX\nU+O0T1nCe8OTPTtaTEQlPkLbPyUAAR4vJFar6SKjwA+7hMEacDQqJwNGlyDA\nK2bg9kAaJTfWTw/Ad0762SWGVBrPGhA/sgfcvWz+LO6MvrRnOohXD6HuNmIm\ndfb9FafTkmsRLakVlEJnHQlBq7Bwyw8P40v/sRxBQ+hI2bGnJfLD8t6FMM2E\nOXXSlnsrnJfcQi4dMfBgx6FfYWUUlaNKmLXGO5/BBHoQG2EP64xbzzzjbpPm\nacoN9Dgkefee6j9MSpaGugSJu+2tQ537IBRebJYZxY9ab02xTefeXI8je1sD\nH/XZ8Ryk9ha42gGnSrKdCVvZnAYhnl0dTlnlo2AN4/ZJU/kCL9rjaxNczBjb\nU3Z4IcZXHgb9UXtGhlceMNlQFaKm7FgRQrE67qKYhYxtzOEY+dgnHKB5omd9\nwQerT4LsmGT574L2shAvxBthfaIyqbqsj5yAG7ka14qSME8lzCFkQZJqBOYo\nDEUW3NHaHSRZrAE9mWOee9YoFJfcR0/n3gCrGEwYRSnngCLgJE0m697yR4e8\nifiS\r\n=5CNk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICA96t5FFGJ/RVfzmdQY9Vv0yVKlxXu7RLyqKOuqKrAGAiEAvDcNjCa/myrDbzm8M5bO9bWPgJG0aw5i0BUs/1x5CnY="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.3_1607107617656_0.3502010729450653"
      },
      "_hasShrinkwrap": false
    },
    "5.0.4": {
      "name": "cspell",
      "version": "5.0.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.4",
        "cspell-lib": "^5.0.4",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.5",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "_id": "cspell@5.0.4",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "6.14.8",
      "dist": {
        "integrity": "sha512-WUJSMFeKA6eMS51uhcttZ/p/SEBrFLJDWjlSIZlHsJ6KxpZYlBe1hv0a7XKb0FHKfXndpWYR+DU3Xf2U0Ff+8A==",
        "shasum": "32a3243432e6e70f475a4109ebe96478054da7e9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.4.tgz",
        "fileCount": 23,
        "unpackedSize": 77556,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2KqeCRA9TVsSAnZWagAAAqgP/AiU87csGlnUfPHS+yPB\n2OB+b/u2h3zqv00gyBnUov+9o85LU9k2IpUDjTCf+rxH1L7xl6g8opAPn/nm\nIGSvPf22ZiAWRZtz5BbSWUrXC7EmGo1HeYoIPUtXX8nGF/b1Mm+IxboZzA9G\nNU3Sr/UTncbmWrfBvPOtFJNjCQLsePzXYxl518mstgD2Q1zRuJBpzDzgBX/F\nB23NVVB1xIRPcUGkHwHJEb1vFER0tiwZnAQWyjQdknDXdeKAYeddWN2+JUKZ\nQHSKPLjSgsqLAhqiDa5qfUb50cYft2m6a4Daq7zrVl6cfSlta21nfbxJ9Mc9\nDpq/cQIv3b5PgVROQvg6oAY9nNYvj9hzrb6WvCnxs+l45NynBHL0MkvzmNm8\nUvHwGhl78jWug1ZqQsB1YD9aeYrDqKhew/+/343t+8ddJDGiAcbAKbLYPnE4\nQs1sX8z8QKvS1NoUynEfNP4z2iHpT61fQETKBcjmGLhiVET5Sc37H3LuAe36\n630gcSD5QGUcOmCMyYVnkJMKxJJnwxWXw86byZXxCSZmb4YIS2JTqkVvVrVF\nsi5rPH015qcnnJ5DssDAMrRqk1vmpHCyD14uF/YAhKDx/NPlWHsq5+63GHoa\ngi/xfdk3b01lr6mTGJdbY2h48iyRsDh9fT54IcjSv5NHBqPVbQqR3U+Zd3RE\nvEqo\r\n=UxOm\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB/VAgL8UIhjhHHoZ9nlKLj8dZRNxc0N+IPF0lXPeAHyAiEA8d3qu/sdnIVSKMiGx/nAsDiANzeaQt52N5JRJ4Kn604="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.4_1608034974329_0.3376349518345594"
      },
      "_hasShrinkwrap": false
    },
    "4.2.6": {
      "name": "cspell",
      "version": "4.2.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "tsc -p .",
        "clean-build": "npm run clean && npm run build",
        "coverage": "jest --coverage",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.10",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "8b5e769dfd824f6b01931806196039aef92a2ae9",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n-   Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n    -   Supports CamelCase, snake_case, and compoundwords naming styles.\n-   Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n-   Fast -- checks 1000's of lines of code in seconds.\n-   Programming Language Specific Dictionaries -- Has dedicated support for:\n    -   JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n-   Customizable -- supports custom dictionaries and word lists.\n-   Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n-   `camelCase` -> `camel case`\n-   `HTMLInput` -> `html input`\n-   `srcCode` -> `src code`\n-   `snake_case_words` -> `snake case words`\n-   `camel2snake` -> `camel snake` -- (the 2 is ignored)\n-   `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n-   Escape characters like `\\n`, `\\t` are removed if the word does not match:\n    -   `\\narrow` -> `narrow` - because `narrow` is a word\n    -   `\\ncode` -> `code` - because `ncode` is not a word.\n    -   `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n-   This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n-   The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n-   The words in the dictionaries can and do contain errors.\n-   There are missing words.\n-   Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n-   All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n-   `disable` -- turn off the spell checker for a section of code.\n-   `enable` -- turn the spell checker back on after it has been turned off.\n-   `ignore` -- specify a list of words to be ignored.\n-   `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n-   `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n-   `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n-   `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n-   `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n-   `/* cSpell:disable */`\n-   `/* spell-checker: disable */`\n-   `/* spellchecker: disable */`\n-   `// cspell:disable-line` -- disables checking for the current line.\n-   `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n-   `/* cSpell:enable */`\n-   `/* spell-checker: enable */`\n-   `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n-   `Urls`<sup>1</sup> -- Matches urls\n-   `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n-   `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n-   `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n-   `Email` -- matches most email addresses.\n\n### Include Patterns\n\n-   `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n-   `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n-   `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n-   `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n-   `cspell.json`\n-   `.cspell.json`\n-   `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n-   `version` - currently always 0.1\n-   `language` - this specifies the language local to use in choosing the general dictionary.\n    For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n-   `words` - a list of words to be considered correct.\n-   `flagWords` - a list of words to be always considered incorrect\n-   `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n-   `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n    **Example**\n\n    ```json\n    \"ignorePaths\": [\"node_modules/**\"]\n    ```\n\n    will cause cspell to ignore anything in the `node_modules` directory.\n\n-   `maxNumberOfProblems` - defaults to **_100_** per file.\n-   `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n-   `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n-   `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n-   `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n    **Example**\n\n    ```javascript\n    \"language\": \"en\",\n    // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n    // Including \"spanish\" in the list of dictionaries means both Spanish and English\n    // words will be considered correct.\n    \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n    // Define each dictionary.  Relative paths are relative to the config file.\n    \"dictionaryDefinitions\": [\n        { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n        { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n        { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n    ],\n    ```\n\n-   `ignoreRegExpList` - list of patterns to be ignored\n-   `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n-   `patterns` - this allows you to define named patterns to be used with\n    `ignoreRegExpList` and `includeRegExpList`.\n-   `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n-   **en_US** - Derived from Hunspell US English words.\n-   **en-gb** - Derived from Hunspell GB English words.\n-   **companies** - List of well known companies\n-   **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n-   **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n-   **typescript** - keywords for Typescript and Javascript\n-   **node** - terms related to using nodejs.\n-   **php** - _php_ keywords and library methods\n-   **go** - _go_ keywords and library methods\n-   **python** - _python_ keywords\n-   **powershell** - _powershell_ keywords\n-   **html** - _html_ related keywords\n-   **css** - _css_, _less_, and _scss_ related keywords\n-   **cpp** - _C++_ related keywords\n-   **csharp** - _C#_ related keywords\n-   **latex** - LaTex related words\n-   **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n-   **fonts** - long list of fonts - to assist with _css_\n-   **filetypes** - list of file typescript\n-   **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n-   **name** - The reference name of the dictionary, used with program language settings\n-   **description** - Optional description\n-   **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n    current `cspell.json` file.\n-   **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n    Example:\n    ```javascript\n        // Replace various tick marks with a single '\n        \"repMap\": [[\"'|`|’\", \"'\"]]\n    ```\n    // Use Compounds\n-   **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n-   `languageId` defines which programming languages to match against.\n    A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n    use `\"*\"`.\n-   `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n    A value of `\"*\"` will match all spoken languages.\n-   Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@4.2.6",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YVs7f7SAYQL8z48wIS5Bqjofo14fVqRlip6mg+RavVKBV9xB/rxfDxaQHHytkQv/XeuNYVK8G8h0ihDhqGhKMw==",
        "shasum": "fe38a783228b33835e6101b8f917538acf90a09c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.6.tgz",
        "fileCount": 13,
        "unpackedSize": 66488,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2NLBCRA9TVsSAnZWagAAYnEP/A/O5r4+t15TeKaNbx4E\naXUQZcRai4f2QWPu7IqppoqpCyRBmRN0psaI6wePcQaLDWQz99PkH4mCDJ1U\nARvNDn40x2OdELQpGcWzk8G1UnmVv4z02GhC5B+oCGYJrd+2oPxLH+vwbHTS\n+pEGy9tRAUGhnbnY7spJSMA+XJCQSxNGJ/3YuCMw8fY9HQbRgaf3AfoX7J2q\nv0s3LfzZbgbR7SIYIQ1bkv82mdBxajDXYYHtMIzPkPg8AXz5ebEC4QIIIhIL\nruUGAZP/qEMZkpcUWeco8jJOVUQsoZ1XVdR44+RNOpaGP9QPJGCrAJg7PARU\nCQoUFhFwuMGHASgXG3wv/FGaoL0YGFI3dSv7Zr4nVyLAYqs1EeR87DHexBfd\neS5uBeyvWInhao0LrQrtt+vvWJVKegnzKXfxJEXTWY2R7ySNEN6AjvUSas9e\nnwssoyEQwE6iY4ng8F92n4uv5UGkliX26R2hUDwyRXKkzA2139Ibe8PBJjrP\nOOoa9VPPs/Shz/KS8WNH9Tb2RblEK5ryTp8zO89018ps8Z3Fk+q3LXHX8LqA\nsI08m4012L8itS1t0NbHZyulmyLHWVJsaoVG6sm0bOV8QXww/ZKP6KEnCdHo\nc4NqRbxWorelqSGuGTUrh3e2iRxTKaPcQ4UOa5yB0ehpcC7JhNuxKH2u1xie\nkR8D\r\n=WlFQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDw/a/qg04rF6/hzKgzf7QroZRr62IhOMFQRtXmNhbrRwIhAO4cfovDLC/Wfj9/7A06Kx7Ms4YNT3LkP5bDbgS9gOf4"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.6_1608045249210_0.21796579043984265"
      },
      "_hasShrinkwrap": false
    },
    "5.0.5": {
      "name": "cspell",
      "version": "5.0.5",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.4",
        "cspell-lib": "^5.0.5",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.5",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "76c3eff2e0398133608b6a615afe0c235d06bcc4",
      "_id": "cspell@5.0.5",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-K+Vll0oiAKA9dwv0/cRwsVM4gYsw48Z/vUGtAZINTyUPHymiT8roKKSDi+x2ZayAliNkdUvBGjeqX28U+YLfPA==",
        "shasum": "98a255edfe1f114b1f56b0add93f00cf796f3412",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.5.tgz",
        "fileCount": 23,
        "unpackedSize": 77760,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2N2cCRA9TVsSAnZWagAA/MEP/AzOF9pwxJWMES65zyP8\nJayxDJ2ioUyiPsoNPXxjFkRhmn11df+7qGJqPaxVFYhwDvnUcExrDqjJ07UG\nkAoM12U/v0S0p1ffwZUG6S4QUBnMaiolgk3zavaCj6Goy8d3FUG96EAoLqt/\nH5QCIEDW1num1Y/Hym6fGBxoDrTG1jWeCRm2HoYmmECXCD9qZmyFIqgO6Alc\n/gh+xWOPeV+G7fD1v7vLK1cifvr30C3NPqr745O4IqDlHnQz7QhuS+I5xgWl\nzy7IUtYo5HH/lIeaw03NQLMMovpfmnnZditclR9sGGZEipTDXGwjIh6pvW4z\nUQ+j+8chRpfd0FyfBK3o0XJSKiinenQqRk3M/9YNgiRIAmd3hro4ZCGDWLtB\nPCTJ8OLJE1rO4ZRdZrpL/z5x/mgQfVAfTHqBe8hLql9eEsH6wofRE8Gx/WnC\nt0h88vz0lNwdrhxCWYNDT+0p92XnuORSoIATiopoAlcr0Wh45ZZpW6ns2HWT\nmZUIKRPs887aF31MINSHmX5/UxA17qURYCAlyFmRNNpi+5qzAsXDRzKjrLrO\nJVHb6aoERHFJIuj4IUZPziy3jBsAi0nOfTtjk/ri9OPhnUBgS118VjCUf99P\nPEmCCnuaWgvCt1BjuFBbAw882lyJOZWWgrAWVjlxbk8Ps2zxuU14zdjCoyKG\nXD1K\r\n=yb4p\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHGqC0Y/nVguGl0cbjY5MMeYqG5NL0fSZHb/GD0Rd1WWAiBHFtESscQcjhNjA50VPl919O9MoYsbVpDKsk2BH9Dnrw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.5_1608048028113_0.7213104814482314"
      },
      "_hasShrinkwrap": false
    },
    "5.0.6": {
      "name": "cspell",
      "version": "5.0.6",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.4",
        "cspell-lib": "^5.0.6",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.5",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "d72dcbadda0fe2f513eed5e94cfec01d0fda82ad",
      "_id": "cspell@5.0.6",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TMN+qR16ihfEkH2hPLiwjZ3Suul6IztdpJsm3/0ifGp90U+hJ5RdTaR9RGuhawdw6AFPYXhSswFkUQ2ltvtDCw==",
        "shasum": "1ce42bed3bea634d463a2d52da66cc4a3e461918",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.6.tgz",
        "fileCount": 23,
        "unpackedSize": 77907,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2Oc3CRA9TVsSAnZWagAAHp8P/iKugmQ0UA+h0vVaHxnv\nhV8hdMMOwB8srt50aImqNSo673oCl9/LP7lAezge3H5Hv/55nXRmJ7Af6hJD\njMPdLyjGOAEa0+tYEySr1/htg1fmIqSYa/Il57j+gg5AefBljtA+kZWD7qGe\nUWgSNva/DQiWjkPT+nFDuvVh+HeZZhmljXSpqAShXeZt95HaloSUxDw7lT4Y\nFcdLJMfmF86A5eyNdZmI+6zO0+9bv0d2qptbVBIo1hiPdM02lu7klF60PIdo\nAYSfbVKx1cObwjZyW6n511KUCVk3AP03CMsSbyb3vR59uQ6uv/v2EpuK2t7K\nCc4y25YZvN/EEbF/CpWh0r+7RhOxUjGUgLXKHYdf7nOpfde4VgoOetja+kcW\nm1rHHgMTa5971TBHcIFpuD4894Ac8c8kf0K1MZCUFjAHUDPwuZO7uguiF9vr\ngclLSRvTwW+xIS4mpGls5HE7JsXkmsXc/3IWFMjM/IahyuNpTh6waDeSKEzL\njD+UwAQgwCNi5466xQ3EvF62VyAPrbRncxN1T1+BmhwndMktESjBABPdR5e/\nbt8mW7ekxb9FpTp/VyuX+6esapJiD6mpfMMxZg11E4zzkDyZo8jKLL71iTUz\nLRCZktyTNwhg8EflQ4TDo7KeoTc2e18fr0spqaEw8otYmixmUP7V33XAzZrM\nWKSN\r\n=Npe9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDiobX8U8lw1n0uNSexn07hDDl8pew+Cp597AWAQCh8LAiAQTYmyj8zb0Q1ZUKBLvMvoUy4olOEgc4Wu0cf1BcdVzw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.6_1608050487159_0.7359208995537254"
      },
      "_hasShrinkwrap": false
    },
    "5.0.7": {
      "name": "cspell",
      "version": "5.0.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.4",
        "cspell-lib": "^5.0.7",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.5",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "a4e69ac07ad0208ea2227a0660daa82528830243",
      "_id": "cspell@5.0.7",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-SeZeN8ldc3Z1BQ1qvZph9ZLj7YijyiLpGSl7HDxx2ops3YKvs73EvGw5fuMop5s2AwzEoUYpgi8/gIRQNd1uSA==",
        "shasum": "cd2492fe1d72c790e2b12b9d31dd1409151fd08d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.7.tgz",
        "fileCount": 23,
        "unpackedSize": 78054,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2hrHCRA9TVsSAnZWagAAhyYP/jHj2PCdQB3BfauieJLE\n1AfkameIDhFSQKl3s4vOFt7eIzNkzBL07Tzk24pCHuaLKhub747svh7PrtCM\nCan/13AVe3apasER/wvT8G6EAGlouIIaL4FyMAEaFTzkcp8FjE/eoOkJbOpF\n+ZYgSxJG/fUEd/QM3sOTXlr7KvVmGOLG9xUAMj2cCSDpp5LI50vGTuawi6+l\nmbm1oKsHbqfdqYiCsbBQKnKNKk5XtG/oEm0wZ70V4KpnUlq/JYivzw+0h25P\nKoug4jL7wI1T0C0K8yup8et7RrW3izQD9iFaU9YQQl4KArdoFzklBU5L+CZr\noG6OaQdflUmvKmqr/HT66PqsmLs3r/4FyBl1D/GQsdzVkqlOk/q577cSgswo\nwuW5r+PCY1w7SxlXUwUcTECQXWtmnVNTtoiu8hEjQhGFj9rXn2rwDW2jYjYM\ngnGp56i7XKYRkxyqgSSIjG1WVO8CpHM+mpNAnbW8/26xK4875Xi0d7vV7ekO\nXGpHKMshD7hGsIve3DQvdqsHN9nkrAdp79SRW0iLYKmt5AXXsmlA90C+mvPE\nhYSAWvcZ7a7SKWerDIrxuLqfMdpE4/M81EIj5FXJ7BxX+U6fJ7KIOk1cEYoz\nzfATBGG/boqT36ideeUpNTglOaDD0ysgto5a8q8aCiQwyMhVpN5kEKvnUQFf\nD67+\r\n=fjCV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC2poVimyE5QfVcKr1O+UwNGuSkeDiTZUqoXCt6hpKrcAiEAhVOYQTTnzWIAlsNUPQEui+REvCC9E4muUkMsYyy8HIk="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.7_1608129222831_0.30884114447362476"
      },
      "_hasShrinkwrap": false
    },
    "5.0.8": {
      "name": "cspell",
      "version": "5.0.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.0.8",
        "cspell-lib": "^5.0.8",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.5",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "ac87b0b0b4588fa9f5bb49ea2bdaefc4db1070fb",
      "_id": "cspell@5.0.8",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Ie3kJTrklT3DVAqcD3LG05rBtT7g4Sm1JJ+nZkwnWy7sH7NqOaYWOafi/VyG4KPE4hZosX0H24LKjTsSPp+qMA==",
        "shasum": "355bf11ee2a417ca9963223e5c16ffc590af4abc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.0.8.tgz",
        "fileCount": 23,
        "unpackedSize": 78505,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf20tRCRA9TVsSAnZWagAAfrUQAJkOHuGH+7sUul7yVF2m\n0PKV1PABLLbWo1Vg3A8pSC2tAHhflXWAGsd/W5Ql0uaJ2XC7kzXgqnXNK7SG\nx0KkaiOff+39mYS9snXv6QFWFr+ClVoUh3QsqeWJ6u/bWuZ6/I5FzCSNkP5q\nyxFLellAQqHxOrCutA6VyTNX23OtoJeZaxVIa+YsHZUWOaiTJ11T25g5wMsh\n/YOsFF1HNtQl/SLCZNqCbUPsGNzUPPwH1XgqHz8op/kFSoDbnzdIS6Zz30Il\nM0oGDeopVWaHTKnAkzNlsR7WiavAHA7Y+YzJjip/8cCVd3wGu1suwSfJGEXP\nR9AwZcVNEf/mC35bPy23/zlrXxm2d+cGsOHBQlka3/ZLkY0QJqiQ/GwExYvT\nNLBAZjydKPBVi338hmyWpYWvNlJjHS+hizt2xUIveuGt2GxSB4UhzhDNy9Ef\nRoN07eI6bABZS15FpxmgRERT6Ylv5IoUFlMcCVVQv60A8/wao3kEZv+LzxrV\nLURk9oPArV1Prg5npEUcOnIr7XZrYozqNIBm/+XRaU2cHROvmMAslO6E/BZk\nZJtDyJOrQG7+SD/07f2wNU1gmxP23QLb/AH2tHDfx/xQBNH05YAVFFgkrol8\nYwin1PnxYfGcz72t3uckNdbeBBpdYjFx0so2BbRqhIXTJ445+KbV6ZaP6MNy\nJUYz\r\n=cKCd\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAmNVQJYkxvfhg29k/CrHBV70vvEeGECPpISLheR6mGkAiEA7fG+/1UiPB/+Zl09Ou68sKtXXn18MxA3H+pexXjfhwo="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.0.8_1608207185218_0.1307951594817678"
      },
      "_hasShrinkwrap": false
    },
    "5.1.0": {
      "name": "cspell",
      "version": "5.1.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.1.0",
        "cspell-lib": "^5.1.0",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4160b964818f29a97a29b36e583a6f4d7c8de300",
      "_id": "cspell@5.1.0",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Av7ilLFeLCezUm+UFZ8kgbyaa2rB69jf/hacJorziSV5xEPkmbkdjWAbR7rg/0UAe44tSYA29rmUody+wojY1g==",
        "shasum": "ed54cdcbbd564c0b05efacfe830f10e0ce2bf71e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.1.0.tgz",
        "fileCount": 23,
        "unpackedSize": 80585,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf6ESyCRA9TVsSAnZWagAAckMQAJqIO3dbzWn7utZtwqma\nAuaXdkwBwcycAxVhPVT3yvGKO4HLryOexNV74/yOokhRAIdlUhhmMyRKqsy4\nydDOXLwF1D9p4fLr9/45It72wCwxTKicooAoypFHbk/x/cu9cxrtQ0Z1Jkep\nTGpeR2gcfp7FNcxzjDGEsk3rnMIzXr0yA7Wthnw3UMG2IQSEyne3dIWyAJ1o\nhWEZyXscIriUDb+Lib7Jcxg1rExeuCYLkwIeKAsyqKFjTEGSfeFp/GuWt/Yl\n11vq0+rsT4/xTimll/jGyDHSerYwrQP8atfmo5X2KX/1GzF0GxI9W9UH3Si2\nhl9QPdwoBwRtv/4lRPDlH1eruQ+EISfx4TBgjWVCbDrUsET7kwYg1w9B6F9p\nJdNzE2dHRJElcF/9lewd0gFM2g2/GsLSTRa1VvEzmMm2RXiWjr+ssgWbF9e2\nLscZQ/PbpOkZyMF/8O9/0wfGkTEjvwfdNp1kkNfdkljbl8QHP78yjAff/5z+\nLlRnsBisiBGboF7W1u9nQmwmOesYvhWRz6A8MdtOsO0opNt6naAZ/aIH3fzg\njZriIFjvTv3dK0X7TyUXoCCPxma9RBRG9PsyK6iAgpdSNdaY1Epgz8K6JNOD\nH2ltZ+hlugBx5QNJc1IubWLjlGYvA0+n9DupZya52JaYrJ5z0+rI9p9gQbkg\nrCT/\r\n=h8PV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAZVkBcSWXbvs/yIF/gb3zymFg47qcnyQ2cTnsfbilfKAiEAmUDAlWbJVayf+vBqzqGmfTRB1N+w7QXg5rgTWqGRmMc="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.1.0_1609057458423_0.7725388742499739"
      },
      "_hasShrinkwrap": false
    },
    "4.2.7": {
      "name": "cspell",
      "version": "4.2.7",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "tsc -p .",
        "clean-build": "npm run clean && npm run build",
        "coverage": "jest --coverage",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.11",
        "fs-extra": "^9.0.1",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "bc34247217c4ef0ab9ea55fe04498626988cc4f6",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n-   Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n    -   Supports CamelCase, snake_case, and compoundwords naming styles.\n-   Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n-   Fast -- checks 1000's of lines of code in seconds.\n-   Programming Language Specific Dictionaries -- Has dedicated support for:\n    -   JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n-   Customizable -- supports custom dictionaries and word lists.\n-   Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n-   `camelCase` -> `camel case`\n-   `HTMLInput` -> `html input`\n-   `srcCode` -> `src code`\n-   `snake_case_words` -> `snake case words`\n-   `camel2snake` -> `camel snake` -- (the 2 is ignored)\n-   `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n-   Escape characters like `\\n`, `\\t` are removed if the word does not match:\n    -   `\\narrow` -> `narrow` - because `narrow` is a word\n    -   `\\ncode` -> `code` - because `ncode` is not a word.\n    -   `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n-   This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n-   The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n-   The words in the dictionaries can and do contain errors.\n-   There are missing words.\n-   Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n-   All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n-   `disable` -- turn off the spell checker for a section of code.\n-   `enable` -- turn the spell checker back on after it has been turned off.\n-   `ignore` -- specify a list of words to be ignored.\n-   `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n-   `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n-   `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n-   `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n-   `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n-   `/* cSpell:disable */`\n-   `/* spell-checker: disable */`\n-   `/* spellchecker: disable */`\n-   `// cspell:disable-line` -- disables checking for the current line.\n-   `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n-   `/* cSpell:enable */`\n-   `/* spell-checker: enable */`\n-   `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n-   `Urls`<sup>1</sup> -- Matches urls\n-   `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n-   `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n-   `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n-   `Email` -- matches most email addresses.\n\n### Include Patterns\n\n-   `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n-   `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n-   `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n-   `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n-   `cspell.json`\n-   `.cspell.json`\n-   `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n-   `version` - currently always 0.1\n-   `language` - this specifies the language local to use in choosing the general dictionary.\n    For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n-   `words` - a list of words to be considered correct.\n-   `flagWords` - a list of words to be always considered incorrect\n-   `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n-   `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n    **Example**\n\n    ```json\n    \"ignorePaths\": [\"node_modules/**\"]\n    ```\n\n    will cause cspell to ignore anything in the `node_modules` directory.\n\n-   `maxNumberOfProblems` - defaults to **_100_** per file.\n-   `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n-   `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n-   `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n-   `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n    **Example**\n\n    ```javascript\n    \"language\": \"en\",\n    // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n    // Including \"spanish\" in the list of dictionaries means both Spanish and English\n    // words will be considered correct.\n    \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n    // Define each dictionary.  Relative paths are relative to the config file.\n    \"dictionaryDefinitions\": [\n        { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n        { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n        { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n    ],\n    ```\n\n-   `ignoreRegExpList` - list of patterns to be ignored\n-   `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n-   `patterns` - this allows you to define named patterns to be used with\n    `ignoreRegExpList` and `includeRegExpList`.\n-   `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n-   **en_US** - Derived from Hunspell US English words.\n-   **en-gb** - Derived from Hunspell GB English words.\n-   **companies** - List of well known companies\n-   **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n-   **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n-   **typescript** - keywords for Typescript and Javascript\n-   **node** - terms related to using nodejs.\n-   **php** - _php_ keywords and library methods\n-   **go** - _go_ keywords and library methods\n-   **python** - _python_ keywords\n-   **powershell** - _powershell_ keywords\n-   **html** - _html_ related keywords\n-   **css** - _css_, _less_, and _scss_ related keywords\n-   **cpp** - _C++_ related keywords\n-   **csharp** - _C#_ related keywords\n-   **latex** - LaTex related words\n-   **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n-   **fonts** - long list of fonts - to assist with _css_\n-   **filetypes** - list of file typescript\n-   **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n-   **name** - The reference name of the dictionary, used with program language settings\n-   **description** - Optional description\n-   **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n    current `cspell.json` file.\n-   **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n    Example:\n    ```javascript\n        // Replace various tick marks with a single '\n        \"repMap\": [[\"'|`|’\", \"'\"]]\n    ```\n    // Use Compounds\n-   **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n-   `languageId` defines which programming languages to match against.\n    A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n    use `\"*\"`.\n-   `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n    A value of `\"*\"` will match all spoken languages.\n-   Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@4.2.7",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xbeXIUUWLkfZWCznbcFAz/riue3Xc7GR+KrlcWwBYQ5ubKXF/QL/ZItw5bVf47oAcSPljVT90cBNrb18J/QJtg==",
        "shasum": "3a6d8bf604c13b75ee657c3338ae2b0703866105",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.7.tgz",
        "fileCount": 13,
        "unpackedSize": 66647,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf6EcaCRA9TVsSAnZWagAAsN0P/19QY9V7Q1Z+Awu7iG4O\nHzt1fFIED+KJ7hCg7Qa7QFGeLM77TgmNALWxOSlUd5/MIcdx9H7zQxs9qFYz\nJwEfl6RnV1rnKJVw5sElhV7ozJdV2d+XODqtx3YWQz3HmVixYscSqYB7eYcB\nsEj2jH8cwTWZgsW7PEJWf7lAB/nU7LaXeFvW/KMAc0/YuxIprYr6wFifTr6z\n0MF4vhsegnHuKDil4ZIDruIwpxgE1+ikj3rJwqjWe62Im8WejIZumxCZW6Zr\nK+RBpaJg9qrkHMiwhJCCT154vfQL29hbbydDqzeRnuGRhRPuOYCiXw3KyIFc\nRjPy8JlT5GpQw4ohs8dprTFsUBXxx+3dcyWMemMhVKvhUHSPd1y4wOaCbSkw\nXFZsG2e+Y5wk6kToEAprUeZWJe0Bcpk9NCPtU3gBqn5J/U4acMdyveRrNR6+\nV2QD1aTe9mTMulxw8le7jkgdrTZ5Rsj4QAlVnshC+a9Ij+u+XasoKVu1d5vb\n81rwdXX43Ksti66ctqrVG2OfvZkll5pwQoj0ncWCPMY4orHufhsahkmNLWW8\npFEqsLc+PDTC/O1tCyzH99aFbU8FK8S1OZsSZ0nVBgyDBTSMUOpd8l3UCc3Y\nq+lBUy+YMw4rj8XhvG7nzzAuvp0oviiSr5mRKwdEVop4TPmsgv33QFeyXZQj\nTS8K\r\n=KPfs\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDyLCCSuQF/MwYJX4LK3iCxBK/dSu0uYZ0NSa7lLQUitQIhALFC2t5tDofREC17zFXmPMn3eTUAJQVnbJGQofA/HVpY"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.7_1609058073786_0.009499229749725613"
      },
      "_hasShrinkwrap": false
    },
    "5.1.1": {
      "name": "cspell",
      "version": "5.1.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.1.0",
        "cspell-lib": "^5.1.1",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "b050a31e16b43a15d9d76a3c36263906036be54b",
      "_id": "cspell@5.1.1",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-KQIMO8Zl0m4ke6Zqt8Vwy6ytwsmlkRB+3C5Nl7Z/D9ggi1yGb9cXIume+ec2o+vgwoCWmbePQlo4eFM/h5mOMQ==",
        "shasum": "5d8b3980142a9045451d7132ce36466843f75073",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.1.1.tgz",
        "fileCount": 25,
        "unpackedSize": 84242,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf6ZYOCRA9TVsSAnZWagAAbe0P/RxDjAbo8vAkxeVlfzyv\ndSEdqf2KtzMHZTOpaYIzcERKdEHGiPX65cFaYmclzKh6QqEtJBRUkeH4nm3x\nJQdWbcAhZU+DvZE18WArNEjDbgprZWPfxIOU5+UG/ZuJh/ltV/C9ilkL67EO\nCzuHFWtXtxLbzi+0XdgnPtmESQRRZgRluh3n3uqkUCDWl+8uXTUPvMpijTKw\nVPbXDmlofX1/xBLfOwIdwpTMxUOR9Agj9fh8wc3n5oejfh23kmZKWuHUt7o2\nMX9BOEJOsTVVJclUd6cBuj5Dt5Gha+3l3ll9VAasFQMDtxwP3nxVKuSHxjBR\neEdmH7T39D6R+/wtcqzxc+uBkAggrZI954MYRb0TgQPRjptwQp+ZXj0cABaz\nvIOMYB2X6zbEVUjIe4+nGndtQra+ezNJpc69mJwvP1d6jNsTY/zgjumNSPSH\noGzuv/tF/ssUiD4YMOpIwV4ucPrXlutSLOA3tUVsUaULuupuLg/NU6hYyFQE\nfIPBKotIyre+k+nPBHtvccWkf9Ccl+TVEw0sQuj8CrpCkhXHczpj757imHNF\nMEdIiKi14Y1NcoadlQgPZ1iMlnAMsvZwqPANGTRBdxzdK3klKd2qFCwt1WkX\nr+Tccm768o5HDq5veK/jD2n78JlWG6kkVFp5zkdDMekMCE50X6wssELUB10J\njDEP\r\n=L6EV\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAOrXoDc/EC3mLzJZRolARFSfUtCHHX9+gIH3Zi1Nls7AiEAlziEQNda88u1E2LqPRhpCurOcHQggxUTki7zwIs9QsE="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.1.1_1609143821729_0.7094849089049573"
      },
      "_hasShrinkwrap": false
    },
    "5.1.2": {
      "name": "cspell",
      "version": "5.1.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.1.0",
        "cspell-lib": "^5.1.2",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "e5a0477689cc633d486e9c4f88c55370cce4a5a4",
      "_id": "cspell@5.1.2",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-2G+hCNQMvTOpSI8wTivem7epcA3KuF8DlIJvetpuu26duUKbE4Cw1CqzjFVsDRCHAPTiZdfkbvUtVeQ8QaiDOw==",
        "shasum": "a32b3acb09a6d67647dc98db9ac0575c21ea3705",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.1.2.tgz",
        "fileCount": 25,
        "unpackedSize": 84389,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7djeCRA9TVsSAnZWagAAE58QAIuC8yTBtNlMRczXbeYd\nBqtpsoDJdHa2AQ8VwWsaSRcq9VtU+r0QYI01os8m+eJ9PQbo8uMb0bO8AdDq\nV/Ie1/cAuFHY1ZpNTBRKkHm3vymPdA71fYlcXwiTJRqzMpwfrh2rdyooFQ+S\ncnsoY6DR7bJg4rGBLWvQCT8D/NkgP9Ucd1fITeBBaGD0LzlUiD4tqQR+kPfi\nqQZZZKNjgK/eOHDtO8DB6IooAvZx1ezdw3TMa/DRrMRzGoBPS/51y76p9eWC\n1ynu/L+q+O31FhfFk2JXTikERcgR7fKdUCCWRhr8m9FqE0b2zhTMk92bstdD\nEEP6heQONIqDtDLmJE6WvmpzcpY5kCFvpgERk3fd8f06eEFbUsp0ypjWHfJ+\nzK95kSEqLTL2f27u5rJ65TRIE40WOv8eIoBdCmT6h1WC6G27hPA5lOrGun3+\nmABfxg7WYmRPjCszkouKlieYWN+a7HnfVlUx7UMDqkK2Ig7Immr9o723pD7Z\n9oAskb60/Ish+ctPumv3ComF/1MPm3xJY+7yg+R2/cia9P+em9+qZfgiQjFG\nxqrLZ90cjl1wri7RdVFGKo819c6bbkrtNw9AyBhgWIz/YpQSv7/zphawFS1H\n6CQxl+FANnK8zzlqCvR0X21ZznKxM0sVTVNGRoyyD3V0zkf8aGXz6J6v4u7+\nlKjv\r\n=Qi6/\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB9GqztuGBlhi2mT+62/RSOSVjVUg6f9iG8y2XEB08/kAiB4hMNOlmjmRnEXYHBzbBGMl1AdLMWN11ccR/WmF4+F8g=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.1.2_1609423070415_0.5156410715789903"
      },
      "_hasShrinkwrap": false
    },
    "5.1.3": {
      "name": "cspell",
      "version": "5.1.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^6.2.1",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.1.3",
        "cspell-lib": "^5.1.3",
        "fs-extra": "^9.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "740afc40e48badad4b85e58e8db7f148f7ec66af",
      "_id": "cspell@5.1.3",
      "_nodeVersion": "14.15.1",
      "_npmVersion": "lerna/3.22.1/node@v14.15.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-pZ5EecESCQUmV1pD6/ehBjS+iNUfoJDjH22TCVF1P+ClHvtkiStSxIAtBPdzrVuFyUtYxTB5m6DnHInoVhx7eQ==",
        "shasum": "a62b6edc82621229a33c5d5810b20dea5a41facd",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.1.3.tgz",
        "fileCount": 25,
        "unpackedSize": 84536,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf9ISFCRA9TVsSAnZWagAA/j0QAJNUs+PPaBlRO7vVeqSI\nAvWq/O1BS1nt5ygTz2UotdiibDu7dLdFFyaK3U+ZNOCoTxe0wKSkxdlcpF7N\nn/dbfAzl2P1wQQBAJ3xsRGDdTv8xA9RsR58yRHW5vS5KOLj8IfRGkH56OjUn\ndRRSfuCjGcNsakCpxBJfFooIOPu+G3tl1D/XKQifrqRd/XSZV4vx6pm+HXnS\nlvbJRvL1bquthzsjjn5Gm307QDEgIuvrciIIXIasBZXJb8xl+GYaxzbHiWMF\n4MLSUEAwE+50B+Mqn/diuzaRGvFUlQwS6izMTAEbrTNDy9mZqeOgI/Ej2sK4\nxpbBzPjrW0EUmX+DzdEIUNZhlQAXp4cEZCFUS74b42YwqdP5/wYMo4jqTbu8\nccN4/KRtjxXJrpTJmBdgAyEgiDZUI/BBLiKlbVH3BP/w1IcZi1c4SXRw4BeW\n9kA/h28lsnIgE5Lm1z1XSxWnaJzIAp5B3jiIeN5jwzYpn8KLhmm8244AxPm5\nfLaRnrgFFbxdVxT8ehaZqQRHI30M/tSfKxgWohHLa2vMXjv3TcbSugOWySeM\n1VS2J0tR0O6BYnr/5s9iKgtM6dXXJTKm4+aHKszr0zkPd5EsUNHiK0+IOz9k\nniIcLe1oI1KfJdAJ2lZKItvZptMC7nqfCdcYh9JxGX8A5BK5TB4gOuphj7ru\nI6QF\r\n=F1YS\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICX7AU7BJx3NkcAGC4dPqoULP0AEXcJNmE0xUdpKM7qDAiEAlcmnztlIuLbq3oW1NdOqYLbSqzboQ2z0bSkVfpH+/Kg="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.1.3_1609860228990_0.4104647264497865"
      },
      "_hasShrinkwrap": false
    },
    "5.2.0": {
      "name": "cspell",
      "version": "5.2.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.2.0",
        "cspell-lib": "^5.2.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "a93baa0a10cda2b7454c165f4a239d7451d71e2c",
      "_id": "cspell@5.2.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Vpb4KaoTgYGofqwoKxMJGQY3Cbqs1vci2d3VBHHylbt+/XI11E2mfaDT4D2YYbejvmIQq4rHCL4gKYzRlWBfaw==",
        "shasum": "1c828c0911374d845954bb555c440fa91e2d3cc7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.2.0.tgz",
        "fileCount": 25,
        "unpackedSize": 89634,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgC9ksCRA9TVsSAnZWagAAUyQP/0Bb8YQVfgin/RvJEJjB\nkh51dlP19HGcDiOB/p0rJ+bdK3zQQV3DcwHHTYAPQUv3DwaWGOr3O/hQe0Mf\ncOUNnTVvN6JsE9BxAHuFEGzMMY9GmRYRlOuvQ3cD1FgDytkb9vyEliHbkG8S\naeffOl8CmDnYciKJBJVAAXnFEsesfZ3+Y+yuGYvqdy8RfbpVHV3VcyCCUTgd\ncC5qzW6OepFaiKbqAwqDRgK5xZ98M0SAkY+h5qysOGrGcNr9vJrhUy6td3pU\nKDtqmwbxfNxdO9cCRwfvEe3lLYSUC9UMKpePq5JxiFhHOXVP2fN+SWPTKMTV\nYs+uEeUVyCCWqJbI4qbE2NtkTdebMmbykdmhPtutS5of8jmZdybpjLo9k5VG\ngU6IvmqmBRlIA73u6+ikkHpy3uD5fdqKa81/qwH3So5oziz2LhAsOEktKef9\nG5OZgXCi8PsUQCtZuHwrxa6VO4KlFn6yywNLJolId743qzYF0O+Z4DFKEsgG\nOrt60jBGsX8kr7HZFUFVQ8nTmTEK4plYEGEf4UgO7DMvst8KhGGOUBJr8Mg/\n6SYebMYCwqMqXlbcVXeHKYBP9Bv4LaQI2XOia7n7zgedTcvnLBZOASQRUlIR\nzxEXZso70LZj+g5nKaDKAyXq+z7qDf0oDU69Jq+JUiYyJWUd5GT/VYY41BEv\nInT7\r\n=R8Tu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD1KcOHjIS96a93OIGuiwr4G3cYesDRNKCVpRNqpJK1uQIhAK/LmdvWibxUYYZoemxGlNwb9LR5BI+Xb2P8kUE8h61a"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.2.0_1611389227790_0.555541596470918"
      },
      "_hasShrinkwrap": false
    },
    "4.2.8": {
      "name": "cspell",
      "version": "4.2.8",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "scripts": {
        "clean": "rimraf dist",
        "build": "tsc -p .",
        "clean-build": "npm run clean && npm run build",
        "coverage": "jest --coverage",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.0.6",
        "cspell-glob": "^0.1.25",
        "cspell-lib": "^4.3.12",
        "fs-extra": "^9.1.0",
        "gensequence": "^3.1.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4"
      },
      "engines": {
        "node": ">=10.0.0"
      },
      "devDependencies": {
        "rimraf": "^3.0.2"
      },
      "gitHead": "0155d19d140b50f7620fa8ab23e42a2a73c6c13c",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n-   Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n    -   Supports CamelCase, snake_case, and compoundwords naming styles.\n-   Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n-   Fast -- checks 1000's of lines of code in seconds.\n-   Programming Language Specific Dictionaries -- Has dedicated support for:\n    -   JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n-   Customizable -- supports custom dictionaries and word lists.\n-   Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all javascript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 8 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n-   `camelCase` -> `camel case`\n-   `HTMLInput` -> `html input`\n-   `srcCode` -> `src code`\n-   `snake_case_words` -> `snake case words`\n-   `camel2snake` -> `camel snake` -- (the 2 is ignored)\n-   `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n-   Escape characters like `\\n`, `\\t` are removed if the word does not match:\n    -   `\\narrow` -> `narrow` - because `narrow` is a word\n    -   `\\ncode` -> `code` - because `ncode` is not a word.\n    -   `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n-   This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n-   The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n-   The words in the dictionaries can and do contain errors.\n-   There are missing words.\n-   Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n-   All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n-   `disable` -- turn off the spell checker for a section of code.\n-   `enable` -- turn the spell checker back on after it has been turned off.\n-   `ignore` -- specify a list of words to be ignored.\n-   `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n-   `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n-   `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n-   `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n-   `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n-   `/* cSpell:disable */`\n-   `/* spell-checker: disable */`\n-   `/* spellchecker: disable */`\n-   `// cspell:disable-line` -- disables checking for the current line.\n-   `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n-   `/* cSpell:enable */`\n-   `/* spell-checker: enable */`\n-   `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n-   `Urls`<sup>1</sup> -- Matches urls\n-   `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n-   `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n-   `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n-   `Email` -- matches most email addresses.\n\n### Include Patterns\n\n-   `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n-   `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n-   `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n-   `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n-   `cspell.json`\n-   `.cspell.json`\n-   `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n-   `version` - currently always 0.1\n-   `language` - this specifies the language local to use in choosing the general dictionary.\n    For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n-   `words` - a list of words to be considered correct.\n-   `flagWords` - a list of words to be always considered incorrect\n-   `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n-   `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n    **Example**\n\n    ```json\n    \"ignorePaths\": [\"node_modules/**\"]\n    ```\n\n    will cause cspell to ignore anything in the `node_modules` directory.\n\n-   `maxNumberOfProblems` - defaults to **_100_** per file.\n-   `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n-   `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n-   `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n-   `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n    **Example**\n\n    ```javascript\n    \"language\": \"en\",\n    // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n    // Including \"spanish\" in the list of dictionaries means both Spanish and English\n    // words will be considered correct.\n    \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n    // Define each dictionary.  Relative paths are relative to the config file.\n    \"dictionaryDefinitions\": [\n        { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n        { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n        { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n    ],\n    ```\n\n-   `ignoreRegExpList` - list of patterns to be ignored\n-   `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n-   `patterns` - this allows you to define named patterns to be used with\n    `ignoreRegExpList` and `includeRegExpList`.\n-   `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n-   **en_US** - Derived from Hunspell US English words.\n-   **en-gb** - Derived from Hunspell GB English words.\n-   **companies** - List of well known companies\n-   **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n-   **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n-   **typescript** - keywords for Typescript and Javascript\n-   **node** - terms related to using nodejs.\n-   **php** - _php_ keywords and library methods\n-   **go** - _go_ keywords and library methods\n-   **python** - _python_ keywords\n-   **powershell** - _powershell_ keywords\n-   **html** - _html_ related keywords\n-   **css** - _css_, _less_, and _scss_ related keywords\n-   **cpp** - _C++_ related keywords\n-   **csharp** - _C#_ related keywords\n-   **latex** - LaTex related words\n-   **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n-   **fonts** - long list of fonts - to assist with _css_\n-   **filetypes** - list of file typescript\n-   **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n-   **name** - The reference name of the dictionary, used with program language settings\n-   **description** - Optional description\n-   **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n    current `cspell.json` file.\n-   **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n    Example:\n    ```javascript\n        // Replace various tick marks with a single '\n        \"repMap\": [[\"'|`|’\", \"'\"]]\n    ```\n    // Use Compounds\n-   **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the local.\nThere are two selector fields `local` and `languageId`.\n\n-   `languageId` defines which programming languages to match against.\n    A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n    use `\"*\"`.\n-   `local` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n    A value of `\"*\"` will match all spoken languages.\n-   Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language local. i.e. en-US, de-AT, or ru. * will match all locals.\n            // Multiple locals can be specified like: \"en, en-US\" to match both English and English US.\n            \"local\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"local\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@4.2.8",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-eqan8+lCU9bSp8Tl4+SR/ccBnuPyMmp7evck/RlMdFTjLh/s+3vQ5hQyBzbzK8w2MMqL84CymW7BwIOKjpylSg==",
        "shasum": "69b4c6f4c1b628f0b51d8618738d061e497d76d3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-4.2.8.tgz",
        "fileCount": 13,
        "unpackedSize": 65964,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDAxfCRA9TVsSAnZWagAAnUUQAIZ5pHhsNm9M/yA5G5dh\n8gSm9jfcu8hJaIqg8ZJtQNDofo0dTe+cc7hEtbgJN4vuiPvI9TWjreXA7pg/\nMuJmLUCJlRrpoRxzFkbQ6DNARagx23WMiR4qe8R37DUSX9MFJl7hHIgUAh2y\nzT5aiqS6pgtLjtM4PcIbra+z2rXr/YdzDyTdtA6Ja6PdpsWkzZrjAW8di/O0\nvA52L9yMEdBogO9kHTQTT8adPaIAKSlTSP2z4bNBacqxKIw1qJnpvM0PLJ+N\nBNSRkDWPugoDYxTwc6GdK9vYA8lDME2Fgd+C97te3R4Bb5PyzB4JOfbV6LL9\nTIxm7nQ+RqktbS5AuGLibZfvK2r9HxlOaXq6tyjSRZ1ipRgcB59w+OgNcJjM\n0OBf+oQUqtf0CUcfYuKc3tMS2RN6txqU/MMdSRhezQcHj21h2U1h2m8UJhNp\ndHq++e1AxvzEvNYwbhz6YUS8JZdpGTedl8sfHOk0Ded7RWBMZoRev+RDW1Dm\nu9YDihEu1UHcQu1/tZBHKewK9f+TQ06FACVxcpZAalg23a1qf+7zRT0T4rI5\n3N/ClnWv2ff3Yiwri1eebdNLrk+4bdou8ocn3m4RS9N9pt3VhIkv/BdwAVlJ\nACNsbDBPy35KBuPJFjMRcNSYEPjcrZat0aS/brsC2J2u3bKDrqpa9440fHXV\ntuPj\r\n=M2hJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIC8H3skydYyCGhtA0PA5cxwsrJNKTE1yYKZcYdtE+U+/AiEAhd87Ayc6gCjNDVrxYilyR5cfK+ph433nDqIHmXlj2gA="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_4.2.8_1611402335546_0.23868349953723644"
      },
      "_hasShrinkwrap": false
    },
    "5.2.1": {
      "name": "cspell",
      "version": "5.2.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.2.0",
        "cspell-lib": "^5.2.1",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "63572382b9cd82adb41cf7b734b3a1c0736e8ef4",
      "_id": "cspell@5.2.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iPAfiSfc3ow5UtHmO/1MwH7/gM8h3DCbB0y5JUqZV+xYanQAiQaF5ratuxMTu9NyP0dIMz3+3Wl/W2s2Xtbpuw==",
        "shasum": "81646bac13b39bfc8ea09e95a992547b3b26a980",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.2.1.tgz",
        "fileCount": 25,
        "unpackedSize": 90114,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgDDZECRA9TVsSAnZWagAAPFQP/j0JqrhTDNKvxU8iIkmP\najoQHdUMvx0kS4GWBCa1EASXIdXxK63Wa/fYOs5l+qgCw/ACLYIIrrkd7ix9\n0eYnUj4xsQyfoZh+bIypnbazE15EoekviBm3DROBMnifEPLlhJPOqFupJq8J\nGEnAUc2g+9kUqQoifee2En/BlDMYcMbOlcJq9abBkICPJEBWnYk6kTe+UQRd\nQ4awN7bMgq0klq0VOvZ7vW6BoIUYdAJ2OoSA0oTs1x/Teb0cmNoxmcWJ6fsB\nIm3B1VDgit31Epj77ctzw/ot1HNuMFgKfLmWCQlQ9w5gOKwtuiuS6J0u1Kcd\nHjUfXdzKvvyMrad+TMuVDdtAKgTEiNDDbrxvA9awmtqb2MXLB6kEiYYGanVu\nmhdO2cgO1wzAHvcMV7nTWWTD6VnaWicboRLr1WdubIDG9lDpwTu1yPR6oWvJ\nPkSuOs36Ha5g5I1YmkWqj7p9IhV7Hk0Lc3Jff0QT+fDtE1GPIvAqtJ7ujtRw\nXJwuoUWOndyZe6sxuEqo9ehkrAz031FhyO29HK+F0nkBHBE9XHC268besvp6\nytvHk00PfPv46toGXUEmRnM5hcyefSgLtKKUNgpS4qUYkLhc78iQWbsy+1td\nbbpCSWyiKLbutl/6sT7ECSsIRHOTsktEZgrT6oibJ5bpnAa3496jguMqftMZ\nDzFd\r\n=9LT2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD76cCCpCsQDkc1JCJvTVRO6ryeKMvtNj2c7f19c3kdGQIhAMNJojWj49ps9EZSgCuX0qIXcN7C01xqybrNf8KRF17K"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.2.1_1611413060163_0.08250166307831175"
      },
      "_hasShrinkwrap": false
    },
    "5.2.2": {
      "name": "cspell",
      "version": "5.2.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.2.0",
        "cspell-lib": "^5.2.2",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "f71ed325acc167d626e77d77bcba95923618f117",
      "_id": "cspell@5.2.2",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xNdUm05DH8zydyEzfunMMh+R4kOhCV71mlQUZZyPupSLK3V5gO3XEopIxLJm/+7YbJZAF3Rkq5OJrzWm1YxWpA==",
        "shasum": "d936eaf7dc8011b01aa04b9ff5e2c822e2e7abe3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.2.2.tgz",
        "fileCount": 25,
        "unpackedSize": 90261,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgD9+oCRA9TVsSAnZWagAA1BEP/1U64qyL/kx91cO29dz+\nk1Coaj31Z5mto141fLYie5sNNf8DapioIDekIiek8Nwa05hVkIeXC1q5fkU4\n4o08mziWrhzbCt9cXJbmuY0Drxun148shwbdihPI9IbHn9QcNlgkqb26g0wd\n031+r6U7GpEsKmbrvxONi7HSVFFJXGRjrZcFmv0oHZrp+dGUo5+0AOTtoMrJ\n/WLYHQpF78+kRIXoU8FOLP4Gu8tAAPYLpinJaJ3HHIhuKs+nHTnwbg6x80u2\nF0sXGIfoXd4GPqGUWPayKHpfpQqKr60SP6ecpMTXRQi5gtdNOOUO6bwrIhID\njOAxMixKVFEvMUr8ITOn4DZ/EEdJxtfcDxuGrYP9MPFTLqpUdyrI7nzY9MSo\nQ8xbSD7lqcBO65uDsGfIk7Su2NsR95gZKzkHrKU3QVohHh8wftOav/EEd+Xw\nRNWiL+Y7HCEBllEj0lAFKRXXJ7dArCO0mHqeCyoHkqqFBvDs3/At+fN1EvXn\n352hM3/E70Lki5dfr2/xoRDTLFMs1swGu8sbAljMkaVrC0G/NqbjdDkH/8Me\nrbebKzP9jmZCHB0qJ3lqYW24+K6GxroGWK6FhTu7+fXuROJENP9IlfrWr6R7\no4dE19L930Mir0jm/srE8488pH2XKSxE4tOjngeuHZH4VeALkD7w2+jAOK6s\ngEdY\r\n=PAOH\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFyIPtgqnbyT+1E5B773IpKJXk62lNlQi4cpjtbbnocRAiBvd/RfnonZ+ZLJ1t7y3rRv9CshzYAdPY3ra0EBIZ1D4w=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.2.2_1611653031715_0.8341239017978663"
      },
      "_hasShrinkwrap": false
    },
    "5.2.3": {
      "name": "cspell",
      "version": "5.2.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.2.0",
        "cspell-lib": "^5.2.3",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8f548b299b28762c62f22a946a2c1f180c103a0d",
      "_id": "cspell@5.2.3",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0oE4CJJ+y5h8nLGHrOiSCWQ4NgOqWp79Ed9RsG0scq4AcdP37wfPeFGg3T0UgM71ALsrCHUNccktDHD0tb3tZw==",
        "shasum": "eec067125aafe092d0ab4d49738f57e588901396",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.2.3.tgz",
        "fileCount": 25,
        "unpackedSize": 90408,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgETUlCRA9TVsSAnZWagAAzSUP/0y9DFMuPq+CrbZF7UYr\nYgCQKWyy9Qmck4VrAeWws7We/gxhpnyIFVuBE0XTLx/tlPtdgpBiRj57WlSs\nmF0gQV2Uhpb5ra5ivMOTAeyt8YaQaVL1I4Znzi0navkHxjqqCY2001s14jZu\n15p9WoOuysn4h+RzqVtIMj46amf/BG9JH+nmMPeeeuqkjzaWG7vJLyPfhth/\nFMLgxgCkT9ozqwZBJhB1BW+3aGJanivmY9x083SKlELGIMJE3uRXSwiZTI1X\nABgnQRIPKB0me9DaTskW/MOr+dhY87fF7pfMGTJY6mDgzGrcuT0Jh/Z9NYRm\ncAL5IiAyR3oQuYIxWcmiOb9y3lzl/pduWzq2deo6kCeLxg72rKeQbssYQ4iJ\nsObAGGnhs7VondL3ZNuY5D1D6UhCmHLh49LOL5y+W7aHygwTv54QC3DMcmtQ\npCGwHQhPreLcEFd2UwBciat4II+U8TmZ02UtyAF+vqHviNv4kqbXkZI+clsN\nZ3+5wNHwQr8uGWKP7s0f+I7p0VbLd3K0G8IUIRynZe3jucRpoMfvMJxgZDfG\nPRzdfAHHdSjYZ9CNNfMzVBBAU1DTnd/9IISJ7toGvqltxxYwoXud8i7PbGwy\n9V8HckkX9bjUi/ATtQPHjQIln9rGkrbaNENHcUgc1Ta0jMbfc1X+zAX7KgiM\nf38M\r\n=Pkvy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMMGffI0m1GX15WhSM28PSUzofxFQDs8k/2WUpQd/JfAIhAONGdvYZS/sz73xqQRAvkzh6/I+NPzhYiOz4RMFNGWAN"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.2.3_1611740452915_0.0958035672954427"
      },
      "_hasShrinkwrap": false
    },
    "5.2.4": {
      "name": "cspell",
      "version": "5.2.4",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.0",
        "commander": "^7.0.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.2.0",
        "cspell-lib": "^5.2.4",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "minimatch": "^3.0.4",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.6",
        "@types/glob": "^7.1.3",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "rimraf": "^3.0.2"
      },
      "gitHead": "a8bb9a921b459929a340ac26d025dc01a9fdb008",
      "_id": "cspell@5.2.4",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ONMoI2Yf9of662Ac8Azg+EKXWSDxZIjSWGtkg6FNQOCzD0AgO6ZJv2ti9mHuSZ9rovfaPJUocmiTJSl9TncK6g==",
        "shasum": "d28b6a6ff93d1824c560a2c6f5e4d9000227a12a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.2.4.tgz",
        "fileCount": 25,
        "unpackedSize": 90555,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgExdvCRA9TVsSAnZWagAAOtMP/jzsy1EgpKXLlQeZ0GBk\ni4bN4Wl+odwje88tAMsxymzZwplfRY9bkRYeifAYOM2FLtz6G1olPNs1JN24\nQOoyRSbZyM8N8LcvWAcolOQtv21/YZzDlriT1GdxzBdhfVmpl23bVfXmG83x\nQAVEi6gSBz5/VER2Oj8RkgFsM2WZVvWCwIgANFlinCrxc3AlLT1HWBYMz41J\nMTYwmeSXOthVQE40m9nk02yZBar7uKtASoWJzpHNlTkGbatHqOvfiMEi1CTA\nzk/HjfJjpRGvoD9/pAyDMiCmnJx9c2G8aA6/KmyiZG80DVQkcXXDuE7DgeD5\n6HDGlaSK7DxI9r0WqaLxKKyr0HzGoMrcrrCklgglg+BH9ctm5KW2zuCJAHYZ\nMisRWyXdFQjVtRTxhL6q4ivCsDmiYgxLrewXSZGy39Q1a+5GrSK3qNouNxK8\ngOGjlruWH33WykUFsffEAipLId5WaGTvDT7is7V0b04/nW6L/fDoedSAf0un\n6053jdPHrnCPi0rfIs0rHBQQ1CfgZmchWbRFfgR1Hcij+QaHclrmKGeS+1ff\nkGd2m8Rmx735d2laXoKcNxVTvonOwud6meG8v8dJ+U6IB5csPrjaJ7LyDipW\ntjW3K6ixxI/LB32FPytlSik0bLjYnxeoMyXejsUQQAVw9k5W+OUIaE8gVtrH\n472D\r\n=rwH4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF8fScQ3Ex6l1pAJF0zmc9BSnZ2tan7KEpIC42kfX0+PAiEApqzC0BsD4oUfZ85RiUoQpi76YqexBYx8248D+2YCavI="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.2.4_1611863918562_0.949973934728001"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0-alpha.0": {
      "name": "cspell",
      "version": "5.3.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0-alpha.0",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0-alpha.0",
        "cspell-lib": "^5.3.0-alpha.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "30d2b0311d86f4eef060245c885207a6c715c3d9",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.0-alpha.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xfiHbckP5ZDIEWS8ei8nFZvDPmyMIEpCJL5fG8V67oOTEi2FoC+eCLCXkMdOnaXKlXahRkvZ7D3sSAGLnLWlCg==",
        "shasum": "9601417b91e187d4a9a688f869b4b217b29d22a6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0-alpha.0.tgz",
        "fileCount": 33,
        "unpackedSize": 97636,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLr12CRA9TVsSAnZWagAAi2AQAJErUroBgUWKRdTPAqqu\nOwcmX7qoQds+Zk68nUYUbRUrAwWXz7eA9rsW0LqCDJBZgY9oO4uz3L6SYqjg\n4dcdd//rirRFh2Y18P/Izr7juA7Lv+jRFoWJ1HyoMkStmQFeYXkYWctAZV7V\n89AgamxLPI3ZSNP/CCo9m7jt2yvNa5Cl03jjUYs8TVBpXjzr3leGCeNekNEd\nOomLXhkoENroYh3vig8PYRSniDDZVd51JJyDAEP2OrllZJp1xr6/+rGS+JUY\nG5GJZ73gmcpe0LUixlx+1i/vZF/NxAHI64gV1VO9ZfTCmfW1A6TbuNKPGdn5\n54E3XRWx1gBxPe1/sd4gOJ1w/ho28xMvUMbP9q4U+8no75o7cMQF0TBGiFo3\nCDwPv9us1zQ/kcIGu2wxNcE0GmUHH61XcN5ZGFiBdqdNHATZql0zi6c6D/X/\n30GZQWICq6cMt+i20aYlW2n5/lO++8ojgnTN21ny0CMSp2QxeoHreI39eWQW\nJXT7kxozPJHh4n7gXIpgVsh3s4/3IRpu/Bp9DojzDkghggnw/VRnMIFc148y\nvr+MTuHYA2ZxgpSfNKpb3dnxKIKihQtBLIWtqGcuF0YGMAZC3ZEDS7qwX/Kf\nN8lOPvD+3Cdkytf9e7vlnC4EAVEF6DZvUtOrud5UwNG8pn+fAfoUhSt6kiYL\n6VDS\r\n=eg8d\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFqepye5Wlj75TLEivSD0EsAp7K05grZZYRLR2RDGfa8AiAZJQjnUf532raW+yb18tanMRfuWduNEbormPsnQP7J9w=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0-alpha.0_1613675893853_0.015427663766677036"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0-alpha.1": {
      "name": "cspell",
      "version": "5.3.0-alpha.1",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0-alpha.1",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0-alpha.1",
        "cspell-lib": "^5.3.0-alpha.1",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "dc623a57aa12c8df318aaa5ac9f8e7d70a14199d",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.0-alpha.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4EsGftp8UNk+C7p2XfsRA/CBZVQ+n1ODeHgwbdyhkS843YmcmrlYhiGklDaklJm0Gs64E2W9ZerdLo28keeBdw==",
        "shasum": "df7df1eba38bab27262c2eb5bc9256d30ca9af8e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0-alpha.1.tgz",
        "fileCount": 33,
        "unpackedSize": 98575,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgMCQsCRA9TVsSAnZWagAAZDMP/0HU8dkOUA05x2CQQqMn\n43Vv3hWMkRQNl87Bidon7kNHx5yEOrw4qAlUmk26dyfTHp2h0BNFrRG2PJvI\nfQ2O6osGdE1XfHEUM1uLsEgNDaqcgTdaKEZ2gi+486I0FphsRRnfyAidiHt0\nqDjKz1fLdUiBwAxRUw273tHw8Dh3w+AgF33DtvPQssetLNCTgBVLzBhwOeq4\nfXyAa/2i3y6+J+CmlYbwJJ48AJ5Y0EHUw7nSwrWUKr8yWBnLZ8DmpZVOo30z\nBG2DpkUFSW6MVdDWq8846FuhZ5KzD/X3ZaN9QxUbDZgwDdf1Mb8GBrSB906A\neBQAFCVHXgyYNvGLLwwSA7o9WEDXJH2m/8Nv/jESQWPNv48CyEYI0c2BRWbT\nzTfCbVgm/+3lVPcMSaZJ9XlD/5mp9OVLMdvHyqhfmR5lhopYBMm2VZaOiTn4\n1ffQlHpILp9cWISjhWFaJy4jOeXR+WJSvVwQN+TmkVdR7HlpSBmBxX06Mf5G\nxWx5b3cRtVnA91qRXvpoIGLdtfWumRcoDzY7f0X6XrAyv+eaIG/ba6QQtClt\nwfOpMTEPdkmIhw36QGwiIrErRX9Qe5Z0IceY0KUApSJLzEkLUmseIN1nDyIR\n6CulOEsjsNFouBnukZLuS7S631Eqjpo/mSD5FyGJ56gW4ISXzIZ3G1EhnrgU\ncAYc\r\n=eorN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUsvKdt+rXztZ8XDh9RVsAMA+6gJ1csCoU9s7MIQVWXAIgTy0O66GsYZRKhZSGb5fsdDn1I3FSF3jPfRaKl+hB1ds="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0-alpha.1_1613767724007_0.18480228287973244"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0-alpha.2": {
      "name": "cspell",
      "version": "5.3.0-alpha.2",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0-alpha.2",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0-alpha.2",
        "cspell-lib": "^5.3.0-alpha.2",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "31d54344356d2e6736c889b1d44bb35ddd9a107c",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.0-alpha.2",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-b6/b07tGnA7Wn1PvvPmyksobS07rRIR/wQeyPq7/iCfFqiOwX4sz+jiv89pyt+zNLQZNJYm+kcZCm8vl1Sktdg==",
        "shasum": "4f44fd5bceb0e2a4fc92ad5ad54308bdc3b166c5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0-alpha.2.tgz",
        "fileCount": 33,
        "unpackedSize": 98745,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgM3gOCRA9TVsSAnZWagAA6qAP+QG/UjhRyVScwmJeVxSs\no4bWYMMOqD2h0wftufpjpPP5Se8DI1ptnejrW/SgM3+UVb7xXvmcrzgCJ4Tq\nqUgIdKsqXpNqgS/kg2V/I9sj1Qtz8Vag9GvF5g94rTRd+pbonGOzWPAe7fQz\nhEP34PO15L2r0qBlfV7LIZ7xar5ZczzXhGH2PRTY1XYnRUBkutwQkPGfqewk\ncZcignp5i6FMjL0IGYzlAXi+Stv3tkyXBHRpOAenyD5Y0Pf4WUpCzYSgOJfN\n8pYA48Fs7aQuRbD4nyLxlDEyJH8YW49FN1xfeDhVUMb0YIFdTfmlpAcejxat\nQPLS7BlvYtDZKzk1CZHThy0No9MuPPPUEEpXLKyX3jov9KcBk5bU5iW2OCPU\nyWHe7+PuFBOhQ3GSwUK1/Pm3o8ClQjiaa197uvU5FN/ab2rOCS1g18xAoJB5\nhyp6DgMCBjg3Bu+hxUb8IvSd8w36Y/2k4JHP9Gup/PpMm7H5EUpzMDUep1hZ\n19wmFDCPdnxn5zQevC8e9mp5dziD9T822C5etT0K07JVIWcyfSHm7WB2L5sg\nOCw9ylDhCbsl9WJM8HweKlb7V2DmbVGzVGjVA0euiWn96TsP2rI6kWmdRWJZ\ng3V5BciMtDDwvO8IpWaYhqh6hkX2VdTOBkd8E1fodXqxbt3DIbHtmVEAvCCN\nXcXG\r\n=ggBe\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDUIwmBy/bgQfkRv9nNhBEGj/cxBBuvtwYIY70WAkANXAIhAL6NnnlyzrK2d5j7T6O10HfSXRXDGjCPv81resswxydF"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0-alpha.2_1613985806493_0.06298554689736502"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0-alpha.3": {
      "name": "cspell",
      "version": "5.3.0-alpha.3",
      "description": "A Spelling Checker for Code!",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0-alpha.3",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0-alpha.3",
        "cspell-lib": "^5.3.0-alpha.3",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4ab3c426b21963fd03e4f558fc8b378c415a6650",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.0-alpha.3",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-MPhR0cR+Rz4y2kxeGyUmtNqdpdVZD/LVgdczbYBJFyv6nIPqqQ0kv5jh/KddKUu52Ndxh80fDd6pI3plHhm48w==",
        "shasum": "a7c01120aaf847d4e426ccf7617e2f0f851684d2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0-alpha.3.tgz",
        "fileCount": 33,
        "unpackedSize": 100080,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNT+kCRA9TVsSAnZWagAAl90P/i0ScJjTqzfw2LrSvUuC\nqXotZM43ncRSGCUrVNFpkykaSSwLBls2dWitNX9tKGrH0iZfOWGYACKSk1+N\nFRlN0mC8SwQpGBqu0obUX6sfPPlLAQpZgOvMLWxnnfVNQFvLtHhsy8GjNHN9\nT5C/eRkB40cpYGip4XAHySjJ1j9/hnqGR5cLj4AWGfkQgoF10Rpa4vwWv6xq\naC5WFEHqR9FsXXSRwbGD+yDEajVvcjN9+XW9JMW/5S5gEk/IfMiBZGkrwuL3\nPYrZTwE+ZLjAp54lJ/alq7n+1kzFRDal4jgJrqYxaStgl6tQCJzFkcvC1nYB\nu6efopXEJq+YmwNYpO1qQVSQtJt1rO0qqxu31dOct9xLBx7WAhfMo2KmMcIw\nnGv3B1V3B6j3OrGVlJxQjGUOHwzNDGD+gr7F03OR+umXtBPkDkJ+ZJzVJbUl\nv3NjIVE5sQGtrOF1xAzxgSg3ims1J8bDAk2jOPXBrxIF3mFAsPppuc+NT1GX\n6naaVT0b5MRdN66NpsTDPNwZr9yXXl7MI6FlDFq4qE8UFR1lWI5hyrdmNCMZ\nLHL2RzYI0uhqMYbg5cPE/IXHjsEE8XKqN8t6vProkVkxLiI7CWh9jgV3LWUQ\njCdodSqeGgzxVmCXP8oWiXFafBbNnZSogInmeKsa9E22DCysgfCfh2K2YqA2\n60pO\r\n=jpXu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCV7Abcw0nhpfNiGJc9pfgqENBNFjvc7f84DFOnYqkSGAIhAKR2ksK3nYpUJFrA79N3hY+UEtsvt9MHNKHIuGWhpTUJ"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0-alpha.3_1614102436193_0.8465062149262546"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0-alpha.4": {
      "name": "cspell",
      "version": "5.3.0-alpha.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0-alpha.4",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0-alpha.4",
        "cspell-lib": "^5.3.0-alpha.4",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "5d3eb97efae5ebf7a7d8beedc3c0dbe912d0f405",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.0-alpha.4",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-6p6ehgbbrj63LGilJhA9hu8Xqp1Z/VLYslbXkWkHTWw0LErLpJCbH9aOPgOQ55gQBWtNSAb+ZMqe9U4aZ9267w==",
        "shasum": "88cdf1cd5b8a9da2bf92570436ffd2c2caaccc18",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0-alpha.4.tgz",
        "fileCount": 33,
        "unpackedSize": 100520,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN21TCRA9TVsSAnZWagAAnNYP/iDYxveU1SNrQIaA1LYk\nrIBVFHpgSgUlkysAm4G0tOoLj5WRbUXnqoCu4gO8+lgymUoZ2Ic+aLsq4cBW\nuTyXBaWy/0EQtZg+cw5gj3pw89DKe2tpUkvANk7ncTIKsB5EANk58L+5Hg/n\nly7EU9s2rz1DpqmdOQbmsyxxQuM4/PImNi3vVeezqV9pzkC0o88zRyJNC3xE\nVbkhc1VCgeGTtnpD24edlXaOW4jH3BnVVFM0eVSoJ5bj/U7IEvcvQYpI6jPQ\n5MMFjZWM+tlMCXb1S8P24/U7ppQRInXgwtQyfa5H77y2GJjVOQCpqr80EkKc\nxW7SDtf0qE5D7oy292NkgcPybicArrZCmkdSr1G896lo190xfnwWCxg+93/O\nG6GNdOvciIg79BYKTaw8JZp4j0JqwM4A8OAc4vhdnCJpUBX+7aVgOAzDKx2P\nWJ4kkmYgIppYkkKG2tcvPHF3fBGDjGv5zU8PMYD8vANHnac8b4wdcricevgo\n+F9yzu9wxC8N7UZiQa2+d1vqorpu+7wTNefHHDumh5C3w5JqS69TVDaVCyNK\nl90PNUSWwj3MbCUr/aIQxcbAOzC5UIPCx57H/PTw2x/8On4l1hc9oXyPdy7n\nbfAwZjBe4uYQLr6q5hkvTJzLX8IvQWlg/6fSMJgeDGsXOP0VFUbqCtz8wuvC\ny1RM\r\n=A3eg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDgoYYad9iSwJpPzh5faRNfrw+n7lR+TIOkdF904HD9xQIgV9wHEIoSTAjm+FGnH5QIPcu1hmFSb41ALlb0ZypwY00="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0-alpha.4_1614245202616_0.7815555653112372"
      },
      "_hasShrinkwrap": false
    },
    "5.3.0": {
      "name": "cspell",
      "version": "5.3.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.0",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.0",
        "cspell-lib": "^5.3.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4fb90026bb8f9b2aca5f0d659e6702395c0ea990",
      "_id": "cspell@5.3.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-HIwyuIZN3RZEolpjXynKXCceUcKKqLQcyIsNRL4DHSkiw7oqjTb5tFe1TPfmn696ZGTJKcscQ203BQfvuyyVQw==",
        "shasum": "4bbd43f36797a63287dc858c816e4f6974627a9d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.0.tgz",
        "fileCount": 33,
        "unpackedSize": 100642,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN5RwCRA9TVsSAnZWagAA4iwP/1VrO82AeaALI1RxqBkv\nR0fGItVbutnppkiKFHkpBqwfWxCH1uYd6Mv9+BoCS6NhlZO7owCWgs2rCHsv\n7e7/FSGxI5PiAaRzmaPrEzg/PzsYKCNbagsdrrLXsdIDaYUCBXwUUtsVhbBF\nVvx1YzkmDal58mgGTU87eF5y2QgqWYW+OCQAy4N3YXx6Go+9h71W3tVoKmsD\nJublWcoh7EGf9bdvsX3nGDtwkCA6dxHakA1bQzN/T4qpq5sNPc/cQSLczJUP\n98jKKCf0mAb65OVjs+Axr9M0I5UkiUD684Ff3rYU6g3ichgEaHvlqCciDgOJ\nDDGZDQ2I0dvUWUaQMFx0W5QUKBUvfdGXkKetZf43oL6rZpBEpH8nwwSzsKmq\nYpG08Bn00sedCMhzxNih6WuJXV3vC7a/66VSg6sH/x34TmXZl48OSjTeYqvC\nO+LYQ490783F12uV63XSnf8F5byQ4ckSQMKfIiXAa02SP9BNYUYCpFRPySFR\n2atejrwdc6LCG3h4oLDShx3HfLpLUDK7XIYqsBOpfZzC+4pIku7Q3spQ8OC6\nLN0DfKAzJSlEzWx/4dDqs38lhK3FqDZXwOJ+9qqVqq4VExAlMvuKpGqPAMNp\nMm4dWF5he2vISw2Z6LNEXYT193KBBFkGt5NhG+Jw1a5iIQxtRSO/cfMc6cMV\nt8Ek\r\n=zOGx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDVDChWjRO7DubVANixfQix+NMPpIn1exQddlN3wlBiWAIgChy9Mqem9C0gTps39Z3ewQ0zRVFFlioKfe1W4VbPIpE="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.0_1614255216123_0.0000860773765534173"
      },
      "_hasShrinkwrap": false
    },
    "5.3.1": {
      "name": "cspell",
      "version": "5.3.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.1",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.1",
        "cspell-lib": "^5.3.1",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "da5c1ab966561abd8862036d30211b9f57151ac2",
      "_id": "cspell@5.3.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-2AyYhCi+RqQXF9d9rRMtoVWidbLJRQ5POcfP6LlfSXCYBl/pEl1rc0XaI2aSEjt/kZijFb9K6DMQmBc4LCf6YQ==",
        "shasum": "1edbc10a30a9909cdc0b1ae6578088da361552e9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.1.tgz",
        "fileCount": 33,
        "unpackedSize": 101096,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN7p7CRA9TVsSAnZWagAAt7oQAIbTs/q+6ZcK0dBsj5+Y\n0xRDwEIfDictkTukCW1YVbLjD+x/3EyRcW4BTYnWN1ys+cQ/sOcfka5jKYWD\nMgoz0g3YUlnJfXKP0zrZ8sz6l+givXx7/2CpLUGQvl5ybKKnT02+T6n+rTeA\nkqIwIuma1smxrH2C7cM/LZ9CARh246Jcmov6clD5tjNgKLZlVgEBBgxfiXJI\nZTPq8H9plX2a5mSlBhtxaNgSvPG5XP7OVjGHaxy+1ybFOKQC3UGhoeJ4w9Ox\n0jAuQaA5cxKmdNXNKzoS4zxjTsYizte+VuQpyUixC5FFKco5AcZIgPOc2wG4\n68xhlpWRpuO48GlMhHOkU+vPm15WXM+EBuWxDZPMhFO6fhboEaIo77NUCTsW\nFHoBycmeP/C4tnA0JU/xu/x+Cli+w00DiRDV1f3NBwPg+zUZGt6mWMCCEVXp\n3/4WqdBtTTnIWhr5oCricWstnyMDbONVzBSgJfuvuFTJcmXRbc7rRYAsgOf3\naGGofXF95T2PfzIhWgF6q98W8gQiZ7iNfIoFgal4sE2Q6V2RKRVBKVEhkNrJ\nSIdh9X/t/sw4h47Wezv/DIrxkQWKkaN//OvFG684yoHW7z/NeLrOy05L+Iuc\nQDoPLA81SwVL7fA/BdAN6a71vNu7kEixomr1dE69xpZ9xeeVEZ2BMsk0Zt3u\nGRmy\r\n=KaYz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFgzwQ+rTjNyMB/YhGOSslPArKThpJUF+Z2yeuDrTVK8AiB6RtSwAeigqUj/99LXjfChWZIOBfwp7WQp9uI0C49FVA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.1_1614264954738_0.15639769898393552"
      },
      "_hasShrinkwrap": false
    },
    "5.3.2": {
      "name": "cspell",
      "version": "5.3.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.2",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.2",
        "cspell-lib": "^5.3.2",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "5914484c6faf7cdd64d7b75e8c2bd1a3d004ffc6",
      "_id": "cspell@5.3.2",
      "_nodeVersion": "12.21.0",
      "_npmVersion": "lerna/3.22.1/node@v12.21.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ClSUKGrBYyMOJ86HQtXz9pnr46jG30OCJRfSDIvkFdQe8TrFJUsZjp2wEYiMwAIXUgAspPVbpyAPpiGUlRRphw==",
        "shasum": "573b5bc695cc25e2790534657e76a0bc66ea4fd5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.2.tgz",
        "fileCount": 33,
        "unpackedSize": 101445,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOUXHCRA9TVsSAnZWagAAkd0QAIO194cpSzLa5zUWci8F\nJSzT4aeDmvAz/62viCL7/IgdZFpK6Ij8K9vTOIbNVY8c13w6EqXj3WPc30Ql\nYc018n8AjCkaqYXgb5Kk3d+gb8GlkprAA/FDrkli94gGsi/fX8b9WlhxlLnf\n4abiGMhgIkl6R2b1ekpoFMN7Y0kjOdtdxs3zaeVdgwASXveX47eMbzkszxY/\nUvRDjuZQDm/JiMUwyXqG8li7cdqHzA2tRgkptVfX74xGwkvGA9NeQbcjJAig\nOl017/G2R6IlDLw2DqONkFNIefHdyEmZX+JTS/Izk1rjD3GQWzRWj4t56//5\nLJo6FSBm4S9ZoWc311HsMUeJ4BLuuNb62Y/BfcdKlUnPwPvXcIOvAeh3JA6B\nh4JT8kezosp01INZP6zyCBnebj1JtqCrangYZ6XZnTo6f6drbcja1hHGAYp7\n4Si3I5Q7e5VH60m5/Qr/9YGBbPPGMoAT4/7skrlj//Fb/ev/HmYd5DIlZyhh\n8FO6X9qQQWmamSeCfkQVGTjDmh6chYk0WXp5muYS0owoTrYSveu2KhPDMODT\n/6evcJpFQ2fFIES7QiYjK02G/m6RSLekfpCyoNbacLyhh7ZyB0ww24hrbpou\n5crlwd49Mu0EhO5j/dgMCxNDa3uabhTnxhgeIm9koxfuVNE/cWSgeTz8/PBJ\nAs9i\r\n=zpyC\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHNp67MmjlTtTYYVWUa4FRTyEpP2EWH3QpchTOj6sZhQAiB4Cp2ks6Xrq23XKe+vHd5hv/B9hDTS3BIRZBQJAJleWQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.2_1614366150485_0.749454084165531"
      },
      "_hasShrinkwrap": false
    },
    "5.3.3": {
      "name": "cspell",
      "version": "5.3.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.3",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.3",
        "cspell-lib": "^5.3.3",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.7",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "6351175373247f13272f716c9093af85da1368e2",
      "_id": "cspell@5.3.3",
      "_nodeVersion": "12.21.0",
      "_npmVersion": "lerna/3.22.1/node@v12.21.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-UzMNBH11fXJDjzLA4zIdtqkCDezK8WwMYbJKFN23+WeH4Mwf2FN4GzzKGBtzZJuBYNwLWTM4kO5J5w3cK+clmQ==",
        "shasum": "0a9837e7608c2b4786b2f462852a58bdf891dfe2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.3.tgz",
        "fileCount": 33,
        "unpackedSize": 101922,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOWQaCRA9TVsSAnZWagAAOYkP/REHnnJ62rfVVjEdDFrP\natwd2M35FfnBGvLLBPWDo0zxsTsbTn7991A7bzNQcmH2SVbexRj4GHD9Kg03\nPe9HD+P571wSgoBnUxg45umgNVKWxlnbu2JECaKQYqnNJn/HUXLFk37y2KOD\nNcDXe8iSfOXz0P9Egm5a+HPZ8laxqQqt9wmi9znAad+lxgYgFnDHtB62kaev\n8iccQom/WEdUp+4iMt+N9SdZALG1r9rYcZwyRep9VKwYZ7b+kIa7IMbgzDO2\nbD4QAF3zfE9DZvp5k8Zrcjp+wxnEn6thmH7xKkSQpgD8lOpU6CnoH+MJdPki\nvcBhJPvtAf0SwWfI8vgw6qlJYL+LW0AB9VQBjTe3mynvM/2mnI8MQW/A+3d0\n0eFyW7O+fy0MeEH8DjfWGh5yquPHQty+dlPaoO4IKLiLc9IWyPI2A2jWXz30\nIzQhxIZoifQyP/rjWuz/Iow232HEVXqiOGfgCZOcg3WyXu15afUPm9VBSjp2\nDbaVJO3XpJ/M+2CHrqZEQl7UH7OPEUTDT3JTsdcMc2e5dZEt4St44sKAQFSa\nYFcbPhaR9hw82t0ncXKygNq8lMiIHGCsafm4/tZeNUxTzMSNP9OGtI8aWgFe\nw13IA8l9rHsEgeyj40sPRKM6KO+uYw/PCNtrH4vZX8mFPY+68SKLDVBHvoxe\n9c0d\r\n=WbWf\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICW2ejZVKk/Qni3BCKtbnLSDp3wRrWsAFiNL1CgOySBrAiBRrBBtW8CUhKVtpAcjs7gXtA5sJqTEF6AwnotKKgybqw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.3_1614373913528_0.8890882544678147"
      },
      "_hasShrinkwrap": false
    },
    "5.3.4": {
      "name": "cspell",
      "version": "5.3.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.4",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.4",
        "cspell-lib": "^5.3.4",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "edd90ad5db06ad2db6749b2f0bf36e29ec76cb6b",
      "_id": "cspell@5.3.4",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/3.22.1/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-AXiZzeXXBVZIwRsD30bloqOaJEjTF3e/nzXCLHUq3Eyqiy1ySWMnOMm3OXQ1nI7nkjYpx5+Pdx7cDlH0wFrKYQ==",
        "shasum": "1d79d3bde38a91adcda9fde4b2aa553746ff2f51",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.4.tgz",
        "fileCount": 33,
        "unpackedSize": 102069,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPOGxCRA9TVsSAnZWagAAWqoP/i3aSRiYx0cEToKQ44rF\n4g+XePhwl1Nd2C3OmMy0KSSNxkfhiPlf8sfAMmYQ2fLD/+USoWMkJKEeYdXB\n/tHPRYcq2yVcg84YHGH9x6EVY72lHRJN4z8dKXm2n5Mf16NopkgsEQAlSmOL\n8rm6KKm+2IblcSvaVRvVBcGY2gsWbZZudm8h5Y6YKoW+gRJEV4B4EaJZRH0s\nKZFx2StktQoq6nOPyv4hqwh8xkfc40NZHBPT2WzrG4+uOg7V/+JYZE8Rww+a\n914lNZAAPeCd2HaHzQ3PbndsZXuWrQ5N2Sz8RIU2/b/jB88on5fJDT3zJ/Nj\nGxdE+baB5N4FBnOQsuZZ0EWo39AxvJnAI6Rn41q54Ekxc8LK7s/e6kpkTDZd\nTcShcbpGQm6mH9cJTRD2eJjqe0nv22q+slMs2haXevGepnF2Y6tldE1uy9DZ\nQCVAe+mCVB5+gbybUV7E6qVMuqTJnGJ1lgf+Y7i7n6r8n4uz3egZn/p1UhK6\nT/Yniok/ppmZqEBdJzQRUYWgZzoWCvGs7B+k45NMdDvbBupYtpOdRDVWfoOY\nyrAjatLwZq99oaISlwGH3zk+Gv7BPmW3ubzdlacPD6pQIf/rfnF+zfBkfMdU\nF+u4ez60uoxcCTMI6ANFUCm9xiXDSbjkfugprC5FuEsdv5PHjKbpdUczYbWe\nWah3\r\n=9dcx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC9d4t01z9+e///0BHgUqwYL9WgMkxALqUUS0FBI3xGpwIhAJl1S1XOS/FwsQCoL1alE0bkDePRgQtIi/4LHLHRbsDz"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.4_1614602672983_0.1895068507565496"
      },
      "_hasShrinkwrap": false
    },
    "5.3.5": {
      "name": "cspell",
      "version": "5.3.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.5",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.5",
        "cspell-lib": "^5.3.5",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "43b0c6d5b0e32f9e785f2b15bd6823c0bb140ea4",
      "_id": "cspell@5.3.5",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-1zVVDZkJE/HqDXSIcFiH/PPBx85OqN2umPbtr9OPVeXE0NNT5OxTtFG53m3Jft1h8FmSI/yy2pamrAQjXj476w==",
        "shasum": "1b4751215ab04d65d3eb44671fb239bc3f8117f6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.5.tgz",
        "fileCount": 47,
        "unpackedSize": 133877,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQbH8CRA9TVsSAnZWagAAzSIP/AtQ97AFrx90E9Nnb8YG\nViYwGMkj33Mn/WQpeJ3G4ogNO/TG0+dpRyj2WbRcLx+rfQ9bMY2j9M+EMwYC\nk4bRzmJOVXW4AJ7UPvRjjkgSaowdRhJau9RrZcb4nD4k9W3qdrK474OTnPcd\nKcwpfEp5pro+06VnBvdeKkohT887LZ7Ni0JqssLlPECmorWewq4OK+dFQWqf\n2AniHcIT3ngKPWOrOsEfwgiwLX21Spvtf2nLO/UyNf1BIKiphPz3UI/Tv2pX\ngwhDyE8Q6BBbXDlsXSlrWP5h2AuCjUXK/H2GVNfA6USfv/UFJLOUW+RMP7ue\nK2YtEQO8T/+UDEc/lvovUDOsvXvD7LwGdMPbVQJ/IPv4fRHArrfJw/X3MeHN\nkD/sjfmkYOGhy9aYmUVm8/SCsRy1AwazMvMl/YgPzfLfjy3iFf66XXjbmVcS\nmySXUp8qJRCemTsFmlHOelKpFvRmnkvyRnzh1odosrt9FBrxzocfQc53pBhj\nnL/r9HNQ6KX/4SnNVsLu0BPyCm9+rp2oL+aEg33k9kKGMm6m06gW4yck5GDk\npPtmGJL6wVtur42qF9Kcq7/dCnSoet2m9bqGMOXVw7Qk0+O3f3x4c6Xf/9gD\nSC/xfYGP4IqbtzUo0560808aOm5MYncj2AI9Zvc4AM5xV2c6cvNSQlSXu5+X\nESxx\r\n=Zu1y\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCbTrPNCMO59o+M+6REjRxsU7bIADCLNkXdTKqG357xLgIgLLDKOwF/7EFgknf8Oi+KZ+HDIufczsYzuwJAOkxcnUY="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.5_1614918139562_0.97437202780348"
      },
      "_hasShrinkwrap": false
    },
    "5.3.6": {
      "name": "cspell",
      "version": "5.3.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.5",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.5",
        "cspell-lib": "^5.3.6",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "40ab9b7eb7a85ac838bb63dadb0d4a46bacd8322",
      "_id": "cspell@5.3.6",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9HqrtdJ/a1lb4dzrqlI8hST+4/bJKR9YGfois6vA2Sxx5DVdGRjc+XIfoE7OLOPmaaT925jrH0WvRLXp7iuckA==",
        "shasum": "3c7f228920ccac8b4d95aa6362ac11e518ab9f5b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.6.tgz",
        "fileCount": 47,
        "unpackedSize": 134024,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQgLlCRA9TVsSAnZWagAAxb0P/inG7cA3Mti5BHHwGxS2\nPhlUTUU8cLbu+F/RZMFLil5GD7TqFLHLTkrCbsADwcTpSUThpEZ2B15ppZ+P\nPvNX4NYAVHAYS9P+QzKLZTQsmN44teDyKKAwK+XJdqu38etaBzJfA9t+k8vg\npK762QRGP/coEUZ+EkUDQwAC9NiS8rtM9Z7oRQUpE1KCL7gihOqn0b4bFVK1\nRYCGB9/F0ZF22zEhwNuQ0Lt7Cly0ofeywRJ+SOxQxCGZI8FtfyWN3g3qUmtz\nqUCUXBP1Td8gWleFnR58GQO6fMI+w1AIp+Fz+6sT63reLdE9e89HRle60Xlg\n9LLdrJ4kaof5H4aujSYmO6/fCGLYFmXjMKd0TKYn3obgwVadQ+E4eihvQO6p\nZXJIH07W7jbRoezZcajSpMtXpmzUEPmK9GyCVJwJvp7KtLkmSI41UTORGp/t\nhfIQZqdiXkI4AHcXZdwByPpu7Am+OFT75+SXIKDrOkBmzi5PVNGVfuwZQIt5\nNWnV2KSK7iDUN6wUBVnZn8oTdX+r7BSiqey5FnQ16c0cfJlQ9MO88scETVHK\nOL0mUg2ltx2I1+Z3tG3yXyFcLBlPL+W7Es/c1nZi0HCFbKXqtULVBmiVOJE5\nbpMAhV3qGYkxzDoORBCseOedu27PntGxUifUwFfXmg5IVeKqHBJ8ZiOpJKzX\nZxaX\r\n=Qxbl\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDvC/lHzyjfW1ci7m3/JxqtYwylkTENaOaMG2n39Tw2jwIhANXT4syRCzfrYalePnOFnks45pY6hLrMCClIu0yNrKl4"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.6_1614938853376_0.36310143081572877"
      },
      "_hasShrinkwrap": false
    },
    "5.3.7-alpha.0": {
      "name": "cspell",
      "version": "5.3.7-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.5",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.5",
        "cspell-lib": "^5.3.7-alpha.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "7286dc6462d871b08a9e8804da7cc88da73fe280",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.7-alpha.0",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-DYZxKsRI5ce2aZKfNd+8GCxR2efuyfNSEkVVahLh8CJrbSvLqBet+U2lDw8LdZFKxjuv4fN2x5qMx4WnBpDRFg==",
        "shasum": "24beef72e8ca3d178a09bcf4b8dc2da082cc6855",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.7-alpha.0.tgz",
        "fileCount": 47,
        "unpackedSize": 134379,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQgm6CRA9TVsSAnZWagAAtqIP/iTUZ3GfVoZwArnY1nXf\nHn2HDv2BSL22BZkLamSfoGNpqMLSDUwDTAv6saPsejD9a16rbk0Ypy/LUSXE\nQ0bRmIQi3b/sDjSlE2YspRS+AUBKb8uZYB489jGEgq+ONqBkdIvhigausl2S\nBaGTEUPRT3iz8kFHqOy5tVuKX8WfBlsc0PwU6JA2gsPcdttd56q2cQg8hGFN\nzBFCKrxcHHV7VgKnPflV6+nDsvRbg2uiuldR1g6FAvtNoQD5aApFdhYOcDyN\nvzfaVF34VxZsEGWK/ZKDC3tkc2Wow5HfiwKK38lMlWsGui4p7u0JeydKAPsW\nLXstsxR1q8d4J2nEh6AAz/mjFOnHqGk6EEf4jWrXQrV6HRNpjWG/ceQUOIgP\nXn9ZUZHBLR80ZFOrk4BIq/pU4xPBxD9YLpUIqpRUG7Z4ikshcn/vf41koEuQ\n+/Lc+ubaySHHGa8lpbBEpf6MQKIxERIIYiCvxkbPLJnTyqBDstFiVYKnfC1j\nDYyTGSQI9KnZUNd1a9KeHt9n/CKSUH7VsIsxeB3kvKzFNEMfosu4TgBxeQ7a\nvI3XDtcEc9Y1ncqB8yfMMnIu7nu4PDDec4jrWZSXQygjlWC8StYP8uEV029Y\nSx601A+Va0sDwuU1YiyE+X3BnYZM6jvKDjANeaZ4IxizCKCNgXzVHu3dVbE/\nF0dr\r\n=QVys\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBj7R2plZyYMplIlZXuS2Sfub9+fl82TGwsSjeemUmAcAiEA0MnTnHpnhqnF+Mry7gk/8hIoI81mYxffW6fExeqfHUQ="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.7-alpha.0_1614940601873_0.08158108281208465"
      },
      "_hasShrinkwrap": false
    },
    "5.3.7-alpha.1": {
      "name": "cspell",
      "version": "5.3.7-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.5",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.5",
        "cspell-lib": "^5.3.7-alpha.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "587268f3b1233032c96dd582a125d9334057dc27",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.7-alpha.1",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-zIdm0ra/MaBZjklk4U2RZiR1OY3MiaCRnpt1IgaI3w3CBAqXHb7g4q/iLeIhzr4OvawOj+TGp4DL4LdkoqsEpw==",
        "shasum": "3a8d7015a0cabf6b83077b11e4c7b97ced162956",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.7-alpha.1.tgz",
        "fileCount": 33,
        "unpackedSize": 103665,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQhF0CRA9TVsSAnZWagAACnUP/1e3XACE8kX/3A+3t/29\nOnqJmDhlQZnX4BTrA+X8gSt2zW2uQ57WEbFnjRmPY7F9kW8/8yDjfsp8xTjg\nsl1RbTwtgIVkK77sLEVU49nJD/ElyVF3rCPQBLblMnbSTsacRVyU6e0u577A\neV/t5Nt3r0zL20uuxa/LSPgv++KdXTUsTTexePHy4XiDgeILOG4Xh+JHe5B8\nxAUhSc++Jj32nIiR/wTPIKb+7aWM7+ytk9iImRsGwtDqUYeUQKbN0gYdK9/E\nB7MfG90zSHRxPrOSPutTIUKc3yo0BH7oxWctZtGiD4K5Pbo1Dnum2Mghy+ua\n3/W4/+lGookX9lPhhYNwqwJT+jMaybqW7svq6ZFo7ymsesiVL9TqodyCPfTI\nBIhy4GDlU2s8YRxmOLsucwkOSjR/ycVVtXVpgT+I/Zp619drzSrvwkVjrWvM\nsZF6XwZfe7wa8da+BYRAXRiHPbtvXPIdcjlaDndZ+VH2g3SP5XWbGE3hAFVO\nYqot6sPmHFgvjvzdeU3dLAebURWy6yQy9Qj1VoDba5SKCjYIKh74fmkiMXCa\n6sqJ+bRySO6QhX7gd7YGIgoTo6F2cxf8qyBLAKER4ZWtBIIwDdYILSYHuYqk\nGsRLVvB8vcJhfr7FBuJGvuKzphvohBDyQGLlQ9IVxyb1Zg1S+IMqBdn/zbCA\n4oWu\r\n=bxHk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCJ1tRFGolGW15fIlM2JAJSEh+qJvmr4dUvV+UUnW+6HQIgBHE5sYUG8/Vougdtg4hQQvjDcRKWZ8VECmhXwtakmiI="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.7-alpha.1_1614942579875_0.44790772417542435"
      },
      "_hasShrinkwrap": false
    },
    "5.3.7-alpha.2": {
      "name": "cspell",
      "version": "5.3.7-alpha.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile && cp .npmignore dist",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.5",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.5",
        "cspell-lib": "^5.3.7-alpha.2",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "c353bfdddd2dc8d7a4e6d38abfce32de3504414e",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.7-alpha.2",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-BQv2Ih6a9lqL+y2RrwWsNJwCsWXTcI5iqd6Onj4n1Kjm6PiazLJDAgxq2tGe3BYUuuMSVeqpQbqP3vK3707gug==",
        "shasum": "6e44a333800628371da8a6e0b45892e9c306f39a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.7-alpha.2.tgz",
        "fileCount": 33,
        "unpackedSize": 103858,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQhkECRA9TVsSAnZWagAAvfoP+wW75XSbEv9y9P8P6C2o\njVd+LmEz3gcHmufQmXB3cmEZRuRK0gnV3//8QTJ6x5JSKxjyY/fFm+FM8e9l\nNnnDE8sBPEv14oRNQ3+6T/eCGcwN3S8o5ii071u50JFKAxA/hkzoVRidBcW2\nbfvsNC8XltzLZJalLARN9/k/51WSBkZMzX22QKcYIcggbFnUCSirb0XvfNmf\nwh0FdlyIcIBRdqkwrpTiPAiYbrqwmOWbvfORcXQg1/f8Bpj83fovLHtZ1iK3\ntsxIG5NzkfoauWyd0jwydsNaztyJpInYxsD2HvFsDQh0tTeKyzDBL37Bk24I\ndoHsYjiIaGK6KwhTdRkad1tThAxN+yxE4qYRiMr6FqK/XIOyhhmxROzXtYRk\nT0iSfzAma+p5u/ZRnqZue0gcdfFK/lHaJH4ZFjklNRR/E5cjWrJtLHn+z3a7\nko8UYEwVXhfoUQogUi8OMWBIJJZY3cTR0KT1ri3hMZr7flmOehcb4PFbpbAe\n4OEmUoFRJ82m07Yf9p33F3DEmKmwoAqm1Wd//1LsbWdZo2TTw1m8yP11fB+g\n6VwHPlS3PdvZrsf1doY2+4eBZHe4JVSvCUXXLTo9ptDu6sPNMBQ3FPbOMBVe\nFLTA6sD1x/F4YurzVX78wSKA2ksYm/E+8QT4VSo2mgpupyhvhv+qnIH0Hg4q\njGmL\r\n=3ss6\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEOY5FEzqsQKjVPpv7UeWvxzijFyUYvWYl/3ZCUkTnyWAiB78ZGbVKIVvNP1p+aGkN/PmvF3+6ZhrDFWoUAmn7ROhw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.7-alpha.2_1614944516342_0.9414896576409513"
      },
      "_hasShrinkwrap": false
    },
    "5.3.7-alpha.3": {
      "name": "cspell",
      "version": "5.3.7-alpha.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.7-alpha.3",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.7-alpha.3",
        "cspell-lib": "^5.3.7-alpha.3",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "5b969be3b5ce9377661300649c6c1e12d88e621b",
      "readme": "# cspell\n\n[![Build Status](https://travis-ci.org/streetsidesoftware/cspell.svg?branch=master)](https://travis-ci.org/streetsidesoftware/cspell)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=master)](https://coveralls.io/github/streetsidesoftware/cspell?branch=master)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/master/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexDigits` -- Matches hex digits: `/^x?[0-1a-f]+$/i`\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\noff an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n```\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.3.7-alpha.3",
      "_nodeVersion": "14.15.4",
      "_npmVersion": "lerna/4.0.0/node@v14.15.4+x64 (darwin)",
      "dist": {
        "integrity": "sha512-+mNGi877bt8riEdNWz/LlyrFMJ23lcNodkbvy6NKZaCKpJwKzKWhvjXpJVJeBShG56oXbPRoAhVlxrn/tlg5EA==",
        "shasum": "f9de8ffb8e2682517cd26ef4fee4c8f94500b7e8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.7-alpha.3.tgz",
        "fileCount": 33,
        "unpackedSize": 103972,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQlnlCRA9TVsSAnZWagAACK8P/1SO5+fIt85Q4uyWqdGx\nNoNKfJ7IGuudccfg4J0x+Gl2V+OuauiAVM25bH5KFYP/QMGX7ULmEcFQ/1sp\nyNYqCRuH7cYBKhxvTuI6V4JJ670JNuJLOrc+7BxomqncEs07HTBA/Lp084+f\nLaPE5MBgqkppt8kswWenDL4p7hP6eL/RGt9DTWC0dwSQK8gclvD8KnjO//8V\n27AFyS+b3tzVvftFjjE1bJEJSIZin8/9C4mlMBjzgSj21o5vFy5B/KxfOf2n\n6VOBBPWRozqcMxORZclRSA8mTIhfblgXyOsqO8ySeP939dIe8iIPRy6jWaar\n7PMUEYyv2XZ4KIxJK6Xuw2rdp8a3Pdej7859bUwACfI1I2a/l7HfZE5fP2TP\n+tQmqzSEpT0GPoXoDwr/DvLpoBfYd41D7HmHDWHNGud/fzJQgAED3+MT8lJJ\nEAUZ3pbZg8u5GDpLblACeZqdWNtM50KeRgyuDeSXAJo98xe591sskGk9aYs5\n6NWA59q3zZ3n5zPAEUPAiCJCoiv7gHJESRUL/S6onBCbFFRwpxvmkgNhfVDe\nXEWyfjaDKKLu65v5rhUifmGnGXOprA1uZfoYLrAsYTl7lOqfILlJm2BEwO4Q\ncC8Twe+n8cw/8M943Sc3Adezp3vvKhQOf7UTmehRgdm2K/LeHCp64XUR48Sp\nwekU\r\n=aBvK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDAK+8A27h+Mw++F/Sdtt0l52GHLfiFww02J6/toDcPYQIhAMeY89LXcacq0Fmc/ZebMv/THsIGWhE/JTpLPzfewpiZ"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.7-alpha.3_1614961125361_0.45640913858598275"
      },
      "_hasShrinkwrap": false
    },
    "5.3.7": {
      "name": "cspell",
      "version": "5.3.7",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.7",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.7",
        "cspell-lib": "^5.3.7",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "48a67ced0d0a43a8f905ebe3e7f8e71bd43a8f12",
      "_id": "cspell@5.3.7",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-KNs1i/4pBejBMu536atrVJFVdKg1nBF0BZy3GoVwIMCABxkx8KuGaE7uj2JUaHFjlp1s7ICw/p50eL/FL0HerA==",
        "shasum": "00be25bc8bab89628021b49d1322033c4f00f720",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.7.tgz",
        "fileCount": 33,
        "unpackedSize": 104095,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgQoBLCRA9TVsSAnZWagAAayYQAJv/XqZRKS0OVmOcL03S\nKsG2MMM76zc/n/9CAmP0n2cq73h7bDXSJe8GtH9BSXizNDi1WV/ooCxk8nzm\nW03M0CEm6dYjv7niIgSHpS/TMbHCLWhoN8TviYbv7wF+pt1kGIYXpLkRkcMt\nRA53POnT23oDCYM6S0X/6HpB2F+Urv45D//LCk1TgcdVQtwls3ftqL/mxMAg\nE1gFD0ZZC+iMBOZHw4BHm4iR5WUzBMDUl+Uke9lRIOV9I4L12Fg6DuiRHpvJ\nqyS/6QwYph9+EE9ZkxC3clkz1mEdrvyroIW4Uyn2MFo+BXTObOyN8TBWTYQp\nToPSp6p5RqsBbEfKNYUFSvzdgy1GrHDmoyFcc9GQbfFHR4dJeh/haVXwmoTM\nNCU6ohlrd40CSwwf+93STKPMneM1SV41JhB2e344aurtHcJes7ZhQml3uBHv\nYZm4stbzjIliMkV/QF1z1nXcqa/8dAv8zIOTb+uYZPRNynPdI7VCE7Cz+5tU\nF7uiglOOLdoVgRgAQJI2RicqJhIKLRbZp0YtIbB2LL92No++q9mOKBuc3/w5\nvtr3kA88cA/539GnWcO/jHkeUfN6Ydzkga7QpXjfL4uAhtaVgPxY29EQI6Wt\n/T4bNlnKO+4UORVLyS+HdCQS2q7QG1loe+ddJjMYM1VjBDamMELcgYaiNG8e\nJ5VQ\r\n=GMzM\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGgq99IYnEwinij0O6r71UPEpDFJ4pPSv8GcyZHv7uQeAiEAqQQf3M+vHHaFi9ac7m/SEcNFb8AN8P685h6S7c69hrk="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.7_1614970955183_0.6921558300483563"
      },
      "_hasShrinkwrap": false
    },
    "5.3.8": {
      "name": "cspell",
      "version": "5.3.8",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.8",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.8",
        "cspell-lib": "^5.3.8",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "f030240e2a5941f0acec16995f42a488a0c839fb",
      "_id": "cspell@5.3.8",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4KZMwrm1l7Vaa7v5vKJLM5NKn+nU2diOBzHBHmRzli/H3TsMeSpPcpbmBFgEBEDMbx33+yqJSMsN6D6xbQ2kNA==",
        "shasum": "babe6656283a5414cb7209d5e7dbef9f3672ba6f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.8.tgz",
        "fileCount": 33,
        "unpackedSize": 104423,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgUgU0CRA9TVsSAnZWagAAr3sP/2HxSWQiPm8QuL1oMI96\n0bb2nfaLWRAvEi8cS6xLhYhB0tTCnM1XBmZhW9y/KrCBj52GQVZG3GUr0v9p\n59sa9O1sY4AeQDbdof0WY6WBrZ5LIDwl1N6zIOlj1nhCEGaBUOAw/J78cxxu\nWWr6gj2gVvLXuDbVsYjoqI5vya/0QxceS4EGXIcGJX1cB3/P3Oo9MbwpynB8\nx7+pMD2fhU66WFpuG412qXl+8U39wzNQgdUcnMxLV6esMmk8Mx6boqX/i4dt\nzyVaIAUAUmO2Nl/K6hSIENYU1Az7ApR65f3fXKhVaE1FXuNhU/PvhSbV4LJk\nJJ//R6LLYlBDzHrOnzpMD5Est4rjePf2bd8J2G2FxC08DXCRdv/WVZPnEhr4\nJVvzLC6jybxAK6iJ6b1TZ3/FQ+KClHaYHOwgPSwsM+W7piN/X62eI7L4rLCK\ncK2urbzN0XLu8LSTYBkP3EuXzBDLo8/DzwPYI8A/R45pXx5jKQwUrIx/gQgR\nDBY2ni6ifCaA/94LiidtBBWixnHQz+llkXm/yjSfwbeammUAHZyKzli5EbOv\nsA51XVdrUwM/S7CrhZyT5H4k7Tsp7EbVDNz/xl0OdP4g7K1wZfFb9zr0IHKl\nSldf5dvKSaK9rDV6hwLrvjcUJE8p9ppfEUrUZpSxB2XjykQ/T6S/jZ9BKmIS\nsUQe\r\n=WnQN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAGrOAQyHtmFHM8edXu6DxtZGZiK8BMRmfKYG94sCUqRAiEAny4v8PmyfAVWGQnS7RSztaGQcOgRGkh06qPDn1riifM="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.8_1615988019697_0.020651027962161228"
      },
      "_hasShrinkwrap": false
    },
    "5.3.9": {
      "name": "cspell",
      "version": "5.3.9",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.8",
        "chalk": "^4.1.0",
        "commander": "^7.1.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.8",
        "cspell-lib": "^5.3.9",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.8",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.3",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4a0f80aac8faf704802dc4575ed5d06b7edecbbb",
      "_id": "cspell@5.3.9",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-NFV7gWLIDx7RoFj1iC4sXbMVRJqWNJj0OhhTFo4nA+ktblFLeiIb1J3SnVSrtwgM3wHP3b+pkuwHSBUTK5pj6w==",
        "shasum": "9bda30ed30611ff1a22b3435ac75f89ffcce1827",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.9.tgz",
        "fileCount": 33,
        "unpackedSize": 104570,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgVECCCRA9TVsSAnZWagAA4jYP/Ahr86KvHcXuAQMquo6p\n4c/exTktLWUUqkL/i6LL6gHJdedEM4bigwhXqQb2c//9Eow3PCVzFc/RVCO5\naur0sl3UljToMXhYxBmU1rB1qEbREo1/34VMbEUUAgkaDeijOwq87g9ZQLEW\n/KYeOKzq0hL0L18TPqxYzoX5pmxt/AcDf/vXd/GY/wlQCGHk6otWKP9ysrLN\nT5KDydas1PSxI9jyfwsFVQN2a7+mKIfvEt6OVZfBAj8bH69ROV6gKwhMgY5G\nmIqDyC7CpgdAKckgjky72lY1SNsQrqsYDDcbfHemhAqMyqupLiQMGqO4p9ul\nFehIIOumGqaCP5dG4SNW01Z/LBrHSjRT0uQzeNEoNDrXFW6vrBVUNNTWu2cN\nzOMOhk9Ofl5W85jHqJh21D8x0RmhJUjZ2tajuiQ3NtTFv0A+NEYuOhQFTCPM\n8T9SOfdSLKL3JAsUldEruVsu/Otj51F5Bg47NsZrUmT/wV3ERiXSD4BGoPDO\nAWieSATLHhPvNPLy3pKAzfqoefRFVLFPYK+Af4jhCE0/kDt0yAOF12FFDW1/\nNMJtZL921u/c76F9bv+cGGVmBiTU2H1tVjP5GkdQy+quZZlhTVdJiMWXcyst\nZ62II1oRDXRAhz030j7445rHrN2llgvbcoQsdQKycPJNdwMNbQVEZVHm9Sba\nT0up\r\n=ncky\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDS5+RtP6E9b/spNnioUfvPTmjDi5YOCQmE1SyzC/3BjAIhAL7RVdYBUM7bRccIEsCIzUchIUGAxD64IKaUPUFRnCSK"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.9_1616134273903_0.30697093889887705"
      },
      "_hasShrinkwrap": false
    },
    "5.3.10": {
      "name": "cspell",
      "version": "5.3.10",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.10",
        "chalk": "^4.1.0",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.10",
        "cspell-lib": "^5.3.10",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.9",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "316b4909a08b8dce962b60835e10b2074e6fbd75",
      "_id": "cspell@5.3.10",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-/u5+AmEyZeLjqGyzz1oyMC70E+CG9/6xvq4T8EN3JhBL1YkjjEHKsnMTK3rNWjBOXEYEYR8JN4SpSGWbw6HXdg==",
        "shasum": "2c3a9dbc2b607891ca4a6ace817ca7f13612cf5c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.10.tgz",
        "fileCount": 33,
        "unpackedSize": 105395,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgZxnSCRA9TVsSAnZWagAA8F4P/A5m+6y/vnzBnMp3USum\nQiDmzwkZeLmVs3T/6LHQE52ve06ZzN5VWHabUBN2xzqsYklBi9gcDveXoDGG\nSc+UyrCGjdVK4Z+0NVETtnrKs5XE9848kUn9AgA8nV6EicWF8JP4c4N1QNwo\n48xBg4tg2CKlKbCT/cjRkpE/WvKBOJhQI06TcUziGo2mfH59LHx+q1bXFByM\nuReSfhuP1VdO7TsvsdO4oJu7FfEBg2ZsP9LiaQsn0D84Sz+kaa6nRwO61PKZ\np7L3uAGa5CT1f/8hUvBW/dJKBmnnogeMRWa8HbQ0vHclB83zqBb4rekILdbW\nDBh+1o2/lKWIq3m//scYnowqJ9OVZn0hE1PKfEBmNmaJpnMdo3Tir/cjei9e\nSGlV3BRDvsBEGaic8Oa2YPQaPHkXrs6A1l3I+OlJIXcj3TiXlZQigXQ7DO99\noYyCfg2xUOjOCoeS8DfJKCxppyeX2MB3An4qP9jOTP3DhNRUJ7LZPbU5HY44\nBJT5hfVIWAl+uS/rltx+Y2t1mzXFuDVWKKENZi30ZFI9Dw2pAsj7Fl4a0kGp\njSojbqQS95M3xpTjad4yvDNq0SCr8YtUW7DhugvK+HHBtRYoJ04HqMl7R86D\nPJp9oOAAPQN+3rv4hIQMDGgduwUwakupX13tELaqP+HnKtlNva2RYHq/3w/B\nqMfk\r\n=3moa\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCxOPGGY4qACEl/MO8SzqD860PkZZDScGEEj8Hr2FvS9wIgW/oEQt3J+ZI9qtESO2Y57/JeA2q75ILltMH+0OAhm0s="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.10_1617369554268_0.10506213945938248"
      },
      "_hasShrinkwrap": false
    },
    "5.3.11": {
      "name": "cspell",
      "version": "5.3.11",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.11",
        "chalk": "^4.1.0",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.11",
        "cspell-lib": "^5.3.11",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.10",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "7609af7458bc320c0284c8a1b95258a89dc5aa69",
      "_id": "cspell@5.3.11",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-GQuIFkcHx4L/0xStV/wjjswR7/AG1BYnkm7F4pMBvxM1yvUxDFts2OsdLWJLWY/2nVsPQGi8z2oDnFkNh8xdXg==",
        "shasum": "9cb18ee29691e806c87fa6e6b06b9c8196fbe720",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.11.tgz",
        "fileCount": 33,
        "unpackedSize": 106299,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgaHezCRA9TVsSAnZWagAAAy0P/2W5Jd4khmVt+Yz1U2Qj\nZ9/f/m8eoR3WNpK+Wilz3SRzsNT198BtbOQYc1kNR1b/oUs3CSkwVHT7jhpd\nYoqXqrOBqt2Wj9/3R2eTuCzmepJCpInpZdsMTG48D6TnEjuOuVwZ2pgiDJdK\n6OBcwAsNRmZ8twEWobu2mpJb5w+s+yoP1GIMj+K+rdQAB3J3ggH0WnfmuW61\njKkYjI2Gw+5PeqvlFA0RQulDtjyIqo4HR/NnXbhoSkNPehlbFA3fdQsj3nsq\noMwD9lZ1pQOnPVRqp2bQX4Whx5RCpRfGubzDipI3HjOJQ1BMF1XzLK5FGL4b\nF82n4PR9votKwHxGkwyD8jxTouNeCQSdjlFavkyOuVa5RyPY5GgwS8Cc4nJQ\nSUmxjBjzfXEt2oep6alRV+OpVrIPlhnyvwSXT5vM/520Hep3vmRhY4GUPSEY\nUlG86Kca0omaE4veFYbKnl4/AYV8YiZyAItTawi6JNcwQQiFNfxIvmE0KXEa\nX9PVAhwQzabeIxHyX7TTyLSyBL/F0FBv9w4p+C3t9zBAoOMraGOyYTIuRSuR\nEhgJuhVg7G/+mdO9cJLF3kaYnb0WZUctmNPAGfZcJ4imVIwDFw73qPZgMenK\n6VR18mcHWf/GO2TzRyXkbDr1UeQSsNWZTbOUGI1b15VtUKLYqjIUjcuXYDD7\nfFDM\r\n=X8wz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFOud3HCkrx9G++OoimQucqLmndA71udwOvQ7W4HqY2iAiA/5wg2zT6B2i6Fx6LcWvxQnB4ilOahWjdmFlo5AA1P0A=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.11_1617459123202_0.92196020080422"
      },
      "_hasShrinkwrap": false
    },
    "5.3.12": {
      "name": "cspell",
      "version": "5.3.12",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.3.12",
        "chalk": "^4.1.0",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.3.12",
        "cspell-lib": "^5.3.12",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.10",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^26.6.3",
        "micromatch": "^4.0.2",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "84fd087c94c5858a94b5a083da6a26f647f5f1cc",
      "_id": "cspell@5.3.12",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-lwBVphwIvD/TkDZAjzNStpKqk9hAUfKTA5VlnXHCF4l0inw0r8LL17OnxcAAMo44tewxfo9UMEhx0ql68dSNrw==",
        "shasum": "80621be7971e475d19c412ee295474ffe90c27f6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.3.12.tgz",
        "fileCount": 33,
        "unpackedSize": 106614,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgbAUSCRA9TVsSAnZWagAADq8P/230DknlYNjGLTsDagzn\nwYwHnoEWcNbsx7tj2XJuv7l5b6S0NHr95LDzS1oLVU+vGBV80D4oau2wBNJR\nUd/P24fXQSAFcxuPSxr9owLRs9N2yJsaLQbeZaW5Ds+YGDlR+joXslbaYR4X\nU+Cm8x7tfokyGT2enFiIKieoilFXyco2bB1LjlfPvWvm9ByvencykLK7V5A2\nkLY+Qnub+88BSb61/3rallSr//mVllR2KfIc1yZPmRvV+phX08qQLntK6YV7\nHuMdJQ0lN1r3accFam/1if0MIkWfYyqg6HbgCa362mq8ptiVKCh898PLjExg\nxWA2di05OrAj4TueIcX5cBhOfnxYJyHY04gkksFVFxgOihufBSgdL6mCaQeB\n/zyMtKAUBHTbIjhARpc9dpyEU0AU1xhYWFig/Qinga/tY82Sz06XMCtDsfiw\n6/t9fLccOe3oW09awS0NSIYcwqqMqAZNbL7WSHTdGXma3VsxhrE5xyvtLBrr\ncblX9mv2IlZJyty6e9fYZjs5XqLyvcmSgpNAyzsddJzgWV6/8LH4w9YJDgiU\nUUUKuU+8bCmwyooIKK2xvCN7DRufcwq1hClLShjQup6go+Kk/Z3H/TiO6biS\nar36agI5tD/9PlPHHE3o6CL/C8cNnkO+FFXRe6T1gFJQBAX/mWoW4AJY6bPv\nP4yv\r\n=tCkG\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDMIkYQ6fBGm6MuJaYg4oxvUJxhUDMS5e3drKBosRlqIgIgfXlbuesG/N7PBDcU7DE74dU5NOLFwkD22kPGf4rL4ZU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.3.12_1617691922190_0.8431059942143837"
      },
      "_hasShrinkwrap": false
    },
    "5.4.0": {
      "name": "cspell",
      "version": "5.4.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.4.0",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.4.0",
        "cspell-lib": "^5.4.0",
        "fs-extra": "^9.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.6",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^26.6.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "a8c5912a00f72a99208e02685af062b9cfb169be",
      "_id": "cspell@5.4.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-613oEbxry/xJWrFf/r6RS3jQ88Az0W3LRazGi0s+tcIAlprJn78inTKUn23oQslhoF0dhYADJdFaR6Q4Fd6+zw==",
        "shasum": "3cafddc67b445deaea52b72af318b8c716891748",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.4.0.tgz",
        "fileCount": 33,
        "unpackedSize": 106757,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgkmrcCRA9TVsSAnZWagAAc60P/A8GWFKykiU1zI3artol\n5Nhn8fr4+wuf7kUvHJsAU2l1P/T+CxxPHLOMiUy7DONFfwJbczF4tbpeB+zd\n6R79LM0JAILsA2MfLoJFDaWoMct72vTAXa+lsL+KR/1KMjwqlbx4kN4LEgT9\nyQzCtdXtuYj+U73oXeAMmjvqgvMUXloTriFET3Spjpfj2Ws//wGwO0BV5o5g\nhLnlAC0v8WKCj+lzBreB+eKKpMbqVqvlrIA3rHZ6IK3qOa3VgYP71ffPmZ8Q\ndXL1mXUNH33e2j7cZpZyZ66emgpA7U3HR/C3Cbq/JreT9ytJ96CkC84YSdC2\nAZa1EeDNKoahe1rHuozBMKG+HpDcBsFf8nufcLXa/cpQ1OwNHD++uFKtaTSA\n0mOi7or4gdeLRtTzwdDyJycGGmNWzAkpGkhRuOtPfSzJeyv+FXwXhSadRuFo\nYlQoIWjhs+475bRvvNfkkHKIszzYCZvY549GIqS4uGKDjUUOEzeycIFnQ3Tg\nNMqUSCi2B2boEAWiPuDfRj/EZavC0Vsweq0ULyxaRHy4E5sMtoWNCM+L3Tsi\nHniiALpZKVE0OTio3S4QBcgXmWsLAjUVJs2y+hV2Vjo9TcxeHrda5pwWioDN\nmbZTGE43Kk2KLmy+Ov6T7gF1KJByLpVnx41FkxPe8K29sHkXvZIMC19MH9cp\n2uHJ\r\n=GVG2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDN90OH09y6/+GMvQccGqMeUrJerU4R2QOtjm9cVk+vpAiAEAhRiR1SjLsRoaj94NmsIPPapYFUOS6lShIrH0l1EKg=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.4.0_1620208347735_0.10854309618477198"
      },
      "_hasShrinkwrap": false
    },
    "5.4.1": {
      "name": "cspell",
      "version": "5.4.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.4.1",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.4.1",
        "cspell-lib": "^5.4.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^26.6.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "e6a011e8f60a63e543bcbbbfa8b1fe621b274559",
      "_id": "cspell@5.4.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-P4Vgfh8+SbdtbOp6boqFe1z7dVHoJif+Z55S6gQNR/KUrBFzajZEYKYjkDnWAHFV1zG6JcJinMzqDdc/EfiAGQ==",
        "shasum": "5b92cf2886a4478aa285d14eaa404033437bb98d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.4.1.tgz",
        "fileCount": 32,
        "unpackedSize": 86433,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgmm8LCRA9TVsSAnZWagAAuYkP/0wCXnPhwz9FKHxImae0\n4zW41Ac2MB2R8xlGQmVT3Ekst6KqEHriMIKejwYpEdLlgf0MjsGy6mhNULom\nVgvfml5CUUETTpZ2Nhq0OAqA3FC67J/Mh2bpM3S9gqXBt7qXYpH7RtfOkYA4\nmVwDShU+T2vQqvOXuhWU9V3aTdEIJ+9fiOcBZHZ55lmanSXyeK/Xw5horP9/\naqQ3nkEfQneu6RPjftZkfidNiMJi0BM3eOCbYWz5bDPV2VTRkEr1a5AFgpOv\n4or4kER8DmpO/3pW3EjH8dT485XmINkr7GORgeAvI3p7xE3cBqzdINNeEpTq\nN0mdr7G7aBCDMFXoh6Wh8UrhM2VMPN/8OFGQhKsMfa1i5BPZ7UAI5GxAMU1j\nzy0aFdsatsfxIVsh2mfR1sm90ptJAglT+oNhIYA1IWJozQARrjTdf4d9sp15\nABXat5gylzFSgYhU4KIT1+fPutNlh+3dC+hdV/NXkPG9w+0PgqlNU7047Z5K\nkSsPUs7vFRlvPuv+2Hl0MkHSv1EdUnjgClQsHGHtchU5DkCwR0RQK/V87dTL\nQTOgYOXAPZKmUUtxMpGnwY0cVKBdh76bD377bh3+GpzF83My6l6tsI7POLvL\noGcE9xqV4yIDCKG7aSoeqUxNSR9/AkiWvrbFV6J67nvzat0cRJnzOmuSFan5\niIVV\r\n=uNZJ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICQDOsHEwhMmM4vZ7ktuyeDHEFMakgAiAfK3O33Wb5UgAiEAsfWoQjLqZolE2acMlkowoErrN/CTReymfTPt1jmjH+M="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.4.1_1620733706500_0.47447478949260535"
      },
      "_hasShrinkwrap": false
    },
    "5.5.0": {
      "name": "cspell",
      "version": "5.5.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.5.0",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.5.0",
        "cspell-lib": "^5.5.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "275eaed9743cb3098d771ec02a0125db39eddde1",
      "_id": "cspell@5.5.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TPLI4O+UK1yoBmUj6iLvKHSC96dyXJRneiSNbFJy+o/Yp2LTfH1xhZx+o/kMkFh1KuZ6DxcIQcRnUW6o+AeJLA==",
        "shasum": "e66c398d4e201a5447ba3b066040174d7cf01266",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.5.0.tgz",
        "fileCount": 32,
        "unpackedSize": 86367,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgscYJCRA9TVsSAnZWagAAcScP/2LWKnu12jCLOS4Jus8L\nR7H5WDOMuitzHnhjixMLC93ap2Aizf9fym8z9+Yv/hPlgZBaU5TUFYdJCmjj\nJCbFgtRypQliDcG/Xz7JQ7pHi4pAaw0s5JsULjDRMEQqmkL2uDAGD1/eyyce\nMz+FDrSM6Vf8ZQiXV7k9rgVIfOqZYrCXWVHofUsr5nI9AoJmxsaojFMrM1Te\n5mt9M+025IbAVfhHhQTu1Shv11zNVNo+stVK7BCvGeSJJoaneB5YR3Ox9cjw\n7f0ZiQISeugny7lz2vTy6kFLkhkTd2buqxZ2VNUpbEJb2CO119rFMhhdSLHq\n/wyR3Ye9QRFjRPyNMMuPkvZYJY4PPRqLUVc+gvB4zlWwE1vgpYo8rQucHqq1\nWUJLltIOapnIdP6WBmASdaEKp/UCyhQgxQEnBcCOB9sk8fOz34xN02IoOIQC\n+GSpDnwUnyljROzNWJPqJoY77JZMYb5hEzIrdAiEXJ/Wm58eFEQ9Iy57YLZW\nTeLHjdfjpT0Q0gMvg6F62n9ZByaQq+xLlfHEQBKxYt9Vkf7N3xCdWyh1+Rqy\nFE4ktZIpa6KNe3mY4j9XpBzxXm3HvYT1UkuAOWyWSF8mHda9p7FAl9cQHdcw\nz5uJQU7hatjoi5EfeVpF7Muwe3vjirLLbO48y5d/F+syG9uNO+OYnhbij8VC\nwxYO\r\n=dJXO\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCUOsLTVpU5EtO+pCXGAaJwRuVrtDZA21LCyeblPAhScAIhAJH2UWqqxYJPB3vDIPzrAnmEK57tImDZgisNeCASR7yn"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.5.0_1622263304773_0.29297748636623067"
      },
      "_hasShrinkwrap": false
    },
    "5.5.1": {
      "name": "cspell",
      "version": "5.5.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.5.1",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.5.1",
        "cspell-lib": "^5.5.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "882c6f71cb4bef2395c4fdb2c659f12e537444ca",
      "_id": "cspell@5.5.1",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9onDkrR8y4uE2odIJOfRfoqPJvfMHa/QS6RD/kVx5UCqpA/WKXAq9AQ7Eg/gR8ZTUJA/QFgBnG5r0XPt+Lle9g==",
        "shasum": "20d42404758e78cd9f74822ee0611025c4be3dfa",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.5.1.tgz",
        "fileCount": 32,
        "unpackedSize": 86367,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgsdtsCRA9TVsSAnZWagAA2YgP/0sqUq5tDyDMu7WPEhvu\nvOOy2LPWsDqfLgjqzpAqotLPy2A39XtoxpW0L1v+Tu4fSgiFaR8t7npSLWKS\nPr4/iBcvp4n7J3fFOCpjXCFhSVpqUt4Pe5TZ+y1QSDLovwYiWMwaab1l/aLS\nejd4d3zvF6y4r08OnCsVx3diX3kkiBeJF3KynvC+QOR8ar0McqmDNjEqxU48\nI4LCwAF+G/YpwquFrn4I1cZg6Er5SK3nkZ4HAoZd7SZgFi4qefPZ965hDdaZ\n1V3Sj7xOkugM/Q0mUC0PxvWYokvmpx8NKSa8kR699CPyITgFDtN9uMsQJZ8n\nPSDjPoLzn80aMT0wcP/bIvSDBz8JDXm0zowUzwpFxwapsgtOFyjhn3cBgagc\nSY6h46lTw+gR0zsgGmO5FCLOWShmc+3HFRM2PWpm8INgm4j7GVPyaoTsXYjK\n1+XCgFO9MRPfWrne2nCEWVIpejaW3UBHpImGd0tcAJNoRc9pQRpI/UNWCqQS\nbiAkTtd1GVHup22cg3Qrw2+R4ToWMRnSTQwdLZCX8Tyrj9nfTeiw4oI15QM9\nVPFyzhGLODEbXlNfZEbsUtrgn+tKClk+J2c5htrpy86i9CPvJ387nGwfc/59\nhKMqqJO9G3h03N8OXjRq/4zcmnNbr3xrj6gownQWZfYtDbp/E+TbrDw4gz44\n3sE1\r\n=XnsI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCLcBwXkGbINAdjNTDCd73J7MYFCiMMRQHjjn3VrqlHggIhAI6P2svtfbxJbC7YvoKnad/8qrI0Y4fA6aqrszIra/7I"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.5.1_1622268779795_0.6876899088455808"
      },
      "_hasShrinkwrap": false
    },
    "5.5.2": {
      "name": "cspell",
      "version": "5.5.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.5.2",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.5.2",
        "cspell-lib": "^5.5.2",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "292e2a23528cbf5360c1b3e82f312bf6d32c14bc",
      "_id": "cspell@5.5.2",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iklHcVuV+hfzeOtDcoAVBtrujhIMMLJaZRlaNTxsawNNnD/BuYljicy1CkHH1TfD4Bygj3eAIPsVtPmShyLSoA==",
        "shasum": "a778efb24006e2a552aab2c52ce23c753d64ac68",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.5.2.tgz",
        "fileCount": 32,
        "unpackedSize": 86367,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgs2k6CRA9TVsSAnZWagAAlHMP/RMR7jST5t8FyyNnXBhT\nT60wyEuw3moYvGFyVZ7aKs5XJyCAgL8o+YqunvLReryNosaLYf0MCcTmjRfZ\nDglJuaZ81kMKfPvxOwvHyCnxrXKzCJw5FaXKk4FKWh0SD6IRkjIx8OFuB5tv\nVklcoLUiNgkWdbnvtRaYGqd7x6CiR7uipst2QobaAvcYrqhrdwuXL8juReP4\nRRTi3oP4F5Wxd7mcDFZ/o28G5+rqToMXLvUYEUnVmrIaW3TW43rbSuLBwW5A\ntCidCALwDmmDHa9IDMovqX6OiUuJRuRkSdPvTPYnZhl3RRJxZymMAqM5HcCD\nXb55pVTPCaVXhVdKMua4MUnP4y+8jhRda45yXtLDZeIDAMPofwmlUVCmrHjd\n5fU6tYg0hNpwjMlXBXGwG/JYy+Yo3Sfbsm+AMflji67Ti82yBEiJl8i4XHWR\nEiLQlwxh/k1/1flVdoK/E8MhZ3Yv8puAyFp6E8CKv3EcFPRvTLGznugRtrxG\nXChAc6M8P1eYPcnDPdHIZb1UyLk5aOqtv8ybZ3+2qHmN8WY0fWdvSDaSknsS\n9gA0bRVB+FcRcatJj7s19r7KB+ciFFJFsITom624CkP0JZm47pTjpXRcUNNS\nlLbrlTQrkktXI+jT0DMofEIkAVfKdUYq899dzEbM/vftaIJPRf/nFS6O8m4o\nL+vb\r\n=0zmv\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGM4rwTQ1rGpuMNggXjH9pIJGnOlYoj1bXfhhHH3GFJpAiEAogkCcOm5xlqt8I3L6Gr6G9J97+lvV7nkYkTbP1/gx6s="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.5.2_1622370618412_0.9007611357050762"
      },
      "_hasShrinkwrap": false
    },
    "5.6.0": {
      "name": "cspell",
      "version": "5.6.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.0",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.0",
        "cspell-lib": "^5.6.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "cae6c1b9659c6cb87f50369ed123d26d773b2637",
      "_id": "cspell@5.6.0",
      "_nodeVersion": "14.16.0",
      "_npmVersion": "lerna/4.0.0/node@v14.16.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-keruL7u2yKuWAOW28C6NHknyHX3zpY3PtIobaS8bZ2REGVepFi28oES3S5ZquK/fLVy9WdsbUCg9pA/sUMmIAg==",
        "shasum": "5abb52081c9386e846a989b755486a87dbb7019d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.0.tgz",
        "fileCount": 32,
        "unpackedSize": 86420,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgu33fCRA9TVsSAnZWagAA/NQQAKQPwC1xeBJhdnabWHwZ\nwavZ8cnzwnizsAnFB/b3qlBoiP5D+WG0OownLjgTa7KMwKm/w8K/M+4DxLec\nx3vlyVTAWZY4GdDL8xvooKq0xFrqC7NiETRbO97He8zKqS1stRG551btBwM3\n2zp0JA37p0F3aTbOotYoxGuEMBPgQRy3OWc24lY9vVsb1HXp4IFYNAVkOZ23\nhQ1UTE+ftswQNJtZtiHnEuLf8LDZcJhUhx2bz7C7VNY/MF/wa+JJvfj9MDqm\n5nCdR9Hqzo4sRcASQVPloDHDaX5Gv1T3DB+EglYLyYbzTsQacHCGvSrRu+dW\nxWSLfHxLvTFwTvdhvKKUZZpGxea38Y8z49VDvDrg7TnIxlN8STY8K7U1D+bt\nYo36DXTFNh1s4PnPvWJEKCDb7kQ1A05yxHkl7ES2ggQ3zEs5MINiI/aLNg/3\n5XAmdBNNxW5OPltTazj61o/PAJ6MIjiGTnbsJQOYXyDelQv7d69VPHYMLsCp\nCgidbqi5O5EcT3lHY5BgaB0FpEDORgdsO3KPvkii1HF/MO0l1NokH/e3PulH\nn/4iOTbq39L4XXGnCgccH4vETjbUVQvNjO24xM2BOUKV36NXtPvdmagR0hCK\njn1SOtOcYfHjKYuzn64XNlY6tuLx5sDXZvmxtiUoiv63hXsZzZ7TScWmpnfY\nrcFm\r\n=4t2u\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCP87d+tKPx2nqiTfT+C32vTBf74MLr22IgUWhsNCZpywIhALWLpWaIwHANaMpEZax6UwjhVmad244cLPnCDiLr28ae"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.0_1622900191557_0.21848159875949413"
      },
      "_hasShrinkwrap": false
    },
    "5.6.1": {
      "name": "cspell",
      "version": "5.6.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.1",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.1",
        "cspell-lib": "^5.6.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "97699440baf75caa1fe429abf3b1ddef205d3c80",
      "_id": "cspell@5.6.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jHMq0Yuoir9ziSo/oTqVk8LYiJNklAQesz3L6cxFiqg+t4n/bbodh/2Qkq7nCTXA1OhKQM2MbFnxpFUC4d87+Q==",
        "shasum": "9a56e3e344331f06a9085fd73878151ee840f954",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.1.tgz",
        "fileCount": 32,
        "unpackedSize": 86420,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwKyvCRA9TVsSAnZWagAAW2sP/1ahq5O3CkG/XWlfts7O\nmwM/YgIWjmkvSkqwmepkVK+dpUlud9URVHhtG6AeQLP8DsmHB0WBYEIGSEqy\nzoU9T6JruTSFb7UWj7XBqW6PXBVGfHK2atJ7uc3INtsTxcNfs9dTiW4Nvb8X\nRa8KyE8Yjs127b1KrfotfX7xK5n6NFJ1lT3A0ShpqmE6RN+q4lALopXJ7Ve1\n2XH81zOMjsaFkPIDMbnXqIfXE4Oh7bLbJXVl1n+0U9dEgEjHVmbl56PCF98p\ngN0yCvdyPZSXGnBKb2TioU3UnaFfsoTdyX6S+GXVnpFKqat2mI9P05EltGP4\npv4UVbTGchW32TfrCD8Z34vW4dEFXxHYEfUnrvOaYs8RyFs3bnExvkTCVbnY\nF8kjUERSZlw0hdYIFxJTyeZyNG8WV7z2N2GK9sPVQD3t6rqHeYWPJ1f8uDaE\nI39xm3l6Ql6XJt7LbSAetO7UCoNqCUsA2W0zma13jTbRH2YbL6pJIJzrLHu+\n3+novJX6HzCOjjL2lmBbATMxHj7BaOyQrA50e+fxLl4kR3BO2QfbmFRoQjuH\n6adlakBRYpmuYMni4vHSMaUxscIkYGPuYkd3ttNQrCS0Z1eym6YuorlMcEU5\niNUkcemUC0N3wPvlogqGbjGwTpF9hp3hLLPsRasYEuPu9DtSt0NB2yQdqsYw\nT1tt\r\n=xWHu\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCCH9dOz/F4qkXU3QwG+jlP/2e5KATGosasHBLG1SEiBgIgGpthgE9IRlfy64prV4l+k903sID6e7FFszdDYipb6ZY="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.1_1623239855049_0.5224557646777401"
      },
      "_hasShrinkwrap": false
    },
    "5.6.2": {
      "name": "cspell",
      "version": "5.6.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.2",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.2",
        "cspell-lib": "^5.6.2",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "9b2fcd5a6d80325683cfd479a071eb37b1445cf6",
      "_id": "cspell@5.6.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-BY0X2DuNs/PMjH+3dZXUrtFPL9WwrBMdvRAQYmKDvKoLf2A7JB4/JUQPh+2RoJZ3TfKqDiyMgUA/rxDwRm4/GQ==",
        "shasum": "65c0bb05e2de3da6e0772384aa2206e7f2906af2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.2.tgz",
        "fileCount": 32,
        "unpackedSize": 86420,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgwiUUCRA9TVsSAnZWagAALboP/2EydQaov/QPBnifuCL/\nBRt6FQbc94ocZYRXk54ec8o2YsfmAwwTlvQgWBYNrXyZJZzGZkI8IjP7vKWe\nRhuQ+dTdmbWFJHtRj57wu1uy7A2Lrv5q03pUNxJvYhJ4PqggldMpWop6ZoJy\nx0qRCVE/zj61Bjn/M0nXUSsecwyycSfLJGJXlwQLC/lnjXKuxIBUKkAHru4m\nUfvAqRVUANuk/6LCVZbfFxf3Ydmgp8RZYwVg+DX4xSTTgo9F7f6Xn0sG0M3M\nqRhQCF2vcDApl0m44tMI8yeCvXtNK81O60yzm0eNXLJ7Lslap0JUmuhvQyBP\ndZnpE4FanMBsYmrSUvEQ7uumbtRwfSIUam+3Eyl867UnHZ3N6neyL06eZ26A\nZBWdzZ2R/gR9ROkFRiyqbj/8ilS0Cq7Uko7dxwjU19xMBzw7oUM962V6oUhC\ne1P1n65uqAkmxIjdbzDiXZwUMUcwK6Y58A5SPkCkZUZRfSZG1Bh8jWHQZ88J\nHR62S4mVwjib8JrB+VJgJiuTRqsV0bJ84cKS4eHNBZkygOnuoXe1bTx4ldTH\nVwp6M7/Bb8/1hpdSIZkRs+bhMtGr1HfuQcAOtqLrI/0B/jNNK3t6KmIoCMAd\nfF5g18qLXJZvDN+oDiTzA9feUymlktU0c4QlYTD5w9sG1pge2hV6ihUEB1Ic\nfKqI\r\n=Hu+L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFJm9XGLuY0V6BH78CrIgSEKAq9/4DGGJ6zcenm/KNCSAiEAj87pAxXO/ChgA18aSzqTQ3LJcng3HhrH/svzF3H/wac="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.2_1623336212193_0.07258573801811075"
      },
      "_hasShrinkwrap": false
    },
    "5.6.3": {
      "name": "cspell",
      "version": "5.6.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.2",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.2",
        "cspell-lib": "^5.6.3",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "6c1211a6af23fe4a4b5caa2d3029cdb2dbbde0fd",
      "_id": "cspell@5.6.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-UVPz93PnbtyABKD3eoQuwK8cGjmULcl3B+WPS7rdAYq8CFtswZwFuNZr/wDLZT+lrqJqga3enVnI/I4Jfpdgpg==",
        "shasum": "b7a116fc551f232418ef65887f6b2f893ecc3c95",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.3.tgz",
        "fileCount": 32,
        "unpackedSize": 86420,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgw1sFCRA9TVsSAnZWagAAJSEP/Rmf2LbC77ww62i4IRvv\nqAif96HBb7FgCdS8T7/f6ZOUaDyFkPWu5sojZtvMmsJE9CJbgmGmmiJJj1sx\nIfc1vltWgFJk0e8ztRpttze5wcmmQSHZex83Yy92HzvOg+xqWdXSjIBfz7zN\noSCi6NMnBeXJZILuvjcxNGVkRMqtljHCQ/SHUIJb8DPVrEjZ8QcP3ltCXjFY\nogkDK1tURbsGrjk0gsyBD2dNSomJycYLUhuH+RcSA5QEne/4kg34AH9O3szx\n5tPguTMKbqxpveo2CZTJQ83UDsYXfD7ajRDZzuHADMNM72JEAF1EjZRcXlKg\nTBnaDljzI4Mj8rBk0J5TVp/HJFd+tvbll9if9f9zYrC7tojAoKq48OHGhPh2\nskNeEYZsBqc50AFSjrHfVzuXgCASlrcQR9OF+VR9lGDb2rjhGOzTEAd58N9d\nYaxMewkdDKgKj5JshSnv9COPuPmBwL6wXXUNpPZ1x74DGQKJijBI0DytTkY1\nZAn9UqF/ke/1F+BJrT4qVwBylNh43os+TCapoTItgtCDz6lABU+CUa4IrJ+u\ni7SIIE3qYK1woqmp9e+odnzMQr5oCqFPGOrFiqnmtHiFldAzY7M7WKqpcKm6\nq710duCUemDUj+6xZyzgPsZABVvH/2iwoIn034fvEpptfu7tPUR7kGTitmjL\nuNF1\r\n=o3v9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIChx84nSENAzAHHyl6NH2CGCzOqw/jippQ2zfsagDrh4AiBm8HT+4YJpZsYDR32euolVTI2vmzdFB70OpMX3QWz5ZA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.3_1623415557338_0.5833725494155235"
      },
      "_hasShrinkwrap": false
    },
    "5.6.4": {
      "name": "cspell",
      "version": "5.6.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.4",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.4",
        "cspell-lib": "^5.6.4",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1bfcbb4fa1893378f54e6d7f1000ca1e79163170",
      "_id": "cspell@5.6.4",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-pdOvCv5Cn3mN+NPk10hZDI8Y8TDqZq//9lMC9r31xJJCqcUvWHz0FLbiEzqBbUwQJJ2KaCDUcOybZAsaRiY27w==",
        "shasum": "572fc72669c5a4cad68553b6f8943f30060c2b52",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.4.tgz",
        "fileCount": 32,
        "unpackedSize": 86595,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgyFDTCRA9TVsSAnZWagAAa1sP+QBZ8iy8tJs6h4RjY2R3\nNBDieBEDuggm1hTfmjjSZMg0gHrep4fyiI/nmK2nb6cH2Rjwedw5drvauZgw\nRMw3iv4a+O1lVmypPVPMo3eUwjJzR272qWFGvTndzgw9dlvfMwCp+IUnGQjw\nyWsv7CcDHbteaHDW/EbGy4fTI0aCloBpmKEwwIu+80QeLNcW6Jl+FefS0TOZ\nz/Be3KUD02JQZAN3Av9g9uC+s2czi2jf6mt8v2O+pMLSexhXp/bKjYOJBMRO\nc//fSFEWtkeBst5ZBRCPbcnKJMsccmNtt8Z7bIWI9tQlV6H0QZSHz9r/ghUf\nFEAfTiljEeD5HxLGAvVdvmChHylVw2iT8c2f4g98vO3YBCuYi2voHdGKV68A\ntsLF6dRDGGv0VIHTt71vUmFSD4pXKk78Mq+Em0gRchC5dOlWOelyxe/A8vDN\n7Y8DazJAz/dZY4Biw1NUwVfh2UBDILwO++iDa6eTqYQ6jB0+N2mPt9EoMqHu\nD/OopVuLhx9PIJrDIKq/LJrFHxP+tgklGa9rhGslZ3NubHsDkhGeHvZ4ckwg\nKqQmLIIO/10+Jw/a4z9Yzu6WEJ9r3cRVEzfhrTnETQfUM7eyIW7gEiTHd+F1\nIOznPXefijsnsELwJYQn6r7fO/PIvT+q+PO8Pwg8yKN8PlC9N4TR+6q7W/4B\nWqze\r\n=p3dj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCnx4S7YetyBo89aFjciDENS59kUYsg9WE1uNWHWAAY4AIgP/10ZbCqI1rxOSPDe+27ClG47F8pfAZUWSI765Z+vpA="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.4_1623740626972_0.14880668352154802"
      },
      "_hasShrinkwrap": false
    },
    "5.6.5": {
      "name": "cspell",
      "version": "5.6.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.5",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.5",
        "cspell-lib": "^5.6.5",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "399f3c696508b3515919a124208bd0ec47a00d9e",
      "_id": "cspell@5.6.5",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-HsRmOYswpT+SUFmhp5r8QSIhd7NocyyB9dTl22SVUMXcweRM+dXYIpmooWl8a9Q85Xys274NGFY4RCrQ+9GrVg==",
        "shasum": "83f27bd023e67e174a20a173764ed1d52169667c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.5.tgz",
        "fileCount": 32,
        "unpackedSize": 86795,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzSMBCRA9TVsSAnZWagAA6e4P/iCPF41bstePcg35jS/K\nMguOXBlcLQgerYRi/4DFZkA4rQvkEKP7HR8tX8hx6rstq8pPbczeUMVkYaWU\nut7iMbv5qI7EV6+OpPQvOpf+ib9NkNfwSTLbbHLeakfewXg6SB+kRP697mWb\n8ECoaB3Cpq1eHHftOVbe6mDf9tmFMFJMkGwJ5ZJ/eZziyaBMJFAlgSeZ1oZ9\nCq1x/CDCKx7GXsEEUpZ7jMGL0/f1pQJmUhficBcjGt3Q2H96ai5v7CQIzLbZ\n9zqwWfAdeu0zvyxE3ounnGRP/geJ6b8YA/505dkoQiCKoaT96+sHvvL0K1h4\nRMvV/HgJWpLDR3rLToSXUOdPiNNeYSNTMIM8T3YH3FnW2M2U3y1IdeM8vsNI\nxwaThzUoWvaRjH+jZUfcjfzJfK186Qvj7FI6lR9AYVL0KHAyO9sKgBmcNXva\nqDTJBTK1oUFQNcDSG2aB0265TI76kn6JuqoUPOIDryxoTANNxUTabI1Zlu1i\nwNEPEtJ7s0+i+wHk/yjwhCK31V9bWN4T27R+rvdsvRbMyt3PKhxBl6b4Mz/M\njcU2d1Gmo667Ge+AL/Mk+ivHch633l9LCfxbd4585Uagdbuwn8bTcohES362\nGagQN4/ZDELn+oyC4kfnXPFtIK+6+/uxErlA2UP6SqXHNbpSgJ+MQPfaqLL7\n9vZQ\r\n=xhqD\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCID2n0qTMXx8V/Kx/UgYzWfmPRLB4BnwOiO0MRMgB1qn0AiBBvhCHHOzvL5BmfJ7ucSrR3lN5ZCX8pbMzZuKjOrrzzQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.5_1624056576941_0.5448853248793515"
      },
      "_hasShrinkwrap": false
    },
    "5.6.6": {
      "name": "cspell",
      "version": "5.6.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.5",
        "chalk": "^4.1.1",
        "commander": "^7.2.0",
        "comment-json": "^4.1.0",
        "cspell-glob": "^5.6.5",
        "cspell-lib": "^5.6.6",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.11",
        "@types/glob": "^7.1.3",
        "@types/micromatch": "^4.0.1",
        "@types/minimatch": "^3.0.4",
        "jest": "^27.0.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "12386cd24cb7e7050734ec6fc48ea90a472d341b",
      "_id": "cspell@5.6.6",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4k3Jcz61mv5SQNjVcrWjARcEVa7gOF8nyg5MPU68AWPoyg5VuE51jgQDr4c01dbG/PGRLtrLwVmr+r6Kh5RDVA==",
        "shasum": "b9af8535b1c5e0ec856d17c98e4b04128feca78b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.6.tgz",
        "fileCount": 32,
        "unpackedSize": 86795,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgzSXpCRA9TVsSAnZWagAAWPcP/0+HKMriD92l4G5jK0fI\nPM3imZ+NbnvWzaQYeKwnR9OCk+SJihqHzux9XSXfPvdpuQmlS//VmT6Uk2lz\n9HSqdAQ8ADi0DVZ+4MFG8DWz6T9/TqS872Oa9d7ELZKaEAEX982L0He5eqeL\nbbv7AlC0A+9DdIBZM91q0soPiOx07x92oDHvZ21GHNTSiQ4yVLDSpMyAffIZ\n6bVPnj15YDO9HgVCEfezLh+WfcamCh5Iri5QuVWAKz2glFXngRmALG2VOJfl\nHH34r8JyXX8qK9s6zjILlUUsHiSU7DEV9RYSn9n2yD6ihSvYFt0j34iuX3gz\nRpNb4uJ4Z0AleNM3yNq+B9uHEy9ypoV7jhrObNLgZD1ISn9JjO5AWE4O9xmQ\ndmzIZ+qsvlRtlRyqlsFJ7lmgUG1zqsPfUdZJ+NHT1/o3Y6/idKrGnepLFgbC\nIprOof+Rh91GVMMGitEfnSbLHe2R5KGSKKBnHFAS6cK44eSnQ/p+zHuxchNJ\nldnKq89FVIr7F+V/z5M3KLliTVYRU+Gt9Ad2Zsxaw5XNl2QwwCSFJWH82To4\nH418GxU4WHfBiAkEy/5yTdnSbmC/H4mGy8goHm8SJkDWaqjNtLLt7eC0n2fw\nizstsWNuCUmq0jMFmqV0LFv4xTTVp2C6a0YW4YaJscQwC2tc8Zzq7ql8oauP\nH1KC\r\n=noNx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICZjcD/lqE4ftBW7rejO9MfBQATCTlmAxZ7kewrO7K/9AiAC1/V2En8njJqFP8qMLpBF5LsjafYjrt/qGBxqVKIAoQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.6_1624057321085_0.9671722222057959"
      },
      "_hasShrinkwrap": false
    },
    "5.6.7": {
      "name": "cspell",
      "version": "5.6.7",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.7",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.6.7",
        "cspell-lib": "^5.6.7",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4507bb5cf772a227ad4c1eb0ff5fed6d2cbe38cf",
      "_id": "cspell@5.6.7",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-/euddi9URCRkQSOhJQW+z2aTBn5e0qAjgiPUhavTr9Sb5nRgmUSiHwWHsuLbFlvjcxDEPDnF2cCmmHHLWIIqig==",
        "shasum": "c2cd314cab1d2381bd558367682c0f801a72c8a7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.6.7.tgz",
        "fileCount": 32,
        "unpackedSize": 86803,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhFqDCCRA9TVsSAnZWagAAAtYQAJ0JMIl3oE7zVFXcrhdK\njxpS6VjFOD+Y4NaYG9aomjFPuIX01ZTifJO0ajksGiv7ITvTBi+sDer1Tt8I\n0SUj6fcEoTrN9CTM3yzvvCyqYKpdgYsQUYssY9CnkXrBvR7SXhKkH2NKVbUF\nkFcHxBBrC42l3F1y03hUP60S5sNXw4R33wzqqKUlSF4L1KtredVmFPYAY5n1\n0+ZlYD3CccPIMVdFUtkmL+tDYZwvJZmokcjWeXhMtPiqOE0Wep0zJJi+vSiQ\nWrFgAfBCobDZnRxrmZ5K9zyAImFdakyRDwmzDNNUcc7Bt0B5fsEYs4ISkLGP\njXWwC+yEGkgt90mixeFC25jOrFH68dZ0MqTMEsiHh1yzr4ae42N9g0COAWxJ\nh69YvKl4/p2rJgWVIZDifYMSQHSp1QVfo2JbdFG7jW6TuwiE6VrJqZ7WEr6Q\n4iE+e02W73RqG6MgTP4F4YWFERgfaiQKteXZ3mOleDN8c1QJdP4N1i5OcvoA\nhfV2fjdhGQcxBICsfbrC2FCZr+DyjgKFbO2VWhhDMxJJu5D1bD5zgu06xXM/\nBg4EC+L20cT1ZeATHLczPYz5EEG+5hyB8KXpwSyX0oQiJs0k+d3TTCxWIWZR\nrmHMaWa6ZAWOnW4I0FFbEXL1xnZ90UxE13KjVOK7dLnD2Jq5u0+se7RL0aqg\npDNw\r\n=nNMK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAoVsTBlU4JUB0I0zk2MW1ImOGeN+EM7us4rP091HwoAAiEA9KFtxgBVDrKzQyvw6TgFAd/9xGaIHvY3gjCnxRqVuf0="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.6.7_1628872897979_0.07302831997742354"
      },
      "_hasShrinkwrap": false
    },
    "5.7.0-alpha.0": {
      "name": "cspell",
      "version": "5.7.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.6.7",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.6.7",
        "cspell-lib": "^5.7.0-alpha.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "a4385068b8fe4f9b73a2328fe92e54c1ddd6cbc2",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n[![](https://github.com/streetsidesoftware/cspell/raw/main/resources/100px-Green_Patreon_Donate_Shield_Badge.png)](https://www.patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n```sh\ncspell \"src/**/*.js\"\n```\n\n### Help\n\n```sh\ncspell --help\n```\n\n### Quick check\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `cspell.json`\n- `.cspell.json`\n- `cSpell.json`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### cSpell.json\n\n#### Example _cSpell.json_ file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.1\n    \"version\": \"0.1\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.7.0-alpha.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-2B/U6tLr/W5R7c0RHcZwfjAoVsaJIHFd4YoMKW+p70jntPh17imyvu7bFSgX7LSpNdpli/jJ7YGZcQWe+lgKqA==",
        "shasum": "71e71ce5774aecc8e7798d1c589fa8a8e8d6b3c9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.7.0-alpha.0.tgz",
        "fileCount": 32,
        "unpackedSize": 87074,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhF7iDCRA9TVsSAnZWagAAGW8P/iQo9+tiBVFCUDA7NbIK\nIa63deLSEWmZDIU1GL3tGFlgAVUeo/35zEZG4z6TM0qeOz+XnFieG9JZ88VZ\nL1yL2lYwzBHXwZbjEqmV6SRgRwTAi6EUmQVMc3uRV6yUCvVZd9/nF5bTslRT\niBmfQknqKMvroVgbCGIBTIQSMMA3lVnb1IwmEk5Q2ykZ60iIaN8mVlk7awqk\nKsMsATvI3wW2Bvrv0r5dHD7ecxbjUsWvUqFNYdcdP83o6UnlaWBUqu/Fm5jd\ngcV5I798LPrpQcxz3qV49k/RErB+/InEnbISj0AYILf/7pydkWKZrfIk0w9D\nghk60SuteXdFaclBdPsXXgHenA8lzIruZL3u0SnQbSIL5i5QxsyOhfEtvwl5\neRRk28KbBH6q3ISig0+E+71N1Fyk9SwhEhxy34xBkZ8WGa4V53KVYvunZkkm\nKY+tPEGXgJd/3R4Z3WRY5HUh2pyTgnSv10wlrCphaXoPKEeOXo9vbBeC82J8\nxGe6XwUV9EJkN1f+p6IO4UyZusAawDUSqt6y55NS3V2NsmwsHkaFCodu3vxC\nufkEJqWvrf4fjCu0qbGTWfqsnawms+nYM+Seis4+93vmnUbzQ5oAy9ZU1AxI\nOpigwo/2mOY5m/p32Bl/ITPlbaZMseLDob1YN8rFv8QoLHciwEbneelieUIj\nvSvj\r\n=5xDR\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCF73WirOEnWyrmxX3lm6TzLo/l4mDBYk/Gk+A/0OjI7wIgV67tk9SA/DtEjhYw4uT/uPyf8bCHQlgVesjmtRb5g14="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.7.0-alpha.0_1628944515765_0.3440231803376965"
      },
      "_hasShrinkwrap": false
    },
    "5.7.0": {
      "name": "cspell",
      "version": "5.7.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.7.0",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.7.0",
        "cspell-lib": "^5.7.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "444d994bfc626c9cf80cee821359c39c1f52c45b",
      "_id": "cspell@5.7.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-aJZazYIRAa7dJXj2NEhSb9BV/gtnN8N9C8wX2D0XwaQGCvzJqXb5rwcn65r3xI+kpsm4UHxnaU9mhi12AlsLrQ==",
        "shasum": "64e8e459b138b5f67fe85c133358472d2c254fe1",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.7.0.tgz",
        "fileCount": 32,
        "unpackedSize": 87058,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhF8Q0CRA9TVsSAnZWagAA+n4P/jCcq9iWwxpj8bHF6dNA\no+D9pbmFrw3BJW69GrBIoyD7a6aMwiiAdO2PGwlkMTRkqpe3KGQjktQlPVXe\n3Ozt5NbEEiyD8MfxZPL7TJvPIR6ZJDMWOMURL8P6RD2MgBrIT4t28F4IDQS5\nFeBWWxsex1QnfDDBnpzVYtrpO4mSeDLhAAHb1/bbNzJjrdFhihCeA+IVX40g\nG67Zcoi3sKymA2UaPYNLZ2JQILWo/+KsbTsFiMEsfujbILB19C4DALMRmqV0\n6HoT5NImqQa0sZnY7IEJw9UiPE2G4/75gcYg1Qm7+xPoFpo6kWwc1LDf/gf4\nw+WpJgehXhDNYoFM/dgWKk/7ReVOHC5Dac8J8qFCyr/lHwEmynvIu2iARktM\nAaXRbkUjH1+2Dm8u15bz7WSF3Mzf2xiEhk8/Kq7Xv7KgfooFsAGcF38Gjdiz\n56iPLY2FWnewz31OqZ1RdfcsbFQXCeq/PXSTO7nmz3khqbPDztQRbnuYfpb4\nu03NOvnR9wwg10c/uzQZEldOt6Gw477KEvzba0BZ2MZoVsPPfVqnYC92lchU\nGJ5hjgRGZqcSPfBXBu3pW5LNy1N0hzYsNgILcBhGHbbhOGS+L/5JF4SYWoby\ngmAgZ8QPOQkiSZx1QUwzVbzqOQILTPlcScaBUxA7yL2/IAqIgeVwsZdnkw2O\n9Hc+\r\n=MC/j\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICdSqIoE+bhSJTcLj94VtJD4TVgwuLp0O4K0EbsD1YxwAiBE0nOlh3fhnBptzyeK2xOdImz/sp5MGssyEfKS2Vyp3g=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.7.0_1628947508762_0.9824463386383202"
      },
      "_hasShrinkwrap": false
    },
    "5.7.1": {
      "name": "cspell",
      "version": "5.7.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.7.0",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.7.0",
        "cspell-lib": "^5.7.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8ac139fab458ed3cad205260e1b2fe8460810675",
      "_id": "cspell@5.7.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-SbM9nSYioCkWVz+3jfN7RqTHxuFTaDJSlH66ZesRukctzDbHitQoBRFFlMpF2Qrn/XdlNBVWHA8e3rZRTIEDRg==",
        "shasum": "4485f9ea31b3ca20abf300b355a05c998ad4c6a8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.7.1.tgz",
        "fileCount": 32,
        "unpackedSize": 87058,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhGAhECRA9TVsSAnZWagAA26QP/0VpYFgjvakyNOSWKdak\n5M3R6Iyn8bVO3J3c33vlUyRwsI3vNZp1xU/OxbMCYPqO1P4/1a5v7uHEw9KQ\niPgt3Poxy7A10LeGPDod8r593aOUKe3pn/OjPIApQ61dIYuSNDYo3omRFn7b\ni1BpN46COzPdUfxL+omA8iPttHwjUOV9w9SdBhA6Aakq1HwGhxTHLmwv7t1X\nn9xd0PbdbbXuUHpHnXNr2ERjbo/KbCdbUCjWGjdxMAovu8x7HMuioRctjiu5\n2JsYez3K6kjeED01+PVs9jZygPwL7JlGnJbXOhAJiQePQ6STu+xz3rvVDGCQ\nVl1qSHsI0yheBJcZwB2yLhoa2wRX8PPVaYL6pqAOeup0zBOQhYxfGvXHUaYL\nEM9lh0Fpqk1IOE2p5mTi04Iix79Tz2ngiK7ZmuiZVNU4ugFrmms9gZy78lqj\n5rTMWWxHomTb4UPrpp3zARagmvG344kiK+qfOf2iA+P1uRTDLecwhu1XF5f9\nsR1i6uHZzzcIzpQRfnFjJteG4ceLcBC63dgjI1MPbaIP+ywAZxDKdMIn7B/E\nzq2QB31YM6faasu7BgCpndEvONwZJY49taK/+0zzifN5u565R7yv1blve+0+\n3Qn1PUJ/9Ga6gGKLFFqja0p33au+v5Lm5IHQ3qQI6ILb85LfQLElwtd7szL6\nUQnh\r\n=sEFz\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBwrnjAGHILWjNw6hpadOEiSPgKmdVjymDzCrJJH6GSwIhAMKiddxUPi2EBA8ZAvcqJGFH+rm48sgYikX++re/ULWp"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.7.1_1628964932120_0.4942813638411334"
      },
      "_hasShrinkwrap": false
    },
    "5.7.2": {
      "name": "cspell",
      "version": "5.7.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.7.2",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.7.0",
        "cspell-lib": "^5.7.2",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "c4e1e8ef02d71ab2418b11380e837db0db63f26a",
      "_id": "cspell@5.7.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-FJAPt3GkwdVaX6I+GR1A95WsraqHPzYqkBI1rIHNE5JnJIbWW6N+pnlbhDjsUlPWXmQYHXMfUlhFtMVLUVs3mw==",
        "shasum": "7218ceaa71e1e87e6d67b375c6371f61940d7ded",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.7.2.tgz",
        "fileCount": 32,
        "unpackedSize": 90971,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhGlv7CRA9TVsSAnZWagAAGVsP/2tbWT9DRcXhM3G+bMSJ\ndwaetsAXkuS/U7RXw3T83RicT76TYzISEp/YX7535y5BVcRG2WgaffoFkV5y\nDfFQn138ZbDGnyHoqovmHnK6i2kY7jqDp9rlfo7eVpf1Q1lI2Xd7YfkLE/z4\nWRymMiRPZer8umTipRhjlp4+DXjMuUqRsnnfZ3X1BBHAnAcF8otTiEmsWviT\n8KZ1GvuOdxqTiVUGZ2IlTRbtLzFldLcRhkTZoF7dvoJqTefQn1Upp9yGjPA6\nw2VM4CJjFtt5Q2FKJgAAviSd3Lzc+fQ/nulTXOEK1UXWBR8UvCt5DQOQTE+H\nvXvInwz4vTh0yQJW6va1+pAj9TuQcfyYIl4wVBTzV8FGFQFD+jH08ntTifoL\nQnQ0M5zujJ3sdtTSfknk6onEsSDmq04P8qI/Nu3k0yAE1XeDCCVXmXbCsV/1\nNfBvwkkg27Vow49aJhZ6x86YcskZT7PhTVsIChtwLTJDS8cX2QOKLKYdPiwz\nfmMWiLaCjYVqVfByp/cVB0RJ78YrnLnMfXk8B8ggWu/wxqp0VLGgBxYXFDaF\ndkeWXdS/vO3sQPJiGrJdnaKSlkHvvVyoRKDrahjl0zericH1vlyFjc65JzLa\neIy6EUtgJX7MlzKHh9012Ckna/hhpOnjG6dO3hPpi9TALBciwKUMFn4ljusy\nv4Ef\r\n=vOKy\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCrdR6Yko/wkduyZILiLJMvhLxqdVwddc5wr8DaU6xfaQIgaHfYItJo/GxgZzJkYRct/z4Gu637XDGUXvD6nUsoqN0="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.7.2_1629117435438_0.2178021617266248"
      },
      "_hasShrinkwrap": false
    },
    "5.8.0": {
      "name": "cspell",
      "version": "5.8.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "@cspell/cspell-types": "^5.8.0",
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.8.0",
        "cspell-lib": "^5.8.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "32f7eff7e8609beb579c8c65e421ce4632506a15",
      "_id": "cspell@5.8.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-kFbYn1AtaaTziYcBucTgMkEXPBD3FUzhUq9PA53WaRzLAcPQrYWB1s73Atc9xnLLLB8w7gavgRpsBfHKU+ByBA==",
        "shasum": "34ca93ab4ae9bc661fc2c0956a606e938dcb1b55",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.8.0.tgz",
        "fileCount": 34,
        "unpackedSize": 94596,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhIUVMCRA9TVsSAnZWagAAzycP/iH0JSVyYOHSq9mns0oi\n0CcYg/T9b2VDKtcuVY6YvUisuOUbZdF4q/tr1NR8wPMmXWsFis1gxqi7b2iw\n3kY/Y4CMdwu+/WJZCWXkmMGMF58iQIPnhs33cziFi7RQ6BwTvJ73Ofi0yHYG\n4hfWpJWg0Y/vahdqQwHewkgFU/np/2h/2U3ziP5gKMInx643HEgPTRCbgdT4\ni9XuFK/2L9a8I37O6M2VhyVQu28zLUFMU3YI0wB8GzrEG8bJ6HY5XGEt9XWu\nR4SobljH4rj35kcCVVNOL8MvolqGvxUqKSkH0KzkptO22OS0+Y2cnIUcoXmS\nS+wa0QmLX6Y6QJB+GvJDQO8hiJo0OgpKrNch/MbNZlmu9XcaTJ8mLJ3uuM4C\ny+EBGbTjJmnAMNY6HJkESzpQ8PE4mw2cxkWF7lLzl+3OjJVcQmLAbH64WCX9\nVID0arMOC1pXyaAf0l3Sl8H/umocxBchMRL663xTBj3fdlo8kJWTcjHo9QEU\nUPGmXNsFHCQKHF8TLEMTjKyB36fo8NCoSRmmdsec4fmOZ+B+QqgUoQwrUYVL\nQaAGlsjRjlC4/kpIZST4e/drhqlVVRP3S7kEIjpfRCom+P5eela4Wry2B5wV\nAMbGSB8zSuElEASgy+oGl4Ky0RcQvp4r9E3E6qFMjZEzojWr2GJAQWliMMJ1\nUq7j\r\n=qZNp\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCWSOBwCgQIGZlNUDrwYUpwm8DhueY0TNnqtzEGSu9f9AIgRcOObm1W8z2Yt/V1ahTQLli/LGO2B2GlEAlrzhjzBHU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.8.0_1629570380404_0.9659427730300345"
      },
      "_hasShrinkwrap": false
    },
    "5.8.1": {
      "name": "cspell",
      "version": "5.8.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://github.com/streetsidesoftware/cspell#readme",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.8.1",
        "cspell-lib": "^5.8.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.8.1",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "f0fa682c4f355ac382ca3ee646d84c760bc74d31",
      "_id": "cspell@5.8.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ax+Vk0lqoxZCzYS5c5Ty109i9xQC6dDsZt60dCIrPQLtUAI5Rc0+yKrBysPz908XcINVKFktfgcSNgFG0rdMsg==",
        "shasum": "40bab8b414c2410754eaa111002b48aa1434d1d9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.8.1.tgz",
        "fileCount": 34,
        "unpackedSize": 94979,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJM1cCRA9TVsSAnZWagAATqsP/026jzFyQMI7FUgm/Oqt\n4JnpmY5eIl1LVjdEW2sY7TLYrENZVOW28MuBlCgAb0VuYT8Ki+B1gz1jYrRM\nuPBqYZlCr1ghbMrQGzotoIRDPiGStYnhmn1mztzNmVhtKwMkwJ4Cgf3fA0m+\nTI7yLL1H/sKFzohroYsFjITmVSdWBfqGqhm09jcqbIXtlpfMKjuoGqIqpbZQ\nM5xCvDmoAbAODvUXiNYxUxl6io3xOswWtLL6PMU2JpkIt6GVkN8LR8g2hCoQ\noPvltCpPKxnEmR1xN+debwBHcI3E6Dl9AhWMaYHeu5YuFfixuA0S6tNMDAtE\n/DOgMW93e/Md882arvSV6KaeU4tMqd1Hr86ebAQPoaaBT0k3U6UPhoYsD2VB\nATqbbA5bH1dE2CWBwsxn/P07D842+2ErmdNRvq/0M5Rm9WhfWQSCU3wyP8a1\nGqR2Gyb0EjglKjcWLgApGKQA8sleTHdtiaIZiJVfXg7rAL/AYP2yPW0MUel8\nHmYJvBRSUbt7dcxTD1yXouz1jPUVT+135wLw//RvU4zgDj+OjzE0OIhpga56\nQ4qJd7SfOjJzWd/ThBo9k77Sga96j8u7G2h78leDaBkCWiwSxMJokpTDfCG9\naMnBwNfBVZiaDkZzXj6zCaqF+n9VJYtsMKDN33HMEWQrqTmSXUHLvyqd/lHN\nmLpR\r\n=7SK3\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBmSnXTUPLOhfOHFmRhXbYpAnPXT/MQfjaC+zPC8sshtAiEA3CUEG5yPySf45PQ/xsVZ2d7U+OajXUfOJVbTxbSaXfw="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.8.1_1629801820720_0.6422114576270777"
      },
      "_hasShrinkwrap": false
    },
    "5.8.2": {
      "name": "cspell",
      "version": "5.8.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.8.2",
        "cspell-lib": "^5.8.2",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.8.2",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.0.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8d6c34988b6092b39a194fb9fb61fab1f253c0a1",
      "_id": "cspell@5.8.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-yamhOvEDXq/f0ko1icR3FUH/pfbGnz5LqtnkDKskVhm5tzv2kUxUNbmYwBAYzs7N1igE+AokL1G7D/Rw9LCLBg==",
        "shasum": "708067660270f3900816d99c6b055dafa8ebd6d0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.8.2.tgz",
        "fileCount": 34,
        "unpackedSize": 94972,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhJodTCRA9TVsSAnZWagAA8sQP/jByn9gfhf2GM/sC5DlK\n1TSAMnVohJdDKVdA7ULJhQj3gP3SHM4dHFyV0I4bIWl//RTS6+IoIRbvMuWA\nEG+9bXBl7TGuuIpFjG9CuykJQAreFDT9U352Iw8Ykd4IjirWLCvaTVziOGjO\nkfQvXJPt+U5QghamjONOPe+Vrfa1c6bCayPFcGCg6HjWlqWgEKieAN51YP0S\nV5W5hgx5Rh13YAGKnu5rFErs5fEW7oVGaZpM+QpKp9NvEYYiQ/OTXJCF/egV\nwxIVjtl/hKBdz3fHcQQEcpzb2L2311ZC+zexr4ZagGORdJhBhEO1MQ9uLc18\n5eBjy57bceZEApdboxk19iR22L0JOuMIxb6mkQMU+id/mI8XHveirY+fLKXX\njmDef+XQmK8owjrxJKUQ/Os0YUoX0IT0v28OUtoRGv+mJMXeO98dYYzoT4U/\ncF0YKdX8a6VbybwiX534ZnfnXRJh7STCPHzZCTAnJyKD+WfADa1rVFdoM8Iy\n3VYDEciuq+vlkOPFq36NerBIRMkHUS9wBEIf5lDImD5ymbUMUlkZmWWTrUvS\npnLxdw97MQgAjKvUfrvx0logPBKGnQ7acXKyyOCPEB5qRa1lCGr7UEK42VCz\nUzo+ZqetHNQQ65RdvcpeXl5+pqwMwLmWZa9iA92LL4TnPWIfyZt1tv93DsHa\nCCQZ\r\n=lT6L\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDit3dQ+qz7tk7XKx7z935z2/vI/RrUWblpspJfnt0HzwIgWSLquw6w+/znKN5ct0obzJ4WxJngJKY+qTjQYrsJe/A="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.8.2_1629914962991_0.8910293859540268"
      },
      "_hasShrinkwrap": false
    },
    "5.9.0-alpha.0": {
      "name": "cspell",
      "version": "5.9.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.9.0-alpha.0",
        "cspell-lib": "^5.9.0-alpha.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.9.0-alpha.0",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.1.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "6713a74d26c0b2ad3fe57ba1b5eb455694aece93",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.1\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.9.0-alpha.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4iRJi8+LgXSIkBXQv2aGpbxvrQy0JjD4I7dzwai2ZP8jL4ORFe26q1IRU+gjeOJXftgQrVnrlT+SOGT7/7iI9A==",
        "shasum": "dd6935def8b133dc724747c98a890233aaa7b664",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.9.0-alpha.0.tgz",
        "fileCount": 34,
        "unpackedSize": 95199,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLd/3CRA9TVsSAnZWagAA4nMQAJwj9xEF4Cf7rGgMn4sD\nCKcgs+iZfnpPiGoUDdPo4snTIbX2Cy6afO0Pktqeuaz9x7sLf6PebmZuO2xO\nM2OYGyH1BB+Wd4wFJhEcKl+h456jylGykD546ZLJ9KRe2Dav3c/+7nW3RKyy\nc296kCxswS4pHEfeSMQN0bs9MgmrEs3aS2kvYA3Y7RajbFkUnjuCXP1iWCyA\nCBlreBOepJGvomwbvBBWgXjeJq9NBJN/p0EpsORG9PKFxTyuGVXnd/sf8GiY\njgPa5TJ9EUfQ2ozjJqjOlBrdoLd6Dn48rR+jIlmTY/kRwnsvucPMkbdGsJWT\nBP0DWTn20ReTU294h3cx1vzxW4jhFgoxOaR8k+H9fLe4vvlm38LFYpGt0GLD\ncHsm75APpsI9mOtSCyPDOrxD7aBczZEQMEXG6s8WSCPUYZx65Nakm4HC8qws\nMgEnv4lPniTYriakHTa4Fj55uVPgx8bLF9fyZkzvWHF27KDZHIdmOsLR5ani\ngvjDh4c7ghpIUzlKkj7E/zP89GwTdyyHn4B46qUaopw8ZUI0cFGAsmIYkrVt\nHl6oS74UKR04F7UMRr/5AGPY2JwlO1kSy6EKxvsAc6irBqX49nQcK7yjmeQY\n7Xbm032HOrIqlUYyMM1fMDWdGt/sObDX14H3DzA+F9tJE23dFfHyxqt1+w3n\nHJT4\r\n=FwyI\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDTMRzrXiBQM2Kk8jCbRsapfufZud4cHmmsJznC7Nm62gIgTezzx+18WEVbZZPHRUJfZJI2bWp32YzRvt8oNfYZ1O8="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.9.0-alpha.0_1630396407570_0.6482855071748974"
      },
      "_hasShrinkwrap": false
    },
    "5.9.0": {
      "name": "cspell",
      "version": "5.9.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.1.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.9.0",
        "cspell-lib": "^5.9.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.0.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.9.0",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.1.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "749d57c41c7b41691a528d05f2a63170b2abb758",
      "_id": "cspell@5.9.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TrPg5fmdd09S+alS8HjRvYPFBd8Qoxb8XxWGrH3JDsQGA7m6EljGcNjR6Mh19mMP5cQVOv7XmwEMy/EqwaHWTA==",
        "shasum": "2db3c85a9b0bf68bb4d49b0f72e35325a68170c3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.9.0.tgz",
        "fileCount": 34,
        "unpackedSize": 95167,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhLgZsCRA9TVsSAnZWagAAYrAP/2TG7IB7/qBMmir08GrF\nKxykT9Lm0xqvMQR9qErL/63kcUD3Qe+lvHg5LuE5sRD/wyZ5OyyIpXciYqul\nWoiAFKAqAoYh9A8RBUtUBhfcVgQ0lma1FkRqPZ8pt19+EfiGH7q5t587kmK7\n59AmHx3Ao4QeQ5XNn4wCHBF7yvAF+BZIeNAIR3mN5yDMg8hB5+6kDJtgrsLP\nA4F4Iam0lMBcmcAB8RTADXTaOsY+pgk22E76AbjxFoT0JKioLim957f13vLh\nwoMB8AzJ+rjJ+dRosrm0LQ12CS2LS4QbGwhDKIaix5mTkDFQEb7feBb0/JBE\nkUGzRA7dYIt0VC70afIkc6i8f72MKHqzeYObiU6PFGaiXkvJOvq2aal1DqfA\n+4Se/B2xEnAUwq0mfktqxgR+efprLXQW9Iw2xDjeaVJBj3TNX4m+6XpjjWDB\nflgZyumuSSrQWcQefe0402uVEq+XUjN0GQYWx5p8StFrpJTCkbnVS7xqbuZc\nGDCFM2FiBYPps2JbPM0SSPO1nHjAf5CaI3x6BVW1bw3JqUHh+5yXzv5JJAeu\n9RjppK/0cLHjM74tGzOAjxJs8yHNHZosS7LfhxLteug6lh/OUri1/MoZSPFi\n/BV0F+Vx9dArcusmP0G0yPYZln/9dBPVnOgZpNelm7+vhlxXWAiS9Nv9YIGJ\n216m\r\n=hnXh\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFQx38uGT9H0T69cSmNLOQ5mDupZ9hMMN/u5QKXML45JAiAexBzbIaE3Lee4gUal786JrYksvjwwiBUXh59nzMqjKQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.9.0_1630406252666_0.8899580037036066"
      },
      "_hasShrinkwrap": false
    },
    "5.9.1-alpha.1": {
      "name": "cspell",
      "version": "5.9.1-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.9.1-alpha.1",
        "cspell-lib": "^5.9.1-alpha.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.9.1-alpha.1",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.1.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "e79d890b347f53e49a05d683ec83c23db4c59b00",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.9.1-alpha.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-y6+LlvlPiLZ7ovQWAXTmXQc64UgvUPKzPLQbm+CmTprntNLDK4zuomSzKsYYrDEOJiLCsCnJTx2jvTGCBjbbwQ==",
        "shasum": "6495674ffa0615b3edbe9014de3af61d8ac08a99",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.9.1-alpha.1.tgz",
        "fileCount": 36,
        "unpackedSize": 95849,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhPZvlCRA9TVsSAnZWagAAnlcP/3AdAvLDyKsWlkjs9s6X\nWno+Ogj6Aiyg85dEzNcZ7HogF4uHazU1n6gU6g/wvGz21VkPt0/KZYwadIn6\n7TPbDb8/yw9HBY+AlHC9QNvoqfhto228CC9xsoMc9l9AI1Rkz+TshGxU6I8Z\nPYiUZQYZmOaA4pBefvuHq65VB/rzXkuQt8iHy3DuGcHYGfpAGZ8lICI5pYFo\ny4WQgXmCpQxzqsWDDLI7kC7qjtnMmhu3h6S2PMx+snywiU42sRiAsbfTGKge\no99D2f/MXf0NKRhbsLU8Rl8Egf+LVGTgv8TCt1fBI7w9brB8HKw2+9YrhNAz\n4jTc1Del60ZP61lRLO0U/Wcp5g2k50m8f8DjYhu2Whbpt+8rs1Elqbcl5xau\n4MODr1umk2ZETc3Yc+e9q+hMdfAjCQCDz8+tBTndGf0K+8dEuSRZfYQOqMU3\ndKrnwYty2/k14XMR3GLfISsOQifqkfRJMsMoaIho6W836hCiD/oVBh+L8FBe\n0WPHj0TKN+UEV9Na3oREB+jtBFxl/zv2jp0JPYrN5/RC8f00N0TodEhBpgSt\nC1uhsowjX6vCsEBXtfhKwPZ9Oi6M4TepHHVMPRo+wAa4NeqUTddfvT4BAZUn\nM8MzUzHzI4yL0900nT4gdG0yOOD9nlVy9TDzDT6tWKLg2Jvj2vcSVOf4LqAo\nasO7\r\n=/NTB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDCDdDItZjiKWYA7b67x3Hlc6AysNgQmZiIVIBEthZ32AiEAt59nnh0x/U9uC4toTmuy997wdiAM2v3iomUZ9qGUs/E="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.9.1-alpha.1_1631427557737_0.1435620694451467"
      },
      "_hasShrinkwrap": false
    },
    "5.9.1": {
      "name": "cspell",
      "version": "5.9.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.9.1",
        "cspell-lib": "^5.9.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.9.1",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.1.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "c0d5026dadde1aaaa32c23d417de19c2b237f97e",
      "_id": "cspell@5.9.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-4dec5W4K4c7TUREDfUYtcbwh70SL7oqkFim9XOpg3Ax0YadMZ8A4Xb8LKL+J7Egj/MqV+neMwomAakpWphDIrA==",
        "shasum": "21745f93ee3740e8d5e0e542ee1003b270dcc23e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.9.1.tgz",
        "fileCount": 36,
        "unpackedSize": 96208,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhPeYsCRA9TVsSAnZWagAARUIP/RZ9jWc/WMWbculnKT/9\njSGlQgMt3mJap3svTQZbjwNtd1ZmZEOB/BAJ3aEiJVgsleWqx8o45ld2dsGg\nDNh8jnzS80BeBJ7DmW5CuLVG+ELEP+G2DWnBOIZmlCiRcdRqCzOQR58UJLtt\n1C2PUVfN4OQvU/9yuIFGHO/IOWFOxWGNipJvNCjB6AHOFtzIrRiSh7FjZWxf\nSWlR/TEjkvia2e7I9sn5x8DtArV7tpQywZUipj7gLbBUYeHfy5OeZvyD9Pa4\nwxMRTvlwxpWzn+vaC2U9du/2zByJe1jmzP0wPmsCk5aOhGJRmqDOgDg1gsNy\nVJayyZZtQPkF8FM2nFKMsr5aQzoh6Uw/OxJMzwqDQy1ehmIQ0AB6p1eFyrEf\nRKYCWjGB/zdpF3/vF+J5NKhzA1dgeJd4Wn90N7FBlfHunapubExpGuw5q57C\nBVjN1ismHZZ9Kezn7ASg0MgQyIxubyaKrO0LU/i3ZHHtOZuuR2P+VkdK7f0t\n1YKL5TtMlYiyzb+GKPU0EJNFthN53fwgErQ0PCxI6jU5VB5bUWwwB4y6G7TS\nqzAEh5lCNdsAIVYtq/rkkcNq+B69yZndhG0vT8QIggkjlmhsJA7+dJr0vlWO\nsNpGafKtUW+PUWv//K+YxytOBTo4TfmFvIJrQpE8kJivf6D3IU4xfRGtp33f\nd30q\r\n=aXUa\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDW4WB9xmgdHUB8B7MGWHUdeBB8qWkkLnDN1pJwCjvnYwIgILcHJICEr0S3ALVLVeAL1cLPUBcIectaT+pjLQfw5mk="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.9.1_1631446571936_0.7746403594745963"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0-alpha.2": {
      "name": "cspell",
      "version": "5.10.0-alpha.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0-alpha.2",
        "cspell-lib": "^5.10.0-alpha.2",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0-alpha.2",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.1.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "25c2e9fee7a398fae548fde111358f23dc82d2dc",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.10.0-alpha.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-T1EGaLVGHGfemy+aFO3Wf9hI08BK43EXQUwWRIzOhQiaPTwXq/YrsQksYeGKFCZVUy4E+67gMrRtD/tUdbHQmg==",
        "shasum": "fb15f3db9329998d1dceaf124df2c26290587dc4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0-alpha.2.tgz",
        "fileCount": 40,
        "unpackedSize": 101442,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhPxbGCRA9TVsSAnZWagAAug4P/RuGMWgRaqfqPcAZ4VbS\njVhdHoaDibXwM+SpMPsIS1LhUchmC9z5KR7P+SxTtYj0P25jIvDPLRyB197f\ng5MCnl5CP1pI6U01Xn0XNqf20uJcWLq919jTEU0ByyKlwpYstMj1xSnnxo/i\nsw+eAh9CLAiKDu6/dfQt98EeprIAikIDpLwGTOHyTOKOERTOPGKRzYyRH+F5\nNPAvF7AflUzsHcRHJLvc5oouwVAyYncLxaavxqcKCON/lRqPpRk0a7PJKGR+\nTW1ogeXFg//0ohNgXoWfZXKxPjtMkgLECa2BJjSbCyRxHkFRZQKdYMnCiiaN\noXdYL/4S8gctHmSzxS8wrNaQHBCkZiBrOhtJ34gBpvDpJbEPhiC7HUYnICt3\nM/0gcYKOP9m/zOhH210p+QNUV1dj7ePNCiC+rjS9ZOs4GYLUyYm0/COyC7ZV\na5lwuSJp2QnE3/uIMTMWJCm+OBY+Orhdu44UB9LdEtcGfoGKn7eWpH2hulba\ntebnYNVlSV0pAw+MBCMD+3qrDQdQUtiOqs1p+rTqOWEdvETAP2uGMsaqhLZk\nZr7oMmNzz+0pn3hP0lxG9ImGpYkJP9xDIKLL/z/8lGKGnJlaa7LiIj33Oyao\nu/zB+CKneAt28RQU7XLLqyeJpqNqjKrLscbmdhshOGDxv8+DXewMImdUJ+5b\nc2NZ\r\n=kq8X\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH9M7WAAxL6RX9BiEEzaMw9JAkkbLryNVSbRw3YaEPUJAiBQFLwpOlESED15gr2Zt7PySDzUzRyPSqWUdVUR6V2Xmg=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0-alpha.2_1631524550683_0.1593867390341397"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0-alpha.3": {
      "name": "cspell",
      "version": "5.10.0-alpha.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0-alpha.3",
        "cspell-lib": "^5.10.0-alpha.3",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0-alpha.3",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4f67af890de5ba5a0276735e422da024b1dd8d3c",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.10.0-alpha.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-edKlb+4Olj7WqCFbR1pnBl5/jKxdIrBdm4bI/CAGG8yXa1Kg+M+C+FVRD//i3UPG/QUcSSLwgyqmD9fW8wEncQ==",
        "shasum": "f12af9149968a6ce0099b1901352f67b26a07b29",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0-alpha.3.tgz",
        "fileCount": 40,
        "unpackedSize": 101708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQy2lCRA9TVsSAnZWagAA9yYP/2E7SWOvvKthWahhSbd3\nJuP1Zcc79e94xZzcI1u/6bkQWXcxJQ0qtJb/L23ei8IHkILw6ekm4VBfn4VT\nPI7V0uGIx2c3cJhL9cKGLH4zY20h9g59595MbZFNwa5Gv2ss/Sy9r+aO19Qr\nJWgqkzN3JsnyB+eO6m3Avs+g12Lg/T29gOKFPQRz/d9ZwU0dDGxVDMcTd2xo\no55jsTEggf1cAFag+FRSRd3rS56FQqBgL/Xf3RFOLdMFtX99hnYs87J7zQm/\ncR2KPKlGEKp6OOwLMiLeBUdxxkyuC83pCFkOQVC3dMy0B5O7m1TeBJpSScEK\nHy5NXzEVhaDNy1KA5HucWWtgN0CEfBpR5FRVxb0SF0EqCvzbIRYT/Z8Rvw6I\n2HHBVMELTOw8erbqOw8Fqjt0L2m63pQVrviKlC8vvHk1pBYT6KiTUx0jlSsU\nqNSJdA8r/utXIWAXKvAxLOe0YvfCNDPhL2CVny1TG+HkbRKIjW1mY4GiCCln\n5y7u3TtgbzjUsu8S6DRh4BfJbCOnBPUGzE6tgBDnTDraGQfVvUx2w/N4Z83H\nRH6wuNbPtqFtB4DYgvhTt7b547SC4ok52a6s7kfcT3f5jsGd4B9UoiRUkQzE\nrv/NqFN5iDWzBuPLZzfgu+iy7Ef0lkQsSgkK+wkul72pk1jmyNjj/womSOeQ\nNmUl\r\n=82r9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIC23A5h6EMp6jjvCnswJ/pA/J9HC3l8EiXlA5YoW+0/BAiBR0di0T1HrY2iFFOMVAhTBUKOHIpP2+I3C3RcaXjPJnw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0-alpha.3_1631792548980_0.9054968955868263"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0-alpha.4": {
      "name": "cspell",
      "version": "5.10.0-alpha.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0-alpha.3",
        "cspell-lib": "^5.10.0-alpha.4",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0-alpha.3",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8ab784ca30990a2abf1ebfc76ede3436205d2c79",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.10.0-alpha.4",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-oDieLB4jPI18t0Gr3ygsyvlXflkSQtkN32+Em8zIDhYg1prldNeslQAFIlZwwxrCILMLbIMduWVOIKsOs1sU8Q==",
        "shasum": "4c4e383d24a68ce6a5f5c803b4384d777830321e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0-alpha.4.tgz",
        "fileCount": 40,
        "unpackedSize": 101708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ5tfCRA9TVsSAnZWagAAWDIP/iQ0jB4xPXX7GqLADFNv\nnpoRhUZP5PYtj3wKumjBaV1e3IEVSCpbqJiVGbQEPI4uQBZAaK19aKqnccio\niJ5qjNHgyUiCJ3KMf3lUuPCzPlG/Dh7GxXpmTriq5AdiZXOfLoJfFISaU9YV\n5bxzEYaRLhMq4yVDcoZc8ibGHpa8eLXUjxGlIHAMT6eENgwDk9tkW/ZPUufk\n36mA+0IL9mS3dO6Q+phU1CBGtV+zEJ/9fIrjjGzjrFNg/ethiRbKWVvVW7Zu\nE3pNLKmoHsrFu4sCIydI9ohl6PB5Hc3TPJ7lyMnttDjShLmR9F8cS3RJXABg\nPm3vJ3k9EXoi8KZ3Qhy3IUoLOLiZg+hsV9ljM6u5ozkQVietQ69ELOKfAX8s\nXwWJrbTq0RPsJ92E/HodvpILluGQi6U/gBQ1w0rmSG7l84JsDAkZ31d2jAVB\n1UahV4e1ow7GMCOHXTI2v0mXCaOYScPZd4dhvnmibQtkNNs2PJvaQmY/8g0g\nGOZ4WlXqHYugCn0JqvOhMlhbwwPvHt2RHnioXyEFQyB/DkdRSh5ZPNQyYVEM\nbUzrRH8cnBmd08OsuJFhsVaWk7rK2BTxoD8xM2q3jU8HGdTsHa8sezIyKkgZ\ntDmIBJx3TCvQ8CX9IU2IuJCQKwUQF1ayuifBG7JHufIyhQcboQ8BYVRuRpEI\nhIet\r\n=zWzg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDAwq7dtcD9ldwnTLPPHuyEZ1Ds94tTGQCtmYBCr0S45AiBTKxNleh4ovV+RAiAGUmZOj9LbDyp+Oq7da+8w/qhQ4w=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0-alpha.4_1631820639226_0.44641672745163374"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0-alpha.5": {
      "name": "cspell",
      "version": "5.10.0-alpha.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0-alpha.3",
        "cspell-lib": "^5.10.0-alpha.5",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0-alpha.3",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1b8388fde008bae4ac7357f71cbe451014eaac95",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.10.0-alpha.5",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-D7c1+dK3ni0q6/tU2FJSyzSl+d8RAjecmy9lw1wqKCbdRSDqAixRIYNqgtGdx3JLLvgX5r+3bCw+1LldyS1ptg==",
        "shasum": "cc3b6d536159061b019cc2ebe32a2156a2538c60",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0-alpha.5.tgz",
        "fileCount": 40,
        "unpackedSize": 101708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ6woCRA9TVsSAnZWagAATW4P/RUz5343HEwX/aK6nPNK\n+97Dz9XtksG4N/HmfJknQEiST7XSgz4X2SHKYMHH6WIuA7Z2Xi0Pzc45CfB0\nXVrwhj57k5feV4PQ6kXzpybhRG8Unla6MMO9e66IkBEZfn6/FN1TH1odKoyx\nVymECJUjX0BY7DYyijavFkozBpr2sjphj9soaDuqg0rq8QF7ZHrSUxQf6iIu\nnwak/UYLEuvFIPUCtwZX+DcXwXWIBmd5HHMdxY/Y1LuE+CLLTTVfI3icQrYB\nEjNCgx67cefciFBwFu3s4MVzocftREeQDU6FKhpm0BjAU7wCHEkMenF+cBZ5\nS0VpvnL7AXU4SvXn+/afEoK0fwr34xHByDYC2HXHj8EsSKH9/rI0EDV1Qj85\nFcqL9EqZE+k2W7z0fm8xbJK1Et92JyJtqD6dyaP29YFzrvHUUNmoSj6P3Iz+\nrBTX2YXvVymrVAMoUoP71s1ddNkN2dLrbx1Khv8Mh1Mv5/GBFslVulzYGLAf\nJ8N6zRm/R3CaHhH7Uv1YYFXp/UADmVRyDYdzkx0HV8EuKJBtmZMNpAwurXDU\ntf+bAYO3+2XG6WDYqNq5uKngpe5suCjep2GnW8MpmnKlu/F3QnKn/f/geb9j\nlOO3iDZIan5Z5op868XAf2oEG0nHrQc+SUounNBa8CHjWb4jPztAG984jXtY\n8eGr\r\n=Hr9E\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDqdzkmrn680kdCeGedmL97NXNwTH+sCvXSNx3PGifnNAiEAtK36Bmfd4nVxkBe/8A/G4b6XpYgk0gwFxfo9912ATwo="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0-alpha.5_1631824936539_0.8939892721958849"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0-alpha.6": {
      "name": "cspell",
      "version": "5.10.0-alpha.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0-alpha.6",
        "cspell-lib": "^5.10.0-alpha.6",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0-alpha.6",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "18f0f0ea2c6260859b9f069565a0369faaf5f96c",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.10.0-alpha.6",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-WYxEYMd6BknQDfTP+W0DXUmR8lh97cl88nzvuI/CFkKETyej+8R2v5+9E1DKzh28li2oOuqVntqWzFSM8PQkPg==",
        "shasum": "28f6935ebed605781ca63662bac7357d71964baa",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0-alpha.6.tgz",
        "fileCount": 40,
        "unpackedSize": 101708,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhRCyOCRA9TVsSAnZWagAA8QsQAJstSuW08pydBY4MHIec\nGuEDL6O7kod4SSERswoXQLvzegYswNaq1fT4k/dN88uzkIfDEkbLu5urpCL8\n/OPv8a9QcypDd9D9d+IBVjJcCrn2v5f+LRz2eqk7WCj5s6wwCNSptWEamplZ\nbow9LCKtTNA3wVNflxiQ03mDLb8JfqBT1k3EPhkc2GKpDK/tuWYdGcb5qCTr\nA5vEk3q16eGuiT7GjoNuVMFqABL1+QQLgJcCLrBZkJTj6Aa9AIHQTTqHI1rr\nfLa6Wqm6b+W1waKfr4+Y6x3dPSeZAEi68C0yf5B5dHIwEskJebKG+Fd9Wu8i\nc5KXSLdQr5VY1nIm+4+AZpmgbNxWoG3Ypntyzk2I8gAMK+xUrVM3/YDTGxB/\n0UKCwLPOKnGvVAfOBNHgZ+S4BoeyTKglUtYprvbvQzrqIP0k9vsDVe+TdXwC\nt16f41qC7vAdoCtU34KyBYW2MpA+kblF39uHas8XznfQXCJyGS2LgAYOqU/5\nrAmJlzdHXhAjfTXGSijJNNQdg2xGwZ5nGJNVm99+7TXsipjJIXfcOYSlUCCK\nbOqfsGeIzU9lRgMbRCPKgAn1dnCjXnKa0MpnThwVxZm8tlPTZvX14gWqU6KY\nvJZRnuXQ4F6Ga+j6x0JFCaBTkRPKBDov2b9IsPW49eJIZko+EmPJy89XmRd6\nPOfe\r\n=0WHE\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDBFp6Xat3Vqelsz/gswW01k8YiGVs+1KYzD4riwSj8NwIhALEkxg3kW7HhLmejF2oPv9N5A1I00Z4g2K9BmBzE2+pj"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0-alpha.6_1631857805920_0.8123984449823551"
      },
      "_hasShrinkwrap": false
    },
    "5.10.0": {
      "name": "cspell",
      "version": "5.10.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0",
        "cspell-lib": "^5.10.0",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "7112fa0160844fc206dcd7aa100c7c14abd49a27",
      "_id": "cspell@5.10.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-CdFN1hJTVwELVhf9Vf1sANWSo5lE3wMlyG8fhkwibbg/aqgdAm0PWcdTDO1KDezNObPm7OrU9oc3W4UuDCk7hQ==",
        "shasum": "d7c8973ca06f96ff1c7ed52740379a9efadfc1a8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.0.tgz",
        "fileCount": 40,
        "unpackedSize": 101676,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhREJ9CRA9TVsSAnZWagAA5/cQAIZcQtKGKpwWRvK+yFcP\njct/UR1QNArJsYkPHi387L0vGcGB7g/mNv8wWttOEzVpotcqlibr6oeW702G\nsmfL2ShaA+/HE+NioP8+A8rAPaoifmxqyrijFCwzlD04Tf19HDtpJQ5Gn9ic\nUrVyijt5DTBismJlswEkygF/RHyKa5WpLnKBo5LCgTwp/CYqXQAzz38UFDe4\nZlKPjUfVq070GUmpkAGv5EeIqupf2kQ/SeWqvydUirRWGdMJfXdLe+VeZ17x\nyBfXMcUYthAG6FQ5U4UaB/WbSLMx4A5mkWHKoRD3SNdo9LFze1C2AjjMuPIL\nUwhUjYxyZ8KyO+2LUUKJK0pqWn6dr/g2xR7VkWBFV46Yb+NXJ2//nmviYImF\nq9e2TStuM3uMNtnOr0Nemx3UmClgNmduvY0z66gcz0ulQuvG/lAe4/0QcKzx\nOURU84/Wl3jDY9mHlqYboWHeDx0ICLRDC9CNZSRrZOVC4Sfil/Lr0u0OUhGq\n0nVSQDI1yZBkQtFqC2I7NPs6miECEl97fQIUhkqw9LXL9kmAtQ0tyq29vlVG\nUG/stlWg533x4C69lJe6jgf+UhzzxC9K99/U9dqsJRGiwLM8U0We/nbbWPmj\nMVzzabJaMrQWctJymGu6f9rGVA9zH9znhmOE7VjphWzo62LfFJlJnKooajWf\n7r1D\r\n=yKb5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDl0Mb5/jCVuio/GE6Z4EnxfW6B7IKlt8Cz0UmazPwvZQIgR+NS2VwivY+oP6zOukejre8nheiKU38DPBfXhwL33Wo="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.0_1631863421587_0.4236105387969713"
      },
      "_hasShrinkwrap": false
    },
    "5.10.1": {
      "name": "cspell",
      "version": "5.10.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.10.0",
        "cspell-lib": "^5.10.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.1.7",
        "strip-ansi": "^6.0.0",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.10.0",
        "@types/fs-extra": "^9.0.12",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "538c13e1e98fc732ba5ffacb359035c6cfc0f909",
      "_id": "cspell@5.10.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jTj8gErwM+B0VnB2YULQ2ABHEc4Ch2udSnFoVRBGWRYKVqXYuRdqpX58j/UA9ByeDqXhx7Hoqg/1Q6vsHAJdZQ==",
        "shasum": "dfbada1536db121342a4606d9a027e3839844be4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.10.1.tgz",
        "fileCount": 40,
        "unpackedSize": 101676,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF7xErDQhikM/ciFVvad5mWaKXUIkJ6pOf4bROX4pdmfAiA2O2abByhCe1FB+z7/8Lqpr3pAvOim2RaQIjY+XFjHPQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.10.1_1631901509514_0.3581990023923378"
      },
      "_hasShrinkwrap": false
    },
    "5.11.0-alpha.0": {
      "name": "cspell",
      "version": "5.11.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/imurmurhash": "^0.1.1",
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.11.0-alpha.0",
        "cspell-lib": "^5.11.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.11.0-alpha.0",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.2",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1942e43560a4969bb9e070a0192121d695ff4554",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.11.0-alpha.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-rz9gE9VVizeIh6EwOabaZA7JmQ+wLN59GHtAW8cz95gHNnwgHBoXUqW4HSrOi2Tuh5MLG161SVWl+wQBwY6Rcg==",
        "shasum": "73134e07d5d79677e406ecd3aae781b448fb6a5d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.11.0-alpha.0.tgz",
        "fileCount": 50,
        "unpackedSize": 111629,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDgbNrVmZgAUn8hlayOeieWn8CTcKDIszUWUa24n/WLZAIhAIMpr7ijazcTTua6qLJ2Bf8Fxvq951rwvL2MPJW8PUb5"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.11.0-alpha.0_1632838101346_0.7657877051581206"
      },
      "_hasShrinkwrap": false
    },
    "5.11.0": {
      "name": "cspell",
      "version": "5.11.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/imurmurhash": "^0.1.1",
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.11.0",
        "cspell-lib": "^5.11.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.11.0",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "2deebec6adea5d6cab7bf1ee5ff3280ff18e0a8c",
      "_id": "cspell@5.11.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-dyxsSHzGZIn2vYmVNIa304B23hWOoZAQH/j8t4no/H5bWgL6DWujMnPjICb/TwIyBugWBZnrbPG14D65I55p9A==",
        "shasum": "39d1dc595f2cea0ab4d32f30c24a4df6e7b9fcbd",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.11.0.tgz",
        "fileCount": 50,
        "unpackedSize": 111597,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDIk63YrKIG6wo9mhrazzyU9UdpVDz2HAAt694xHRURaAIgDEPyr1BC/gi6UPblaPzltnmxsn+oRhgymDJTor2WbJU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.11.0_1632841281917_0.7977654407459838"
      },
      "_hasShrinkwrap": false
    },
    "5.11.1": {
      "name": "cspell",
      "version": "5.11.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-glob": "^5.11.1",
        "cspell-lib": "^5.11.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-types": "^5.11.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.3",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "ef2cd2332a126afba25f288d5a3d726db7b6ca90",
      "_id": "cspell@5.11.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-VO+zPnl7KtGcQICe6dSeCRTT6tODnr79Mm39iY4VXDYKf0q5CtzAbABMiFIwMKD2vuCnc3kCl+1nwHYLjqRJHg==",
        "shasum": "654bfec3ce1356282a479544f59caf313c6f734e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.11.1.tgz",
        "fileCount": 50,
        "unpackedSize": 111597,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDqLYR8ZSPvkDIcCJf8Mx9fyeowxk8Lsf9h0icNh/1X5AiEA4W/MkKZEO5FD9nSNOJfL7+ythAV9dIQmXMfJ/FPu2Ug="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.11.1_1632897641296_0.591409455351376"
      },
      "_hasShrinkwrap": false
    },
    "5.12.0-alpha.0": {
      "name": "cspell",
      "version": "5.12.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.0-alpha.0",
        "cspell-glob": "^5.12.0-alpha.0",
        "cspell-lib": "^5.12.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.0-alpha.0",
        "@cspell/cspell-types": "^5.12.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "babee46ac49f4388112e1bc562282b49051197aa",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [files...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n\n  -v, --verbose               display more information about the files being\n                              checked and the configuration\n\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n\n  --language-id <language>    Force programming language for unknown\n                              extensions. i.e. \"php\" or \"scala\"\n\n  --wordsOnly                 Only output the words not found in the\n                              dictionaries.\n\n  -u, --unique                Only output the first instance of a word not\n                              found in the dictionaries.\n\n  --debug                     Output information useful for debugging\n                              cspell.json files.\n\n  -e, --exclude <glob>        Exclude files matching the glob pattern. This\n                              option can be used multiple times to add multiple\n                              globs.\n\n  --no-issues                 Do not show the spelling errors.\n  --no-progress               Turn off progress messages\n  --no-summary                Turn off summary message in console\n  -s, --silent                Silent mode, suppress error messages\n  -r, --root <root folder>    Root directory, defaults to current directory.\n  --relative                  Issues are displayed relative to root.\n  --show-context              Show the surrounding text around an issue.\n  --show-suggestions          Show spelling suggestions.\n  --must-find-files           Error if no files are found (default: true)\n  --no-must-find-files        Do not error is no files are found\n  --no-color                  Turn off color.\n  --color                     Force color\n  -h, --help                  display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nfiles=$(git diff --cached --name-only)\nexec npx cspell -- --no-summary $files\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.12.0-alpha.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-YiNBh5BFmlOlEGxPCgAV/nMQC3pZbwSaFC69NfZo0mQkYJV0XVJ53Hcw5JGYchl87BqtnFFilqfoDC0ZG++ROw==",
        "shasum": "460546ee9e04da1a4717be6443f7188080c26891",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.0-alpha.0.tgz",
        "fileCount": 58,
        "unpackedSize": 118019,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDlmqtvGmnAeVrL1IaaEQB4idUflkpWfHcE2/GYR60OKQIhAKtBEI+RiAYjATOqxUUV2Pod4BnTDCEN74lB8d/TVi2u"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.0-alpha.0_1633430081774_0.0492464958658696"
      },
      "_hasShrinkwrap": false
    },
    "5.12.0": {
      "name": "cspell",
      "version": "5.12.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.0",
        "cspell-glob": "^5.12.0",
        "cspell-lib": "^5.12.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.0",
        "@cspell/cspell-types": "^5.12.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1dbf5b70cbf27a600f10e439eabc2ab0f908bafd",
      "_id": "cspell@5.12.0",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Up74oWkR5mUy5MIrVv9EY7eFG2qoAoWO4oXdetj4PznJ7u0PavyrhSEbvUBxDroGihXNCX3ut7CrDnR8D/6g7A==",
        "shasum": "4af6b46080b3989479232d42d8d29d95c6ac4d06",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.0.tgz",
        "fileCount": 58,
        "unpackedSize": 117971,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEKhjsnJth68MFMDbmWV91riNVYP2gmVnVB1Il168dvlAiAzWYi1HXeKxYMOn23MReYc9rgqXm67LE9S9rPuODIOyw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.0_1633431508984_0.4599536695383253"
      },
      "_hasShrinkwrap": false
    },
    "5.12.1": {
      "name": "cspell",
      "version": "5.12.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.1",
        "cspell-glob": "^5.12.0",
        "cspell-lib": "^5.12.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.1",
        "@cspell/cspell-types": "^5.12.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "43a626145377e1f760ad51fc58701313c7a26243",
      "_id": "cspell@5.12.1",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-hEiTTLtX2uBsOzph9dO64WaeoF4A0hl8gQNXSSUoNAaQWgm5Kctdc9OUBoVc2wQVxNjciLp6ZcJbfw6fa1dAMA==",
        "shasum": "94a4ce59c1971d25194400a18acd66b9559cee71",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.1.tgz",
        "fileCount": 58,
        "unpackedSize": 118294,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC1jmlwgpbDxw77PnintgZoJ8A7d2elmFKqlIMmVIBRIwIgcw0xVHTet3NeHo7ejLepjdP35i/mJ67hKqivreHEJ0g="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.1_1633497858679_0.07843702438846512"
      },
      "_hasShrinkwrap": false
    },
    "5.12.2": {
      "name": "cspell",
      "version": "5.12.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.2",
        "cspell-glob": "^5.12.2",
        "cspell-lib": "^5.12.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.2",
        "@cspell/cspell-types": "^5.12.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.4",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "1418785bb9c3a29b794a6e9d447b5638f8eb9fbf",
      "_id": "cspell@5.12.2",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-RR7X6LrBZvTwoRjxLbIjxSWGZxXdSuuOMJYP4oPAS9JGQe/opim2erl/NyS2wfFVoZTS9KF2+Pzktb2Voc594A==",
        "shasum": "f5995771a95054dad85ff22f7238048fc62b10ad",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.2.tgz",
        "fileCount": 58,
        "unpackedSize": 118888,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDT7+Es73Rm1cxw6YzGNJFGpPg/GX4yBsRoEFDsqgVtkAiEAq47cWS/iaQr2N8BRu1N909qEKeKPP8S2LP5QKsjurzM="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.2_1633531247393_0.022350311824084867"
      },
      "_hasShrinkwrap": false
    },
    "5.12.3": {
      "name": "cspell",
      "version": "5.12.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.2.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.3",
        "cspell-glob": "^5.12.3",
        "cspell-lib": "^5.12.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.3",
        "@cspell/cspell-types": "^5.12.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.1.4",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.2.5",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "6c424aed933adb8d983ab09dd45042d63d7a5cd8",
      "_id": "cspell@5.12.3",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-lPyWZHfdQh+xjUZDAQC0gnpjglMu2AEfxBWlziTm3XuYuPGTvNJQSUrkMcH180tA3fkj8q2XFwfxHkXXAxm68w==",
        "shasum": "1966eb6687f7cdf86e5f96a8c39a140ffac42d55",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.3.tgz",
        "fileCount": 58,
        "unpackedSize": 119204,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICfdUEfDOJaC4pOvCQWsRZjhKdxFObF1Sb9/sFhs7TDwAiAsLKlXBX9Im1AwLB4V3dZAEdwsVu+M2TLGyL209iN+5g=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.3_1633709671743_0.6569089892934803"
      },
      "_hasShrinkwrap": false
    },
    "5.12.4": {
      "name": "cspell",
      "version": "5.12.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.4",
        "cspell-glob": "^5.12.4",
        "cspell-lib": "^5.12.4",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.4",
        "@cspell/cspell-types": "^5.12.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.3.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "3e9973c39725f65141683b373ed839562f28bd94",
      "_id": "cspell@5.12.4",
      "_nodeVersion": "14.17.0",
      "_npmVersion": "lerna/4.0.0/node@v14.17.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-O0jA0Hd6AfBJHLATsQ0QUSDrjcDCUsrWMQSBjqK6EEJKZhZjoBDCKrgJqh8Qp3MvLIgHqq4r75JrsfRk5SZwhQ==",
        "shasum": "84af77081ef33ca14024ed1cbb3953c2b2199383",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.4.tgz",
        "fileCount": 58,
        "unpackedSize": 119330,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEUAena0vFKNCawfnvb4eI/eR62xjtcaOmtFvXFjoXc0AiAn0b1VK0wPpHOXSaCzeQpMQptrJzppCY2BTUMAfUa4uQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.4_1635669376378_0.9503769956769981"
      },
      "_hasShrinkwrap": false
    },
    "5.12.5": {
      "name": "cspell",
      "version": "5.12.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.5",
        "cspell-glob": "^5.12.4",
        "cspell-lib": "^5.12.5",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.5",
        "@cspell/cspell-types": "^5.12.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.3.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "84a21d1f7cbd17cc9633aafdff6dce19d6de35b5",
      "_id": "cspell@5.12.5",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/4.0.0/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-jfHJ5/TpQ2qrP8K474GoW6axMhkbBx4q2P4TojbkSaDQ/KrvXJjPvvGDYBzCTwu0RyosiLEiJfdyUohGi76eLw==",
        "shasum": "ceb77c73335ec64c1f32428c7443f59505cc72cf",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.5.tgz",
        "fileCount": 58,
        "unpackedSize": 119961,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCvZZE9MEhYxc0xSKFxV2QaL/qOZlzaQGGTGbQRtxJ3eQIhAMPTDOm/jFzcH5+UgfhAQWlXbMSK1IDS3VptynMV99Cz"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.5_1635835894849_0.3627186877697184"
      },
      "_hasShrinkwrap": false
    },
    "5.12.6": {
      "name": "cspell",
      "version": "5.12.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.12.6",
        "cspell-glob": "^5.12.6",
        "cspell-lib": "^5.12.6",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.12.6",
        "@cspell/cspell-types": "^5.12.6",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.3.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "430bb6103b03793d5f0b746e7c643d12fa313216",
      "_id": "cspell@5.12.6",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/4.0.0/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Dz8zqK43AXd8NZh7tdJd8tekWkkUp9Me6oCSWOGE3AqawSHlqk1cTu52wGXMkJ0z6IXmzXzX722VsL0wLEEvRg==",
        "shasum": "ecccd62552e6b6861453e3bdad9427f0df0d68ec",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.12.6.tgz",
        "fileCount": 58,
        "unpackedSize": 119961,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE9vFu0I6gX33EUj7TPrUQE9mtXnGOQukZycjqm/b4eBAiA+kcQHWIq5iqNKXGCHGY5CLx7fTz4vijCrD0YlcWcvlA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.12.6_1636032506227_0.4487174734898276"
      },
      "_hasShrinkwrap": false
    },
    "5.13.0": {
      "name": "cspell",
      "version": "5.13.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.13.0",
        "cspell-glob": "^5.13.0",
        "cspell-lib": "^5.13.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.13.0",
        "@cspell/cspell-types": "^5.13.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.3.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "4cd5431b084824e172798ae97f2f520dbad4a8ac",
      "_id": "cspell@5.13.0",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/4.0.0/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-PlhK3SeYAssJ2HdKAy7CqmM8xI9oxVfIu9acm/jvt8b8Zbydb4579rkAmU8VqJ9jMUjj4rl4CHwraYddc8MmWg==",
        "shasum": "e3039ddfa4e0118b6aa375fb6283c2f091068780",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.13.0.tgz",
        "fileCount": 64,
        "unpackedSize": 119966,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhlLRgCRA9TVsSAnZWagAAVFIP/RNBfDV5HizmA3ndjK25\nIaonLqSVW49TNCA+Vb23q8Hjlm3JHg3Udmck3QHH4Zx/Tv9JI0QEfAfhb7wm\nwT5iqAlNc8NkSzKLmCXR+ugTpFIvyU0izv6HzOlVmRry/n03YHY/3Bgz/S6C\nKXJ34EW104T8AJgujAqUlrA28YxWNY7HzVFvq5Kh3a/G87CNnvqO1wKJqG4P\ndWv/b9w3F2jcF/NbQEBdcpOXCptPRGuuKfpZCH2JK8QvGZpDBybP1YVhDZbx\nJ2g8Pw9NIwAWo2u8Bqabul4n0+R/Loj2zmUZtcavWDWT6ul08dsAktRlaBDL\nzcZUMGmcZbxBHhn5YKavAyRBZkjyNZo6U/NHRmhvnU/wXltJoSyGL0XGWWSH\nIBtFvMVkqf6vSNYYI4UQSrSCVT4mftNP0p/n8ZF5XAxqs90AfxtPNtmODdaD\n2l9VWehmDF9L8fPT/7ABxLYZ6/AS8/ro9yxPEpZ/2xjEd05w77oZR6dz5bUK\nzfqNJEMRzYT7h5ZK+l9RnUUcTAJv9xPr/1C/xLwTW5FJtG8Atg2PB+NlioBd\nqmcHI6RSBV6vp4hmVnf/pzWXEK7cjCyuBtSOgxqe3re5ye3gbYou2x3oanpG\nLk1uYKyjuoGsMFo/DAlCrpYkKiywA/RfZryFQtHdQSpbBMm2HtZkAK5lU61b\nxaYX\r\n=6LPw\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUgV5uA0ddOQfzMRia/qbBMP89C+DE/9N7XoeS8DihFAIgJHGOS5vaxIXSMJ5N5LyZiPdbSRCnSqwJs84qvVcT+i8="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.13.0_1637135456562_0.12730224079144437"
      },
      "_hasShrinkwrap": false
    },
    "5.13.1": {
      "name": "cspell",
      "version": "5.13.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.13.1",
        "cspell-glob": "^5.13.1",
        "cspell-lib": "^5.13.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.13.1",
        "@cspell/cspell-types": "^5.13.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.3.1",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "575e5e6dfc030e01cbe96822dfef9dce12e9f1c4",
      "_id": "cspell@5.13.1",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "lerna/4.0.0/node@v14.18.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-uH0JpQEdMmc5peRXCUuF6Vdp8Bn5mD9YdzUb3Gxd/korSHjxf2nW+c6humaSfW2sHGf67fsyKwlde5jT2HHTyw==",
        "shasum": "3964f7b542d84558b3390d32cdfd1526a7c8cc57",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.13.1.tgz",
        "fileCount": 64,
        "unpackedSize": 119966,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhnpJxCRA9TVsSAnZWagAAgZcP/jfbOUCag2nn/55Jbe2L\nOQTvxsPiXUZ7GAXKPYgQ7O82wrmfEmVnf4igTmAU9NOVq2QX+SFtezayO52M\nubdKbprU+kNqiPkXR5G5uKfe2VyQTMgyfXqZfB8PiU1UkLCnEU6rgyCqJVlC\nwtz2UC2fLmX6JU0lGsbsggfp/taoKq/t2qBTh9h7cKp2IkQ0S9g4DnreSaju\n9T4BZ06xZonvEHUcoa0XruwF0fg3iPZ/cuBPr36BZl8Tk78EKRcVQT8g7z3z\nRziXUW+fk9C0tfKJ8iEqecNbYDoIXtHGyt3owVX3deZLsGbuVXIMFViOTAJg\npZKPtxWDFoCRohjoxegeFI0W/MXly+KDr9FyIuplnf58ylSEeXBMDF+NJV3R\no5NbfmvOaqzlNnIpprrkpSwocq3WUOOsQO2ak04jKns2WAhm/MwVDl2q282X\nazly+nZfqUMd3qUwMRQsa6RTaQHHGjtyQwatzpl1brPnyuMOxRS/O7DAebDN\nt9l+PzhSx8AHwQ8A5JW3bME5Z6giwQKX8xe+qnkXXDmkVwChRnuKW0spfkd0\n+d07fnxuQmgcS6bVd/YuymDMrryw0hn+w5HNT9yEUY66LQTYUGoTZJnjlD7j\naIGURiqXDzpd86NLMfRN7EocfGgTmIFbzHA9a5GfDZ5phfQ6k+Ql24bdZb+B\npPH2\r\n=oi0N\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBUmvC1o5avqUxXOYxrX6kHmeOnkcOzefULp/0EhxWp/AiBsfxssdFOveriYGj6evXh04Vklg/+C/n1v6kayNu1i2A=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.13.1_1637782128899_0.8367759724732264"
      },
      "_hasShrinkwrap": false
    },
    "5.13.2": {
      "name": "cspell",
      "version": "5.13.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.13.2",
        "cspell-glob": "^5.13.2",
        "cspell-lib": "^5.13.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.13.2",
        "@cspell/cspell-types": "^5.13.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.4.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "98bce0c75dcf4328b0adc80a9014809b393c0d37",
      "_id": "cspell@5.13.2",
      "_nodeVersion": "17.2.0",
      "_npmVersion": "lerna/4.0.0/node@v17.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9AtpLv2zOuxaCBBxaFaa7U+4sMbOZzTKhnqIklr5cudUGfDOVHoGwdGA5Wq5xbnhokOP+xLKgPIWffgbn7lljA==",
        "shasum": "2e1e80add85400eda1d99306cfbe334a706757fe",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.13.2.tgz",
        "fileCount": 64,
        "unpackedSize": 119966,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhryizCRA9TVsSAnZWagAAvCIP/0TWiz0RHlV4LavPTY2b\nGqAhsiOP8ELUvHsP3hj/5Fv5gvkyZJp0osucIssKiwmgNDMRbdtmAIinc3FZ\nxmd2eVG5nhux4kAOWHUUQxAwqK+NwPFJ77LqwI+VwRh8JNRUCtB7AiEMRaED\nWfXMxN1DrOXfuiCnByvH8h9HxLej3/w+4Xs1mVwFyNNUubVmsWTIdNLikycw\n62Jk+Qhnyn06DnW/zpRfN2P2/ruOJjIjyFYrP0OLp1r8mWWdkJeE7aDH4ZQ+\nIlKWuiShT1NGoAuwz02dkEc4VGm2WukMgo4LX1AVVG6x+ZY97R4F3B5QdgRp\nk1yJ+UdipUc1khLwDpSJbmq3DrpqnwabefwkjMlZjvoKwplztS/a38hm6b3E\nCGdkJM53VLiTPGy0d9cgcJJpjIRnJIIyHI7lPzwPuKHUDNB9sU89ereEJPFk\nQ4GJeJsqZ/F1G1ZvkATcxXIu4z8+KT6hY4RweBo8Gq+D9aEUEJiw4mzGvLi7\nJFmBPl9+AyBRvhfEPJ9P+MFZp4snbd+vf4tXuEQopkjjam4PgDoM522fXdpB\nRUYHK/rppZ183v+MQ6++sy1lo3fEIs5ADvxLpY/zMz8Oo8xDZBlSVRXCGX8T\n3bS9LKS/v9qTkvcFIcDPRvQozIFqEvfLY7FzRsLMFkKrXmIRTtVMu6tqCrCh\ni5iV\r\n=t+wN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFlc5lqkfSVBZG/c2g9vJojhHHrWQqk+KbaiwIAzslPlAiEAjbJyUAA5Zj5nFggS+iiNQmVA5wGgNlLzga3praZULA4="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.13.2_1638869170977_0.34855038500665847"
      },
      "_hasShrinkwrap": false
    },
    "5.13.3": {
      "name": "cspell",
      "version": "5.13.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.13.3",
        "cspell-glob": "^5.13.3",
        "cspell-lib": "^5.13.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.13.3",
        "@cspell/cspell-types": "^5.13.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "jest": "^27.4.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "f49cb2d98eed1f7274b1e6ad1ef076e7140347b5",
      "_id": "cspell@5.13.3",
      "_nodeVersion": "17.2.0",
      "_npmVersion": "lerna/4.0.0/node@v17.2.0+x64 (darwin)",
      "dist": {
        "integrity": "sha512-14RzCLHadT2BFcTEhEJUiwW4m8vVNnBXGBPnnEYkFiF2MyJEtfyOoqqVxqDHOvwVmc0zKIiAU0ZrG98spWuNnA==",
        "shasum": "5fdf2d7f22926d87daedf3c8ac04a492be845a60",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.13.3.tgz",
        "fileCount": 64,
        "unpackedSize": 119966,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhtGWkCRA9TVsSAnZWagAA4TEP/0htndSAVB0+dnwmeXhW\nvmJgr9tCfc8b+Xa4QbL1aiDX186HnukVdi+PNF32TTDOmDVrLzplDaRhaRd8\ntKXj/B3B5jhkECJuoB7KgNK+3kgitbE2870PvnNGi4iYKyUgcvEd3R9BR2Qs\n7+9ATzHdpKeO2XLIC63XvBVTRkYftnHSOacADAlWnm7jjZBA8ft+3eY+sKvM\nJTVOrZQQxLx+72ccPVgv/vryqwoqbhNl7jkPUVWtaIEu+34SDt1gQvHo78SP\nt7G9g/0D4Z6yFfYpc3yd/nLCIzwJM7WsLQlmm1qQZgD71D2uCDt9p2woF5Rv\nVznVwQRFwiYVoaDtNdWSuvcXsMPAokQl3GCdR/GidwbqWOaw8qF4EKgVNXql\ngfcfpevu6jc10SFtBmkzc9MqNncfyrW5E73xA314SmNPHLt3Yn88hgFrulFv\nESyLrzvMRtx4h/oOAxEbORprdBNiwFzOU1DzJzDYzuuDNCwItumy5d6weicB\nbFSuupECEgl6CEwOj0Ldb/zOg5zUlewu/9xwJQ+tpW81a/DT6xVLTm2c6AMK\nNOt8WnNSi+QqBegu8uASiqyZ2Unakutfyhze4YQvqfnsSbIP05deLVdc5tUu\nk20gcO0zkTTLpvFU3hk9gRAs6/RlI8dA9bOLvKQ2JDnD2/jdxxwvvOn+h1PU\nQQzh\r\n=iB5e\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEhUrZsF+JJSbY6bic4r8qvA90qqKj3zaDmlVB221QuxAiEAjoZFhIPaDH1YE3Ll2w9m7+DUSavu/pRwY3KreeOdb4s="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.13.3_1639212452430_0.7543453745639934"
      },
      "_hasShrinkwrap": false
    },
    "5.13.4": {
      "name": "cspell",
      "version": "5.13.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.13.4",
        "cspell-glob": "^5.13.4",
        "cspell-lib": "^5.13.4",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.2"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.13.4",
        "@cspell/cspell-types": "^5.13.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.5",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "cf6ef9e6137af46d1a7ebd83600c05a4892c4814",
      "_id": "cspell@5.13.4",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-T/AMylb/CY0af8Oc1/Nv79Mqe852ga4AOAY0m8eYG8A5zahDpL2EC6PN5yK8KFn0UPMWMB8B2atZf6/U5RWdaQ==",
        "shasum": "5b3890110177588f21d8d74955a989ebfd860ee8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.13.4.tgz",
        "fileCount": 64,
        "unpackedSize": 120337,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhvb++CRA9TVsSAnZWagAAodIP/1ASVIAJ+6bcgdf7Smfh\n9f1Duf5pzw9Mm1T7pFRck8QtlpTqyBfk3Izb/a+U0jWgp8/95JTISjwvdYvW\nvJ5wAC3gsWjDywPROZQ3DupCjx1Zgym4j9wS3APgX37wKqgIlJQAg6gg3l/7\nSKlUyh68gxZx8p9pI7dwFkWMb9LzA2PtEtVi6qFiecUp7R0+BPKSQ1GGQ4sP\nX8rE2UJP/l9EFF9fHKILmpjl9QIpe8pZhZU06EQyUW0AFH/fnZ/jgRoNzerI\nHIc/8zripOQzx+I789udJ4LsJy+q/VLsWaQ1m6xgHwVuUnbCiyV5rarXxvkr\niy/zmksdsZCTdv96lC5VIztX1mF10CP5RPYY/EKhZYWFjMc1Dpbu9UMDz9hK\ned5ke3HOOWLP59pl8P7fEdYsJY8DTU8bpH7Q3XYnXkZDhN9JoBFRFfoewieE\n6WV/bqnz0auKnfrMmRTkm5NmnDJHhusCF0oORhq79VXATneUD1pjx/y5lwwx\nK1jR4m5KLzDg4+o6o1GKeRjPcQpga0NbahKhbjXZcznYBoynV2YoAvo0QqJA\nw7WzPpFXcYRRneHzvwqz2z+R0izpzsawlLJHh+U9HTl+Ght/+BHnfjtT326j\nAgh3tqJUK00JdOmGY2wdqtK1b4Ij2yIaXU7hH6hjYiODzSOgXkoL8jYDLpoU\nc3Gv\r\n=5A6Z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD5ju7QEk0V1jJmpOuung+VsvIvEoX7SnYg3lrNJavloAIgEmeY4mMW5+Ic5JVwhNqdTWl/zeWfbSQbeQNftZPGsaI="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.13.4_1639825342560_0.5879893054973186"
      },
      "_hasShrinkwrap": false
    },
    "5.14.0-alpha.0": {
      "name": "cspell",
      "version": "5.14.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.14.0-alpha.0",
        "cspell-glob": "^5.14.0-alpha.0",
        "cspell-lib": "^5.14.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.14.0-alpha.0",
        "@cspell/cspell-types": "^5.14.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.5",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "bb136daa99b18e826a5e720ad1dfba94caa1e16e",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Only check changed files. (default: false)\n\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell -- --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.14.0-alpha.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-zGOErXX+4YHOqwHWE7y4brgXJaQgkWWakwuHEsRv7QAzCx6/Ls+klRnSNuvIV0Q2dLAHvgnjstB/AavCsgqQCg==",
        "shasum": "417366c781f218f27994aef1bbb2c8f9436c0fb2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.14.0-alpha.0.tgz",
        "fileCount": 64,
        "unpackedSize": 125514,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhzEYaCRA9TVsSAnZWagAAq5AP/RrS3PuPDZE4mAX0jG5b\nrjh2Wjr/ff18m1q0g82x4YIWW24hANoIzJ4TrzgV9+GU+S4L2ixd3AUCIThB\n98QiJZrcn3WkkSxds/gccHfWqvKhXag/t/1dGgj7OlVNTcmFHb+gBf7r6eaS\nR/rn1Wa3lMBNCrmRk3MJu4lqhn4ZRer0eYpmvqiu9JwivpvxBibe71im3nos\n+T7DMNYm2Mjma0lBPKiK7nRa02EsG9Gh/QCz8j/oLWrjIlb1MLMX/9wSW7IQ\nMCT4RCVxh3DZ0OGSjesMed649quU3UewOOq/WRPoYIpawPHyOPMaDXctMZ+d\nrE17UkNCTG+8lv/BTyYyGC47ejQ9Eh3ZhO3besEzjEBeLh4Nd6rT0mGASqsh\n6aGgJ+PSXk9vnTacYpfbaDKcNkUvWbN9pZd19ejcKnI7b2zaRe7AXPLTt4Pa\nnA4dYT6saUFwoyp9smHOyWbEj/aOEbsp2ueiemW66Ka6e+iGa6B8JnJVM37x\nb8cMEsNJe+3cVVLF2cMC2nJAvO/eJi9TpEwh6ZqIRC3wLj+YWpDY3EENOCiE\nT5Nn+k3xfHjWiy+wev6mHIMEumqCdKJ8fREhLQO+sF+f2XhvHYt9trEzfc8R\nGY5vHIwqJNZV8BXU5nMsQZ7D5UAVqY8ckYqe4IvzRUZ5QwdmtYFk5d5zxsXc\noe1y\r\n=HKUN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDeX0i95OjAIVJUXoHWeXo42ApZfFY3YdIKveJThDJoVwIhAPkjCvajieflTOdp50LsAsKbtrJJWHaQNKjQ6Mck6uUO"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.14.0-alpha.0_1640777242705_0.773396112312279"
      },
      "_hasShrinkwrap": false
    },
    "5.14.0": {
      "name": "cspell",
      "version": "5.14.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.14.0",
        "cspell-glob": "^5.14.0",
        "cspell-lib": "^5.14.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.14.0",
        "@cspell/cspell-types": "^5.14.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.5",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8c8dfb70479584839e8035094771762f77118667",
      "_id": "cspell@5.14.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-WR3WlXIU/WKN4CMfVbRQoo/IscmInYLJoNUe0vx6mVb/T+FbOGzIB1oG2+YqpoN2wG94DS6qdJ01LjPyz+rkXw==",
        "shasum": "05feb62cd345d5568c638bafd6eb10b7e3adeec4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.14.0.tgz",
        "fileCount": 64,
        "unpackedSize": 125466,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhzE0ZCRA9TVsSAnZWagAARdAP/idzIiCphVzDR7GR+xye\ngaN/XocFQ0hr+AMWemap0S7Tl7XLX9jEh6KZjfleZDU6+gcCzdLti/Bmovbe\nrGqr2Q2EY+SgAX7BWOSzBuxf/Q+G9g5DhilWGYHQkhJQHEhZk95wT/+zilBX\nQXZmsgbucXQVfkS60RMv8aXcd21l8H0B6ypOiwoXvAsMdXpN3+W6EDDyD7tL\nGiFE3/UTx8Enat0/6eFssASl7mxPx1+OGEgfXKOpD44377SWOv5SgM5eEptb\nhCgBw2VR8dRyoDB1q3BIGydfSsfH+hKZ88/ADRh6dnrT//d72qukkIhy2bAq\nyH+XNUx2/RugkSnC3XCyHqljQS5MmkYry5RuLdbSC6A2V11fZ3bBzMWSEjSO\nVEYKVkuK4V1ag53DBoL7tGAimfYg8tSYqHedcTFDRqum4LdaSvyCB3gSA/+j\nTUBz58FG6OV5HfSxYT3pQZD4OT7J4LdPOqKxqhHGtngWpGMhLYO+6CrUWdch\nZ9AxUFbemTKaG/x40l3gmI07B5EV2374c1OwljJYhhj7hk9OX6n3gTyKmwOl\naUUECFNPidQX3jyLOJEMl8yBvHlXy6CHOW9fkahZ2YWZbhzoIvRgIuuOermZ\nzJI1JtFnh1LbNNIfI9qscoln1dZzunqxhO7f9S+g/USJR+1jivi9Vcq1t1G8\nE3K2\r\n=6+tg\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB0w/8kvgv6+aFhpmPU0vDngMeqbXYe3QLXoYZ+eH361AiEAl4RUPyuqVbeWfidR/VFeDaCHQFIvT85vYDflultFtlc="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.14.0_1640779033152_0.45561889258441"
      },
      "_hasShrinkwrap": false
    },
    "5.15.0": {
      "name": "cspell",
      "version": "5.15.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.15.0",
        "cspell-glob": "^5.15.0",
        "cspell-lib": "^5.15.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.15.0",
        "@cspell/cspell-types": "^5.15.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.6",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "04d61378054cbecd28df100ca704c7322abab8ba",
      "_id": "cspell@5.15.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-heEy94YxLCL8CftyD9lZAumEFs8+cNL/0f0VXcmVut+fTgOnyOZeGmb/Dajuyff+K5jYglQSJO4pLvwagfmzhQ==",
        "shasum": "ba92e4dbc52cd82958e2d3f1365ba7f749ee0e6a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.15.0.tgz",
        "fileCount": 64,
        "unpackedSize": 130250,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2EbmCRA9TVsSAnZWagAAT7QP/1ST4MdHfKWbWdrjgAfF\nY28W/V34MPFyyLilahI5+nngXbMLQnzngYS4h1oEQT7CJHqbW6+w8Wv+5mn1\nys7T7UQZ4IqdfnQVLW+5aqf1c27moQNbzLh0EiageSW2icminZvQq2dHefOb\n72twG1bGb324NoAx1JZSdImK9Ln356BSNnS83BhAimFq1KtemJ+1ycVzQVph\nHysLxZcQ3LH8XXM7VBtdyWcaYzC5sijT48doQGydHo7AXJZ1uMCGye7XqBiZ\nc5RtLaMZ4gRPnzDLtoHuo6VPJQR0tyjnPUrIsrBHblVjl8gezCFyTW66QfXa\nj0gFmDef10cmjiQcRzZd8xWKJ7T2AXYRWLdunqLsBWAtCXhw0nftU5NGtDRP\ngG4+Lllto2YrYf6xvw4z6D2caOMKDK04IDc0x7erTLtZoy/dJLDSOUfEIOg/\nnAKwGhoCzuBGNaCExEbCsMmeGiqflbnHQb0e79a11yZUfvq+GLoqG80uWCcr\n8baktfv1PAY6L0qYvwtw/XU+SxZyXoKKaxum87Wqdjy3VTsGCSNfwak5Kvbb\n8IPbV9F53P/Cf7OyRVapVzZUgDtoD4zRuym9wxPAoWXK3bv3zMu2aRmifZ2Y\n42A963LVhWvfNgBRl6dbXTIEovLG6q3U7cF/iCDq6SqMQRGs1HvZC2gXii+u\niVWa\r\n=1Dld\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICTISCMkn+dP0LgSXL+LMzzP8+y1E+gocmf096lU7WH7AiEAusuT4IRMKtJq1pA92obBhMgC/j7kjbuNZ4G1US3c6nc="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.15.0_1641563878172_0.37734010898421744"
      },
      "_hasShrinkwrap": false
    },
    "5.15.1": {
      "name": "cspell",
      "version": "5.15.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.15.1",
        "cspell-glob": "^5.15.1",
        "cspell-lib": "^5.15.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.15.1",
        "@cspell/cspell-types": "^5.15.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "b0461bc45386484e14ac7ad97a68d7d860d2309a",
      "_id": "cspell@5.15.1",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-OIH7NL4XjKH1h3JMIQTKPezQOSd077mrDRHo6EW/t3on840XxEoKBvxBrxhKzOctevOk7HtszsubwMFTCFV5+A==",
        "shasum": "678af613d122e5c97b9dc24824ba637a29b2da7d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.15.1.tgz",
        "fileCount": 64,
        "unpackedSize": 130250,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2F/3CRA9TVsSAnZWagAArO0P/1E/zqHIcQVtDd5Gb6BX\nNIz1VteyxpX153VHDBHOUmCeca10Y+Cl/UbqM1MImrJaFki+7boU+o855NuF\n4MLhMUgAGl5iBcogMgwwkxWM8bw1jsXzmLCx2P4QyyE4FFoF5oXqnxBF7DNZ\nd5KWadtQGHzn+4h+/JdiIbNmGwDRds7iZRhgbzT9MZKg3t22XXVQGfYC7rZb\n1k3lr3JANWz5fSYPscwwnweDVr/0mLxiZM3tQsOciu3uGTLB4TSiTb8NTfLO\nzODUHo34hMXVX3RckDN8Y2GLNWlpAzbTOfkpAstlFIu6RY6sTcf07FbJwclr\njD0h0cS9G7ul66WK9SIzO4gNMlIZkEAofAh9AQ18PR+n2wa86dHzPrNr57pT\nBEDkr67kMABKesipkZvwhU46MrCKPomBOl1GdIgf88BAa0DLjE4zru0S7RgN\nY25sIqhKIm1wwDsTKevLvr8QqqPvEi5jvIc6Kh+qioUCKQSiaxcrkARbD/c9\ntWWdEp4PQKLyol0Jat/amWlrPOEkNbORZ73YFchgm+LhIIlf4PPUt1zldR1k\nRfp0xjws9usJyUkYu1XuZifV90UIdmH3VAjEJS6xiUukrgo8xOwWwZjonacT\nv0Ie8skR3YB7l2baBCsHR0THslY3KRWJiD+Ak3fVsKYh2DZlrVVgnlMdtXIP\nqYXW\r\n=Xuev\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCo+dZ8air43cuz6MYXhwnCqk/rieKYWQ0BXr5wVfYykgIgNZiDHcQEzHKp+ErFWSVh9ETtG0eSq15XnwfzdZ1oAiw="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.15.1_1641570294995_0.9784823391070441"
      },
      "_hasShrinkwrap": false
    },
    "5.15.2": {
      "name": "cspell",
      "version": "5.15.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.15.2",
        "cspell-glob": "^5.15.2",
        "cspell-lib": "^5.15.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.15.2",
        "@cspell/cspell-types": "^5.15.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "b047b5458980010a8f3ab31c6dc9434e0e782d5e",
      "_id": "cspell@5.15.2",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-q/UWqkDMCB83uwb6LgDr7j/79RxeWbDY28J2kqktmAOk2Th4+ZuR7/IfxHOBUFvUYtbPxp1p8iz8v57G6U97Jg==",
        "shasum": "16ee571d3e4316085ffe39c282e360909493198b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.15.2.tgz",
        "fileCount": 64,
        "unpackedSize": 130279,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh3VoHCRA9TVsSAnZWagAAgfoQAJBgljixxd2HHqp38K0b\nCVk5RDwDYC/t7NxTUekVJuvD7rg67UV+zJt3XnZ2zzdYcF3dhH+QWuP9/Hnm\nrYwRGV6euzBXZicC+NJhDMv6xWtYNG/OHq6+lo/tS83P9R+LvJwN+KFI5NHq\nufz2OhFi4m7ZmqgtY7Jf+xD/Rbe/6rY2avQ6cHQcbHG5agqMl/1P2hVVm7IZ\nB+mZeieQgvy7lytPXoPbj5WG/xyejEsvolv/nBZxLAdWrHJI0eWa1HE4lxgp\nSxfL4YqBy99qX2Vt3Vokq8FvWtD2t9plMxPAHSyAGHpNmOlFgAHTk7bU2bW4\n6oV3z79JmwMdRjoG9iv8EUWslGP3Q0y/pdIM1cRS98xfTi9HYxbC0wh+1IYL\nSgqigY/IWk2HifmiHebR/CXbrS6pCRwPwu9LmEZ+eSm4tCdQwzvG1sOXAzIo\nSV0YfMZcANGpVq3BlDVYv8MATzhY+4noPIO2GPer604a7zOgYGCQNcVPxkzp\nllXPcHpKxmUEUfWf4ee6EzuY/+PY7K0uBiKtDGf2LfHkpvbpOmqWIBb6WMKU\nO8pW7Nzt0hcfWZVVGDOEbuKKLl4cZ9o1EX9csE/ev8+z5h4rL81TW6QGwiiZ\nm2LxAyyp2TCLXSkIQIyIdfF0K3Mulc1mAMahP/s58PTOXw4GEKq1cKXIchuw\njKL8\r\n=NfNN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAChBtqsYXnzmNzA3NcfCO5+R9IsYokmdNuxp4/kQwQ1AiEA1I9LVPhw/j1bEUOvqJnKTJKng6WejiXzEPSALbO03/Q="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.15.2_1641896455126_0.17440206711895123"
      },
      "_hasShrinkwrap": false
    },
    "5.15.3": {
      "name": "cspell",
      "version": "5.15.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.15.3",
        "cspell-glob": "^5.15.3",
        "cspell-lib": "^5.15.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.15.3",
        "@cspell/cspell-types": "^5.15.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "8a7c55b7d0b340d3c4e964ba91390a405f2cda2d",
      "_id": "cspell@5.15.3",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-JybhoO6POTWtPcwwvlupxBBUQrLkV/I34pKGnI8+90PycRirU/rBYjfYX41QmFucQTBVncA+fSxqxmA0JXR8Uw==",
        "shasum": "1ce34c666d5a8204ecbb61976f91f42ab1342c25",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.15.3.tgz",
        "fileCount": 64,
        "unpackedSize": 131876,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6VMqCRA9TVsSAnZWagAARS0P/2OCS4fQ3Y6dGEvPu7Vy\nPz3te92koM9iSUQya8ozX8HcFzLrNe/Qdnu54PsYYluFgmz/R48Q3bFaXmcI\nV87CYho9CSpGUzkcaDGyOIclte31RT1kwUUJbBREt6xMhwDgLHmUSu/g/6wX\ncJCmsYfD4FKc76FZ1shd/g4Z7JST9Kywbo+N0BjgtFVZYT0EuU/nLGBq8xIx\nbe4dD07ztF3iPKevehaI34TT0koqPeF5SC0fbJ8QBfWm7C1L6yh7OE7WGY/A\nFLjaYj3TiCEKYXw7VYyNXAX3UOZItUknS/LMqHMqCJvaWcwCUFXAVWKKvGKB\nTFF2RrYg1+5FDyJzWgfZ6n195DaPMIEplx3GfF4cyTzmNT+t9iHtH8g5YynD\n+MuDQg/Xu0rf7iZSGYwc2b8H+dq4NU+MGIg5bdYHW+3uWHWI2CpHtsJTZorF\nalE0UXBJbbID28eFLCvjpC+l2FL2YuAuQg/3R5A6OtNCBi5OlIDIylUvhJeG\nvKbWjAFn2GcCjPX+p8DGw3jjmnDoacn+zLRFyEnPOuCEMZ7o0PfDITL8E+QP\naAtgDHFFUSUfrVh5kooqJAAB90Vseii7wyyseXEqUBfvUDLjWKQnjL+vcB6r\na53NeUz9n/wQnhiUzHEEchevKobCZxi/rrJ7rtfQkIf4LmEJy89CPlih/H8M\nOLhM\r\n=kvVx\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCP/4+XZX0lqSXok2Y82gPAxGC7rExc9Cni+tiQBCFSGwIgGvw0/1TcOIAVs4EV8Gqr3J/wKwe97jrdDmwCJqxU06g="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.15.3_1642681130735_0.10821697599548319"
      },
      "_hasShrinkwrap": false
    },
    "5.16.0": {
      "name": "cspell",
      "version": "5.16.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.16.0",
        "cspell-glob": "^5.16.0",
        "cspell-lib": "^5.16.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.16.0",
        "@cspell/cspell-types": "^5.16.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "c5d994f58bdb48c4d16f1708607b28c8a7b52a65",
      "_id": "cspell@5.16.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-giK0IZz1cK51mTSTox51GUxgcbKy5Y5yXvyqVpfQ6m4nATSuiSRiMPvlxX3Er2uAiNkolyLTIgUxBAV/c8U3PQ==",
        "shasum": "bc4fab60ab259f25c4b2878bfb600850b6aa3684",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.16.0.tgz",
        "fileCount": 64,
        "unpackedSize": 131876,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6ZETCRA9TVsSAnZWagAADSMP/1k8uGE7Ctkbj4e3kUFQ\nJ85iPTRigQLFnwm6N1DvK7+h5Wha4oCwnRIXZFedvgAEAVufrpdyuAse3r20\n62W/GoBYrR6Uw/mKTCuY7sJfR9H+NXdmVMBWvGBXuQ3vy1xsGxTwFAAnH/sP\nVVOTNhXE/01pJjnOP4QUdnDd29O6kfp4+T36tXJ3EYx5vbDjWgAr20bNQSH/\n2Exgio9bf3c9Npq+8pTF8QSeM4fyAo5LBwH6FO9Fkr1YR0K+cDUe8axVaL2T\n2qh6ldONgMHHp6CIUdCt/WKM/f8TL4sqHImFhkaUCsQilaacgbpQ/cB6S45P\nVa87kie6GPCSPCHx2tjMId9y9Qegz8e0K6P8FQ493wvewiMElCRlFny6JF98\nN3RAXNpZmga0m3SkXffsleVrU2TCIDo6kHsCM8rZPfr3bJ1MlBVdb6n1XhsO\n4Wn4ABLXLrn6QMWkwb0355GGR0lxuGnxal8LjZKrmFXj9E8iakadGsmFjnyo\n2L52RwKrAL8LgJKqXesQYeE2ANUyc4QeE0jbc7DShw793pCErpwNJvfWYXRr\nbZ0O3N3SX9L7nblpHsEOwvRe5xUwfaCOK0hxYxdgDNud49t5q3J70pBtCIMl\nH3jPnS1wgqPhMNhropTrtmweRJNPuMyAm/JIHPwwfOM3sRQ5LqoGTCb1huHe\nZh/l\r\n=Lk3n\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDMi8wI7WcPuqNTIylQdes3y0rn6k27lN2XnN0yiUY6eQIhAO/Ia9Uxc9Theg6BZtrAvbD9g7BWq0LRvqJNv/v8YTNY"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.16.0_1642696979257_0.08479279066237866"
      },
      "_hasShrinkwrap": false
    },
    "5.17.0-alpha.0": {
      "name": "cspell",
      "version": "5.17.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.17.0-alpha.0",
        "cspell-glob": "^5.17.0-alpha.0",
        "cspell-lib": "^5.17.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.17.0-alpha.0",
        "@cspell/cspell-types": "^5.17.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2"
      },
      "gitHead": "d884218703cac72186fd69e8ba1e9eb78558c7ca",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.17.0-alpha.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-GL5xqLtffrioBL26gpR/Cr4Cf1ymYmpXirz8F7wu7/XoC7JRvLLu/DSsKToxBHL7LVH6+2tXo5ZaCRWF3FHB4w==",
        "shasum": "2b1118c05bc26935a73d9fe11b5102d602d5cf0a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.17.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 151477,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8Y0/CRA9TVsSAnZWagAAMZAP/3/JiLcgUv7YCT26pBeI\nwcMkPWDW8eblUpfRRaq8qFXGtaFmL9IWid6v9ns/O83P2Ms0J3lPPCWm28iL\n0q2hkCVCKcmJozzO81lkZsbpJKN44+f0f1bYDoXkxxO2gFRJraxwRO1zq5pa\nlzs5cA8E0xrh51jYWCubpdQw1VE2NLzH8UZC0nhZtCRVZF1Z9yoXLYRIiLwB\nzXTOLzRiT/zYhVd7M2h1XBNnl83Zc10KAqx5GHz3yiwBVv9yHCtVJ0z0ziHl\ndeDqxDrkGTKMcSK82N2byXu0kJvOa704WGcGdpgeu3S7ukns9k3SEeVpCvJ/\n2+WWvOqSeOfiiDK2CuMgalOPtIzN5sVdeXXzBzQAh78E3q2oI8hnJRdzmn/g\nZYGlEJHl+XIW4WabGR+qwCJOah6lXVVKCu4gB6Wd0dHg3Virg78RRg/Y2S7c\nvjUWIKljtbwt6WyJ6eWXy+d6cbtyXL4zcBJg3olv6ew/qbjkwREIaK9iHdJY\n/MnSW9qjBff2TsWN7LXpw9/uzIIS8pCLqupFFspPbJBCJ4oTVVLHHvLMYoLz\nNohwOZEuTtXYSM+q8+WdkFHmUCGLRYtF9CW2keP3BfSpX99SJpvTKOp0D0iK\nCk4lPtdxNUSm3sVXaMRZH/9aB75E/Q9kx8deOjLzwjYRLUze6l+ZEJqARDtY\niIIJ\r\n=hJVQ\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBo+3qD4Ff4iZSvGEFoiZXLG0Lxv8nq1P/bqBJUCiB9FAiEAk3/ktM80XP40jTZ+Z0pBTPtLsPSqdqQsPF7LPtSvD7Y="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.17.0-alpha.0_1643220287653_0.5988054466719737"
      },
      "_hasShrinkwrap": false
    },
    "5.17.0": {
      "name": "cspell",
      "version": "5.17.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.17.0",
        "cspell-glob": "^5.17.0",
        "cspell-lib": "^5.17.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.17.0",
        "@cspell/cspell-types": "^5.17.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.66.1",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "4e02d88a7add382088eb16d9b200e4bf07434f8f",
      "_id": "cspell@5.17.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-LpXMpXVRp6V9Id2WRJ4y3pDRqYhDyJrLERbeGIESnLv8zMovGC7ZYTo648YZ1l+OLw5gUKB857DGT01muqCwqA==",
        "shasum": "74ca92fa44d2cb44f79a98ff98f749042e593010",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.17.0.tgz",
        "fileCount": 72,
        "unpackedSize": 151679,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8bJrCRA9TVsSAnZWagAA6kMP/jrVn9FS/sRr5htNIIH7\nGzIwVsNKDdROOwOwWNETfdRkE+rWRjaMUPFxvSGwpUKTzt2JnR6NAaW6jkou\nEL1RSHeEC7MOQ7vVlKxm9i7QAnmvKrxMFcXwfBQg6dOR8qy99CZDMg5HzMLz\nq1Bkfpgcp8DaXGcKgIvQv/GpndRc5RhHRYPjAz3wDn4AVduQN9hxumwCHyo4\nrDCqh0ftqexz2vtels+pArALNx6O+6S66FPvkHgOa5mNF/BL1OhPnF5YIBHK\n1HarsleZPpBcwcFIhdv5HWPw9i+u8Nu41CIpQdOAC/EUNvQg/tMc2PvLhpVo\ngm4JJiHkve5iUohznw14nzhdrbNO4YTHG+JDYLrrPn0J2p2xAWbBBdiZUlyp\nfEujB/9WAOz4oEvIUFR/ArRDXfT8jicjSR6xCLBE0oXjov7u5Nj8+kIa7qXh\nyus2oH7FU2kwXGcODcTfgdNxUW1GgnaZ60mbNEEHcrf9tE0J8BiMtrOXUYYH\nJxuAj10B20kiDC1dztQgGAOWZwSwL8jLdTnzB/Zr1Q/3zUlgMikPaz/rErH6\nCVQpUNH0wpQ3rtglsMOSdfAsyvn09hFbUkD7xp9UEoq5H4xzediMmmqQB7hM\n5eKEd2/EjY22CbL1KN7Vg40P4L7F8iZXBYsU14qgaliizBaWSXZT61w0g8Zg\najkF\r\n=XZsP\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDiykemm8Yd4Kvx6ifbMDurQ5rYU3AarUhJxNyh47BjPwIhANRtL5hfowDQhiiS9tPEC2kSGtGj99qMuAgG4zU4iMXu"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.17.0_1643229803424_0.3014154604901058"
      },
      "_hasShrinkwrap": false
    },
    "5.18.0-alpha.0": {
      "name": "cspell",
      "version": "5.18.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.0-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.18.0-alpha.0",
        "cspell-glob": "^5.18.0-alpha.0",
        "cspell-lib": "^5.18.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.0-alpha.0",
        "@cspell/cspell-types": "^5.18.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.66.1",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "d3c6f34444f19e9d8e375d1cbea6f99d0f270716",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.18.0-alpha.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-DncwxfQgcGxr1EhYtAa8d0DSd54N7VfpDFIGxFk1UDC/9S194ooSDw/p+EKURbbSu/Z5BspVRPohUI8cLBo10Q==",
        "shasum": "439c4a1f7ad87d45276ba17245d1aee542f08142",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 146395,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh9veJCRA9TVsSAnZWagAAOgAP/2St0K5fDtqTFNzbT49B\n40dYsO1QmOTcXuwuNO5LT738x/VwAi/2F+8r0hbiC6aIBNIzPovjj7iIeC4P\nfn0JTQTcKcTqyY/uUv/JfGPXqJBecXzs7uDKqDzPU+9oSW8C0vyCeqgH/3Gr\nUM9nTytI5cFhDSDb/zNcK8SSw/OjLNU4993OTS38FopoO0Kiu+ZcKfc8dzfh\nqdJbm5Ti24pYsCEfClSIfccW5JiZZ5B0cJ1pEX+jl1cfAbs7kIYpdQXMsv4C\nadOyVbRdpaH/gRmb4A0CwyRP6hOd+dYsgB52Tiq/BENGNrJWUnAOJY6Gj0ov\nHe9ek9kCI0O6Ej6UQLtRBueTTW0yIR1sCsrXO+pJ8QTkA90n/kYVE3bB/9jW\nD2l6eoBs7OWUOG6qcYTAr22IlOtxdZxMBtG5ZzAFq6GS30wusC+ZyTnctHl1\nYlG3+rO2hUbKrBR+zwoZ9mkWG3xJUo9F+oCJOy1Zq506sS5JswmfBg2txETb\nrn/bNEmixRz3evTYLyrUFa0MK2gdojXRrbAZpS5WUSXFJaN+Qwc8fwT9H5rF\n+0IZlCVzhW4jImkj8F4ksC0R6smZWT0elf+vD3FwjOm8boG7woOFb8yAVH62\nsFGhz9jhpEQB3fCBByN8KAPVvg3SqZQ+nWxo3urj2B0v9zwi8L9oVoXqOUO3\nRUCL\r\n=YrHB\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIETbS60SpFJhcANzAM0RRiniXFr38mDCvdSAzuMZszvUAiEAn5Cdnna/KIbWfAm/EZIXtBdpR3juVvNzJuzzZGsdK+I="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.0-alpha.0_1643575177013_0.7162883163468479"
      },
      "_hasShrinkwrap": false
    },
    "5.18.0": {
      "name": "cspell",
      "version": "5.18.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.0",
        "chalk": "^4.1.2",
        "commander": "^8.3.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.18.0",
        "cspell-glob": "^5.18.0",
        "cspell-lib": "^5.18.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.0",
        "@cspell/cspell-types": "^5.18.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.66.1",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "ef4c46dfb6f2938724afb5332ea2fdf9b67d99e4",
      "_id": "cspell@5.18.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0QVcIc+I+2VM2N+piB4p+rC8MU5OU7Og3jsHW4xSzxqA7sZBLNSQnp+vtBBBsjkldog3j/o+rXpnKSymamgG/g==",
        "shasum": "8c85bfdea81cf5b47af10f0bc75f1a2eba2ba89f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.0.tgz",
        "fileCount": 72,
        "unpackedSize": 146339,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh94PTCRA9TVsSAnZWagAA7aAQAKK5XNtySx/YnHnoP1iH\nxqx987Zh4Wv3O+vNqe6Wtf2rVDIFmrd4J8tyohqcgrvm4t2emXLfP0DXminy\nFmSuK/aLGSg0AFwADxXvSeBQyxQD5LmUgcQufpFkom7ijSTTvtsTOAtdljkf\nLE6iKx71H4oIRzT2TfnaS399f1Zr5U+BkUEcDtIQTrv5PYw117K+ZGuTfgOR\nwyyHzPpI9xhy0EDxJvFEioXpmBvnCHSRFtQShsHSSS0j40bUjqvA+q3rW6nd\nXLMQokjNYB9JLalYNGLo/NhOuJVplqXLcbdJmUZph2ESjLuXhiS2iyStyVUz\nlBzX0u0QOEh1bTBAfT1+oKR/ZoNdcSpGQk7y123y74NBXtCUFq3DEss/t4w9\nChJJNRRxGdDH4SpXHyKdUwC2nvR9Lvoevf3rbAAZ/36mQAo4yKKF/mjmf/o8\nc9jZjLSJi1HUHujXtYiLGjvjxXbACefsPcvUvW3tmcv25n350x257CTABKV/\n549Ux6lXpOcPeV6Z4DvdDFqJ1KNfXtH5qwsy+PK8xeMe8gMQkMt5Sli1rsZU\nfcYlUpCefRR5WvryzrpcL0/zztzPVL3r9k+z/gq/aMFqBZM4Qk6dWVAnbT2J\nQZFIJvyK6AngXENUFQNs6v3xst2fiGsMySjWDsTI5ApOcviFNWqzfpPZlhWc\nF+qi\r\n=LtNA\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGwXW/OZwOO7atlRo2AjohkIVVhwhlSmtdngWjLwMjhWAiAZ1+PjyMRq5YJ6b81GsGwMZSbLZitmQ1xPdbf6t/Ag9Q=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.0_1643611091515_0.9897300101304665"
      },
      "_hasShrinkwrap": false
    },
    "5.18.1": {
      "name": "cspell",
      "version": "5.18.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.1",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.18.1",
        "cspell-glob": "^5.18.1",
        "cspell-lib": "^5.18.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.1",
        "@cspell/cspell-types": "^5.18.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.66.1",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "8b94979b57a7b1a11f8efbd5bc086d29d496f7be",
      "_id": "cspell@5.18.1",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-CXXpeM/juzqkaL2EWKhhU2iEYAqli/9ZEE0JtPmnCxmFLGpDXkaWjKcrQMJuTlRfUYF5CUGEewBTyFmMpQy6ew==",
        "shasum": "260347a6b01f8d77ad82b226c50098ae135bf122",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.1.tgz",
        "fileCount": 72,
        "unpackedSize": 146392,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh+6t6CRA9TVsSAnZWagAAfKsP/2dKJta7p04eRuWcGxE+\nszUW7MVuJRrJpms03yQAfc7/5dkQTL/M4GNmQHJ/bXe8hTEAuBiiXHruz5yB\ntIEOK0xKHQnLcAOiBdzFWLvlIFboBMw4ykL3VkpZx24qlM7Rj8CRUGLNkUoj\nHtRgodAbX866D6A5loR8XopXlWkCnyHSIocGOBya/wxP/+m2sVzzRwxxXUgU\ngx3Ntm6zs2iths3tSSAjtVxn9LD9cCgDtoi5sIqx1B3ys4lTQeQZjAENqf2Q\nbMhiedd6eBN6wq1HKEwW8UmhwEnpjTHnQmSJ95ppNglEls6vGzerQTwe3hEC\ny+tyU9NcpzZw8Y8HN/Q+izizcAU5itRMZzqOD/tlQ91KzFBIGlTGeMjrTh1t\nUKaGzxae2HIZYVMmy2H6txr79y14Zbqw2OemgTwNUVqrNq514gf6iQaMjfxy\nEiUVKb8N0AT3BJYSutS3GyW690j1yLTeg2/QROMyEZXUgZ7cT6w3rNOTmy6Q\nk/yCs0nuQxa7Uxstqubty++pKzajz5XrbDgIyNIBTGqBU/8djRH42twLmiko\nkU+1qNgk3DYngsC2l/snB6KvZSRj3Sw0idchKs+8COQ9rtvsz/8sbkhgyW/M\nlh0JCxYAbSJ/qX/lD7EgC38eyR/fawpM+oQiqQza1fFL1LR/cCUbQatuhOjx\n0qQs\r\n=6tuK\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC+dBdFJI0qsZsaflxO4DC6kqpXHHptlrL3TPAnlcYT7gIgL5QJfzA9fpETApe8BzM5RweclHCqNStulbfue8wXUxk="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.1_1643883386222_0.7486380645062725"
      },
      "_hasShrinkwrap": false
    },
    "5.18.2": {
      "name": "cspell",
      "version": "5.18.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.2",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.1.1",
        "cspell-gitignore": "^5.18.2",
        "cspell-glob": "^5.18.2",
        "cspell-lib": "^5.18.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.2",
        "@cspell/cspell-types": "^5.18.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "baa92d5154ccf0a3a27d00ed169dd79cc80ea6cc",
      "_id": "cspell@5.18.2",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-VOoligacm7RTxyLlpAw7MvFFmpcxktZAiLtQ8J1CDz9J6BDfivhfZrX8ybprhY5WmUD5PSeKiOunyZoRkEjyMg==",
        "shasum": "a6c2ec5aefb9b3f76e655d8de0bc07d9575f2c24",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.2.tgz",
        "fileCount": 72,
        "unpackedSize": 146940,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh++GcCRA9TVsSAnZWagAAU1sP/i2+QA/eTVvpnBWIdalg\nW78v+kbTdxteQBAJQsUk4zZ11MfdjeQyzOVTiJVmtU8dgEOe6j8UerXkly+y\nacd1dSSYWTkYEwQU6M7uHKLHzUk7/G/tMgkbl1fDFo6D/3fXLlovvRkGRXG2\nlO7G4TlExDQCT28whM1Nnjt6w9LEFCULtb+oyijqNaLP+PY0cFtexHxAZJ6r\nlLLJbe9xCBEZo1MVFBv3wTy5fBEkulYqQTZdmREHjQdiHvsEQAqFRfEm1ml7\nl09g9cDqukjIUK30Dc4/QH7SJ4oUr853xnsLzgzTzWzdM4/VYRPEMvkdZAXi\nQW680GBWE3pf5kow0PWfKv1gSk09LA2JtkgJ7RShLtqCiZi++Ux2yUePnNYQ\nqgh0CvygHHgcdC9eQ1Obm3aOyvDoff/qsikL+Bl0U98CfAC225KEnTApdY3t\nxtlwcnKHB3J0FdDzeoTSNLNuTRrxKnMnOA+uXwmx8VPbOa9yJvnw6TKIasBS\nTi1kfokwtvDkKMCnJEzEsyN0lusLyGG1+AXFaKxB5jTsZXAzKoHubTsl/Y3c\nbZ9YcrOpNQmPmCPZh/2kfEKhyKFBcc4Vo6xen27cvAwaQ53sETjjGACBmwtN\neiPSynb4ZK3v5tGA4y4/mhM04X+29tTLKGhlGmaJTEXEDc4AiyuRLrOpO/cs\nTMWl\r\n=wqpj\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDqngjYtbQ8thPEfb0JeJfQq6aQo2S9HM6Ba1lBcyzcrwIhAJtlipemKSOPvnc0NzDa3tiOsl1cBNYUOJAIpYceXRdH"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.2_1643897243910_0.6210986176364501"
      },
      "_hasShrinkwrap": false
    },
    "5.18.3": {
      "name": "cspell",
      "version": "5.18.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.3",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.18.3",
        "cspell-glob": "^5.18.3",
        "cspell-lib": "^5.18.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.3",
        "@cspell/cspell-types": "^5.18.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.4.7",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "c650c8d0d58fc0398a6f745a0ad48d46f982332f",
      "_id": "cspell@5.18.3",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-mX3sG6xqHQEklXpQEvRr1gIwkum3rTANTXLF4wf3PWb3XsfH3M/wGD0gQiP+EqgZopqu9CCo9+r7FQv2tc9dGQ==",
        "shasum": "8f9d6b5df7837ced31bb6684261a8085fb6846d6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.3.tgz",
        "fileCount": 72,
        "unpackedSize": 147965,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh/UejCRA9TVsSAnZWagAAD6sP/jKlbM9u08Z0Pnwjn5lv\nFHaHf1/qmja1w6vesQI/DSSmf4mTmVZaoc3tjX9FE6ltfoLz/7ztDjHAY7oY\nTP/FhCXyvpGltSegaRFfqOM2LBdZFgWJkwaQVcxNEKwIznYFcOADNa6Pqxwj\nXZefF/C3IDTbcz/Z4MPykcu7CSpGbUP4k8E+nwtKNc8McZc6WtC1w4f2zoWN\nAlLxcb3H/8b+WSNXvNzFcFXLtyuilcNfeVS9Y+73hiV6zSRXxhsVYiwWh7d3\nistlR/7m1C36xX98ABPQDArdXERhBd59d2osGxJH7EXXxy2qzGfcjBiNxM0q\nP1XKcd8g6lwVSVT30ADbagAp5eP1A0Ah1xcg6q6gTxX6ReLkI63vNxwbbUZv\nBnGRNfg+wBwEjA9hjNdrPRitQKojPNvEe78M0jMwtnsHGfOvw0Rx+QWaj8Rk\nRHOGNSGkG7UWkXsMHne9mWVobi8ZR8a7OYk2XgAITqlV77tHCDftcp8/nSk8\nZ1wVNkemRl+xCRM4ZJ1guKhfi5457tTAx/UZpL/gAyVe36RWj6to/BMfSJ60\nFHrLocHMcNwgzVzxBy83dTxOWlSHAMgm4EoBogNwRbd6cg3vG7H0hsMXXK5h\nTQKsP8Z/5a/d0MQiIb980cmNKEs4CqHT892I8c7E3xOldM4r+J6KK9F1/2YL\ngHQv\r\n=9Tnk\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH7pXkC/zHWjf1WBNb3n4pFD0SiWknj/Ra2EgEffafvXAiAOjlFSSaW5AC04p00iWEhJkrSFd4vaIFQGVCL8ktxGLg=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.3_1643988898868_0.30664813908126676"
      },
      "_hasShrinkwrap": false
    },
    "5.18.4": {
      "name": "cspell",
      "version": "5.18.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.4",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.18.4",
        "cspell-glob": "^5.18.4",
        "cspell-lib": "^5.18.4",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.4",
        "@cspell/cspell-types": "^5.18.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.0",
        "micromatch": "^4.0.4",
        "minimatch": "^3.0.4",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.0",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "26769ba64ce9eff227492524e5210709bec36416",
      "_id": "cspell@5.18.4",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-u/6iw8Zc4RICTtmipM3i25s6+7NwbtGbxT3Xws7BLZ5qb2hsvSGSSJLgAMaQ3BFHZikdeHBDhGw2g67M3S5V8Q==",
        "shasum": "0522a419cab01736feabf3173292943b38e7488a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.4.tgz",
        "fileCount": 74,
        "unpackedSize": 152442,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAMb1CRA9TVsSAnZWagAAVyEP/3Rcq27CIWswy2B6DGMk\np/j0NIq3/ZeLAXX4zcuBoKR4TpwfYzH2g9W4zU9rwg4lcKE1rQDgNGB4sL8d\nqMxy2VU6PRN7dYe3NCyA5fL4lnhDO/YD3FfU8R9B8eg69C+tZy/FOIAF1yz5\nBfYwF6OirVv0aDQoWvMiGcPMVLvw66Rak3JWzc10BToTxaFLrWipp+tP6OGg\nTkVvK+GSgD8ZHpcr5eiwWabuQpYBc6qi2EEorEpCbZzfXKBxBNjhyrxUMmXq\nzm4zhOKVZkDZ5eDinenKfywc306VIspv3bKd6irGVW5VPGh7hQx201+tMXZ0\ntoCGUPiMRnDqiDktrSaDT+LldJvri69ii3zeQWAmsTNbaAU833cubMyugSRY\nd9iOUEOSVFM2SIZVFfg/ibB9ayWSw5EPtf/Zq46zIOF8dJDaUMVa1nI/zdSQ\nu9leHWF+1eMZHAdNVAcJ+YmDVhjKjraQAs9SdKUg7I0YFHg3UbHaduZdGIpn\nmV9246ur9ifM1dEEoOAFr2wSyJUfK/qD3ZlIXRwvhuC4hHv/gdy2Yp822qrP\n0/y17utadRdINWnCKilSVoZlekyqBZX/iuxnsfB8AkJR0eQ8rrvQs4fuhp1m\nb7P1VKLS15JdoOiPMJ5U4CnBst1kP/zu6iF7LdqSZ+FNql4HBdjflc0ubXeP\niQlY\r\n=D08J\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB8IUloMVJDtOYwn5GPBB/LG6Ebl9e4lV3Z7HqMYnMjlAiEA55Q+hdECWOtwzqJnB82q3+mwHEIQi4e7OtMmNVKGKr0="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.4_1644218101308_0.3515918717803468"
      },
      "_hasShrinkwrap": false
    },
    "5.18.5": {
      "name": "cspell",
      "version": "5.18.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.18.5",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.18.5",
        "cspell-glob": "^5.18.5",
        "cspell-lib": "^5.18.5",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.0",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.18.5",
        "@cspell/cspell-types": "^5.18.5",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.4",
        "minimatch": "^4.1.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.67.2",
        "rollup-plugin-dts": "^4.1.0"
      },
      "gitHead": "bff6b01340bde5ca7a89860868e179592eaa7520",
      "_id": "cspell@5.18.5",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-rfk7sSZO304olxBXUFfec3YZL0gIyvjggwicGEgsweuh0Efdeq0zMmUV2sMckSOH9TVJdxW/DxTqjG+DLz8w+A==",
        "shasum": "944b27def0607d8938bcffeae6df38f60b26bf11",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.18.5.tgz",
        "fileCount": 74,
        "unpackedSize": 152981,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiC1xbCRA9TVsSAnZWagAAB1QP/0x8oa2UP4s3u0Tn+EGW\nNosK9PyAl3pT2wmgOEykG9FmonaVRr9yXKldpA1eBSEMruY7nSCYWF9W9vdi\n/zsOT6ywDX2NEBGc/FTY0QK/H53ZVJ25ptqBBGWk2dFNTp904M/fVgzuRv2e\nDr6l7QHuoCrP9nuwZkN9Y9pjIU0/QW2/RTM4PNedQiCyOKzOuPg75Qy2BSXE\n+mJZ77CaHqDpI3Y8UAnkT1iaZP8qJI8HidsBijPvE9BuIgPMxHAbpWBesbyg\ngLKZpcXYhwghfLgyVKFSEz2bhF6P5uPQhfzkRVM/YFfukc21H2idYmjYyyYK\n8a3ECdgeit62tLlKD+w1OaYi7xelkVY9AJ/RcbzzM42yZ8+B0Ap9Nci0+Co7\nrM6A6CaX7GfM6NWcTXMLBBbWZVlt47YFTYJS5248RGRNRBOwQhxm3TQ+S0+P\nc3iXuEaHOVv+UOeB8OWN2dqj4dG9rZKskFNKHR0KNukKJh1lpJnakBqwFj2y\nthoqUlS+ftYHp/0BDb/F0oWSuu6vRUOdBUteFPiGxKt9ogcjjs0OIDoFaaKt\nPg8dJGs13DsJJ257krA4tZDQwkrexI3Ld4d82PsNFrAhZr7B63nTYnrTS+LO\nBfuNk/wXohWI8cqmt//Z1H1H96nPVA87MQOgiJlQpM5lVJyDRf4GY3Bj1FaI\nLbOX\r\n=PCHL\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICunkbLrkcPRwtpoYSQrEeNnX3kNTCY1OqGBeTyBPjmkAiEAzLvTy7Xbb6/5xhcaqVs6Ddf1NJH3vzYNB1RSdQOKDWk="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.18.5_1644911707532_0.3369799581573658"
      },
      "_hasShrinkwrap": false
    },
    "5.19.0": {
      "name": "cspell",
      "version": "5.19.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.0",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.19.0",
        "cspell-glob": "^5.19.0",
        "cspell-lib": "^5.19.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.0",
        "@cspell/cspell-types": "^5.19.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.4",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.0",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "7873efe40a3287d3e025f705e1712c12d3cb392e",
      "_id": "cspell@5.19.0",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-13dB2WHkWYVh322dk3hmBiLTG93BOTkGFw/l5oCM6dKJgNmBFjnSmIVi0prGY3rSR6SKYHkKfIWK9RG0WouXsQ==",
        "shasum": "6db14ecb8ec61604335db39ede4c3ba97163ecf7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.0.tgz",
        "fileCount": 74,
        "unpackedSize": 155669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLDlHACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpVTw/5ANn2V50PySTjVBx7m2wbT7EdE+aP6YmX4oNgbxHkUsI/gyr1\r\nKVZn34oCHuelECD1mb1m01zNwZDXJqghqihoeNZRVdlbbRLnFwzqJzrt7AcU\r\noqapAu+ScyDVH6STs+5L3malbT0sD2v8u7t5zIjLEiw8cJryTsGNE86vwvyU\r\nYjvrG+8zBSLihvC//NktLdENsZLDN+q0eMqp4cuSm0DK0fbMbDQwm+YNcZbj\r\naCJAnMyysi8RkuN8sUtHmvlqZ3kON/V3t4QF1MnROd/QhDM0NiDJs+r0+Drh\r\nCCmCYgfApywAH2LNaN+6L5Ao6edPNkhVATECPKkHV4ScyCzFRh0fe5+dsTHu\r\nia+m8KnlHKNqkB5i+qOX4CD4E58d2ttDG7yTgdO+z4aUGmqXS/XRnLkBPvaw\r\n1d4DTOlaaGBbz6SW0IWKJdEGRw1aW4XwRWiS4mIg0JeNY2DIwc0NfYtakewK\r\nHwX4d2uccdgrHqAKQtC4tjmalJRv1OUGA7xgVgm0UqTMv+uPYf/9ca7Pjwxw\r\nwSk8m6iQsdPdXa+M74srIlue4wuAzS+6pfb8V+KNMjl0aS31Z+WHl/qxtBH8\r\nw51HYQnNG0qL2tBmph+5aEqBXgKGvrELo8MdTBjGH0cJrZkrjZ4ZCEqRKO/R\r\no0Of+dNSOgG4HVKESBK6ZCNP7n3R03N2BfI=\r\n=rLJb\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCy1rEvn0/VVVSXmMD2uQ5fjpOeC5E6GbmcrxeF8dLMrwIhAMZhGOsrseJeGVargIctiygMgJYdNsKmu6hZGmb/V5+0"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.0_1647065415486_0.9321626250202244"
      },
      "_hasShrinkwrap": false
    },
    "5.19.1": {
      "name": "cspell",
      "version": "5.19.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.1",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.19.1",
        "cspell-glob": "^5.19.1",
        "cspell-lib": "^5.19.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.1",
        "@cspell/cspell-types": "^5.19.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.4",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.0",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "622cd59a44bf1f76d538e3cf37983f387c5423e8",
      "_id": "cspell@5.19.1",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-vfBv2rZ8eAyqDXpqg2qt9nD1imgCuE6hOO68OkLOfVMdlKjmLwq9cmIzqJM3NKn79ljqaoSl3X9VSBHWYxGGzg==",
        "shasum": "3b337423914e53f827c9e99ef37944bb0a4773b9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.1.tgz",
        "fileCount": 74,
        "unpackedSize": 155669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLcV8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqY4RAAmJBPhtOsy3Z9ca8TsAlXodDvelRTskE3qB/XdJC7yo9VLPJW\r\nvdIRu5hBqMKg7wRnec9qVE+SkOTAvWRhB9XNwWzyKiM9WkDR9537TUyCdfzC\r\n11yWTa4kzEx+Ub8slwTgvZCfDXO0O04as8dKQibSOAwvi/Rk6YrDvq775FOU\r\nPy/Aj38dgXiuoFm+5B9tc5vhKMgVg218cAUxK9jU6O99ji9Zoc3ftsS4ou4H\r\ntEsuDxAiisTBNNQhNa+rdX6TqK2fW5UIYB/ysw1ELfhyhu99eH4ZvqnBbdEv\r\ndIUAIwRGlu0ASmziuPPe6Gi6X6mFnlUQaXsV9/dYGm0v/cvO5OH1E2qFyXJT\r\nJVXdo9m10r9tAWQjJsh89dAUFK5uM15XPL03U8XJnbxuJ1hZ15fDqp+y8oeJ\r\nBSlGh+130UyFImyrslcMt+wZMrWNeo4wmM9TOl59GwUUYba0A7uO74OBoe7I\r\niioE9zDeH58b4n3S50EcOx+xZt1VFNqst0GkCvuxQcopL0+FIONA9ubrA6Yt\r\nVHMQbu+EtdAUPj5y3xvq3ZFYo1c7fAhYqh61gdYcKJZ2PL4+40vfuA05P7eh\r\nHLRrxcA1Mr8D0kfDBweSHcBWHE9rtMJrSdJp+BEytoUK88HbwjPdMIgdnJip\r\nk+L4uSK8L9S7IM6KDjqjAyvtKReY5JdtTA0=\r\n=rtu5\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDdNsx+LW6rkXEbT6Z8hp2n6qvYpA4VlR4JDkxdX4jKeAIgVpOFFIlJsTWZUXK80UDntRcG7fSuVpuSKh+S+wlvScM="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.1_1647166844572_0.3967259247639976"
      },
      "_hasShrinkwrap": false
    },
    "5.19.2": {
      "name": "cspell",
      "version": "5.19.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.2",
        "chalk": "^4.1.2",
        "commander": "^9.0.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.19.2",
        "cspell-glob": "^5.19.2",
        "cspell-lib": "^5.19.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.2",
        "@cspell/cspell-types": "^5.19.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.4",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.0",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "6540cb9f716993c554dc50dd54dd76d553f8f5e4",
      "_id": "cspell@5.19.2",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-HqjwOZ5iJ4WBfl6TfQkGXax0uYVL3SI9XAsstFs7yQW+6/DwjgvR7GFTkGH+rZgN5hdGZPk81NYbfNLm0uyKCQ==",
        "shasum": "79de5ab9335b089058fb9765fbdf39aebade3aa7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.2.tgz",
        "fileCount": 74,
        "unpackedSize": 155669,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiLw4cACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmojLQ/9GbQs1Nud+B3ZaAh801FFtsh5XXEynEDnZQrMc20LoERi1m1G\r\n72YPyMp1O3v0ys1ycOmQFttj7rP8JayXu9T1zHlvWFeZrq03SEMOChTK8ba0\r\nu2D+xdlO0ekNPUrQ8Sin3/QibyJY5cYe1ZLXXKD68ydIeYHfhSP5LxFguvL0\r\ndGvaOX9LRUPkPdJHw+89j9T4GVgjabIu/DXRNKyVMf8xiYL1t9uaDa+yOIuF\r\ny9CKHLREgO6MGXhtG0hiitw134RypIkKF6Tmd+FNnQ6cQBofuawGa3u/QEYG\r\nDVyvufvdbKiTmnx+FD1ehYkLjnXKfjmT/OJAJOaOhAgQ9idzTozG7RREPUYr\r\nSPTYW+p1NWj5gdcnIOGpImikBvxYEN2Znmivb6ie6tLDkgborSopMgQ3WooN\r\nFVuEdaPch0GpZKUH6/PGRWitLxYDCQBDrxXr5KOhy0SBjJ3YXS7ylYG05tPU\r\ng2UAtpge0tsUZQNWmACs6t1+QWM/UFobW3e4180wuRRD1LybfOZR9vhKRn0K\r\nxM33a7EkVPs7s6qGuMmDYuhjsNu50hP17TJXd+MFeJeAXyqlJZ3Fdg+zUm6P\r\nBAd6Om8qZMCVtFLfYcbTCHBm0SuXvhhAGvqtS+/NSypF8cl54+pPD/QgXfK4\r\nJA6fcmOJkKPnRUGupbWs4KKyWemvXxgb2u4=\r\n=kYx2\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDCVJAh5ohGJE++iw1K/4MJdh0jtXddcdBQrHWvNk5SpAiEA6psyUgcMd0qiPVDU0lsjTb3Bc7TXejUHiMDiVVSP9Zg="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.2_1647250972399_0.28552840456813033"
      },
      "_hasShrinkwrap": false
    },
    "5.19.3": {
      "name": "cspell",
      "version": "5.19.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.3",
        "chalk": "^4.1.2",
        "commander": "^9.1.0",
        "comment-json": "^4.2.2",
        "cspell-gitignore": "^5.19.3",
        "cspell-glob": "^5.19.3",
        "cspell-lib": "^5.19.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.3",
        "@cspell/cspell-types": "^5.19.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.4",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.1",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "df43735d8f85fddbbd0befca7d98956f50474ce7",
      "_id": "cspell@5.19.3",
      "_nodeVersion": "16.13.1",
      "_npmVersion": "lerna/4.0.0/node@v16.13.1+x64 (darwin)",
      "dist": {
        "integrity": "sha512-JJBH8iqtHYmxqLQZ+7GAMTVvc6SAoHVgn1tdYknOI2/uxAbZVH29eaxINY7JfjwPuxPPVAvttRetBAIRiu6ZYw==",
        "shasum": "0f2c6cf529fb3f0b721b380f81b04e9c22272c05",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.3.tgz",
        "fileCount": 74,
        "unpackedSize": 155999,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiPBf3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrqLQ//Ym6XfA9ehNwjo7Lt1H9Jyn2J40SvmFwtRiUVG/iBg8mHH3Ep\r\n5WGxvYXY8RgarlOtz3nDG7lmLfmSUoFWJQC773vg3yXBhKFOkw3F1mf2/uCl\r\nMjMadpLJaCBV1VU0GM8qBVLUNXi5LmSFGBDvoyWl68K6JHPkggkWetRNkUGc\r\nU2l4tsYYLwRSMfzZNDZuuK0zpBYKxSqugj67WJynIjO7J+P22OFxmJIapaMC\r\nu7rrBbWxLlHimsM0B3D85hIUnOfy2SMpZsgxRWkVToH2Oufhsi6i0nmiJxwd\r\nSb2QYTD55ZER3yVVJp4rSgTl3dL4BcG/4fGQjolmTzO+s5o49AfRVGYDm4Gq\r\n/lZ7jmDw4jn38LEBxtXQgvEjtk8IOCeTso9k9MRQ0G9V5OlpUmV7Sa7iEFBA\r\niAlA4o1DyWTpPPNHu4SRup4BxMHZN+DsIGCaCw52pM6jiv9q2FwDwB+l5vT/\r\n6994dWzCaSm1TB09gXUSiYp+As2vuMq7Iv4FMsQO7RgmW3gaucZoFtFZLrJ4\r\n0K7XRvMHE0DXSvAg6NlL5CBCYJ5Hys05CH9FXuZI6yRmYTB6kje4KWHbbZFs\r\n0v0jeTtzrpW5bgPdFS+zvWbTBQ9TTCnQl7tV+igzjJ9r33qN0QtMN4qfZAd9\r\ng9RCvXQK27BLht+tLn3m+irFYgsyejFP2bo=\r\n=zD+n\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD7LV0ioe92e2nE4ICuN7ALEdPZSQ1iWiIE3NKsitxkaAIgIYjSbcv0qcmMTk2ct8Ww1V8YO0Fpv4AcIVx6kaNseJ8="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.3_1648105462865_0.024931508617872744"
      },
      "_hasShrinkwrap": false
    },
    "5.19.4": {
      "name": "cspell",
      "version": "5.19.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.4",
        "chalk": "^4.1.2",
        "commander": "^9.1.0",
        "cspell-gitignore": "^5.19.4",
        "cspell-glob": "^5.19.4",
        "cspell-lib": "^5.19.4",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.4",
        "@cspell/cspell-types": "^5.19.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.1",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "9f7e77c95eb1e8fabf53c5b74b7418b2d114ef02",
      "_id": "cspell@5.19.4",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-3zaofiiWwkv/Q4D0OEBfPWinQXoYS92XBcovlCK5VtLvm9A6r/Vqf39z/h7ciqHWvCbiTsvqvaTClnzjSCULXQ==",
        "shasum": "744a40d87fe1383e405a528f075bfba5067f60f9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.4.tgz",
        "fileCount": 74,
        "unpackedSize": 156012,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEZzx6zENBhIGOl7MnYZB3scfDrLeQIWqMJUHG+Db/ZlAiBSLyPraZagY8Y3/d4II/M/9vzzWUs6SGtZYCmKJE032Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRrYAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpMSA/+OygF8crV99iRFc32E/A0z5XG5Ka2YakM+NfmOscXjR5m075c\r\nNqt+GOX9Pg7qcYw71887cnwSPixvHBBDv2xG6y3fe6xkhE8BKdZYf2wgKs3o\r\nwvRJ+VuKsFPkEdei75qkij/9swcJMHunG8gX9efyXhpHCGgdZ7Me5bCSpRDt\r\n9yNzrMDnZNDIRi2SW24NY6SQGBpLfo94pJH3I5XckRQqnbiyD6C4N4EnBgZI\r\nNF9yIzqKYdoLYTK99/jNuuoAG/2yHuk/1m5LC8FZWQbAIPyQ0NlxFN+K+T+e\r\nbmYn6i0qmRaLU0dCLQ2COrOZ5BTyErIJqaHgU6d7hazGhk7HZF+CL+u5VT76\r\nXBPe/KYg1RNKW9/064OTu0s+9zTviJlgD6piNCZNUHr1tR10Lvet++EAjlQ3\r\nO2E50Ccy5YcmLn4XQwCzr+zOiL03mYmRrSZ+tdJswGV5dSu4P9tPr8wWhWum\r\nNamcP1SBNsiUHsk65BnMJJaxyPevMtmvJAHsVTq5uroJVK+CZNIiuIFnyA02\r\nlQD17lKteCjKsNnb2FE001OdDgBQ3BEWh/uC/MhaehxFUBIM9RAJriKph+Br\r\n5t++IVwWTS6qr5pgYa2ZraktREmEi/ji4/x1NL7vUVzp9j+2raV6TCq5tEQZ\r\ngB1O76GpS3R7E4UUtE749dZdTrXbeZNCNL8=\r\n=F4qP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.4_1648801280205_0.7840763330972103"
      },
      "_hasShrinkwrap": false
    },
    "5.19.5": {
      "name": "cspell",
      "version": "5.19.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.5",
        "chalk": "^4.1.2",
        "commander": "^9.1.0",
        "cspell-gitignore": "^5.19.5",
        "cspell-glob": "^5.19.5",
        "cspell-lib": "^5.19.5",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.5",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.5",
        "@cspell/cspell-types": "^5.19.5",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.1",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "0d113f01b51c3bc149a01269878d4217a58ecb97",
      "_id": "cspell@5.19.5",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-LFKWBBOY6s1SYJcMlWmFP2ml3kxgzUcUCOY4JYDCAzA088gbBEiSN8sM0X6MhobsMJx4MchxjwveXFRP+1umyA==",
        "shasum": "5f3bad212d11509534982a1d64c6bf6592be2ee8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.5.tgz",
        "fileCount": 74,
        "unpackedSize": 157824,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDcJ6hTqgPGixX1GPevJQxVZ5dzaWdKOQQSBERKFgIitwIhAMIuixNlDxoi/15snRNnkzt70c1/HoCQhFfhWwYsaiB1"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiRyXxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp+LA/9FaiAV5jVUo1z9IOiirF03zBtk2/pzlMPSminHpGs1tK7k3wN\r\nsaL9wn/m5ZLeIN5Y0B2ja9yNT5WFWH9MtoBdttBfR7ddbZprwPLpBsxynKz0\r\nfrFarsZenWKyTKHfk+xatZHO2vraF0ycJAq41tT7R9pNAOuj6pQlEX8upCZb\r\nPKk23Mg4CF+4yQUhXbSXI1mHrN4VRsrbmBnMnhhLQGguzKjueU9Bb/ALezZm\r\nYs4Wd2JTnhX8rsD4n7kfWrTEanMcycepEqjIpqfcec5Kgj+1RTqsuz+CJ6z2\r\nlxNhK/fvJcluhkikni0NzpycG9XatCdImqOWJpaSCaHzeIznq/2VGz+tT5il\r\nA0Fpc3l9/xh529reRQ0Co+SFdBWt0Gd/uxe/snREgeVWZNCdTXYm9aXYeDMl\r\nTYklozoqbLEwSDbv1us2aKxFG0gMOL4E5/V5Ch/FijIAJ4J+eHRZsFFsSH5D\r\n5Y3wOUMhi9E4YjdoxHypHPQIgmYfLBitEfcixCdGjd+u+T8C5tqEN8NGZPHy\r\n/on4Qayl+I4OnAu7bbiG9vWkQEy0svgNOaNTAEAuGKYSUa0H3T+7qOzVcH0E\r\n5p8a+MVr5C3mXQ7aQ+95+WjOGt2vAdDvZXQtwwW0AkoyyFmLanzSk+vgaNY/\r\nGwvgA3gG3kS/ampOgYZNTQLMEE2yusRLrQE=\r\n=OG9o\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.5_1648829937324_0.5373877271896654"
      },
      "_hasShrinkwrap": false
    },
    "5.19.6": {
      "name": "cspell",
      "version": "5.19.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.6",
        "chalk": "^4.1.2",
        "commander": "^9.1.0",
        "cspell-gitignore": "^5.19.6",
        "cspell-glob": "^5.19.6",
        "cspell-lib": "^5.19.6",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.6",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.6",
        "@cspell/cspell-types": "^5.19.6",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.1",
        "rollup-plugin-dts": "^4.2.0"
      },
      "gitHead": "288584aa11eb262dab45201824c90206d7db65c3",
      "_id": "cspell@5.19.6",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-oEKyQSkYOO34VldGZ/0+u+IrJWZvsyosize9VSz6Wz/wbp/k4KdFy9oA/u4bZlYa5S4v/CgIGpWK26agcveHUg==",
        "shasum": "8f68ab2a0569110630d1e0f74e8782fd947f1900",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.6.tgz",
        "fileCount": 72,
        "unpackedSize": 164952,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCID5SYxgYPWtejWrdN7G2YjvsI6B/dQRQpH6gGKONu6DwAiEA6nYLOuC0rzajMkCyIEDJEGnYqEL9+3guPJdzfwTqgiY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUEBkACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4Hw/8DkCrTrzYQfHyVF+1sZSnBvungO6arVdkdcRH64Yu2eap1Etr\r\ntiLOWdAtQK/XSGqIfMg6oU87kNv0Xr5JZ6jU5fHQ99xF2F3SYFZXn4Bjd6Fl\r\nDV/NfY59SH3wWjRasnDO284lJwQccZoj7nMroTbF5DcGxahNKDhE0RbGeUMU\r\nZ1MyyGti+eWg4hLIA018dNq1xpnnpUx/1boAK4ljh7RSuDgF35VTqoCrGZcx\r\nD1KEbyqM9K/gY46Rl2rocDxaGenlFKasmoNqSoFr3CXPaFHzQbaQFHlcRE+2\r\n8gmc1CJ1Lghn1NBuqKzEZUocWL6F9tLzgEVUvGxTnq99koxfQRtI7cdOcX7G\r\na9xJGvi+LVi6aB0xu9StUGh3htspxVjwnKdK38lmbdIwrz9W5PJuwelivhj7\r\n4JUoFAChe0IYFqApS6lcAQ8SHrj+po8dGKdIUJG2vFaVeTdznG9c/a91amav\r\nH9AXxM5W9FMAqNT9JXo5h3ZAPESKTD/sa06NMjOXbQCZPBNNAld72XRag2Pw\r\n2jT5uiLml4+ak8R4zt5Hojp753LcN5UEPIE/C6Zd5LZivosZ+eTkrtbnmxhS\r\ncgeO4+M/ROiAAPu3jOw6wOibSGvGZV2Y3y6l1WuRHxq1QUQhIlEuQsYswUvA\r\nGr7nFIMOH7zBIGXshgs74g+QWjO1sp+Gee0=\r\n=7PCQ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.6_1649426532445_0.12243128759499311"
      },
      "_hasShrinkwrap": false
    },
    "5.19.7": {
      "name": "cspell",
      "version": "5.19.7",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.19.7",
        "chalk": "^4.1.2",
        "commander": "^9.1.0",
        "cspell-gitignore": "^5.19.7",
        "cspell-glob": "^5.19.7",
        "cspell-lib": "^5.19.7",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.0.1",
        "get-stdin": "^8.0.0",
        "glob": "^7.2.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.6",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.19.7",
        "@cspell/cspell-types": "^5.19.7",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.70.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "1d33cd1b61250f8c4c5c2c218ec43675614784ca",
      "_id": "cspell@5.19.7",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-7/y+k708tv68+5lpN23Ew1/djx/EnG838zZ8W2ZDWCc6uRHutqRhpxsjMZr/MT3RHN44iKUj2MgT5+sfnhr4eg==",
        "shasum": "4f6c6ff8baac1f3ace6693c63280a3b7a6b669ff",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.19.7.tgz",
        "fileCount": 72,
        "unpackedSize": 166796,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGjJUXj+nMt/nLto0/W7jBC/lFaI9KOciq1V8Po4xeopAiASAPGTqOH2iCN87y9PW1vp7r38Oz5OoQ328rmU3BYmmA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiUSDlACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr4KBAAofopk/JYe5l+Nx+PrKn4YH9jUTIthsLTKYh7vyXFtWaTLH18\r\n6GIfP4Pd+BLiKVHYMKLrN8ZdRcYWnG9WmmQp3LPRuAbzj2RLQCB6l5eJFOPk\r\nBrB9BehO2P3VRG2vaZNXsCY/IoPf9trmXew33Xw5+ATNbcFt8/Pe5sZdwBnv\r\neq2LoOBn4lQSMWr7cbFo/lXPrxCFakLTq1WjV84yOmmBvagpr0PbdNB58+SQ\r\nn9LOSb1fjTIqa6psn5LuLaWfave9KYygwTVErrgUQuc6Rr4ffl2JyZ1/NlmC\r\nHHQ/jhVFyhSSDz8neSOsClF93Zdd3xxVPwtDnlWHVLCiip8UAsHKdjYegfN7\r\nLGzY6lI09Q9NVfbzVbgw0QIymO+PZefFv/QisOszOwwzd5Y9Krn8jK5pR5Wl\r\nwFMa15BxI3y+2MIvlrqOZT6Z73L0ZvXpK4A7t+2VcoRhLbau/mzBBgw4eLUx\r\nsrc0FPlKIr7GLVhspSr0Lf0yXqBdNukgag4KU/rL/2Y7vkW7ucO55okU6f30\r\ndxiXbxOcmX/yoTKgB2e5QgfHOcTSBFENblUITmAb7sNMD+iaEEXDAz3boKZy\r\nCXKFyJt7P3rlMiahAVIdmqIbFkruCIxZ1Cra2TVMOT6TPfoJSFv3e5HW4MT+\r\ngdv2WHxM3QXUink+d3n4shJ3Dhp8cL0yaqg=\r\n=wbLq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.19.7_1649484005359_0.3072193922178368"
      },
      "_hasShrinkwrap": false
    },
    "5.20.0": {
      "name": "cspell",
      "version": "5.20.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.20.0",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^5.20.0",
        "cspell-glob": "^5.20.0",
        "cspell-lib": "^5.20.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.1",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.20.0",
        "@cspell/cspell-types": "^5.20.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^27.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.0.1",
        "rimraf": "^3.0.2",
        "rollup": "^2.71.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "626dd9068d625c2100dee6a3fef4dea95ae83376",
      "_id": "cspell@5.20.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-lXAS14ZlfJfOI3FgoAAfyl/AlTB8T+ayHmKrHxwuRRUvN4IBT4y8d7tdjWDj7/bsM4u5M5WrlAXg6vXH3Fg5bA==",
        "shasum": "580909fc1283aeda43f1c583188ea046417d340b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.20.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166796,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAKB835v9gwj7DXuCrIQm5aFy/H2iDH7bRt8myfHu/BGAiBT5Qz5y+aG8D4bcr3zPo2ra+1FGsmIGmCys6E0PN/Mvg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJib8W5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+ZA/+P0Pp7dkavLR+7X4Hm0wxrV1w3syoJuv7olkJ73HNa4yNh3Yh\r\nLfnbab5A2cWMQSI0YdeBU92FJQU8J6FzO/QLypJv5M0mulduyxhEMEdiK13a\r\nLbwYxk98zZ1GTdggJritgGrptLvWYeHUVUPCW573+wsXzwrN3oIFBDTZVI7I\r\nMHYS0bzrL6f6v3gs6RRPq6Cz0fI1+UocIb+xWPSp5D6VLWfArLEXQVQnujCq\r\nwWq7GhULFx2Q6sDxdhiqiYDHRua/yFoa3xz49qDDkJtqTPcxHqn+Ht5JtiOA\r\ncGRz/W9JC44glvfTdnny3fEnNyBP7/bMArObJCiYWSlfqq0C40LyAbRJKNRw\r\nOiRA/EGPRgW0a4bD0D3rcFN8XuDdAZ8IHnSMIXcemCjH5x0MoAzVIYh7b0gI\r\nLlxgeJ8UJ5xxTq82jhhe8+x2cZGACMy9QGIsSJDHHuA7dauDEi/IJrb5pmVp\r\nXSE3gA7YqY5eNzWc7XW87hW0Gv6+1D1bVBxMlBP1JlNaIB+7/saL/LNb8jzQ\r\nZMF6U/W1QhUtpKozwoMLD4BpmWw6T8LLvw2ZhejN00yaqEBP/daMDfZUXCFT\r\nLXiOBPo/lvhVi3OsxpUldW7yTyhEcDYa/AGszMhww3a6iBr0wJGBhBAAgDxK\r\nRd2QGD8BRG61CT6gL347e0f7putfPuXN3fw=\r\n=Em+Q\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.20.0_1651492281642_0.009121080917357638"
      },
      "_hasShrinkwrap": false
    },
    "5.21.0": {
      "name": "cspell",
      "version": "5.21.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.21.0",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^5.21.0",
        "cspell-glob": "^5.21.0",
        "cspell-lib": "^5.21.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.21.0",
        "@cspell/cspell-types": "^5.21.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.73.0",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "d0758cb805404cb62b7a0c6c852c337f2122ead0",
      "_id": "cspell@5.21.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-MuEB6kKBgGaOAkG9Sp3Hen1zdctgLJ4sNms/m+djFl8unc+iK8p71qyYnOZ4aBAXtTXQNMF1xEXOt0L3JEj71g==",
        "shasum": "baa2abd59888d59bfa854ff745fa1e9774ffd5d9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.21.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166796,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA3gI/aYmdVPzP5jI6VJKHuhqYlmrOtpc98k1VEvZctmAiEA/iAtc2B74H96SmmAkAFcyK45LKS35ptb+AodOHLB0EQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigzxOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrozBAAmwnBNgBkpWEv35Ptm0oC+8hvkbSc7tthBvqvIM89VMS5yknd\r\nbsM+Z2iD20OuaoQgM+85IhPBT7zY3mq6tEnwmM1NdLYnNwYDNV/l3o1+vQFD\r\nY54bBWxqrkdfNxCpQVbQBwp1A7uyWGbmLhENteZcus3+hHP5qyAhBg0Cb3mt\r\nMCGAHw14m1juICjVMKRSPbrn4cEljNsWKgulhzQZmLUOuh89Nclw8JrURe0F\r\nmA6LOkCQl3HyrCjZfRhEOJM/3mKFJ2oj4V+f/RUhNutF8aOkSSLlDXiSlHwz\r\nnx6PTXb5RR4W36uhCfoBoBmeOC2pXkBOWFqSLQEKrKKuXJ35rJpGxFoReIYE\r\nbGjicssBShKZikyshVgBS7wpP2fmYYXmItj5AnWW0pcteHL6xEs9rvPWDNWs\r\nWprGqzxSjN+a6KIYW7LRczEAxAcY4KG0dfxNYRl1SljxymN1EnadeDnGd7PS\r\ncZKakV9V9jd9IRiWmzzILP6EELcSk/kpat/k9sZR5pUNEwGzzmGROOrR9wZd\r\nEA5NVL4/t5mSLJFOzsiSNy3ZSaM4uh6P9u5OVVZBBkeN3WQIQSWaU86110z5\r\nJj9OWz4LvGBt96NgdJ5xFOoF/PXE8ZpS702VCdxbg6GrTYKWPXEMBCHkaxKJ\r\nEIAtkK5GrCQ6KgoEMHjEhLFEJp6aeRbTVRI=\r\n=VQsA\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.21.0_1652767821854_0.027120163785470552"
      },
      "_hasShrinkwrap": false
    },
    "5.21.1": {
      "name": "cspell",
      "version": "5.21.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.21.1",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^5.21.1",
        "cspell-glob": "^5.21.1",
        "cspell-lib": "^5.21.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.21.1",
        "@cspell/cspell-types": "^5.21.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.74.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "952246f8af4b7a559e5f94185414254558965e7f",
      "_id": "cspell@5.21.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-R5I3QwohSkhclfZSCMvTbGb9zZHyZRno4pnUtEN5cVkUXfHHg751rZwO+zUwQcG7mLGHwU6iBNs5kAgH0UxISw==",
        "shasum": "2c4285005a8082dd844302074efd0c3dce879fd2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.21.1.tgz",
        "fileCount": 72,
        "unpackedSize": 166796,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCmycQ3eBNjTJTPP6yTugfUPi1YThuxTqi5OX3woPYrsgIgEQ1OxUFgsNhBnY2Sw7SJEh8dDtxXoVKzAcqLnt44TKs="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJih5z2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo4zg//ZPWHR7jGk3f2m8kGcZDmkQvfQ1hUeuBLrwo4tiVRc12UqH6O\r\nkqTK+shaLJ17ysSdDvARb2LE/KsnvIr19PXv01sFsXDZeNEVx+ja71KwmJpe\r\n2yJw+vaVGIESoJz1kChoFD4uEf5au9yrgdoAbJboUr8zvawU0YVVeuco1jW/\r\nJoU83curbUdvZMUCKqV7j+HbhgRT+GYIDePk52p3edd+5audrhkhayAQ19Gv\r\n9nCr9lqRiqQLdYaOB4GziyWf7WoF/NDGCNp5m2HkfPNUJ6MUYbUgjCQ965Bb\r\n3Z8J5o4cqrsOKQbPPoxD7DmOvqWTghEP3xoH81BZ/RiX4TRc0v08/YLyTI+N\r\ncvRY0z6lChot/hr9D8EFcU5NdQrcUa2nIV42/NIlj1VpyJk1JjLMDMbeDCoE\r\nt28mjvhrrCKntRSLqWPXaVZhEtApmhpyzmHatM1nK7j9rSn4QH1u7uKB8sXT\r\ne8tuW9fdQ13QYsv7BAO4pp57BbhGJc2uS1u93ghwNZlRLgg/ym9bxBHHD+pT\r\nNQ6SDVt44N2Vq74vbH7ln3Z6aYROBvznoiwaTZ0HaGj1vPtsOA8E3nLPWi35\r\nkwI73gwiWpden8H4mJ8b1DEJWbPkFqLhfjnbkVU+g8S4cSU9QqciFd6DGJpU\r\nmhD7dBKFZHx2w4mHNur20nUaW0yRSxrqdeA=\r\n=qfcQ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.21.1_1653054710548_0.32970907389193815"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0-alpha.0": {
      "name": "cspell",
      "version": "6.0.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.0.0-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^6.0.0-alpha.0",
        "cspell-glob": "^6.0.0-alpha.0",
        "cspell-lib": "^6.0.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.0.0-alpha.0",
        "@cspell/cspell-types": "^6.0.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.74.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "e97e61a1e1f0aed0291d62852c14b3d9d0afa443",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.0.0-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-2O3dp/VsHAXxZ61fSTwAjiTy4QZgFDz4iyld18HnBzyObmv/YNZxFJ0Qjcf6ywHnRyxZdMFzgxWzuf5Jq0laIQ==",
        "shasum": "110ecd5f496facc595437897c63ed3d0c22a59dc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.0.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166845,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC3aGGgN1bDHSU96M0H3+iRXsePid2R9+3DV4lKlKqUmQIhALVxROGrbi3DfPVt1o39y0rOOX/NOlDzMgq5CHTmJcyA"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJih6dmACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoxCg//ZSZ1t6QTiLAkAwjiVNl4iIMKy4a5QiLIEWjubs4TXNgJVpC6\r\nLXZ0DRYLwO8ZvfWutdRtN9tNBvdaD+U4oe+kMh5JiZ26g++3JWy7y9xb8oex\r\nW2zXXGG7MHisxwrcKxEFfTHGZPerb1xs6nhFJS1mh/Dzjf50GrVt3QR9Ve8w\r\nGeCnXjGEgv4aXpkl2dwXOJpQ28B6QR3PLk45I0/0T+gXRulqqlkd6qPYYTEY\r\nrZjv3TfkwO0icCYyqTeYIr2QRZ++8uXexrSWpO7DCj/iF+YqOCHQ5XGwh743\r\nO3LJ9S41jE7CLGVsKNAEPrhCrgtgNZWVsNJvJ2Fve/RMzziTI2VdbxK4pOLw\r\nT3L38JsCg3/aaFy3Z7tgf08K5SXbDOKVQNIZAaTP6FDY/4AOyjEvsoVcLepL\r\nCRIPR+oT1tjUJxQe7E/Xl7IDb/K9VnuTW2RImDNfasWu65ZuWKFGibPGOvhm\r\nnS0CxMQZrsisFQpGp9qeuDD8LGoBQkOLn2Iax1WGyVkU23ZJsAFWvWpbXVSJ\r\nWoQWRR0d6sJwbSx7fFig/Ly3j24Kj1SwPG6Ghgc/SpDn28Ih9xoMONg6EHi/\r\n2QwYKS3vXKD/cxm4Jj1C75xPityk8CxaejEEQtnUaQcTZUtPb+nnF5+LUiGn\r\nDCM7WnDi0fUEfSrksvyWDoMZrtrsEnuLqSY=\r\n=/bv5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.0.0-alpha.0_1653057381811_0.41418055901788553"
      },
      "_hasShrinkwrap": false
    },
    "5.21.2-alpha.0": {
      "name": "cspell",
      "version": "5.21.2-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.21.2-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^5.21.2-alpha.0",
        "cspell-glob": "^5.21.2-alpha.0",
        "cspell-lib": "^5.21.2-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.21.2-alpha.0",
        "@cspell/cspell-types": "^5.21.2-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.74.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "7612e2b3b263fdc56d4187bfcd1c68c126fa5c82",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.21.2-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-TCUDcj+6c/Yb/xOoQ9cLxF4X1qPENcfV44r4aI0i7UUuJfq9QBAvlmwyD9jgXgpf14wNdgD7Xc+MAMSGCYzxYQ==",
        "shasum": "9aae807f968e3c03d500b1ce2bca99680f90162a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.21.2-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166852,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFHZIL9w9jYzeLe4Vw4UwE1H7fzcDSZC7v0/15LfGalpAiEAwAVs2tDkClr+OPf0pkSPkyduFASeETlTtL6O9nbbPek="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJih9+kACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmphFw/9F2BbsZbTrn3hVgiEnY0zaywHG4b3MGSDXRIMVH3WLR27QFUR\r\nZF8YjKEp11WMOuzLWWPo7mtQcU7g+6ZXTnOhTphHe5jWObqhD6OPm9SShh6Y\r\n3tJBBZCnhZUy4i9yy7isR3yY8mTjhFCuCvDzB6StWl9MfLz8ZXNjFMZBk9Yp\r\n1Fj0XL7vdfEn4ueKBArsjYJQ4/2kIkhUcTBPs6nDrI7XzxgeYMESCfiZ6BkH\r\nY9tIiE6xRVyDxdumH1zo3RC3otKrovp1gmeBRhoR2h8wS5fFH99za6E0Vwid\r\n2wrABdS9lrYmS7t2/FqC+Tm0UYBYrSguhL04Nie5XmAf9X+HF6aEocPh03HL\r\nVxabfd3c/cg18dnfITCo3yTOZ6zb0bZS++u3AxgPEYzGU920IGHxxFRT4EeY\r\nkFPu0th0KnIyl5YB38Oy98nGbXvedw83wE3KdlxadQkcP2d20ypPNMigFQUn\r\nNXzoK8hAxADNvA4us24f0FsYESvcp1MjLgWvAdih1ws+4MkzeLgyIN34e43H\r\nxdTd7sMfHpEmsBfl9D7EmvekTAJO8yvduIPXLCMsV97jKGZN4Ca8T9bhZUhE\r\nWuiy21rUuqvMGKqj8e+kuLw6DHKYN/6QuiAV0W5JA5pXAUfR1uHKLehKjrHJ\r\naTo0h1JqbVcpDrYp3uyNpz/MUD+BbpvXbv4=\r\n=oP/0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.21.2-alpha.0_1653071780210_0.24663718878067464"
      },
      "_hasShrinkwrap": false
    },
    "6.0.0": {
      "name": "cspell",
      "version": "6.0.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.0.0",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^6.0.0",
        "cspell-glob": "^6.0.0",
        "cspell-lib": "^6.0.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.0.0",
        "@cspell/cspell-types": "^6.0.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.74.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "7fd3e4ff8738a84d0aa48b9a9d4581b5efe50bea",
      "_id": "cspell@6.0.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-skfNomVlYXGOe4C9wz0O/B8VlZc9GzpW5QDFHaRMYwWEtuyitN5WevuPMc9bkWbVKV8ghn1sXehBzy85V5PXIQ==",
        "shasum": "358da651b061f25f94e52bb1ceae6bfc49c801ba",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.0.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166784,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC9F+goLzUFmPKC80TVHyF3RRKfxL5fNgyApXybw3FtMgIhALF3p31J2lo8/aQumwR3e4x14xOja9Z+eTu/aX3crlvN"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiiNdFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpt+hAAo+u9h/w0q25XIoAz3SWE4kOwAFBMH3c3zODeaFsXpXh2Sn4K\r\nYp7AunMZAI8JaeJDvWKMnZTixT6tAiIIUqnK0IiR8BUhwUOVGBzUkqjKDlLD\r\nnW5Qr3FqekHGoZ6BwwdFYYLqOdbO81uZp64mnKIy2SkDkZf3WqSp3yubahlR\r\nNcq7iyAtTshxyTvOcQil6lKq11vrH6wvucPxeTscBX4dR3OU5YGKtEk/VD9p\r\n0AvdTGm3OXqEFHD2LZ/IyGWXr51zmVIG8T1RMnDM29BgBny12tM1fO1/jVWg\r\nDTdDx4KJVutI7KAbYrtyrZF+UOH/upjNH5quG8YZ7fAzOz6IgdoBC/oYBxLb\r\nf05ab7+TJqJYw1u4CqXUXET7KlQQ9oegL4Blr0+Oe/00ILF1474B2L269Tq1\r\nhPRKywgMiRMIkjL1uWBL2fV9JdOaiBIjFCj5cQcNzkmkxHL+TcqF3tE4aZkF\r\nls/B7WkkqTUgYTQPfFdAAdjLwAqBuH8q69sPgVTxGkm5FyUUATiylezRaAtN\r\nKIi67SwA14vbc6ekSEy2aTlcgzz6O+uaHaSHkSUL7r/UBviCPkVpFBpNgiaG\r\nRffJpp2i0IogM1SLumb8DwvV1irp/ECz3es7OxYT/NReKKmO79nlt1RrkC+3\r\nAvRxMZ0SjK8aLdyTi4RwcLM7WqnlsYcBmlI=\r\n=vJRl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.0.0_1653135173189_0.8748103169762764"
      },
      "_hasShrinkwrap": false
    },
    "5.21.2": {
      "name": "cspell",
      "version": "5.21.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^5.21.2",
        "chalk": "^4.1.2",
        "commander": "^9.2.0",
        "cspell-gitignore": "^5.21.2",
        "cspell-glob": "^5.21.2",
        "cspell-lib": "^5.21.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=12.13.0"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^5.21.2",
        "@cspell/cspell-types": "^5.21.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.74.1",
        "rollup-plugin-dts": "^4.2.1"
      },
      "gitHead": "ce422e9d62a5fbad056c4f82aafcbf98c6a86677",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@5.21.2",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/4.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-yG14BUumeIcsuSEcM//+9XpbUR6a6FlAxfaVI4e5t6ZZE5tPgDE0PNIVr/jAiLPVm9qUfnq+oNdZE8wmVUbMzw==",
        "shasum": "3b147ba49ecdbaa8818d638b71ef142e15ccf303",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-5.21.2.tgz",
        "fileCount": 72,
        "unpackedSize": 166796,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBaQbTYukvaXwfIUnwnIMepadj/OoXJQ4JMVyKBjNtGqAiAFIq/XPlaZ1MoHzrtXR5QI9ykhqcRW5+cI7B3OpTccmA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiiTWOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrOpw/8CzOZm9JHUFBrGpkB+EdRQnxF1x0xSpD5bvPJFfriGzTTy8oc\r\ntpLyYTqH+QA9hCYVTUoLXVRoLD1Kc9cdbEvMZSgZPqAk/tZIDqzlTWCasHLZ\r\nX0x8kOfTnPaEisNxwKlfELhcEMSR8iN/hn2XiVgC/aI8tmThr3tksVTdRZwR\r\nr9uAjQ++JRkizIE66VDnpNSMPbC0P5YoJ2Imo18Z77woxZaksYWbwLx0wh2R\r\n1RtxGicv+eMeHSUhA+JB6HddZfxD9xWJEooEUN3Qt7e0z3+E9R/bQtUprcqG\r\nwTQPoCoCAvocVvDvFODuhcifyKN6JevUJinjf5iUPjQHKU6hChTiyvkZw1iF\r\n+aY+ZQaJ2o3cfQX+5OfZfYFMcdBK71EJS23dlVmgKYOV0yu+wPynKIzg6JM4\r\nmJRbAWv+gIsQao7Ng9jR4XKNSOcU4GC+aONj+I0lY/HJmCW7GkoUmP4904h5\r\nHlUAfappnPW9CeExTFLhqD/gug072KWcydpK5nolWF2T97IVp2XtFQsIo1Wd\r\nflkKbSKldukdT/nt+cSrN6L6+Mc58LWh3/hILcz0FH6BruN2z8bUUJP2HV5c\r\nz2hAlOcEQ2K+P3Cfgm3tn9AWnJggi7HgRBpslaqiZa22ejaJAPpyVHn3KnGo\r\niNFfIkMEDyOkwUuPhdK/OlIQGx0dltfcwpM=\r\n=7cj1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_5.21.2_1653159310705_0.9803753436226401"
      },
      "_hasShrinkwrap": false
    },
    "6.1.0-alpha.0": {
      "name": "cspell",
      "version": "6.1.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.0-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.0-alpha.0",
        "cspell-glob": "^6.1.0-alpha.0",
        "cspell-lib": "^6.1.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.0-alpha.0",
        "@cspell/cspell-types": "^6.1.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "67ce60164435b86840b37ab7584e98083af58c9c",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.1.0-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-fjEMrkuCi0dTk4YsqdoVf+Z5NV1fsI0a8lF2cHvR+Sx64440NH0kDKrMZC2lThMGOmG2Th+uob8lBFCt8ngbUA==",
        "shasum": "8948dd6d3576e44ce825578443dd922b6e3de1b8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166840,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDC6bWCxsXLvUuehhmLSaDsnZ4JR6cE5D3qjY6dBZjSKwIgdF0KSD4qaLP0TSvDgn+E0U7CjYZ7TZsSW7uMCHHK6FM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJikgxyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmot+Q//SSGb/rbnqVJZhyEVyuk8pDy36ox2WISiQt9e9fI1MKLS2U0k\r\nxUpfT97GXpWoWc5xXhlqHtigBNPfY/w6Fw0jtBQm5DsgnvtWyCJ/luFzkdO7\r\nZGYMQ/fkLJkQZfjrqGMcp/36Aw0bcDnKVJMmZfoswNd+ojfLd+LcVCqxnij0\r\nHrwR81PkdzPVg8luert6q6IH76rnV2jh4XUvJRilyqegoO0QCUF+Wrk/8Wdz\r\nBsfLSnU97fEcrUSraYNlHKBc7Pziom/NgzuXgeCkVdQI1/+4hvJt/xHq08gB\r\n/nmViNMHvg+lpyIb1k0WXZx+GOhYbX2ijim1drji2ekPqAXg1xL7f75zheW1\r\ndgSJHMru019w3ex6MpD+/PjXvUP8rxAMGxUS4x460o6pwjuK0cJiP/UYikVi\r\n3q2RUXERIfXqhlYw96YSB9oLTzet1s38ugfpyUUz7gHh1k54EUCqtJL7ot3Z\r\nbBfAHxDyVTwUx9fhqQgTG11zEBqj9TA5zSVggCNWQbfag2kY35pz9V6lYUV2\r\nrtA53qITHUdM9224VyZV0TFB+IHzX4AA9+8tbh9Jm/vy36PdSLbEB4f+jJlC\r\nzVPFTCQlVwIcOPFa4axjh1afJEX7rS6OjcKR21zJaqkX8XR9NIL7hR9GOlsL\r\nyKAFSN5ewaSJlFgfaGxdsYPVVj4wxRDaGW4=\r\n=UTp2\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.0-alpha.0_1653738610054_0.3709594835102814"
      },
      "_hasShrinkwrap": false
    },
    "6.1.0": {
      "name": "cspell",
      "version": "6.1.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.0",
        "cspell-glob": "^6.1.0",
        "cspell-lib": "^6.1.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.0",
        "@cspell/cspell-types": "^6.1.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.4",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "eaf6991ced2c8eb2c60bd2914095e4c686a4266b",
      "_id": "cspell@6.1.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-8hF9iWfwrXUkBrfs958XsiIbeLkMUZzgF0s2gIOzUd4t8z6os3hDI2JGIshoTAshbCb82zYQqHvGfvuwh/NtHQ==",
        "shasum": "0c8f00badee6692f77126947951238d154ff14c0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.0.tgz",
        "fileCount": 72,
        "unpackedSize": 166784,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCE+wq2TF/i5uSE6/EwJbRpXEhnyVARyaNyVMexCF7cmAIgZiq6widvlihuAIDDJKclUAxp9Fo4jQQciTWT6ouLzTU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJillPnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpjJw//YlRRpJp1uP/4+Wy57UVy333iYefJljcLuEoTNSp/XDiXJA91\r\n1ljUUBdXiBhlDWAc34qo1LG5PVVuVwu/+zcPV/5JMFz9Z+tt3RhvkzUqsO7F\r\nfwrn/9b2weEC5P+EvZitO3vnHIuJFJQJHa9bIJzWMfNsEMpVFk6khY5Fxymd\r\nl2kZubfxLMj8QmG7uTZmnqoD1xEs8yaWA4hlXJXj7nNT7D8sj/TbtULT3JUk\r\n8SWpSHFCfsMuqez7wFrSgILunlXLIwX94uAWhy8tpJSHKDcNx729r3uvv8a1\r\nNqZ/rZc+CPnwWWivG79OHMmHqRttk+t4wnMXYrDSInjNc0hRQL1LHcilgqzu\r\n5OvlWz+YIsQezv9jtuTaTga7yl8Ogh79QZAQ8nin0Zt0j3IpWw14SjAE54GI\r\n8TqVazuvUrNkqi8mNjiyvh5wtm35kSwTh8nMI7DLe5EqCh2RXAdE7UpZ7fMN\r\nwU2oTcX4mOQ/OHsq2KqcWeJVYSDKLhs7bvEbVULhiMmAMxMMnJGTal71e8CP\r\n7iol3TG8ZOCvdMLlVWejhHA4/S5H+iigOq0TETGGbDoAHU/hLk0hZvKMTF7g\r\nPjqg/CQcEtssarpGYTvJx+GjpWhE2A2B6TKyLtNDREKrzey/jhwU7WLriOZS\r\nbrKJY5TvYKH+CxGje7/Y9KI/mujXqoDSjdM=\r\n=9uFi\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.0_1654019047403_0.7864863880447783"
      },
      "_hasShrinkwrap": false
    },
    "6.1.1": {
      "name": "cspell",
      "version": "6.1.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.1",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.1",
        "cspell-glob": "^6.1.1",
        "cspell-lib": "^6.1.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.1",
        "@cspell/cspell-types": "^6.1.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.0",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.4",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "e871153bfebefa19b13754b431ce5e49a63da298",
      "_id": "cspell@6.1.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-0A2+XrcQAY9wqjzvIpw25J1LDY8mkSUMjcs0dDaeZMGQCuZ2HRTI96B3uSsJaH3X7rIOk5wflk3qPOsd3Jr0aQ==",
        "shasum": "9f45dea2bd90c2ced18dbf247da6fca573bca609",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.1.tgz",
        "fileCount": 72,
        "unpackedSize": 166784,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEXq+sP/Oj+nJs+qpd5+n0XlbpyS70wa6D67JQJc+/zIAiBtNjcG7vsf6ezLpjFt5OV1dwDHxO09CvJkD5aoKFSFKA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJimF1iACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrAFQ/9HdM1zJb45vdsQ9wFCy8Ss5t47ub6Nra/fAj3Ii5ivSXRw5Gg\r\nSz0GP0OEtv6ha+NJjI0onVGBP0liWzsrPq7WSA3xNhDSRHdadayDWu94b/tZ\r\n0i1cveVWizpkXnGTmWXnseTUI8BrY+u++9qh87Yk7m5Z4s61fgimWFgNLWIr\r\n7jnnwHcIjv97LHi3hMvbYb4ktrpqk4O3aOFBe+DcEZfcNOqSl5SJqhS2tThU\r\notJfS6WjiEA+PvCwaMIxsL04HhcUiXWTga6gIoGWcOy31tM+3UtpQHSseHD5\r\npjUEKr1wcyy4g9qJlNpIKeIyHxHzMiu1K9VxZmujITVFcR/Y2E4akmG5t1og\r\nubpXzJo2ZnJyMIQ85WGfyHJgYOCKzVM8sNZc5aGoc4grawr0gImFvvYzv8PD\r\n8v47BEZzCg5KP9bToAg0/vtag4tLLXL5LmvaYBwdZkprduaqNJmcVX2Oyb4N\r\ncXx4H8B5Q0TY9qxlRbZXBKLJDdpV2wgM8sqIOTdpXgXQsrRkL9/+pys2nWzw\r\nwmq2a3JvLbxj4EDS1s5LzVnzegeMREjTcMzr+ZaacFkXXnHgeMwTfww2jFh2\r\nTkAXsZUmJNM7PY1ZaD79m3ayx+4hgoNp0HTE31zvuQKciOPsb8R2NK8UtY+s\r\nkIUotdzEPvz90HAwlbR40LmzofbG2rb8cU4=\r\n=+EU1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.1_1654152546750_0.8952446379777248"
      },
      "_hasShrinkwrap": false
    },
    "6.1.2": {
      "name": "cspell",
      "version": "6.1.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.2",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.2",
        "cspell-glob": "^6.1.2",
        "cspell-lib": "^6.1.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.2",
        "@cspell/cspell-types": "^6.1.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.5",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "5ef579108a81bf7206cf53e301374467a3bbde06",
      "_id": "cspell@6.1.2",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.0.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-w4lGfzNl3m1dfagyZvr28V1nK/E+y8zoKVlE158JI/iVNGO/R2okrcNB1s+9xXSmYjJ8Xx6dhupO0XxKuagDSQ==",
        "shasum": "b17be28dda221867627973840dc83447c84ff537",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.2.tgz",
        "fileCount": 72,
        "unpackedSize": 166784,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAd7u/PsqCNaPnQ+oft0YO6CHr+4uOXn83q6dRRn0AbWAiBD1GtIzM8xAgJCsNhqIvKcShzl4BgEu7qvzxRM99DamA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiocG1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoljA/9EDCkt8cSag03NfCzPF2thWujj6Q6qU81fUsK2YFqLmaeeKqz\r\nz0l1Ao7mF8YZHPaztIpiFkWoxj7dQ8thHbQqS4gawjGS0z/ggccv5xfwqySN\r\n+sVGjl1E0Ppc7Yq/rr0vGpuUVJQxk2jIGaHSdq6geTr4Kxz6Ji0oBnWRbCrL\r\nxqL+dABK9+hfeBAex1hEvRxoWU9zwHRj9wiT69WkdiBkY0sqcwi1gW6vcayF\r\nmpZTOGHK2hnIBpdEmyOiyvhJK2tbIpLWec3iiOKgUs/Fp5Chgh3zIW2zMii0\r\n/KfiyvyNihXXW4xdGubDqGr9LxHSJDFb/gLpIt7l72uXVHyBdR9wYcckxJpS\r\nUeTdlrgwAR6OjsF7GWtiK7sqTWWd1xD9rX/1UHV4ictn3BPLTiyy+G+3f1Fc\r\nwq/R4Q+Xz4k0ImowNrTbEZnlfppB5c0MOnSoXv3WbsgG5vhOOP/rNkRgzuW2\r\n/B0/1PILXjgDEfCqjJu02OdEOzY0t7ep2qiCq2roltMTNvy6XXu8lh284tUO\r\nZW6hYTLAUCyxWnAJPM7uNNiQxSVOhWt9l59lpGP4Eddm1l9lKr6UOP3anmPM\r\nZHFthKfiFogH5WvndDUYjNur3FdeT+8Sf6aYR8qMJh/Q5tbTF3Qh+ceF5sfj\r\n3sLme02DWWhVQh0HaoxLKIwAhKKtEBWlL2w=\r\n=8VGJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.2_1654768053492_0.023455370437392542"
      },
      "_hasShrinkwrap": false
    },
    "6.1.3-alpha.0": {
      "name": "cspell",
      "version": "6.1.3-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.3-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.3-alpha.0",
        "cspell-glob": "^6.1.3-alpha.0",
        "cspell-lib": "^6.1.3-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.3-alpha.0",
        "@cspell/cspell-types": "^6.1.3-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.6",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "b3cde7e463fd8a6f2c03f990adc70b913239baeb",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.1.3-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.2/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-hUiQZLxQMMqG/+zU4XZv9ovTog4hXgpHSZ2X8B8wSKVwDBzhiSPoe5AtVFKXyAi/fL+0uRV1S2tvLgsSjXw65g==",
        "shasum": "4b2c8c06a55db43570c4d0a083f7c920d1c54a36",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.3-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164177,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDUshoMUv+6axu4xIaR0FuCLbkWSa9yanfwzfx/T5iDzwIgGoMnIs6/9MyhjkC9EByAvGLwbLwRZrSIoERcWl7JPuQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqduMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpAfw/8D1xqoZgtIj5x40XL7lGly8fA6HvMNxybbe04niNdZcM1cJef\r\ncg0ugRx0zAGWCE47AMNnFuiEwTHaDiKqp2QCjAktjiJhrG3Ovon43q1dQeV1\r\nnvSOtKIPH9ngGGCpqBAlFAcNwP7HEBBiVUENl4CaUMes6LWw3vccHZntrLtJ\r\nwgSx7o9mLD9MCDHflEv/CtFrWPFeZP8l1ZyTL341LTlinHvh/THIOu1DbCDG\r\nkFzGB5OQy4U6RNFk9F8SHvMMp/kq7hEwEzp7Q3JdOtPOvpljMpfK0DXX3ov6\r\nXQ8RHznHnsn2emDtGtZa+D6r50F9HKAzolbMncd0NIKrbKbUSvSVR5kZu42e\r\nVJ5ENRRsRi66dMpiycJdz6hR5PXTZt469weIoqyJbTROaLUNWP9a6zrJVwMx\r\n2NVYa15u9a+4kpKUDOnhwBOy6fMokTB2ti0LOevnWzNheVPE+RZ0+PlUVTRu\r\nku+jwTcKjoj/+/xvucMAc/22a50dDcC8lt7yDH7/6jeHJCtX+rBV/z+3LzOt\r\nYlHg2RTQzKFKYfzh5jRYq40AnJL5ReWyCM/iLj0878ppB3JkTfToODmmGKut\r\nvYYIXZQygNVm6hSz9xOMa/bA+oorBg8oprw+HnmthCSluaUnIMYOQj4Snj+a\r\nPq/js9MbcSz2KLkdfD4OU9ZvMZdQJoIsVUY=\r\n=FCLl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.3-alpha.0_1655298955844_0.5222590687055626"
      },
      "_hasShrinkwrap": false
    },
    "6.1.3-alpha.1": {
      "name": "cspell",
      "version": "6.1.3-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.3-alpha.1",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.3-alpha.1",
        "cspell-glob": "^6.1.3-alpha.1",
        "cspell-lib": "^6.1.3-alpha.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.3-alpha.1",
        "@cspell/cspell-types": "^6.1.3-alpha.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.9",
        "jest": "^28.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.6",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "3b0a99870292387ca96aba8a7da701575b56ed5b",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.1.3-alpha.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.2/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-ImxHJr9JfbNSdWlU4uggFWG+5Q+Rm+PyuW4uQ1V9qP4SHX5fZmP+8BqEprBb8FEj0jd6hjWrgPTSXaGIQD5J7A==",
        "shasum": "5cdb2d97f28200b9a7daf5f9465c2dc0887e05eb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.3-alpha.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164177,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6Bv602YHmpCRRZbcqGEo3tboX63EHKyvIZ0SXUAgSjAIgXVXZCkSjAbsh+nGVAY5qJF9u7F56IEDhkMCsBmyCdHA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqmfoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoSJw//Vggh8Ou0rxXbaDRW0jfrvm7M/4MwIgEtsgNeomz/+LAh7iyw\r\n+bZCfeYQ8eZ5k0WJdtoNHXiN2IeUmLM6CvSadaNVUF4hxp5OSF1KqI/3OHn7\r\nKItPkVE92gyXacu8imlovP+vHeGgQ7JFZXfEJG13tHduLg388ypTGiDMGrtb\r\nQHAvMYZIYeT5GI7jnS8AFGAVgtHHAzAsVqaqBDwQ60iWzg4f+xNdooBCPRIl\r\naQUvIarZnfsYD7SS3rp003Z5rlRNR+55caL3q5zvtqmZmM7XOx1B8iKQOcYa\r\nvPCeXlogQlHu7BkwDxPDEdSIq5Gzqq08YxST/44okZENVIdwMKqeo+J8KsQs\r\nWqoVW78Rr2JcVNiCFyByeW7KUB+hjX3W3P8BFIJuOhuNzyioU/fSzmmOIBiL\r\nn9XQxqwrS2Zwdv4gW4KZMrD+fqZkv7Ji/2VKneBCkHdq9BW4+1bURo925N3I\r\nTLdSAE/Aoc+H51SYdBXKpz7dVrQZRAT3dzUregLm4AFE2TCHdCMsDVIqgALn\r\nXSiwTrkKdlu8/frQ8IsCgpn8R1tr+LHW+1eyM/R/YKiN5P8Ohe3CA9XjYZxb\r\n4Wg/IVh29j4XQ+tv89gCCn1VfT+7RR0DK/v6MfT/37YWSZBUGQseEtHYdzH4\r\nPBGmODzFrKKsKwpZPYKrGcsu6DWzbB7xAic=\r\n=gEPA\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.3-alpha.1_1655334888684_0.12057080602834702"
      },
      "_hasShrinkwrap": false
    },
    "6.1.3": {
      "name": "cspell",
      "version": "6.1.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.3",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.1.3",
        "cspell-glob": "^6.1.3",
        "cspell-lib": "^6.1.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.1.3",
        "@cspell/cspell-types": "^6.1.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "e96b313542f2ec0a38ac04d1422d97e724ded3a6",
      "_id": "cspell@6.1.3",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-9dB73ehWLXKTav4G9V1s/QitS1KzKF46sy9WtemVFevU6fenXt5Kdo77bTGNHHpmgugQk7yFyWq2dAeS0gZDAw==",
        "shasum": "deb018eabad90e0a63cb48feb8d1092feba15e94",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.1.3.tgz",
        "fileCount": 72,
        "unpackedSize": 164122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCzNB2C6IL0jtYYm8sf8r68KO69Or/adhmOqtZOkvprlwIgfL6DRYOtb0iBmsN+AZbHCWWifqxjf87sAhUfV4N7ol0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiutcAACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpEdRAAgZgKG2m0RqlvtpmI2ge7eKzfR27mzuVyRgMdPgyqWaA3QvJ8\r\nq3hmJIecfPFSIrOGairQmv9283Q4GFobRL2extagggp05MID/7qydHD3/LZQ\r\nH3e8iUR0Qgwid65SJ4VrRMdgJnIdHBMPqLbWTJ12awtZvYJ97QDa+uvitA5Z\r\nJJspVsVkEDyZbMjhwOYmZPhtaf9C0TH+kweBqRIrB3esLxvKY6+sD9xgGJos\r\nXi4BC0jJnwc9t4/HUWTa5J/JApQ9eeRscNarwzD79GWaKa9VMSGhp7p4zSgT\r\nqS6ZRXJpqGAAABXX0Xa6jP2/bg5kdgScUstOtPgvlpSkrRtW9BtF7MwiWc4k\r\nftA05Uyh3PZjd/ROXgWDrrZu9GxAFRu/spyN59Zzuiok8p1sQ6vi/N9BrPmD\r\nTPi29iSwyTaMPumIhQ5aYnw/J4VZcSyBcekIi0PFoGEIus5IoqR7hRNiKH3R\r\nIPMWzIBwtcSs+i5peXj1z4krn3UWcG52NH7MI0M4sRnMJmKV6Er5+p7Z+zOT\r\nzdTVuxbXCCABPp9O2HRpD/52OWggyfcb6ofPBftiLfVGz4QmSI3KHSQ87czc\r\nfp92ikAsgUMkVaykoe2NtG3HKgdnWisOERfDk76OW6Qd+js0eOjmjvmXP94c\r\nkZ5XLr6gKSrQUuT65BePwfdr5Va1Cz1PV7o=\r\n=vWOW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.1.3_1656411904529_0.6686258858688969"
      },
      "_hasShrinkwrap": false
    },
    "6.2.0-alpha.0": {
      "name": "cspell",
      "version": "6.2.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.1.3",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.0-alpha.0",
        "cspell-glob": "^6.1.3",
        "cspell-lib": "^6.2.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.0-alpha.0",
        "@cspell/cspell-types": "^6.1.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "9d9bb9af319c331cfbacd1a5aa62aa0d1147e35b",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.2.0-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-P8aAjgUqDZZZzGabE2LVoGy+bsBGnXpEvCH6GEVb4sI2tayOQZsF47V/y410s9AHo7wCo8E37DTQ+j9oqMEHRg==",
        "shasum": "0892d0257c5387308ed95ec9c4669d9d2fa8a433",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164154,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEHxluUjIVZ2aru+SJLxdyeicYGkAaNo0Bl1yqgplydnAiABRUlVXefwLZYPDjo92KILunfVpMJ9mkSUNK6kc6Lz+A=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiu0igACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrykA//e3Hwdj4OXBGrbOTaXGFX1jFH6e1YPPJ+pN/rAphq5KXF9vif\r\nY4dJjpV8oE8xMbuT1nBdvAq78x8beUYKnA2uCjfwx4bbT2N1fqKJrQp1pUDt\r\n8onIWYVFkPLb8lG+33BYeR51g5xcn8xlTwsOPg/lh4Mj/kA/HlkDp4z3cvAw\r\nPg3kIrv0uVQswXxWwTesCLBDPdA79mAnCbYiAllXITOIDtpS8czimbS+T6J1\r\nY/uSsIX1ULbSGAdauf/Zqfm1kpRN2vo4vA94jTU3foA4ndSyUP26W/MU3Dt2\r\nF2hYIl97t733LO5VGO6eUY6pfys+MG7tUF0UeJf1ohpz13U2OSXFiEf6jYzJ\r\nKkUPDi3eJAfU8jxPKQK4htlG/w5CGKUP6vtkhUlOmedpDqN8x978w4Dz39Ls\r\noW4EWq6YbvAeM0XXI+Zkq+Uhntv1WrpuPQDwkehgypwFrGA1bfiWC+Rw2wB1\r\njNBcgFe+s8NbmnTl5z6i4rFYZ5L++cu8RU6X7WgArREKExAMWM8K2cIKPq+/\r\nvCKOeHuueUqo6+mFQbq+PDoRtIayTxaLIdrwCNShf8Zh/1p4W0IqcSJ362hl\r\n2Rz9Nt7hrA5tRZTznlufO8DDYzhZUqBy1ob7yOt4DLJLykjbMVgUVHfU4UVh\r\nQohylv/hexzB3/q2sxLm3P/vJFpAijTxJrg=\r\n=xLZn\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.0-alpha.0_1656440992031_0.9673585685217971"
      },
      "_hasShrinkwrap": false
    },
    "6.2.0-alpha.1": {
      "name": "cspell",
      "version": "6.2.0-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.0-alpha.1",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.0-alpha.1",
        "cspell-glob": "^6.2.0-alpha.1",
        "cspell-lib": "^6.2.0-alpha.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.0-alpha.1",
        "@cspell/cspell-types": "^6.2.0-alpha.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "bb1862e9d5116b64451e625eb002f835e2873f9b",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.2.0-alpha.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Hn0k2syA3glPDXCvUm12rfMxtuNFdn5STgeq58OLGUPOdw42yOesQRYMy9nXUJEpFiALqdF2YvISD2/2OHhSYA==",
        "shasum": "97951c60ee5936f3897b05d73822c601df8d5648",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.0-alpha.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164178,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCl1lydoFAo73VdIm14sJH8Ljy2+WH9U+2cPWyI5+DdigIgayUO5X9FVI/PxgPDz7jEu6gVuqatfzUCdLUGieQ/XeI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivFNjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrkYg/6A04aTSbMp1yyGKVQodcTXhYcdyeE5wWL8rJ1j0h14xs3cfrE\r\nBmdM7Oku69iJ0pSfBUN7bwQo9rSV7+fCKrMDCF+hn0YUJ/Orbzu9dcnuWJew\r\nXxjG4QDu7aGGg3z88BU1z8rKtQ053awfajs9TdO3iAeTMdGEeILMLEs+9ONm\r\nBlH78zfVM8Wb4braudQlJGbFDz9aUAbaQBfYeIJQIZY9s+XB0iUYH5PRPxxI\r\n60fobQ60IoGI7z4hhcWYfU5qLXYqHuYbJPivAMIgq3usqVLG1ffctS0xj4RA\r\n2KWl4OHv8J3wF1ChDnBPzRTkmjTtzjRc75oFC5qNoukcW5UkNhymmXiOBmQQ\r\nZuE0AuKOzy2PQen1aBATcnGEXtrKTJ/tk5abpjA4UC+3/YbPw5ZBh6wq3uU0\r\naKgt1Y55i0j11vQLx0snsaDln3T6BL2l/KkPSwAKTdEXYj3H4VRJjfIk5Fsg\r\nStseMvaGu0PwRf93SGDF7OVlO8Q/B49XUVDvEI6XwNL918wmO8HFHX/zwFGi\r\nfRaVwHZKvxAGqWxSLGDjecOAXGd2SF/rfJyRDJVG82QobcBDCO/sa5P++cB7\r\nKkY3i6jorKxKYP6Q0nZul5yuMt/0/ij8yVYWWHOnMdHKiOYw8pFoy3ERedDP\r\nMmzP04NAVVAlofvcRMeWefhPHi3b/i6LoWM=\r\n=QVs3\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.0-alpha.1_1656509282835_0.334109339025523"
      },
      "_hasShrinkwrap": false
    },
    "6.2.0": {
      "name": "cspell",
      "version": "6.2.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.0",
        "cspell-glob": "^6.2.0",
        "cspell-lib": "^6.2.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.0",
        "@cspell/cspell-types": "^6.2.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "ef9bf8e390692145b067843dbcc44a6dc2d9aa31",
      "_id": "cspell@6.2.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Afs8WP8HYke+pH5K3oXRwb/QoHefInjpCcDqA1wlUJfBSHdgPzD3xkUkyxigbuOF9CrK1myLm1IzQlHu2qtezA==",
        "shasum": "2cd40029ad24153ddf3a2231d2722cabf85f9748",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBva3XiQihutwMD3RlOw5Xhx7TM1uYVm7G9UEs4xYmDxAiAWy7MDuM31LF/P42cj5QsILDweO4e5eFRi4XQ8NQAXqQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivb2OACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoXxQ//TOd/8j63b7lgh8HVJp0r2kbUSi2vAssE28Dt8ldJzZ41fxBm\r\nNH4nRIFbcKhcp7UfJTyk4O/GWKFwuHOTiWG+T7TbQuu4PSeH00eOBWz032mK\r\nNAUu6+1s0GaoklG3MlmIMlXkGwZTHXdbJHVWBjanxScOUUWJYBAmYBCdq8iy\r\nCuCNIFTndSJecAvLUbC67YQDWvLnU0qSUVuM/RJIh91I2AIxFVr6TjRJsQg7\r\n8HNp+ppTWI9HUBuWjOVwPyljjCl8X04QJNz8mlrsDDP6RooKkQ+O5w8w6898\r\nkGGLds7fHXgvoj8v2/8Kvzdu11sYAUzWNr9L+PbE3yjv2mpNY+cgzcj/MC6W\r\nTEnAxcn07mHZiCsIWVdIiOfvUHWYCg16QCfNKdZxQgLNo9YpcNl/Zbv+eEJQ\r\nK1K4oq91/AzKFwttXi5uIwErJ+d9YRXzIE4pf8wspE1Mu7sBczk/R+hE7/qE\r\n//WmRSF25QWxsUhjW4KZ68hsccvFOnXFMtEB2IpokfrcyCtErdZHiT4yqsvr\r\nt6LkHSP3+PPv3wzlyaCucUcLCif/4PvRzPoaneLMAdtU8m8LeKrBWm6H2dF9\r\nmUuSh7Iq+C7fdJ/YgwJ7yyveaHtFpCKbwUvGhoGD2Sqe4St5rV4Bm4rjMBIk\r\nyVnUDFROq/+6IwkgBA/nxwWKi2Yxe3cYyMA=\r\n=b8wJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.0_1656601997821_0.8667803292559537"
      },
      "_hasShrinkwrap": false
    },
    "6.2.1": {
      "name": "cspell",
      "version": "6.2.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.1",
        "cspell-glob": "^6.2.0",
        "cspell-lib": "^6.2.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.1",
        "@cspell/cspell-types": "^6.2.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "16349d3df44ef6239d043fe5c8f8c47e36de4251",
      "_id": "cspell@6.2.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-q7MXwwP+iYRRG+0ujA2KR0Mx8lHjr7aiHW+86efiLTnAa0uU2RdyXBjN2Jc5srFU7MS4jbHh0dozXMGFEnSX5A==",
        "shasum": "79ae282bac464000360dde4a570aefd939083b5a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDAvmb96B6hnvRjkbQUGgln6Gvc1j197ZOKuoBRNxrmwAiBFzu/n6iLF/3FhLcIObrMKprkN+OAwO8+RDN3zfpTGUQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivqMeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpowQ//W+j1aUK89EeWR7+VLouQ6IB4DuyN36F+Pwvzll2w9o3Vfttl\r\n9pwg1tNi8HoqvrU9sq5Is1CvLaaRk+qohru3Yw38RxItiwTLin7AIhpYzptU\r\nU0P4c7JfWrjj2k8GS1IiIeySyFpXuIv6jjgSOw7CpGrE39EmMfqhZffe2U9e\r\nejS0jcqd3O7KsfSvR5IbLcsInTUtcCVX7+I6gDmJaHS9KOrvnJGUQhYJUeog\r\nwWfavrmo3lpoF3/88lNMvOYEx5fR4oUcrNKe798woSO/Fsw28OW+OLUO+2yN\r\nHYDPH6yGIrFtaf1rvTSO0usYzlHvWm5gbgiE88PFyTn6kMi/m0et43exVKCP\r\nmSiejspeDbacxFK3m4rRJqZng3Es3UUjr2s+AA2cIqgUap5TXcumPo2t83HW\r\nImgQZH6x1rGxFFpjPSO2nk6TGmWmeGyQb1SmjPfInmtJnO2AAaF4DczFtXoH\r\nzthLDhl8qnGNrfa0/IWDOAzsQ3xMNHlJ+2JM1ArtPUfUeS4Vzyz8+HSMmVzU\r\nF9RyMp8WeNTgOgrID8Tn8YcOHq4szG7d5KuVQmk4uTbkeiZKbkP0K1vHfaJr\r\nHaUWx6dIBc6ac0L1gFUR54mOBQ/D7mV/Od6cxfinVFvYMbrnceNCthJLSaR4\r\n9v1Mx+SMIDFzW/IdD7iJM/1E2MLq9dlHGVA=\r\n=4lxN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.1_1656660766291_0.8440183308550486"
      },
      "_hasShrinkwrap": false
    },
    "6.2.2": {
      "name": "cspell",
      "version": "6.2.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.2",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.2",
        "cspell-glob": "^6.2.2",
        "cspell-lib": "^6.2.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.2",
        "@cspell/cspell-types": "^6.2.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "b7716e80c39a780f98cde747ad66c55247636621",
      "_id": "cspell@6.2.2",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-c/dEvmlriOM6at/FQ2gQN6ywu1K9wRw+JU8I9QHpYrJ3VIOMen3c1AXy3rnAkGMOWm6y9gy5PGDRcJaQlE4C7Q==",
        "shasum": "fbec694b71e3b8514ad11297ae9a42c30fe2f4b9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.2.tgz",
        "fileCount": 72,
        "unpackedSize": 164122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNby1fBS2RK+J+o3DpjhiZyU+8cSun5ZX2mTQUc2t5+gIgI87CDqJWjP2dq0zZdq36j+uOXgHrl0Lz/C0LRYAJJNg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJivrkpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8YA/+Pr8W0WqHrOnlBDQLWjKr0JHOJUhI5WLtm9zzAuqa1yKIHcI1\r\nTeKZPHd5rQwKFZZq0jL/PP+q6qJ5CEcrxE2ELBb4datEODsDiKWd921FueP3\r\nEY6Ok+k7OBFpGpnKMgP8zPLAxRlV37QOrzVRmh4HSbPqBgZsG4HnEAuedF+H\r\nbGMMFt9+PyrRYY+gmFfMnrbfjDsOJDYU3vUtDcObqcfhOAh3dbM54HWgJQGo\r\nLTK5ZJ7MOp45LqtFvYTMzBi1i8d3PoFORD6V32J/0m8j66FoCPKUonw6kBRJ\r\n+UGkHylmi5FFnIyJipAD3TY2f50nJFupB49oko7eKuOIhGMpNUc75YGS2CAx\r\nxtU0S0EO/liout8HXymd9WhPTtoXJc+MG9A4s884pNcL/nVkTmrdvtl3xEu0\r\nA/woI1zi+fRKblqE26ScM7FNAHRHHpXbq37yDBcqoWnCn349DI+HUkFsUVpH\r\nuEvd7RJwGVKa6uQkMEs5bnO2xYOLwIvHNIU5+e0KblVWrA57FdjeIwRKm9y4\r\ng2MgcEHUQcFVQhia8ZxV8765PwnjPsbKun5Y1YgmrgkDf8DEk1DbiST9BoPz\r\neggpnWj9fOk5Z+aD0Esq5e/8yf9cV1Us8uxgFGeTmG3aZTqRvY828u6f2RT2\r\nS0mg/LmhXaFXxnECH0xzyeY5u7sgrYk3UVg=\r\n=T/Ir\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.2_1656666409657_0.9080537775601571"
      },
      "_hasShrinkwrap": false
    },
    "6.2.3": {
      "name": "cspell",
      "version": "6.2.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.3",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.3",
        "cspell-glob": "^6.2.3",
        "cspell-lib": "^6.2.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.3",
        "@cspell/cspell-types": "^6.2.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.75.7",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "39766b5de9d52077dce7e3af0af5f25b6f2d4f6a",
      "_id": "cspell@6.2.3",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.6/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-b4fNrBZSiXaDJARLZqYVOW8mEQ2nTO/8ZzLGRorvGasWtpy58hKdXQp9IcynT6w/Ck2WfUqjffEayFNZYbYWEQ==",
        "shasum": "ec1390cd36f6b6c0973194b080835c7d5f0560a5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.3.tgz",
        "fileCount": 72,
        "unpackedSize": 164122,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC0b0F+yypVFCtrtrtxLrsNrgPoSQB4oQlsAQpe4eY4bgIhALWa+/GgddSZJNuvQg7fHVtCR3Za8CVNO0cW0WFv9dvE"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixuMiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoSog/9Fpnp2h8Dhl+UukdD99BXElp5gnZIFgDujO46MCYPOdCjIBcI\r\n6etdBBjrQfEhWQxqbzNlrnPDMEHpr3sS9IlErZNRBc05oHbWNFm/mj0HjAJl\r\nYs4qWvAYfR/3KLmNvFdUFuh3yTcsyxSCU7biHpo5xyBA4yF2QtF9B1BC4Etx\r\nW9TFSz17kY2uo1vJiffHmFzZkJlCgdbQAyDyRugh+fY2j6tWI2j32nM1ho38\r\nB/Mi959g/4reqees7bULMSQuYW7IGmvbuX4UgJ2CfKq4sUJhYGyxyvqcfQWH\r\n3/LCV+4Gv0oPnjC5zlYwJyvUPTXgFVV9duauU81RCVKEslIcfDi6hy7V/H8x\r\nEC/KO6HieFgDpJYah/52NE/PBCD/zE9sBRBSlH9j10vl9PSP1FA4kop+pmmF\r\noIxX0tXEXpr0i8UE6N369cEN3Vzt1CwD8tVk9SQ7YdcgcryE15mwnkhc8TSj\r\nm+YCMsS/SyedX+Ory0RcKDKMno1Iy2YSIr5PXHEJnFXyTR4u5igSO/KKSrUz\r\nvwGbyU0FjeojI6eC1Tg+J5qPXsnWX6PNRma+w3h6XXxwc8iU7LSmuEeUe3BQ\r\njxISETETN9wPA/q1m/qvwhk3LUKS/WuNxjsa2ExZ2xeRyI8CFkzlrBo01hsx\r\nh0ES31703PUhvunVTb4JfK1YmogtKicb8YQ=\r\n=65qm\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.3_1657201442633_0.35362949375670594"
      },
      "_hasShrinkwrap": false
    },
    "6.2.4-alpha.0": {
      "name": "cspell",
      "version": "6.2.4-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.2.4-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.2.4-alpha.0",
        "cspell-glob": "^6.2.4-alpha.0",
        "cspell-lib": "^6.2.4-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.2.4-alpha.0",
        "@cspell/cspell-types": "^6.2.4-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.76.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "3509b9fb14722e573713ba1828af6da6088a24e8",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.2.4-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.8/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-iTfd71EiI/4ECv9Ge48XPNJdkq0qwHqdfrD9Z25kO0uY/TICckfB6i3btYvuVIiZ219YX2Df+bxA0+4nKirw3g==",
        "shasum": "29fad4e302c892c4bf4c6f3b230728b172f735d5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.2.4-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164178,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCVt5d88rLLsiW6BaKtM+5DqFjF5n2+spm76NKnhVwDzQIhANcuTe+dQf9FSHcSBVlAC91Grt4IPLaaJFOTJakIdQ1y"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiznFBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqjcRAAkhHFldC9fwPXUpQyQH1GAKmYFVspZaBRYs8Zdql9QvMwlzrp\r\neW2sCmTmWWF6JU77uCdmtwRPLRiFR+MCE0k/9vm99eIv+xbLv41s5sHKf4Ek\r\nmQhxjx0kSZCpG7sKel3w9TN3nhP7fLiaU0NEzQ46v6bqVUz5bPx5wBlDtyCc\r\n5B+eqoc4IARO0oLWiLrhfpWGEWr6CPATh0PvUy8TIKl1i2Pd1R9KKSrBVDfH\r\npY/JTelmsT8E0tloCvn3Mlkq1n1rEKxDQnfAtOK6cVv85H3K7ZAHdcyymIKj\r\nWDOa0wPKVQnyQT7W/IQkPmvrder8O9msNjQ2A3eAbT3gUNan1hHHYTl9DNnk\r\nbdhavw1LSCM+vVD97USztetyWFRMY4NW54YnJcnu0H3XSUpIxAlTjCS2gxOU\r\nBN7W8kajbUs3CLCxYXZzAJ+tEm6r7tcJpN02CKvOtWhMOv1O/+m9I3vUrji5\r\n+C5EL6h/3qRQdynCekKSjWaGCF01tjyquc+z7EbYO5jrbKG6SB6Xs7XQficS\r\nPgEkRjUmNspNz1eIDzjkPDYR4/QZcYBK4HmMOpL5C/IB/vrXczb73IAbKwpj\r\nWSHHBO5bOyDQTGJTnIBGayyPpxex5aHV8axrLAULRchb4d9e4ZXODR+HNaem\r\nhOvBmHg0vPBU9f2Q+YAr4N/SAHN6sKAYB1E=\r\n=uvDf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.2.4-alpha.0_1657696577362_0.933484832239005"
      },
      "_hasShrinkwrap": false
    },
    "6.3.0": {
      "name": "cspell",
      "version": "6.3.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.3.0",
        "chalk": "^4.1.2",
        "commander": "^9.3.0",
        "cspell-gitignore": "^6.3.0",
        "cspell-glob": "^6.3.0",
        "cspell-lib": "^6.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.3.0",
        "@cspell/cspell-types": "^6.3.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.76.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "6b7b2a0e92f0b3c760dd3c3fd6bc8a8a873e1987",
      "_id": "cspell@6.3.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.8/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-Bd+GPDvz41ubRqDMmo5EYJD7v0oqcHHw8BCJEnxENbMbaDsFxeZovlka+3E/dmTN+LNgiMlS+wBWZ14Y/MXNFQ==",
        "shasum": "562f64e5a763aa431ef9f0ebe03ad2287a6437a2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.3.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCQ8WwYGC5L2DnMHU0XqIgUyNADWY3nd7viUfq1IOt4owIgYeJwXq9sDQpDzkfJhgUcrN5huJOFfNcKMOi44Cmm4rY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi05xDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmorAQ/+NCl6Y5qhrZh2XPK+Q/gDv+U6t1f9basMpRT/OrNOeOw+NA8O\r\nAGiZJuW+s+qVI6KSWrpRFkQqR/8EgVXOd98Ao31ousl6iy+Usg4czN6qzbxH\r\nH2+jXjnTTXRhPmVP+hL42FcVnpeTPLrdyWqQtNMWRkSvN3yPunV4wTt1Fb4T\r\n+dvCz/SPb252qKkkBSCKcYch8vOQnQd0J0RMQ/0/G/yx07rG8HgNJdMvllq2\r\noHt4rDkg4bVT4J9coNmY4bYfenRgn7AVRrC2AlHMtFPGfubwYaP7zTJYogOy\r\nsejr51dBbf4EF41ri8DiFAO7qrUbAGYc9+SiUALlMslt3M1qqo4E859VTE7B\r\nIaSMSw6JMfmWJW034KACNmi/qLKEjD6eEHvEQtBcLy3oAInm9OmHr+86V5nP\r\nPjWA9IPS7vdsbtzTuBs7qFNA0e0uNF+whvGrafnuR3P77p986h5yEoa4pets\r\nGABvuOjm/Puv6wvgB6qE1+M4jxAeobFY5BUBapmBBjozZb9aTMFz2dLfx71M\r\n3oRpob6CrxjrfrP0brfazGP9ik8AiUUJ//S0N8R1hfSL1tIm36KoC6cUNk1s\r\nJgJXo5LevLGHrdqWmalz9QX4Bg601fHz+CUxrO8KOlV6T5HfRnki6vG3jFag\r\nOltXe//lfb48uaDNy7hjF0cXuGda7kSkY+c=\r\n=LHjo\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.3.0_1658035267155_0.0815209090108262"
      },
      "_hasShrinkwrap": false
    },
    "6.4.0-alpha.0": {
      "name": "cspell",
      "version": "6.4.0-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.4.0-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.4.0-alpha.0",
        "cspell-glob": "^6.4.0-alpha.0",
        "cspell-lib": "^6.4.0-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.4.0-alpha.0",
        "@cspell/cspell-types": "^6.4.0-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "ad84fb5398b1f9c1133187616637efe2f13ea598",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.4.0-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.8/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-d6kF0QVAQxUr8XS8SWJAz3YlfaI5EU/9iaor3YrpvnlBgghxqXF0YbPHUHKjtpwHTZYOAxfqsoOZf4axmxOvfQ==",
        "shasum": "ccb0a4173724448010fcda112c055536c098db2c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.4.0-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164651,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMazE/nZ5zXRX8FFPBv7//B5+uvXf7nRaVrEBHTY9m0QIhALOZh+x4Y8omZjDohRVc41g/sGHWPkwb/mUPktizWLJB"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1Ty7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpa8w/5AEuriw1JFNfJyQxCuO+65fvMjBPHTV1Y+ZU5zCBdSJKLwkQm\r\npXDJaPCEvsxg8LUKgcbg1XRagm2FVIhpf3NjnX8T79oHgRE74Ao2bnXYiSAo\r\ntFd5ePUD2bDJjBi1DGZt5KHq7Qni+ESnCTlcwV7WsqfkSBSKxgQsW14B1/vK\r\ncnKrXjXxwlCrCXg+wje9dE5aCVsUyWJbHOwOVdTY9RIAcQtiMQn6xvjbeFy8\r\nXRIGgUFiSSyXR7Y5xfGRxACk/qxqrmFH1n7h3QxZS7EqyqHrqgVLhN4bckjz\r\nhU0hdWfwCfqSPcx3fGZhxO0t2cY6xywtBrm8GoX+r4hVwxtCxqYn4w8JyQaS\r\nLT+wbsbupqUhj3EUsxmhORQsTm0F+Qewe5acQ0tElzNZhm1HBuavUMVZPk4i\r\neVnBTDI45n8CAI6mrcfJe42URETxxBmHf807YCBuK8KtFp2fSZmYJbGr+1yP\r\nleRUotO9pqrvCVHV2EEvG1JYP1kxuhD66lMLlpRVXKgyv2dLrd1kmW1TOLMY\r\ni+Mf9ZwcPQxbNacT+wnsoI8Mlz1QKsoe0b/uDQMPRRnUahV1Y0JMBJhwDgeC\r\ngHTyXz1YmWlm7hfp1JC1cqukZqgo+PvMe5D2J8t0J7rHgAPQqvkfuiL8tQAj\r\nwkLZw68jhAM9nUbk39/b5SE20lL+j4guu3Q=\r\n=iJJ0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.4.0-alpha.0_1658141883103_0.47835690017667853"
      },
      "_hasShrinkwrap": false
    },
    "6.4.0": {
      "name": "cspell",
      "version": "6.4.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.4.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.4.0",
        "cspell-glob": "^6.4.0",
        "cspell-lib": "^6.4.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.4.0",
        "@cspell/cspell-types": "^6.4.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "e10256a7593f449cecc55600b12710264e106a24",
      "_id": "cspell@6.4.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.1.8/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-lpoV4nwknJ5dPvQo1OhOFlNotu/h1M++1C5GmEdLogd9jTE7+URGiRWkifzXB1+6sx/+tW6WB7v5j6Jz9UFBFA==",
        "shasum": "429b996ab82288b9989bfbe433d6a0c0b25e0d3f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.4.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDsrbDOapPBVX/FVm2ZSL7erGJUBfXEtkKa4P+3ZKUXNQIgVKLR+E+1BwIvT+xP0VnhdhmvSUJ2S1ajz/0jzOYb/Ko="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi1shyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrDwg//eOdhJax+tF+zOaQaXVguphGOI82MnePD1kElEY4PM6b0iwWC\r\nths3hELPBhd4cZzlpSrLNAY6xZIfk0wmSxB3d0uD0C7XFyKfpod+VBf8FTC/\r\nFUgcm31z/yu/Shsjr+DeEjUrXMEc0KUEt2cdgy+pmkdHp2V6dar4xY3uNozj\r\nHk/saSjKwzGC6B2XP7jOSFkmKk+dVMXlR47FehKZHoGfEH8AciDAYYwhSs+t\r\nb2uzSU3o/I49DFzjEel0ms81HIOgeQeC0iiNvNfUkqxXKQR6dguF6G34z7da\r\n9EgCtdCxnRUQogbdMaOlpUtKrTIHsQFX4XVN33joy+K/4CVBNyMn6zX1AAwL\r\n1V5K8ziATWrj3RiB6fmE9adudQjtsvW4MXqgQ5nqyzMXFzpkCEFsggtLetsT\r\nTtb2Q5QfbbyPIBU+yQjL3yS6FcvJGyEjhkNhAlRKb8gWcjjlipLk04+5sMJt\r\neYhKKft9+0NFWgATHcdZlrAkib5qCDcxMjOudrcEzJ2CquscCFnJO76QzqnS\r\nH9uVFkhzCLGiaoLGhApeMS5Lp3cNYSUDl/5oHN16T11qw+bk6FriQj2TP9Uu\r\n9ZmTWLwI+NaRASqRExd0lK6JkUSCqsifKBaFx2JDjUNMJFZcPR8JsXUcbdsM\r\nu0gXORBHYN1W5IRa60sfLdK/Wy6iCNfjW1k=\r\n=xNPu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.4.0_1658243186468_0.451890439814153"
      },
      "_hasShrinkwrap": false
    },
    "6.4.1": {
      "name": "cspell",
      "version": "6.4.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.4.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.4.1",
        "cspell-glob": "^6.4.1",
        "cspell-lib": "^6.4.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.4.1",
        "@cspell/cspell-types": "^6.4.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "578f97ba68078fb5f3284cf13abb06c518d8e1ad",
      "_id": "cspell@6.4.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.2.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-g6pUQWUG3KsoA69oIAjcSzzpnST2698ln3VIxWgdGAoQjyM8MKMyRlLaKVrm/ib0cKkMoLNREN5hL7icNc7RUQ==",
        "shasum": "4bdd99816660191928ae1dfce872e551aab21f83",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.4.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCCr0eOzFetj6TRfDnbiRO2d1ir5qx7Fz4aVJGZFBb5hQIhAPQY7poJs4ou0x+L8P/VstxTXHHz98lCzUmEZx7rcKNe"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi29PFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr0tA//QRgA6dxq/38y6jOr5292UJQJzq/L8B7tYuIyWzBmAL6B4Yyg\r\n1gv/NFOhHjtfqKHc3CotwdbXtnOcUiQ0l/NHbUFAMG/e+at6WHPPsK7+bLKk\r\n0C4WNGiDBqRF/RpCO6MeBatHivuHvXXdvnYUrsEgPwN+NPDq+V9f9ajD+tAQ\r\nyNuZdJaw59Nlp9HhUVpKkX98mQul33sCO24HSbVc7vq8O6EuasK0IGFNUNiY\r\noxW2CXQh084Aq/b9C+1io0fkWjdtpmSIfMMRsXDj1pss1pC70gVnBantVnEf\r\n+zQ+BjFPIi1fswhVyi4sghQ2Bj0J5hneu1N9Mjbn3urY3I0CIMYvybLPGgbO\r\nVg0I7GIO5/QdNNLMyfsBk7mjJ6dKM6hpQndk3Gz/bd5T2WVP9el+KsT6fbai\r\n8vii93zQE3v+2UyFzNuqWqMJ67TOnbik1mT/18WEWXilUFucAFGVY95wLAft\r\n2Z5JyU5it2Y4z5gL7zYHTi0pXmyVngZVtC/u14cIiA6GapquIgXEtrFI2EYN\r\nf+Rw4XWOcUfDNOIDDd465bfJ8rx5iHZJ0+D4xYYlXoFH0SPVDsrhSnkmDMfW\r\nGxPBeg7lgcvfjwYL/fRK9IuS+gd8mLpjirsxhBXmB/8LgNp6e2kqflxz3Uca\r\nHkhOfTa4btN2jyeao43Xy3N0P1XgsA45z14=\r\n=zP+F\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.4.1_1658573765196_0.7684406598402203"
      },
      "_hasShrinkwrap": false
    },
    "6.4.2": {
      "name": "cspell",
      "version": "6.4.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.4.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.4.2",
        "cspell-glob": "^6.4.2",
        "cspell-lib": "^6.4.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.4.2",
        "@cspell/cspell-types": "^6.4.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "1f7481fd7d6a561de92ba49870da6eb1441a9d20",
      "_id": "cspell@6.4.2",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.2.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-SEWd9CSZB9sMQVDN5g3aJczIULt/LFDNuAgEfl/tdceQwBNW95cVPBRe9heNF+cdIcDao1jnlEbNXPo8FNmYvA==",
        "shasum": "f9ae9276332d7d19351a401637e8396c302b7771",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.4.2.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCBZiIi16h583dzcYMfZXjjbj4uJtNzXcerXkus6kzK8gIgPkTnzHPrirdGfhIBu//+rKSTte/CDg4aoYZhz51Xtv4="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi353GACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpBaw/9H9jdAursGSbqDUWiE1jefwIr4dXfZy8SDe4sDAr1/s4Unyx5\r\nQ72pK4Q+Fart/oZiKz2i6rZtL3bYA3JNgQc/HhLeL3tYl7DJsxxZmNu2uF3O\r\nyDJU/kKBoGUID71hMvVI+RC9FaI/lLXBcsmK2GHv1wbnwgHdEjSpbEfM1Pm8\r\nsw12TFCzSLHx0WR1jlL6MPaCVJh8k8/SLmH99/lyF8o3opFh9zbIYeaswoIe\r\nDd+XkTxan29SgTvuR9It1t8h1yfmL0K+6E7xf8ByGQbw4y2l4jtKyMbmHyLA\r\n2riLl2mrSciJ1PKoAV4tQvpKIsmeeon/CVeunGXNML6WyTNJ9QHApa+xdLoL\r\nL5gJfL+LGOwKkDw5lUQPWtk9kjjN0HgI9hlQ2z9llcSnc7j9TnhyL9XhO4yu\r\nb+hB7ewSJ3QDeP1cjvqVS6juVQQ0ns5Kxl5LSHUK6jHbK4UsCQiWiIFqEtkR\r\nX1nVlJ1rNrwAfGXgqEsBVWaO+NSuYP5A0XiONaoAPGYw9UX0nGOlxQrVwcha\r\nJG7X/pKLrYIalqzHMO9wN99HXn834MOKkEYc1cw8m1MhptyJj2RCp6Xnrrzm\r\n3FhlY9d+PJr+XsYN48MY05JApzwqzEopFiDsEBtWRQOgLrbUkZCJGNqIodha\r\n5kL1rx26jtH3lBjCOJUz4s4EGCzB9WTfSuQ=\r\n=Xnle\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.4.2_1658822086607_0.028537678221002727"
      },
      "_hasShrinkwrap": false
    },
    "6.5.0": {
      "name": "cspell",
      "version": "6.5.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.4.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.5.0",
        "cspell-glob": "^6.4.2",
        "cspell-lib": "^6.5.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.5.0",
        "@cspell/cspell-types": "^6.5.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "65c80b01e17bb0d74b57ef8b29309684a8588e27",
      "_id": "cspell@6.5.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.2.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-xdEs8e4X2bPgrZBfM5L/0f7TRY7/3SnYwMlPOVvbswb+gJ+hUkZkxRmv8F+IMKW0tKWdoHZH6bCiYrmV0Y8Hdg==",
        "shasum": "077152c290598c6a22a5932467f3d9991935ec10",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.5.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIF1rhRUNV0BdnYMHxngkojycqqIi23i8+Og7lyPwFXrjAiEAmzU+DyTRKbyb5+vc+jqMcjr4EJj0UbyGxjaQhC2a8f0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi5Cl5ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpcZw/+OwAHTmxp2ugUNoqLLDcw3Lz0NWgEwcRUlxMqlBFKI53Vr1n/\r\nTmpVXnbl5a8nhB8zWxkvv2kMLu7uVAWxNN2T3ck1Twr5J1o/MGEclWF/jhnd\r\nc5ExRvmTjbM6F9fI6u17/rTr3UJMVi+KnEkMPG8UUxeaEa/1KxAcczpiblmW\r\npD7R4PhapRp0/3S+QaHIEOwpyG1c71RLbf8ymJ0WEVRpmM57BKY06u5ip3Kd\r\nJgZiF0vefEKambey+nlnt7+V0ItEwo6GDAZ6SEqAal/IpMfjQsuM+cRIKrpX\r\noT2TCbKm63GXnsakXkULcdD1Iu/oxlrV6/WuxFfdsjErO9+p5sFRZYAeyKLP\r\npt1XL6Sq99DBv8qgyXSKbhjiEbFRNyOt5Q0l3Q+EKdOwCWtnDLGqWXfa3NUo\r\np1rt/pLhdpfYiF5/lgO6H3L32JbHkh+LrOaVZxt18b/457IfaRZ83iNXKRyu\r\nNO1Y7z4ysppIG6FkkMLbRyUaqEe1Om+i0txnIdb8uvXCz/rnvlKBdvy+wYYQ\r\nq6+duyEUIhUPwvEuwllpA/o0uonm5FFDwbEm4CJ2E6dCSFzHd5+aNZWqGvFy\r\nyxBKdONbNZxblpnmGmAO5Hwb8t1LS8WcBBm4HDds03kTOfYTu8+rnqDcp8NH\r\ncbfPnVyc0ciECrGrtKv9z+VoDPeubWAufk4=\r\n=P2R9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.5.0_1659119993502_0.748630842219733"
      },
      "_hasShrinkwrap": false
    },
    "6.6.0": {
      "name": "cspell",
      "version": "6.6.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "npm run compile && npm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "npm run clean && npm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "npm run clean-build && npm test",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.0",
        "cspell-glob": "^6.6.0",
        "cspell-lib": "^6.6.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.0",
        "@cspell/cspell-types": "^6.6.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "673377e6b8b79834d018f9b4d02aef90406b7a29",
      "_id": "cspell@6.6.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/5.3.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-GMhdNBHCRdm7hq5J9xMnxmGb3NNOddNNWVY94gFwAGHXgHLW4C45lN4/pRBX3vI2Zgog22/g05c8gVKaASfeRQ==",
        "shasum": "542c7abb460f4f60d1ad5d8d7a876a64305e08f3",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164595,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCFP8r6pDeHs+AFoxkbTHk1zElaYhDjtZhTmhXZkQczvQIhAKKJud24THrD6KLnFAgqJGOYMtJfiZO5vi/JId4y833A"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi8JO/ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpIbQ//Ry5kBupZSqZ27VgCIe7FFtpZAmwALdSOx6pBAfnM0ESaWioe\r\nUBglOxoh07CI72TebnOFUJi8ahegn6Wpoa7FeuoDoISsgU1vT0BfP8P6U8k3\r\nl8Uz6W2T2c64CGkPodHp98Fz8O/eu6rTMEgou0pOHwvamPICIKc/f2cKIfKE\r\nv4dAcmhYLvhA6wpYbRQdQKgvUl+z+9R9h0jVHT/qSrxsG8VMkYQ4EB9FQq0I\r\nxuAM0rKml5nh3VOCh0KKofXEv/cRVdjLNcyX++Y3YxSzvdr9TyaGjqL52SlB\r\nfDOC2mKNDa+sDNybE6RhnLm+Zi8wDluFfBtR4PhBsTN2CxOLncsDn0W0cHUw\r\nAncgwonn1OIVqO6QPoVpCa9w5ctdj5QI1GPZy55vzvIW0pt1/lFz/HvNfT3s\r\nv2C0YnXS7yWZh4MuCE5G6asTFOt4NpIL+UAwsUD3B4yjYdsbKowMCoKrzw3m\r\nL36caQSsX1ZfdNs6lnlGOt8AdDXeCZGIIOvteS+OS0J7reLuuLUdO4P4Il0w\r\nnFXbKgVVpl6mLf+0QVSfnFE342Ht+I8iIUNitKecCQvmgpgvhYAkFbxuwZDL\r\n37ggA4bZ3shqRc0yByZDqva0B3IwSEC/saw89fOZXBYnVyW3WXe+E0iarPC7\r\nHzv8o27ua7KPr6rdPBOz0xzi4vTRwGAfwyg=\r\n=LHr1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.0_1659933630828_0.9694828951442294"
      },
      "_hasShrinkwrap": false
    },
    "6.6.1-alpha.0": {
      "name": "cspell",
      "version": "6.6.1-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.1-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.1-alpha.0",
        "cspell-glob": "^6.6.1-alpha.0",
        "cspell-lib": "^6.6.1-alpha.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.1-alpha.0",
        "@cspell/cspell-types": "^6.6.1-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "4c7eb0181563a4459da772fd736b252f07f020b9",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.6.1-alpha.0",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/1.10.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-mkyIgtxqd23FnYlo5kI7mDx8Vrc9FKA/y6wd4UJpAIF0XfDzZXFFRglJxaHf1aaccXbV+GfcgzbG18VpZmKmrg==",
        "shasum": "b1c6a0949181f3f41d977d87af87753044a9267a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.1-alpha.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164644,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCXJb61yflrmXyx/OHKk1/5lZcnH8vvMNU2RFWsI8LMmAIhAJCZO5FcXAA/W2tjuETrz7kLGmxj3+Stlj9ynT6e+FMQ"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi81v+ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpedA//VWVr7Zv4Wm+DzJ52t98fltslK1KK2iI+FZULTYteBFf4XfVP\r\nr6iVjtcVeuTZW10zCijObjhWsBpTcZ4w2UcpatUisvq6K8ZmLuu1WFnQJKqM\r\nXWANz1ZJv7XRWHmLiGwMPTb1FGGcaStbogzBe+SrqpRFvUWvtExtqiAJXjkk\r\nrrs3+Y3dLiPk3IxjVEWpQiv17TBeI1+q0UdVyX2AU6bw/ngCTXjy2hgpxXea\r\nw7oD0KMNni/mchRtZkEzT8Z4NCU9ZUzdBAf5zuWz6gvtYI4IUpy4txzBj787\r\nQfQHt7n5aS5cdSUhBj05AnHJdjlmZcHK6w1tn2LcP6bU9+Ih0ZqNvz614WVk\r\nhd9i+O45UEXJB4MmZtwDrYVJ1KvQR+S4vIspnIaFbnddJOnrhDb7sxY16JcZ\r\ni9la4x/R0CB7ML3iVZVayIc6nYUlE34CEl7GPOwDNc4Ir5i7Z0Vmop0XapK9\r\nwvGmT4/Z1lDmxbAKkIwD2crSu8WwDl38wFJ8kRq5gNyeL6l3J0/rSECYVqP1\r\ns1ILRhwlnvsiBUnZoWsPSu5qW8yDvmYFYu/lC527RV37rbdbyQ0lymWBeR7g\r\nTAcPxc6/ceGbxSR0cLO5fjQS+uZtHYDxGUHyGGqGl+bbB2ksYQ4vyDEmI1oT\r\nukepOiBlApTdc8ebKXKL5SFbaMq2RMdLghI=\r\n=Rzxe\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.1-alpha.0_1660115966471_0.5502810204875421"
      },
      "_hasShrinkwrap": false
    },
    "6.6.1-alpha.1": {
      "name": "cspell",
      "version": "6.6.1-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.1-alpha.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.1-alpha.1",
        "cspell-glob": "^6.6.1-alpha.0",
        "cspell-lib": "^6.6.1-alpha.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.1-alpha.1",
        "@cspell/cspell-types": "^6.6.1-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "00b8003dc1fb731cd3c49c1ab9c923acd88ca576",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.6.1-alpha.1",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "lerna/1.10.0/node@v16.14.2+x64 (darwin)",
      "dist": {
        "integrity": "sha512-8fSeYvhy4ShUNgSukWr6jkIKERpfRWWYTVbt6IWlIzdbCiGfdOWb89uKMsIdaxMUAOMBVWjh8l43HX4l0EEoGQ==",
        "shasum": "45268ad91fe90b38bfb44f5a9afdc01b7dfef97d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.1-alpha.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164644,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE6S5dEx3qmfDQasU+OyjhAdVKie30dwhq8P+5MdYyPNAiEAtEKDncq/C3vOnFPoVcZ5hdPLIUFyT0apdRd4yBfhOtI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi84eWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpupw//e21qRDGYW5Uq72bcb24LZl8oumlu1PciUBxvJ+lCaluHoVuF\r\nWh6dOXcfzb5k2zZCXy3seMQlA9ylBST/+pY0XttxilahAwTX1rEXbSHAafaE\r\nm4/9a6dT//QaFhBW3abwgHpMyAduFWZ/TdQoUEst4mpUZpAG+iOvyvj2BCbv\r\ntboKvcP0xXjbz/IOAEgA8RWZ7zNlexdFfqWnjmBl2M4t3Qyb9P+astYvvm0E\r\n7d6YrbxlfTLvph0iHhTjFk2B6St0dvdJLaa5kssDywfUVeSxmd5hhPuQTcc4\r\nAwnS4cu+w7Ng6bxWLeFWs1044H7HztY+FxtDr3B7l71/ExUj+WG1kTkJNn5T\r\nIf5ObeObnsO7FpA25Nn7HSgxvw3kg8dQ1O351h+m0z2ZcjFhPw/TAPMdhpYF\r\n/JZCx72SK8azH791bIV8AbO0/U562WThSyGCFz+F7bHbud5KCnOWHR5SS9hE\r\nG6sR6xQqCNSqnimX6tPCE7T9jqCiEMbgb/8xQOD84kOe+V1xnIVeoKRYGZfX\r\nn1a9J8NScK6+bOCTrgDtVx8m72DIVbZ0PcAebx09YepMZ+TobZAUzOo15fUT\r\nPPYG5oMq4hsl6Kq+OGJ0UOWruJD7aQgjoE3ML00I0Kr85A61kdzFzoqNFe0k\r\ns9YeM5ZUwyQzZpK7fngmdyqHVrfhU6jBBVY=\r\n=rXaM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.1-alpha.1_1660127126000_0.12046139120968591"
      },
      "_hasShrinkwrap": false
    },
    "6.6.1-alpha.2": {
      "name": "cspell",
      "version": "6.6.1-alpha.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.1-alpha.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.1-alpha.2",
        "cspell-glob": "^6.6.1-alpha.2",
        "cspell-lib": "^6.6.1-alpha.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.1-alpha.2",
        "@cspell/cspell-types": "^6.6.1-alpha.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "9bb5defa93582d5c27ff5be88006f33493940e78",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.6.1-alpha.2",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.10.0/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-gr/xe/x/bLdbu8vA+uZzN/V2SrfgSeSHB2zwY4EgaHf9XsQmFy5do5SpkPfJakndVM7pM+8gUloTviHd9GQOxw==",
        "shasum": "00cfb45467d86107784391c1434f6358ecb35572",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.1-alpha.2.tgz",
        "fileCount": 72,
        "unpackedSize": 164644,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCYBsGEnSrs8HE7BU5kqTzJS0RDzKFR0Zj3rcis90A+NgIhAK2nBhuBaNH1amphz5GVDUMBAf+ld06KVSLpBKT0SbKZ"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi86zeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoTOA//fUoc9EhcRxV8b5cQm6NMhYFMh06ZLiTrjnRp/Oqx5b495NcL\r\nQVI4KehAwNd22heZtF5eLE4tF2TMsPtmRs7KcyJJwd9320CTAQKq3iPnNUF8\r\nlvtmfERwcE5mNUTWalxvhGgXt4KgFBos7VGFgxi9fRJAdA/fvJ/bgUQjwbhg\r\nS8fbjv1J3EwF8zcDBhLgI8C9LAJU2oKF4UL1XQVPNLAPvcslYeYpUYLDn5Ym\r\n8kLNF2e5GYdhMHdDTCYBeHqa/GQuo9d/w1oUqQ6/mjSB6FH9OZUzR7d1qbQ7\r\nXJF71HxSzynd5QTBC7hKw4xhXOPM3VCrXUyeDTZ38nU6GkL8dUjJjHmlx0gL\r\nV9qJwnrWlVwvfyF01sJHwnHFiK5z6qH1PChLRxioQ0Na2M59Fnd+tf7NcCNI\r\n2gAxZe/kP5T2j1jXVTHyFtjGfJhV3Km8SAugM3WUmRr9sutVK8nWeizp+yd4\r\ny/Mkk3OwADsD0voWnjNFdBFa72c2Yn+O1YwB0ZSdJdUepLUB/wg59mwqoovL\r\ni/kmR0NiewumKjno8AZuqc2ybJTFobGo9hb0R1yERr8xT8mZ9K+ZSeau1ugA\r\naeyyvvyCAkJljIkqxQ1j5KCPMs5ia8mrUDN5jMcAAapnb/mpNQAS0THdumD8\r\nD2VW98L6mAt4TdLoyZzSxV+VCFAlWnbH8bg=\r\n=AnNw\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.1-alpha.2_1660136670065_0.3644645997265794"
      },
      "_hasShrinkwrap": false
    },
    "6.6.1-alpha.9": {
      "name": "cspell",
      "version": "6.6.1-alpha.9",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.1-alpha.9",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.1-alpha.9",
        "cspell-glob": "^6.6.1-alpha.9",
        "cspell-lib": "^6.6.1-alpha.9",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.1-alpha.9",
        "@cspell/cspell-types": "^6.6.1-alpha.9",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "0e128ed3a1fcc5f5e07dc1a528cd550d4d32ef4d",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## cspell for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n```text\nUsage: cspell lint [options] [globs...]\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-must-find-files         Do not error if no files are found.\n\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n\n  --no-gitignore               Do NOT use .gitignore files.\n\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  -h, --help                   display help for command\n\n\nExamples:\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files from the current directory\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n```\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 12 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cSpell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cSpell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n<!--- cSpell:enable -->\n\n#### Enable Checking\n\n- `/* cSpell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cSpell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cSpell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cSpell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cSpell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cSpell:ignore zaallano, wooorrdd\n// cSpell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cSpell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programing language it is common to glue words together.\n\n```c\n// cSpell:enableCompoundWords\nchar * errormessage;  // Is ok with cSpell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cSpell:disable`/`cSpell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n2. Remove any text matching `ignoreRegExp`\n3. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cSpell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cSpell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cSpell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cSpell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cSpell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cSpell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cSpell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cSpell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cSpell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cSpell:includeRegExp #.*\n# cSpell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cSpell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like #aaa, 0xfeef, \\\\u0134\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n- `words` - a list of words to be considered correct.\n- `flagWords` - a list of words to be always considered incorrect\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file typescript\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the e.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!---\n    These are at the bottom because the VSCode Marketplace leaves a bit space at the top\n\n    cSpell:disableCompoundWords\n    cSpell:ignore  compoundwords stringlength errornumber\n    cSpell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cSpell:includeRegExp Everything\n    cSpell:ignore hte variabele alinea\n    cSpell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cSpell:words Verdana\n    cSpell:ignore ieeees beees treeees\n    cSpell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@6.6.1-alpha.9",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.10.0/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-Ni+VUc6J+ChnqLdZ043sCPUzzeRetZP/6Y2fLyjwQvbdST1McNaF0jKdrkS5+7huGcPeJOYKrNwS8FykNW0ahQ==",
        "shasum": "65b6b5b7922e2f01d916928565b11358e002fa65",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.1-alpha.9.tgz",
        "fileCount": 72,
        "unpackedSize": 164644,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEFlkYd/VngQLhnG1SN/Q6Y2UXqrhhxcvOrf7YhwMMk6AiBClHIsp7qgvv2aGz7glrnB7NKVMxklcx6N13hyDZKK+w=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi89SdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrVSw/8CE3FNuIOnHHh3yjIn4U77zvim8fFjtAZY+pyP9y/E4BkTjWA\r\nNJLdcRLtFA0YBisj9ycBEXnQ6/G1mgJrNA5RDeeKGjyF/FfC6n9Mx2LqhKT4\r\nJJfJwTudHYesfo4SX1+zn+RSV6AGp4RGw/3RO/q9sUVpNm5v5d5LXEmXElSj\r\n9stjAHz/9ihiC6HaxnjUHD7hqTybn7jJL78gDIN9m2rMUlWJW6rsvIrgDA8R\r\nh5n2NeG9yv/yOupKPiKRPmXpkaPs/HrUs7E134LuH1FcKyqAvwrfb5AyEkZt\r\n7N4xGlVt3duCbRI2MGV7izf5ZTJQyhcJtRXLB0BRxKu+vuML0m4KWDgqRNrK\r\n1llyALY4V03wIoyMNab+LH+eSi/i1o/HVXeso0XI2aChB+CbKlTWmXcXOWOm\r\nN4EX9Exa2AamyO9WYYPf5FjobTo9ADFVrVwFHZB5KhYx++O8JOuz0zwOAUBu\r\n60Elnd2kfSx6Z7+rV1+q/NpV72llK8AI2oX2HWOoC4sCTth3zgmgN5ykFdlb\r\nACaxqCmc2Jf0l97rnQEuV0BSzTQ7jMEc4HbrkBWgvwnckhxxkFRjWdvy7fhw\r\nHHNgClvJRrqsempFk8FWQmATXzeCFkleP0hfrkaGKqDYxB8T+CrViIKnERZf\r\nwujr9nwQXxOfvCGvhdqAzcbBeqNg8YmRipo=\r\n=tD5Q\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.1-alpha.9_1660146845177_0.6669557374907304"
      },
      "_hasShrinkwrap": false
    },
    "6.6.1": {
      "name": "cspell",
      "version": "6.6.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.6.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.6.1",
        "cspell-glob": "^6.6.1",
        "cspell-lib": "^6.6.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.6.1",
        "@cspell/cspell-types": "^6.6.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.10",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.77.2",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "3c9c24d1cebd558ac3729d3fbf441e6ed751d8cf",
      "_id": "cspell@6.6.1",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.10.0/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-+mzcFfUM/+roBa2aCuLWQ/oFJ0EQqkMM7Yyjly3baVzXNCYoaxG9QrdVNbUSN6VjRdmpcDgHg5IPs1YfQmcZoA==",
        "shasum": "8f948553d96a67bcbc0fe55aa9814b3a6ab5b0a8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.6.1.tgz",
        "fileCount": 72,
        "unpackedSize": 164588,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCXHcC71CBkgqMVfzGyvnUBAf1lqo5sTY6H0wIkk7WGxQIhALJRyeDNHSNU+NapvA1OCsU6xsc67G4ZhCk24naQ7ffG"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi89dBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpVZQ/6AwcSM11JuYyLxTDdhkLevznHxEIecXOjm6XGGtCQioTlOeKu\r\nKbaUgNjooHCncFxqw+2u1Xmapkqchx563bSIadQnepgHb190oWPPx9mcZEKO\r\n4ziLfBRf7hSbv66AXIktDwOtGTgH9bmCHdm4r/5uplpG5MUQh46rRBAykRyv\r\n1AtOg0eHK/JXbW9qtIPzvmAxNSzB4KW+Jn/kmW1R57KEd27kws1pDBzs3qxD\r\nxPvq7iJ0mWdP+ga+ze2myYPsJDIzFwMBfd80hvB7+osz7J35TxaSRBipK5Dt\r\nMT9wRo4DOvM1zXB4vrXHMmf0VcfZoT02sGZvwL6sHx3iE1LVIYwBrYUioxO0\r\ndVhoY48KdKs5jCVyFCwVrdpKLJ3txuO8ZSW4JKvWxycdsPdaLiLiZLOvTiWD\r\ni9HqryGIdH0tRt+OHdhLf3zVwsaIlODcVzarsHiJq4tH2H+2r1LqI3+t6X66\r\nLGvvoHbWkDjt7TqVznO5TyTriT0qqkcR/QDPKYKnDw39ZX9yESo4/jGPklvX\r\nB3Z/geFeXTd2E8Mkyh16kpxvZYnxzkydvQoXvGhTRxGaXDS4lYCBBGz+tafe\r\nuBpzmfbfHlo8vEwqIPKD1kORwd+7G2E9TzEESitYpd7i54iShUmuuyPYe+yY\r\nDBV3xBZHJuPK7dxg+zb27tOT2R3KsXb85+0=\r\n=hDMT\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.6.1_1660147521182_0.9411116725671091"
      },
      "_hasShrinkwrap": false
    },
    "6.7.0": {
      "name": "cspell",
      "version": "6.7.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.7.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.7.0",
        "cspell-glob": "^6.7.0",
        "cspell-lib": "^6.7.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.7.0",
        "@cspell/cspell-types": "^6.7.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.12",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.78.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "3a7312a15d2df1507d9e01863ec5842f5a99e0cc",
      "_id": "cspell@6.7.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.10.0/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-/Ymb8dfwxD+/WnLb1HQ6xlONC8oT1PexdjuE1l4SsHdS0xVMOqvGfVrLUwgvm0pwagpqsGuADTsAdGuYkLS8yA==",
        "shasum": "0b0ce2a18d80ae6e6c4c1b7ec381f6093013914e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.7.0.tgz",
        "fileCount": 72,
        "unpackedSize": 164972,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDKB8HOiPd6+FdrMwsVnIm2nU3X5XRAszSt1hDj8i0U2AiBRqIbi51onT1xk+hhRHURTBoyyoDZnajMFVGbGvDJg4Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi/m86ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqQPQ//fChUf9zhRfNppDZE9xrIQqGlCWFh0gd5LP0Rz4NXnsMCFfh4\r\nKoe2pr9llnqnp8thhajjnjvo+ij2wDdfoEfBeoQO9fQteLiIjrY2gp+T/m8v\r\nNQA6iwUE+BMFHUZT0Io4AdmAI0asHUF77zz07s1BMiwhXOauSW49hT19jPUh\r\nZXTRYcnNHg5d62EbzU6jlbNQxRoeyZAWoHCaq1T08ER8j94P6ovDt+CgEJ4p\r\n1mFwJXupCGXq4zix7IYlnnibDoXRXhU8+Dz7q6dJd/iywtuPsGyp8KKXJ7E6\r\nJw96tcWtUTjt2Ej2PXmoj2cGEVhXF7OzI24mpo90IlfRuEHHKmUPRwR3xE8F\r\nb3LjW/ujypaHvnO9AxssIeFN3S0TAifvTwBt4cqIF9u737zJrTo3iM7HHycn\r\nN4fBW5VA9fqSjubtiIjIEmMNooHiaSCS4UCsZ9q8rzcvMdrgqUXRu7zyIdSP\r\nOuKQcTgUpr/aJUc+7YOPulIwjg55/FuYOOLlve0xPLQybtu17J9n7Cmy+nCo\r\ngSLX9LJU5iyGHH2MuXGi5X6SbIcDYMNPJd3AO5q044sNRDHHy1rMxMavyrw7\r\nhRvAGU1OqKAyBkIfMnQEAED4Vf+o0ioN1v3vYlOcP6tZ013oh+12LYNeewnC\r\n2IZp4gf4oc7U4l6KUUCVF6RAzqK8IO5IBeM=\r\n=Logp\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.7.0_1660841785842_0.024592711043637028"
      },
      "_hasShrinkwrap": false
    },
    "6.8.0": {
      "name": "cspell",
      "version": "6.8.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.8.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.8.0",
        "cspell-glob": "^6.8.0",
        "cspell-lib": "^6.8.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.8.0",
        "@cspell/cspell-types": "^6.8.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.12",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.78.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "8a1bd03222ffc9776c2cdd09180db6150abb3f25",
      "_id": "cspell@6.8.0",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.11.0/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-mef1ECEw5bRdxdUvxuf4q7pkUDp9PRaPaLjjcW+v88wp0cyXWhCK/y/MTTa5o+xUkSvHqPXWF1E83NmGey3ZTQ==",
        "shasum": "de3767f80f6e5fe1c0e9a9826d3b6d799897355d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.8.0.tgz",
        "fileCount": 74,
        "unpackedSize": 171610,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDVp5AlwPoOZo5gGdlj8XZ8SL908Ftn1Kw7EXSJAX3L7AIgaScL5tdXIkGnlZFVuBqYjz+PT4XRTBYl4CgywzDs3lQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjAgYtACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoZ4w//Tt6H2m8eS8qGC9tkh7fF5W9ux0FgVSDtCGNA67ULkHh0oj/f\r\nFmrR8Li8kYM2tkDGvKHF5Z3TWw3PvRrBhRFzZFw/LqrkZ8Ui5g6w+mv0LsZP\r\n3z/BJT3jtqLLmmn3o3p5orSsNJGbaua4CEG8vNvm7loQldeN9Rr7v6ONHSSF\r\nKXrDQry5cNMUAF+WFC9tmQV3B2sbaAMY0GSiPmO0edeqtMaN5lpRSXxHSaBt\r\nah3NE8ovAZ+N7wVCu5m198a/jPZ8U0XkmfI1FFHKhbwmup6CZqd/RHfuSu55\r\nGO1SE6QrcYbBEGQQWWgyxlRA9Vscdn1j4ZkY1MSLjjJqDPpPdzVhUBv+8kQY\r\nLZKq/ewkwlEft45YY5v16628EV09s80CbVJHNeHuyKrf5D2oABNb9xXwjNmF\r\nnQskpwkq1RDsWtYVbJetiWcPX54Ymw/YylAOUHHcI58cJxFLfP/O3wo3lsoT\r\nopaNaG95ATlRqqsodMHpZcHOsh/HNr+AVdLSyTHznZCgg8nWFUildhuQ11jg\r\nK/OmcJpHuk/lofB8WR8F1pHXUETPj9odxde7D1tTYIEOfhKe5Wcy+anjxCuN\r\nEijI9uKB5l0Z6zxTjziDSj2KG52r4aJiJQB/MJQzHI3ImRYRaw+xT0gkjc7l\r\nxuxmrf3Xw+w6S9cKXcexYg7L50M/cNNaB/0=\r\n=hN5L\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.8.0_1661077037423_0.03263649375432531"
      },
      "_hasShrinkwrap": false
    },
    "6.8.1": {
      "name": "cspell",
      "version": "6.8.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.8.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.8.1",
        "cspell-glob": "^6.8.1",
        "cspell-lib": "^6.8.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.8.1",
        "@cspell/cspell-types": "^6.8.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^7.2.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^3.0.5",
        "@types/semver": "^7.3.12",
        "jest": "^28.1.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.78.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "3c5c8c51b6cad9bc728f3383f5fe6ba34d6d559f",
      "_id": "cspell@6.8.1",
      "_nodeVersion": "16.16.0",
      "_npmVersion": "lerna/1.11.1/node@v16.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-w+MCy9a7uMu0bwwDuFJy85SbF6pikCc6fzQo3B/hXuu+xrz12TCbjsXsdezTXl9YqPsUDN0A8A6AwHEN7t7GFw==",
        "shasum": "e82bbb2cb9a1435278d56718c2b36cf232e36668",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.8.1.tgz",
        "fileCount": 74,
        "unpackedSize": 171618,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCkkXCdxhXriGKLPm2Sktgfox+e/IYOyNJTdhgnAfaHBAIgHEFBDSt+lREGXDbWLSIaFctZCkGr7g+mnMV1mNz18eE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjCKTNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZMxAAomfcMuSDPBuk8S/uctaectisjHFV2helft0dv07WzbDHPJzI\r\n3HOp3nyWWzUsCjxeO/IHlc9P+7k61zhXGb3iASXTSKU5LOZCVhf/P/p/R/Nz\r\n7+KdJzpJAuMD9HYnMe3cRdaFFPjFuUm3h9q45deC4HeisSR6ADx7COt2VOIv\r\nOf6I8gaow7d7bKtdLUbGL2gSu5hgzHCwE320ZUYFw9oK8BcBobiW0YHHRQYW\r\n6EGvAJnBRrXhUxSLQPcZ36k0bBAYpFj6OnHVViLatRwzClVWB3N9fojeiKsv\r\nc5YeE3ocM9oAA49/6RpEwuzNlH+eRMVsH9MlXvN1Co+Dp0eHVljuO4XaiVLX\r\nelzR0MwaObXmaTpHpfZu67Mg3DGVvcuuocYrtSRrus7GaMhOmBKV195eJdJ6\r\n7ue0dpqDbOLSWK+nHrjH5lufhG0iLXnRyw8xlLrHd/cxTVzskn9xoblnnX3y\r\nkTs4ANf1kpL7C8yxHEb/K9W2cC/WPn759hXgsrvthhaL6AeMiRyP7zy/Re/f\r\nb7LYglw6IS+CHwjX9EqhjVYIe0sUbadlSixLU0+IpEozopCvS1gW0YUUs7T1\r\nJhGVJq/yh3PnRa0oKKj909sxLmQRPVsGMZSA7ov3S8jIcYx+zyI8kfvFU9FE\r\n85F5S3MdqeeK05n/aKSH6g3bQKYG7JQp8c4=\r\n=FBgm\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.8.1_1661510861161_0.4199498093441656"
      },
      "_hasShrinkwrap": false
    },
    "6.8.2": {
      "name": "cspell",
      "version": "6.8.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.8.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.8.2",
        "cspell-glob": "^6.8.2",
        "cspell-lib": "^6.8.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.8.2",
        "@cspell/cspell-types": "^6.8.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.0.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "fb47a5f2f93d333fe5540142f3217e4981a7c27d",
      "_id": "cspell@6.8.2",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.2/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-WHF8tQXetHgAjyG6f0rDhWXRQllSpZULOIuDZj6PeZyHubuObzsMsW0asDvL8j+EGKXr8NPo4J3vjxahYmSJ+w==",
        "shasum": "fe3780f0cc25951b462b3b6978a30aeb07f92f7a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.8.2.tgz",
        "fileCount": 74,
        "unpackedSize": 171618,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIA0lOuoEwleoT9W4eZKodVVAZtdgq4V2/8g6HHfYJ/k7AiAHO3E1xjtJDGZ3QI0++Tx+5TpIp49SVeWg0KCYdyHATg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjHy7IACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp6IQ//fTCwFAtzZSMyZNZSgySXWuR3NYijBqDreuDkUVz5ZTKYUc23\r\nlCjbjUAn4QMAcgZRoE1kE92v1E8Cy2tBZBm5qmqFzEu47elaTLMjI4G6KcWf\r\n2LhwmLNVqKUGvSpm4GN0a7NLTq6sFGIHCoZmVWDskHK8RGFgCVJPPryCwz95\r\na3sSK6L4ElZ7sXHY67BbqCqL8ZsCAGF7vF9J54GyJmGXqE3mMBZfSvxLDXn3\r\nZZ2UavdjZZK/fsBqnxgfChSZICouSuGTcx8D8n44FAkCjSW2pcHxSGH7VqCD\r\n4oQ0DzlaOZM5n9AALnD0NEorgQJTl5k/i23EEp5br2rLlcqCxjPK7tGA8NFO\r\nKg/DgIjs8m7FF5eSDKBMdTBnr18of8BYSpsRKpf5U0nSXnS4ZUq9o23o4HX4\r\nj2zxA2iW7Qfoxwa9WIrgwGXPO5iCntHH+ArUwufHEjwvqFW3y1W5mB4VaMUR\r\n/JDjrfEAAMM9KNtqzia5aTRNV7alfDf1z6SXRDsYU8SLxsRiwRo5syffQ4dd\r\nMLTruVwi0o9NSI48gLYDnwawiqvViqUIzIrPxjGGSXphebO5SgBTrcdsK03m\r\nRJKLWpDQgxLGjta7oK0JiMjXikT1fuqn02pypQDSOND7j+0S7sYhkzKdOTVX\r\n/cT8DNGceRvG4U5s58RvuclWAphCt6nZgXg=\r\n=dH0F\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.8.2_1662987975763_0.5586353801267352"
      },
      "_hasShrinkwrap": false
    },
    "6.9.0": {
      "name": "cspell",
      "version": "6.9.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.9.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.9.0",
        "cspell-glob": "^6.9.0",
        "cspell-lib": "^6.9.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.3"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.9.0",
        "@cspell/cspell-types": "^6.9.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.0.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "d68b540deb382bafb2dce1be8f14935cc0d3cd5d",
      "_id": "cspell@6.9.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.2/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-2Bqle0F67jRQRgKZGajAMZJ9/0C3CZDrXZ0pdU1O0zwCD4fvC6Hd8pKw+PSd7AYTsnw1Dulh2JkvZBN2f8bJlA==",
        "shasum": "cd67b690d3b9e94143ecc744867481be4499b967",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.9.0.tgz",
        "fileCount": 74,
        "unpackedSize": 171618,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBZDZRP4pFWoWv9iKw3egjMbXCIQFUNhGGQCM3YGMTWzAiEArZtwUhwPGxon0slb48STTMR4dPYF93ipfT2CfwSqP6A="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjIyfbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp/mQ/9HauviEaT2nIN9AsAfak/mTlTYucRkam2oNKH9VQ2Ux2K7oYA\r\n61n2PI/cH0YKhvZImkh4mXMTmB4GTnqekBOgMPSL371uf7eW8BSE0rfqSH0u\r\nxoaK6fUhL981b/gqrrwCr65tlx34NQOK8SPPTf9fCY/6dV3ZopiKdMUC+lRc\r\nFn97JsXBq/qHX8S7IwIXIvB/14cSCXpJhZA8AwQd2eijeFFlV5sJMZifHAse\r\nx7Op5wiCiEGgPPEPOduAlq7sW4lKIPKziSQiWR+awZ5zVoFBVD2mrrkEs6j9\r\n1lHOeG+thgrb9nq8PXx0v44JrF5OmGBZcgmKDkpcci6KWzW7tfEM25DtRjb0\r\nnKTRyhY1OjDx/zudgRrCJw+aqFLV/doXZbsqtxeOFePyEQkBeO740uTHfVQz\r\nMMh9862g3VrncucT1kNwP20Zn610S1t3Q5iiN1GDhJlrmDWq29ZJhQ/ZE/+L\r\nwgTwLJWcxudSqzTJ7OGocysuc3rC8Wrm/dUI7CT5ca7Wl57vdyP9IOU72hji\r\nCxQrMK5T9kWGGYC/wyv0J1admEZ/yvLepIz4eaYF3bsKclZsYcS32t/vxFGd\r\nrmoj1Py+76Ldhe7d6PdrsTfux8A2bp1Nj0k9EnHYnE0xxwh3HQRHFHwf5tM4\r\nRLRfdgNhNws3wNzlAGonM9HBodBx4Vb/E1Q=\r\n=AbvW\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.9.0_1663248347415_0.5087043683068915"
      },
      "_hasShrinkwrap": false
    },
    "6.9.1": {
      "name": "cspell",
      "version": "6.9.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.9.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.9.1",
        "cspell-glob": "^6.9.1",
        "cspell-lib": "^6.9.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "3.0.4"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.9.1",
        "@cspell/cspell-types": "^6.9.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.0.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "e405a2b1dec307888369cd7aafd58c1b3908d97c",
      "_id": "cspell@6.9.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.2/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-H9EFIcXZSAXfJXjT+cT6Srt83M5AmY22/dH3KfCGkv2Sa+dMlooJHJXRjYGJBwQ0PbrXRPMfXGKBffxYu3EX1A==",
        "shasum": "ad943346497ddb75d473fe99e3dfe4ec21ed4bf8",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.9.1.tgz",
        "fileCount": 74,
        "unpackedSize": 171639,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICuD9XEGvVNJOVAGl4v+ofuJPP4H3/lEfBBBhR4H+tYSAiAQeXsRTTnLE/dT7fv2FrTxvA6CbVFREa33f8bCRCYvXA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjJuCNACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4cA/7B/TUJXi8/2s0Ej40Kf+mmEFAbBdZJX30LtN3MABmhJGB1huV\r\nv+u9RsmmZ69H+2Sc8GawjGcrGC4GdcLOWp4SvAtcF8vBsEJJ8wGP/5yvQwFG\r\nkwH7BbynelKJZCFFQFnz/X7LpMwGQrLNF1qAl0L1WFEpTZq8Zg2dU+l+sWAm\r\nKTfbScG7owIaszfaSr04wCASgntQ0wqgFyRn5OVhIUnhHJSyEyTVG1WHlnv2\r\nE2v4+9/WKIJhMGGV5cWO4aMqRhY85upgQ0AB49eWKMJl28k1tuZg1PlDWsqT\r\nhsWD7itrKjE6IUyJg9hSZhWljazDRkG/A4N5gbAOx7vaHtlgW2ZF4PL+0EAZ\r\notl1CssgMgRH870HDD2sKMlvDX/sGvil65vcYs5NN6xgI4FQF9d7NUFk60bz\r\nQ8Xl5wgmklaFURSVR0271bLPChv676eq9oGQ5yP2NzyolR+xby8qmDfROwO1\r\nC0noftzFMt2XgWfo5LLkOEQt7M/NlqKr+WjRJ55RKr11ej64embVJqk22smr\r\n/DtladSDgDOlO3GNCnS1mMJlwSM7mOwdvMzkf83aSdXpeJ0kjakWF/ut5d9g\r\n6WtmK4pu4GZn1YULy869Ju/ovwHskxX4w8ShWKsphks4nKbvIKjjTEtK16ik\r\nUkUAzTpq6ofcgw9yPH3cjEPrXcCxO8EZOl0=\r\n=3ukX\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.9.1_1663492237382_0.723134785130809"
      },
      "_hasShrinkwrap": false
    },
    "6.10.0": {
      "name": "cspell",
      "version": "6.10.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.10.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.10.0",
        "cspell-glob": "^6.10.0",
        "cspell-lib": "^6.10.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "3.0.4"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.10.0",
        "@cspell/cspell-types": "^6.10.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.0.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "244f2ff310aa64bdb41cf93e85ba9e9f35c2b937",
      "_id": "cspell@6.10.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.2/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-8+mqR+DZARwJgjlY7ioQ4dGxaZS0+hT08HwoIUvNoo7xjU2K8zJjGkKhAJxc672ux0wD6ovcDnBztTaR9QrhNA==",
        "shasum": "0e3be154cff29c01362e39d708d5e79c4639fd30",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.10.0.tgz",
        "fileCount": 74,
        "unpackedSize": 171646,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDYop09bxULVceHsWHSwdNAilBSox41RhmXusUleEQB5QIhANsm8zOVUWpFbqM4/nXe+gcPQmThlnC4vGg9UKIdL7Jv"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKDLJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoGEBAAkVk4SPKe28OWMgpxKIMc7WFMJm710n/ZRSZ8rEfWnlmScflN\r\nBaqn8C5Xp1LSx1ZLJ8t/Vg+QevNZOFPp4ViLK4P3oqWt3VIHemTw940dm3fP\r\n8tcO2HhXakHwkZLGDv6EgYHMvQhxON+VUaqwsTAyqbe0u6CsXYx4n95zrmvR\r\n6f+AOv2A/QrtK75xb8u3oVoQMVy3o+FG+lw3wgwQBa6CIyjXcubZWXtkKz4y\r\nUKufFsxbIb3rx1lHdwFwiIQFZzeThKUjr1c5rIpQ2p/BEPCNIRz2BqtZ7QNE\r\nRc4Y9Mkw7hbfQ5lr8/H1DpR6g18Sr9kNgH1R56FpHvzpjxCH316SnV4ZVFVE\r\nmRZoxjnTFdUVfQ67xo0ZeiAccmK1pdoTqPOonJls4XJd2ahVSXZduIA4Ixg0\r\n1H1M6UtvPtLplQSUCkfXmJRKVGcF45a64nJVgF6foIxr0lz1SG6fo4PTiaGH\r\n9FIC5/NIrwMj+8coLiL+ckWMTv7qvW+04NvJsBxx56jlavAnLY8M08Mduvcj\r\nVGlXVgYIsP1ze/RdqcT9DVb7hlXrNJXjdvyQ4mtV8VW7HQbkUMGGl8ukUzjC\r\nLLAuSWv0eKZsnszQsE3QTGG5I31RmXhl08u9Wk59Y8mCo0wG4n+OEpB4putW\r\nlkwiVP0HzYEAWOlZjFgmWPeJbWpN7O4sFtQ=\r\n=m/dJ\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.10.0_1663578825068_0.24625585724078491"
      },
      "_hasShrinkwrap": false
    },
    "6.10.1": {
      "name": "cspell",
      "version": "6.10.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.10.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.10.1",
        "cspell-glob": "^6.10.1",
        "cspell-lib": "^6.10.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.10.1",
        "@cspell/cspell-types": "^6.10.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.0.3",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.0",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "03625a3f7ca4ef85f3549ccae73d90d2cd3ac0f0",
      "_id": "cspell@6.10.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.3/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-dO40EnUDlYZarnuha013Les7X2nVoHANzPpTPJYfh4AidP7WvMpqDaIdVODRxxjdjF9sYYFdkyM8xqmAga+3tQ==",
        "shasum": "19d4bae171b8cdd3d079d537d5bd0515d6194925",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.10.1.tgz",
        "fileCount": 74,
        "unpackedSize": 171647,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCczDfyJ9Yg2E9rpB7M60Z/2qToQ21iDslxoXv6doh//gIgaVd8SF9h7Bgtct7fxPY4kP/+KMCUFdjZPUWa+yRYz+Y="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjKYNJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpA2Q//Yro7bxTx9Mbwmr0san6/LhKQP5gXuAUGvJ7OjhP9xSq8gZkC\r\nm5Z5L3uSZcmfkdcOQiC5bWQiVb65E042UUK/PT1gcUWfhjBErtFIbbEGDTTv\r\n9WnFUh8A9ZNvmHgNeNM9Moho+nEGaU0yVY1GpUEeMG9C+aUFxoUMmtoebz8g\r\nGSaxCvxxhljepI5DndQYIMNS2mLWjdr4q999sfjfTNsJpvKHmZrNzKiTGfan\r\n6ADD2xUk4cbEArf4DRgSF1KM4k5I+Ju5/Twb2/ayHYa4nzoE32OUlsUKSeOf\r\ni8/VVNL4YDVQQhWpQjSwrE9Rw8+N3V+kF0xn9VknEJJRhKX3+21GKU8Hqdo/\r\njUZrja7FF0YdpUueD4+DwZy+dlpkrwZouY8L7EwG3C0UZSU+7Oh5QXl6waID\r\nD5WrmattrXeTRn29TxYcWgruAPuPCTb08P0HFJ/hItbqpkdYsjZkAw4WF7xU\r\nRcEqbev18+7mIAq8Oh8e7kxfd+dqJUxQQLCLc/Wv2HoLnTizmzMRgb8TCALc\r\nMLqbVD4ewVNZBRhQwsZojeOePkR1eQJCIha0rckmqxW4/zPvQreDejMwpPtB\r\nQD0z1Ch2c35Ei1rP9avnWTrFhB5l6kvUxDmqUT6eSSJCbTT6k+fPf/lvNg6W\r\nDz2l746ywlLxz87fY9Gg8Ab1e7oc5lKNW5A=\r\n=+9iK\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.10.1_1663664968842_0.8050495711995174"
      },
      "_hasShrinkwrap": false
    },
    "6.11.0": {
      "name": "cspell",
      "version": "6.11.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.11.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.11.0",
        "cspell-glob": "^6.11.0",
        "cspell-lib": "^6.11.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.11.0",
        "@cspell/cspell-types": "^6.11.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "664676692898c3b6aa150fb2c6656b56f49a54b8",
      "_id": "cspell@6.11.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.3/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-USh3KdXubuKlexTwzIW+74vrZvc9GL+E/hmzF0YAuzbTRooNTuzVeFOmrkAde5R6krJUnMMR9kXdTNEdAD1xfg==",
        "shasum": "ec805d2b83dd466b83403da8f1001e33cd741462",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.11.0.tgz",
        "fileCount": 78,
        "unpackedSize": 174940,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDqYDLFXlBLjtxSXr2XcsDCg1wphSmlSOmPG6D3puyjKwIgILJpP+aUKI43CwrxKgP/5y5KWz0YE4FIIv08tkTXsE8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNktUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqFng//U5vxJc6lKnqD6yPG3+uwDm61KoV1hUd/HoRBd6LCCDVdnpgo\r\nYjm5N+ycoQj3nSBcanqI/sh854ehYnq+I6uGsc65ycNSI0pt2A4AMbpXb7eH\r\nDLfRjIAhlpWd89kR9xsUKAt0LAnG/BnxDAV0FKKHOpCD+7abZdG8LT0seXbh\r\nCVfThekOIoj8ulxBCl09+56075zrT+ZvHhFsf/hTibUPgnjhYSgtPCtU5vNq\r\nxRMVnh74+Et0QApjvrVncfQOhyezgUqEYYdnCxDXeRN0ztVE99gjOvOuVkaG\r\noCDHuVWrI+NXI88jQUCMq+xx0KZeEbyvM2d70hBKU61HFa0krCLG4q6IrfeK\r\nw2ddNi+O4bc2NRP4fRdwQhoKCMpn9ayOtcIk1Ck7UjjLF/4qPnZlOmrLrUvA\r\n805ng1NehJ0HzsSyCDJg9rj/ZNjumsw8vXz/xhMjvXgt/SqVY0wSfNRIDN+J\r\nv6jqTczC+LAGWejp1w/7vMccAtiM37BSDJdekzJQ3SZDiZm++pZ65O44gDkI\r\no5MRgb1z6byuoWW2s9kHVogQqDJb7GzgWmgtVHbnHsRF+KcQ9Wq7ax10BO3W\r\nMMGizzAu762rj9LvX2SnDGgXXJLAnyI00nuugi+rh984luIA30tGC7Od9Dyt\r\ncr6dekDN9kpArPh8wpNSCBcvpgZOzyh7atI=\r\n=aoTk\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.11.0_1664502612676_0.8977312328262463"
      },
      "_hasShrinkwrap": false
    },
    "6.11.1": {
      "name": "cspell",
      "version": "6.11.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.11.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.11.1",
        "cspell-glob": "^6.11.1",
        "cspell-lib": "^6.11.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.11.1",
        "@cspell/cspell-types": "^6.11.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "1a4559d3a82de15c7442ec15dbb3b7db99fb355e",
      "_id": "cspell@6.11.1",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.3/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-HgbyRZGESkS2l5OTgyxnpPS/hu6RdmpFnF8dwyMM8HcZOtbs+wFYnANHd8yMm2C7FGZu299A2vQ6/nL4eerTOA==",
        "shasum": "3b3d902b53249e7dc55dca66faf84a385b2bafa2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.11.1.tgz",
        "fileCount": 78,
        "unpackedSize": 174940,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCuE5Deuu+6oxSDge8vahxnDmlmQrdvbq495zrTYd/cIgIhALPYa8UgF7LzoHH6/+K4V5jMNqW9cBbpDHD1X6O5LEZ5"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNmJhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqqHg/+PRZ06jJuFk+4osMxEXaSd6+gBKNjXexKAmG11OO9iWga+PIN\r\n6KPCquV4GZ+VRvQRfNkzK/R854hFpSum56BHw+ejdjqYZjAuXSj5RpHhqo5U\r\n/oBJrxBQpUDN+Ty1zLH/dmSxHZFjCQHp/+DdNRg5f0v0CCMmEJ7yaLlJTUvu\r\nOMhmWwo0gav8/SXrJtoEdOOOvMnWsWW9TgwhAGZf/n6P3g5WRsqXsERHTawy\r\n+PbOXdqQI/42RNrKtV2ld8jhHP+k4/lCw+nlwANJuc0wihdEe7g8QKH1bdkf\r\nRtcGU4BngYxl52ogK9eHp7wZQ6Brpr8hQp0WOKAZosx1E1bNI3ZTV16guMXx\r\n4i5n7s7sLrp5tlvNakpw7GUSbFAMA1UXsMCslm9lsOyA8QA7tgisr44uQZTP\r\nzkSQQCZfWal6pyhuD9lYIEHcjQS1ifcVBTehEZndTizmstGwCxiQF4Ym7voa\r\nUs/b1HeBXT0pL4pBqNaiX4yJSFNjqHQFgsKnvvBRNlTImObvW3ZIOpNhDO2e\r\nhpKm+HMtfZYX6mSmg+EIS0EgllCqAqQqZ4Um5y0Eb3FMegNpblaQ6WPKwefG\r\nxg71YZxRcJAmtQp4jRQDzsAZcCztlm18/+6wSNdIZEIySnqk6asJvQq6MFVO\r\nWOUMizRAc2Q81R+eE5BrC+DfP3W/FDR82Zc=\r\n=CEmz\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.11.1_1664508512849_0.635820729412792"
      },
      "_hasShrinkwrap": false
    },
    "6.12.0": {
      "name": "cspell",
      "version": "6.12.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.12.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.0",
        "cspell-gitignore": "^6.12.0",
        "cspell-glob": "^6.12.0",
        "cspell-lib": "^6.12.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.7",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.12.0",
        "@cspell/cspell-types": "^6.12.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.1.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^4.2.2"
      },
      "gitHead": "211105141a72268d45710661d2a9b15656ecf65e",
      "_id": "cspell@6.12.0",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "lerna/1.11.3/node@v16.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-ny4xVEPYFP2jVf5w71Mnk4HKj6RbPH+CMSzUrOMbYVVNnQUj3GLfzy5DrSFLG0zGa353ZRC4/s9MsEvnAL8mkA==",
        "shasum": "b0d0be78304dde598f79262df26e907d3af1c4fb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.12.0.tgz",
        "fileCount": 78,
        "unpackedSize": 174940,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCQ6hetOMIdeojuvTYAOv15SYygPJQwNxnLMcIaPi89hwIhAJQevGzySKDHoizjkQtSA5FQVU8ic9mpoVhZgcDKdvaT"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjNtm0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZcA/+IjVRUlpAKjM7qzA5CzpI7yvMQhwnqFDEdN+4Ejh0kWhybdtW\r\ntaHY1iY9ArqG08bcAtXR1M1UY90sPdF9VkEApzXdd19C/UAETyXn9djiGmzt\r\nALTt7Hvk18tJN+nd/i/97NVm3ULkibCx/e4unyl5lsvAmVoIV3mKIAP87tk+\r\nAKC0DBnnLIKbhBPZHrcwuFuFaqTA0T9ELk1f76U+xY2Uft55Vu1tGM+nZXeZ\r\nZJEgy7DgWsEcfGmlagDLXHJpIwK2mQyzTA6xPGjgoVIyJkocpOTLizqRzX82\r\nkNnWG/S/VlSqDE7A7RtoCCIfYb7ES7AnzkSy64HB3XwhL1Dybb/84BNbHXFk\r\nTu+ISxbXX4MgcGSesdsJ6lKJZNivWwGuJu5ZzCBfUZwFS2S8rGSH/wpjcUoK\r\ntx0PB9bGsgha2pWWcU51ODEHgjmldD9ByMT1AgNdSEBi52WBCF7V2x6oSa/9\r\nLOIhYguJi7bkZsVf5bjGIuv18S8An2ZLlJej6iYhlX6sRaQcxboVF6Yo/BL/\r\nomf1qKaZZ34wydUXyMu4oGgdeUxMk8Iz2BJSdFnFdi+XKKI3t8N4+GQzRfEv\r\nsxuDMnhg1UeV1rYpNSJJuuZxXqtSKKoB5zPtopSL86tCKjXDIQYkVyfFXiS9\r\n7hQKqXBha3DKs16Vc3npdgqqBTI7az737z0=\r\n=naYl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.12.0_1664539060369_0.5579597018596862"
      },
      "_hasShrinkwrap": false
    },
    "6.13.0": {
      "name": "cspell",
      "version": "6.13.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "^6.13.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "^6.13.0",
        "cspell-glob": "^6.13.0",
        "cspell-lib": "^6.13.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "^6.13.0",
        "@cspell/cspell-types": "^6.13.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.12",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "e111bc5af5d1f578dbef5454cfa23b6f2b28050e",
      "_id": "cspell@6.13.0",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "lerna/1.12.0/node@v16.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ShmjjZVESmZ6u4R9xML9LK5aQnyO7IyZz5bcheGr2C4eYM+3aZrTR1N5RqDdDKuSgZO2Q9F7MEcl8wV+G1rFvQ==",
        "shasum": "692eeac60d98fba45103114cab8e8ba09d34404a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.13.0.tgz",
        "fileCount": 78,
        "unpackedSize": 174940,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICfptgZY0TMeWUUjkiaKhlTjP9Ro1Sa1NqEJzjPZlSsyAiEA7Vbr2vcAzZWgqkhyR7TMjbjJfgoKuHeFTcMZiHn9tHY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjWzXXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrR9Q/+P94lVtWkD2pKJpHbZRJP9fBpib245aT190fLwUkRaLsd0kp4\r\nrRYijzRi/KSDHZBbhg5kd03HVEMAS5c/poOBRErIqf1tjSQoo092GmnFegwr\r\ncEqFA1ucjWyotQMeIzQZ+k/AFfOxBVFvueVEARC9CisE0W70zv5+KllE1WtN\r\nZD/DkDidQWb0kcOyoFJ91LNneZ2jBXw0JZ0znSjpF/7VqizknTimPkTbQb+A\r\njqRGws0tpl282s0+57DCYbbK2LpYdSUOiI24MiH3TlAZ7fhEZrYws0+7MpF7\r\nVlj5IimsCsupeoRlx51L/t38WnFJ3vCin1FFzyNyqBcqUTghIBp+52fs4hPi\r\neuTm88+MckTEzL8gWoq+N4JzxaYksMQ8AcayM1H5+JFIoXMGFcJJYLLTm3VS\r\nDwoz30a360eK1R7RWegv6/ecwvPvaYEVIRllkHc0cMAVWn4hGjgXal92Y/A4\r\nhh9IgS+G4397/dq0WtXw0KMA+FG1Cy6R7t3yMhefePX++oaUlCDE4nT29Ud5\r\nDFsTWuwC1I0puOoBGPGIJKaJAb4GkgOp2ruZQVNWyuBDoKoAWaLjMYkA27+B\r\nx1S4xEHSPXnjGOCw6j1MNz6gjRDORrodJEq7Q6k17HOQaFSv7Pm8Y1pgJGxz\r\ngvAU+ZkK2Aq19bSD2Kt696XdIHSTOh6ZQCY=\r\n=CM1r\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.13.0_1666921943119_0.3584586974030124"
      },
      "_hasShrinkwrap": false
    },
    "6.13.1": {
      "name": "cspell",
      "version": "6.13.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.13.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.13.1",
        "cspell-glob": "6.13.1",
        "cspell-lib": "6.13.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.13.1",
        "@cspell/cspell-types": "6.13.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "31ce9bdaa982e4d7cbe4001dead0810fa546fa7d",
      "_id": "cspell@6.13.1",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "lerna/1.12.0/node@v16.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-WtzsIn1paYXvcr19E81IvmesbsY5IMWAm1OVGXGbbw4anSvSswRkLwt41C5TGoseEQjLhD+YmXb6inuV3Zuj3w==",
        "shasum": "7d919fe7d4d0db8a0a3d17d0db7321d14a3a0f21",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.13.1.tgz",
        "fileCount": 78,
        "unpackedSize": 174934,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDXevKCKFYVzlUN1aOp6dev0r5zhNtD2RDowFGDlaST3QIhANtZYnvqfTBncO7TogkhRO/5jkTso0lfUes5SaPNltNS"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjW20TACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrqsw/+M6OTxFwS52eAwEXLUq1a7jhIcF2mRNaLs2uNzgMLDniyk5gq\r\nb+szSWyuZAgGHLKc4Coesng3zk2P5KR7srmtm4HjmfMoqroJRCJihmTcKKKw\r\nGp9BGj2CxOi0OrZiwlf7Y/SvauMcST9/MC3bBtnWS+Ofe2ix6DFB4s49W1om\r\nSmGuQg+tgqc2G3c4R5+hxlSLzdbVuIGj36CS+qU79LimkRh5/+2305Gj0AN9\r\n0VcxAEbIVKsVS18iRwhCyld2sU7PyXXEWMg27EfRngohKHla9LraEukggchA\r\n5jynEYxntawJmD1LhFw4HCBIY6Ew9nE9dK0gl0Ys0ty1N+yTMNJmSiGD6a5v\r\npEgN75Fl8PQ8so5/wqUJTTenX4IhJsLQg2zPsbOA8AztCRuHvD7MF3f3xdgV\r\nwzOS1iktngcS/FykfUPtlLdBkDUgGNUvcaVmC/ijWGONsyNyd0Y8x1eeWxsC\r\nqWoFyzRTXDw7SSwEawy6g9rNH2k/2TnAVvE+UacoPnzHc51Avv5jG0sAUWkL\r\nxC40ME3BxbheZF8keus2lOIg8fMmKIgL8eZE2j40BDtFOn8GZKmClrKLySDJ\r\n2czGvzShNoSLrqGF7RN3T2o2gtufqfKjEvoruReJCz0uRGJVUJl8IZe/eC1Q\r\nL90bVoXgmWjxYkKYU3fNZGSzdVXX9OTKcYI=\r\n=lqKf\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.13.1_1666936083187_0.6597718431297619"
      },
      "_hasShrinkwrap": false
    },
    "6.13.2": {
      "name": "cspell",
      "version": "6.13.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.13.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.13.2",
        "cspell-glob": "6.13.2",
        "cspell-lib": "6.13.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.13.2",
        "@cspell/cspell-types": "6.13.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "269c26afe8c5829b09e5ef731a30a2949d7c63e1",
      "_id": "cspell@6.13.2",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "lerna/1.12.0/node@v16.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-KrHkeIGPn8pd68fSU3ESMgr+wPhDpXH0O6mC5G9srfr8m4Rtb8t3DOWaXJgNRMXKZWkL4j5beenzpIUMVM+gEA==",
        "shasum": "e1e65455258b2b130bc27ea5a6e4de82aa4ce7dc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.13.2.tgz",
        "fileCount": 78,
        "unpackedSize": 174934,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBK6zVHryD8ovH1XE5x/+O7k4E16P/Rg30CFtMbKDtaFAiEA0b/AoSx8jcm16xn7o2HbJi0GTT112k1KeeFl+mI5jb8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX4TFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrvFA/6Ai03c3BAt25XpZt4xUF01jmZVrxt8iatPavTeMo74WtYJ6ZK\r\n/fe/ZMNrdkkFp7uKNV1pSf2mfUt7dgcC9FOzUxBxt0nx5fvH+DNyGeqkvQQ3\r\nx6bR+TGgj2PZykCKyKUtORz37nfOZGe/a1aqSQ1cLUUpxUyRHP0spHjUGk2F\r\nZ43WbMjFrlYvOJOGV2A3zKshkbVFw8Ma5LDOqc+WnM6MMYzMl4IMVmK8TFVx\r\nyZHmfGHSnv6o/W5lXrms0zecwu5/ci184syrkVc/I2ELujTmN0G6fW8MevcF\r\n42add/CZjipHNfZuiSojzbISKTA4u/0WSc3DGrgUfD9xtasW/bTP5bLAGnai\r\n54O5NCgey0ytNEJFhy7V7515FTlfygUDTQMcqmpJwD57ZYwaK3ddRmQvMNff\r\n89LCKwu+xTFmAmW7wImluFs+q1S2RzCc+2iEbCmuVadb/ZmFxQEFdiYliJUO\r\n3GxexqJnDVU2ifYXohqz0DiGAtcTvYMmTMCfSTROnp1dOlYjsY8CWz2ECCKv\r\nZckt5N0wbJkJWHug6neeYjBMTMfKRvKfSyFN2xhnESjc+Yeb97j4A6x/C9sY\r\nXQog/YFn99JjLlZkmdoJ8TrYXRxOWsv+vPi3ixTqVl43zSmxjCbiy6pjiBxb\r\nO9wtdLF6Mm75uY72vWsA2auUYnQhanfqg3Y=\r\n=kXTi\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.13.2_1667204293034_0.9239696127464261"
      },
      "_hasShrinkwrap": false
    },
    "6.13.3": {
      "name": "cspell",
      "version": "6.13.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.13.3",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.13.3",
        "cspell-glob": "6.13.3",
        "cspell-lib": "6.13.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.13.3",
        "@cspell/cspell-types": "6.13.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^2.79.1",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "a690c0bf064f8e5724bb159e337aa9162a33307f",
      "_id": "cspell@6.13.3",
      "_nodeVersion": "16.17.1",
      "_npmVersion": "lerna/1.12.0/node@v16.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ufhFCH9w/FOTJDYd4jExOFKMbz4fCvYxPOZQii5SMsZA64jDeqxX/HhRpUUjcsdQ27XqEZqwy2ta3voR9Lk4eA==",
        "shasum": "4510d076b29110a1c3b3ca93badc102387e430b6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.13.3.tgz",
        "fileCount": 78,
        "unpackedSize": 174934,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDrpuWQ/Id2hJHqhsa8p/A7YqAmcSwIJan2iz0EozGu4gIgEcYlCeQSzeh1w7FW3AcFN/sG6Ybf5IdVAHUzvQzKgk8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjX8bpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9IQ/7BNjRGcRicmdhMv2GTWCYfVoE58ggmKW5NKNwJAGodOUTFHYX\r\nYI1AZWQDdkqKd504I6bz84llsSv5Rbk6859UXKTEnoBgy/Pa3Dfs8wY6oZip\r\ndxa4DZlHiP9Jcy7u6xlam5NmG0//6hJ9R56h4U12pzdpyXYWLTsxO6HTJ0cS\r\n+FeYSzSY1ZdpMdOaTw3VhKodh4m5giPd8zLn9pUvx3RmLgcBgDs1iHnY1NEx\r\nzlHAUPfDg5pJfT6DbZuyr4K5GyTotbS/rRzyWA4tebBouWSB45CkFOdxRbfj\r\nMngzFoNfMxwHUQ0Yz2NDQv1y0YfxnIIjNLx6O2++DCK7jgV+HqWiNEXN/GV2\r\nuYdSDo8ZTWYbY1kgG1XTWorrfmGNE8YRBXz5l3Uol2cnm9PjSYxcTrpls5rV\r\npV1pHEPLLGzqMBRR0Se4+DJ/Q25O5sn/m4QGUgkZiM4AxcgPFRTypm6Y3jOE\r\nIzTW4kVFSghNgXlIrLuTpuJ2SSqXRNzKrFNK7B4xt5GYCc8LW2hovJgKdLDj\r\nx9irclWFmQgwmYJH2ofOr5vWqzILr/GkRwpHl+IWqjTwp5bIOUhedCHUMGxb\r\nUFOyr2Guq02188G2pt2xGoRiUvLDIEprs4UYN+SsDBopEkmVARVf26o4T4XH\r\npJ5NFAAVD/34YZL2iTxmJRzaxp9SEJAuMn8=\r\n=gwm5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.13.3_1667221225678_0.12505136188669663"
      },
      "_hasShrinkwrap": false
    },
    "6.14.0": {
      "name": "cspell",
      "version": "6.14.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.14.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.14.0",
        "cspell-glob": "6.14.0",
        "cspell-lib": "6.14.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.14.0",
        "@cspell/cspell-types": "6.14.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.5",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "9f5274766ae9e1e4796a7c10b78db4d98f04ea42",
      "_id": "cspell@6.14.0",
      "_nodeVersion": "16.18.0",
      "_npmVersion": "lerna/1.12.0/node@v16.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-5VZWAMcblumPfdqftTUmTioLc1oqd2l+hUOeeIIYSvj6S1gsjcrz7cezRQE4iL5vdD4op0ee/3O4nN5n/OEJVQ==",
        "shasum": "01c63a6d930608cf3e16fe5628771520077217fe",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.14.0.tgz",
        "fileCount": 78,
        "unpackedSize": 174933,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCZoOgPv3UEL/D31xCfllEUznCnec0JUIzRhcygMe2nxwIhAPh9mPVck/rzfrfxbI06BrAhmMLIF1VuyDjviEiTmGaq"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjY8lfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqNlw//fuuAFk3R95QwHDZHn6qLwyyuaGAA4AYYZHde7TRWIeV1BhIa\r\nbnMdKlLD2icm4Ywi/lR0Mvjgo5Np4bixvcz4BIqxTbI35LgtLyoFO1nbDOG3\r\nxE9F9Dd7uYVe4vp+lDUKhP6r4BndDxcxPbhRy7btVzPW0BVPFEcDro21vyxc\r\nocmmSEe9LRimguOSDeCKT4S/3KLyDxzYCA5R1UPMBuXSW8eOroOlzcsU47JV\r\nn3k0CUUDKQCTGHqhVmSH8b4S36JYzohz1b9xlSDtxxCFgryU3XgXp67696BJ\r\nVQiE+UrUPJdzAfVY9nOiZdeAAgmypwxhJyvPbHb5iIcQLTSPNhxgsaWOrNyU\r\neqdRA6Ffxb9xOnJMhzj+5MNDYms+9EkVgi0v04S1h4+GxrduUGlPO36pK9Ww\r\npE3GJcPWek97c8IEsZoqCeWQrsLdQ/itKPYJKlDON8AS/wF0ycEbAHBDnclF\r\niL4s7pnn40svJre+kmlw6MQ9LGF16Oc8/yFxpBRXMg/E+YcQT+qc/S/0hCKr\r\nbHMuku2O82hOkLKPyc565mFP4WRO5F0wCChNKnF2V+dXwpynrVjf8S73/rCE\r\nxJitsynzn3DZyu+tPVIMN+2nAqfJ5Bs8KvO5zX5qrSFFW4AcCnHbg/4apnLv\r\nnLqVkhdx1RbIxlaQtSww1Vc626eP+0RfGyY=\r\n=uxXc\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.14.0_1667483999455_0.24124467768939595"
      },
      "_hasShrinkwrap": false
    },
    "6.14.1": {
      "name": "cspell",
      "version": "6.14.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.14.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.14.1",
        "cspell-glob": "6.14.1",
        "cspell-lib": "6.14.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.14.1",
        "@cspell/cspell-types": "6.14.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.2.2",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.5",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "35db1ed216cd9aaf479429d3268482f30d824e70",
      "_id": "cspell@6.14.1",
      "_nodeVersion": "16.18.0",
      "_npmVersion": "lerna/1.12.0/node@v16.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-JWfKSV0tcJwQSjK+W1YMr0XbtE20ykWW+o9izzZt+VlHSNsItfIkaxwUr/fOBjEACjOIXw6GX6vlV+0luhp2cA==",
        "shasum": "106cb81573f23d84a411a5004af27fa314735c8d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.14.1.tgz",
        "fileCount": 78,
        "unpackedSize": 174933,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEU4qiTe1ojzvcjjaIvV4QXbleIdA89gI7l5Lipr2gzeAiEAzcnOFbWKZG/9Ns4fpNKM3muuptexjnT5BP1WwhXRcW8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjaOBXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq/qA//fJ/hctQ4EXLoALXyp4EMyPYWM9ndptmuTIfbPLG6frjvUC2k\r\nPrs/liR6imC0KBxxIZue/j25fPt/DRq0ZYQj2B0W1DHXvPCN4G0wBmJD/2PM\r\nUbDA026p+vb58gZy1v+Fc/zsXNp4PQ90+CyK2KXt5wz5Iwg5aPK4vX04MdzL\r\nYUvmQJJBv1YVjE7wYfGVtcvhtwItUc1F1ToYblrYb7fUlxNKV8yif4lydW3p\r\ntwBrCxO40KJGrvykVLLMXSD7j7YNKYoEh3sdOXPCUd5g8kK3kCEW+ijXOwCG\r\nWBH/hY9kDROESoj9peMDZVY2OCZOjY6OFnQNjxX2yY6odee/b53vaZ38I8H7\r\n7GOkhk06xxDE8AzciLq42i0nvVggRT3WRTgFTfmuEntKu4itGRnCceVFafWc\r\ndCAfzI+YZYtcQFnsu2d9S9sXg8/uZU4BWmQ7bwMWeTRvvRdCE2m17q7v9Wbn\r\nZQgEcv1jGW1OGUpFCs0Qfhj0joBhDIewrCGmZuY8RByRU35PRGqd3SUyG33/\r\nsNc41wlucyx0ddvU9HW/tHy2WkajOyvd9QhjNkoo+tHpvNRzga+cz0FRYaz1\r\nurdvPGOlP04S3hl8yjSesjyndXx1mWYWsqtnbnCkiW7IN7oTN6igJ7LBM9dP\r\nkpvDBpPH7+RWcp2hfUcXNJlUz0xe6Grt+II=\r\n=W2Os\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.14.1_1667817559324_0.58084734122273"
      },
      "_hasShrinkwrap": false
    },
    "6.14.2": {
      "name": "cspell",
      "version": "6.14.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.14.2",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.14.2",
        "cspell-glob": "6.14.2",
        "cspell-lib": "6.14.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.14.2",
        "@cspell/cspell-types": "6.14.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^3.2.5",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "ea9692380357e9e890c20f15b1200cc1c6c3a2df",
      "_id": "cspell@6.14.2",
      "_nodeVersion": "16.18.0",
      "_npmVersion": "lerna/1.12.0/node@v16.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-XV9P6TC/pel5ZO67mDzsI/51XaooeXrq7szrcZ3kfop3f62EBLJUxeXPf9JRodptr8voQ0X+IFHbjnThhL4vdQ==",
        "shasum": "31649d8bc30bbff1104b06c188013b0bceaa8835",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.14.2.tgz",
        "fileCount": 78,
        "unpackedSize": 174933,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD1gFcQYL9tRA2qBAi8ZIi4dRh7TEv9e8OB1bjw7ccxOQIgWWLgEN9VZXQG4hVTLS5CezB/cmareg6Za7KTrLMC4us="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbgsJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqmDw/5AIBrkyu6p5iOzys9PaLF12NntBTIb7a057517T5CIHd6xPkz\r\ney6feQpqcKFhEvxaQFGJ4AV9EMHjUhD3kgLKs3Di1NLNEpDk32gi3PCNHAas\r\nVQ3LN8RR5NZzEaIbvaW925i9q5S8QexF3c5F2jVVAk3xQishgeIGZVYJmIW/\r\n64ZyPA8hPvOt7rJ1eGBsMntPcCImheFF9YSNJzQjn+m3lIS2z4x0DTSkTxsL\r\nqYX9S92eAV+amUVXCVnuokmfS7HjPkGA7n/l5fkZjqU5yD4zGkbeGja7DDFP\r\ndzHrlq03oCGRqYdtsqzf3SzTQchGnZl2N4cVvlCaI5n4jti6gBWrRFA+qo9t\r\njcExrMv2r3sJPV2cjKO+0y5xFhEzpQ7L6oVr8+9TZJnkvg7LnwnNy5zTRdzL\r\n7wpS+zBRp+ELFY3qxbgR2oC7+5nEu3bFfsRGPXxFD6Qq31dKvt93MBrX3Iks\r\n25duUXQW1aMdrGeTaKuWDNQEDMsQ1PXXX8RS1eeVk9gBewgKrNBRUd7NFIMA\r\nXHUmfUeds912B1u7WTsIHJtP5+fkRBu0CmPqwQHomthuwszGofYrEQ7WKhbp\r\naYE4R1olHOBe2M/sjUBipS2/ikAZH8//qbKkXTTj7UOjEYpWad5sY+CvlVYQ\r\nZGwcLrod5fnGYbCTcs/xBBJbjz/5FmBLJyg=\r\n=EU2n\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.14.2_1668156169693_0.7704691892044524"
      },
      "_hasShrinkwrap": false
    },
    "6.14.3": {
      "name": "cspell",
      "version": "6.14.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.14.3",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.14.3",
        "cspell-glob": "6.14.3",
        "cspell-lib": "6.14.3",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.14.3",
        "@cspell/cspell-types": "6.14.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^3.3.0",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "df0efdbb0dc7b084579130ba5fe97441c0ab67ca",
      "_id": "cspell@6.14.3",
      "_nodeVersion": "16.18.0",
      "_npmVersion": "lerna/1.12.0/node@v16.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-DimVpUiw2iOSvO1daOTtOWjmryVZdFnPmjPhyhWZUqakOEgE2MgoBuk3cFzXqb8GsGXHQh5PqiWr1rqIkQ99qA==",
        "shasum": "fc3bb5e32cfa633e31a7f21b4213c3b6ee0b584f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.14.3.tgz",
        "fileCount": 78,
        "unpackedSize": 174853,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDFzqKn87VQmC4HT8lAs0juCibTmPV+qXuHGlBSyrfzbAiAosCMkDryqfuOpIMP1l+gbKTgF+zL8+r9h6Buoiz8MUw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdeTjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9qBAAkP6RXJVHAs/Z1lxefKxw1sKmDqlrlrX6Lg8U7poC1qEl9yLL\r\nFRCppG3vTDQUajfdYeqjazRGNEu6eEs1+d4cSlmstOAgkgCSu3y78iJHthd+\r\n9If3exvnF0D/lolZ8hX0BF2eLf/5E9JQeaX8Rfo2gfUonEsYl5+718THZRcJ\r\n8JlBaDNmiYBYqwf1a+sBDHSaCXPnmKRgtju7cL5eTuOvIyiopOH3fMJXn2H4\r\nJL7FWaQLRWP1NNsbQhqu4WeXrFmMDo8YShhqeRG5rr74PypS5/M/jm1kWysy\r\nK2A9R83ah7uQtKyHRmj69d1dTn8ErQiNXb7VLCZ50bzqPIn7qrKgG6MDfb+k\r\n7bHUR0R8RHXLgZ+yHeRVYws7wQdt1zz+78QwJKQayJdIlJ6RFEhjnjV4vUIu\r\nz9IElZ7tfxspArbeB5AlHPO695Nt7Wbo7GZ1Dfdtn4ylSW8+8ld25B3a9Inw\r\n5D/qdU6UX9jDVJqHJk1FgjNjumflOsqDJbUslDoZubR86d7nVDMR4gsUrFnv\r\n3UXcu0hO9wa8YIzLQ0WccWo7pD8YGKmrqEDDlMBJn3gwL0xz/6E83GOG5un5\r\n6mu2fj3/oDg5/kT4XKlTksSfWFypyAMZzhlQvZzVR7AatNkOxMPfyrTEh9bA\r\nUWnWl/KVLdBaZv5OQJoX4CgVihlYxjLh0C8=\r\n=7r3z\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.14.3_1668670690762_0.5587584334823823"
      },
      "_hasShrinkwrap": false
    },
    "6.15.0": {
      "name": "cspell",
      "version": "6.15.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.15.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.15.0",
        "cspell-glob": "6.15.0",
        "cspell-lib": "6.15.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.15.0",
        "@cspell/cspell-types": "6.15.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.0",
        "rimraf": "^3.0.2",
        "rollup": "^3.4.0",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "8bbc20a6fabe0b95caafb7dac2035764cc73ba13",
      "_id": "cspell@6.15.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-8Nx2nKHi45GQshDbxQcB9xZjNrMwWnL2D4i5w8vA1WffAhLZpgE7zmudjyELPfhhvOEd0hspY8lh79lZSLtvrg==",
        "shasum": "bf846fe8af10d12b31578c8f9b6f0c44d92710b5",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.15.0.tgz",
        "fileCount": 78,
        "unpackedSize": 174853,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDEh0Z84ZKwX36h8Kv7oizCmX4n1M+LybmLDHJTwgChKAIhANAfME0ku8tB6DSwxqyIK5rsQrJUHsOzghXx+eKVpRup"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjgPzDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo6Wg/9GZVgk5iE3eE8BdWYhTfCqtFpaOZIjigt0Wr+aSborNh7J/Kz\r\n2NEYseqCVKCjqHJD3EK1hBpXS2jQECnZrEtjInmVRhzK8AzYbBdsHiCGZMkS\r\nt1I42MQJrUS7k6tqyQ8bdXldevkGAIaiKE+XkiUOM17oVj5eWJgUwZTdeE7/\r\nobQVrxYHXC2qWz5ZKv86xQJvTCfcXZ8X0k3n6WNIeMyfr5vd3vqjdGU92AOi\r\ncnNu/QKAMyvA0+KLgEtXe/vwkBCdz9TdWGv7t3Fph7xOj6Y8C2C/T1fKP7D3\r\nqfshfVONVBerTi5BCJiUC48ZbFxcRhT2RXpJPM8zZKGMwwSNZhkTFD2wns57\r\nBl+Cx8GfiDiwjbd+K8twBNpjc92tJ3jTC9R3i07nrPgkqE2cQMMEqD13rILx\r\n6JQFwLDchozdar9dqkSdwhckDI1VpiufVSaTHVo3/2RZtcYPTA9gL1we0On/\r\nlwsN9YWf4wwlqrgEY1Fi3SNZS13hJSjD94Ah+TprAno4cnuAc9ElP6azuftk\r\nqFC20+jlNGf8bCkHG40QzyvnhJ8tMp8U37ELN1u/DwpRpC7j11RlgGRGOHFX\r\ndW7KyW1Bd0iyTTyIdGLhceQVNOstDvcEPYBKppAbZ3QgwYtSyJ82TDkK/Dd5\r\n4/A78X4z37lOXcQfB4Id0B0Np7huR7ynEYs=\r\n=F2qs\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.15.0_1669397699466_0.20430890167111926"
      },
      "_hasShrinkwrap": false
    },
    "6.15.1": {
      "name": "cspell",
      "version": "6.15.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.15.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.15.1",
        "cspell-glob": "6.15.1",
        "cspell-lib": "6.15.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.15.1",
        "@cspell/cspell-types": "6.15.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.5.0",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "9668bef6beeec53e1e473efc97e309baa0338de2",
      "_id": "cspell@6.15.1",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-XKyQrunxi26L+mcasf8mIS2vE3Z23GncYk5DfGdN8C5bCgD31i6+4BOUWN8x7n3+PtjcLrYtknCTNLMDqbslNQ==",
        "shasum": "15d0f5ff991a7d58fb036cca572bbb0a2e42c183",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.15.1.tgz",
        "fileCount": 78,
        "unpackedSize": 174853,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFmREXqK3a5IzK9DndRKgApnDLlXvLLSIJ3oUtZdLPonAiBP2urulFWScumj3UcwPgq6Nhng3t3iaYct0j+LLV9AdA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjh19pACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoaiRAAiq0aRMftWnWqPOAWD+E8x7FAxvicm9SEFPzPB1GHfaCIEqa2\r\n8qqGUjYeTAb6rcJV5GmrKcA8p1aoJ4srGAhknoYmHBg1LqsLukvSVoZaUg7Y\r\nA/Ue6KX/1GOzttFs3060DzgBso8+zkDZWzACWicLRxiWDbQJiqUh3V5OAmxd\r\n98L0S2OHRbvF9n32aGVZKelmVqkKpCvcmDifrra5CZw8QO70B0ltVIJ6v97k\r\nMFq9iWSJdyJPnOftLlObSHcDNMz8W8y61vfvyz3vBgh6n5nbUvlLRz/m1PYG\r\nPK887k4TlwvYq8wvs1VrupC//MHUDUR4/kyBN5CzdcO130Kp7k2d40H/uhM1\r\nBWkZbppr8P/R5rQWvXEkKAuo/I11Kl8eN6FvtlzLDgfVoDQ8NZY0nMB7z66P\r\n9OnuKi2zLoF8GDUAYzqWIdVCiDh6q41318kF56XUmZsB8NiHSunc4e86CywZ\r\n+c4A63onGnsx2x8PI7IRW2pB66vdnpj6w1QKMU+jXx2UEfYfjgWDyUl+DlUf\r\nSvNBs+LxwZORxNFYrzLotUIvaOvAkzrnivfmj2kjMe3UbSWU4fzb7hd4CVQC\r\n+F8+O9JtiszxA2pa8XzNT0ge0UDnqJgxu63eVvIIARR319odpF2vD+0IvpBs\r\nZ+9QDzjZrb0z/g5QlDSWq/8lju4SiOs3I1I=\r\n=Gedm\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.15.1_1669816169571_0.4421121564822583"
      },
      "_hasShrinkwrap": false
    },
    "6.16.0": {
      "name": "cspell",
      "version": "6.16.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.16.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.16.0",
        "cspell-glob": "6.16.0",
        "cspell-lib": "6.16.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.16.0",
        "@cspell/cspell-types": "6.16.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.5.0",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "57280b1b76f781a9bd5de03c3cee06a8826313df",
      "_id": "cspell@6.16.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-vp65C2POzIyBvEFsZ/Zr9PAR65YnrY+xrnTeAbrqGPD0HnRCHUwKAazB3O05WyP8ovoJidSHWgaC+2G0P2GA5w==",
        "shasum": "ea784eade80a33a37d20bdabaf9485776edecf09",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.16.0.tgz",
        "fileCount": 78,
        "unpackedSize": 175442,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDFZXnhgPIIDyaj0aNFmD8Rhf1JoK3GTMzuJYniGi90gQIhAPTMpuEejJzcCvaNKa4RsKkDqnVOzs5U/zji8Zmoe4yS"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjif/dACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoDUQ/+Mwep1XQmXKzmbHjvw/o4xQ4Ib6b06VLx11lEQE21wHz6Hxth\r\n8zor0EqzYqRgteZZReOiFyThebIx9Vf5ZLD6XG72I4s9x48rn0jN/5g+4Rtg\r\nA16cQKFpPBsQnVPq8wujVSPF/uxcVNzlAJHYPF4TQdtFrk++c6xVKaKrG/nP\r\nSPzWVQetRvlx95isYmVqvkT6nLIOUC+ZV50vl4uNKw393vnx069sH3GKDuhv\r\nkLoIXFAO7BOjfB0SPBBvIbFGzS7HUdiqmhJAwW11qB3yt9obwFRKY0pQSbkJ\r\ntGkUWVUKzKEwjm/wagbi67S80xIK8QrwqbMbEjKW/LTCpfWqbBJNwB8s/pXX\r\ntXBNj3HQC0PebGIkkCT4cEfh1O9cggvBsjaya1zKDyOJDpuVqUXYJKTFmpYB\r\ndZay3QeX+R5MxtO84dz5dalGdo6xHR9HDqSS+XGemXQDOU8BVEgr0CHKkzQ2\r\n+//i1l+dpCQv8cfhN9D6XGLc+7yRD0gC3gHyZ49RamAWfitVMlg+crQNTKvE\r\npuBa+86A/c57niA46qtCMP+heOQoQewSYsXal2xscOPMYexunJ/Bi1P6ffmv\r\nu4UVGxfNRDgcBdrPHtQDTJ+RwyORT2nXiE7vYz+299Keo7Vgynlh5Ls5XiiV\r\nfBFGgS+icetDSUBNvuoWZneriPhAgz2Bvz4=\r\n=na62\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.16.0_1669988317774_0.22024069489806575"
      },
      "_hasShrinkwrap": false
    },
    "6.17.0": {
      "name": "cspell",
      "version": "6.17.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.17.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.17.0",
        "cspell-glob": "6.17.0",
        "cspell-lib": "6.17.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^10.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.6"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.17.0",
        "@cspell/cspell-types": "6.17.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.1",
        "rimraf": "^3.0.2",
        "rollup": "^3.5.1",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "a9917563690588777a16e844eaa9c112f44b2d21",
      "_id": "cspell@6.17.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-R1TXu1p2vON6rHXxZAUPbdf+v+ckPhWiEb3apq2PyxLSjzMiZDm2ThIwRcsQaMLLZyFOD+J3SHj0lZi1Qoaa8w==",
        "shasum": "0f229268bd41bf80cb943a9d3daa9508868778eb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.17.0.tgz",
        "fileCount": 78,
        "unpackedSize": 175442,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB6o7G8VJW78+SC3APyGGgwxAeG6kvg7M66ibNTcA2NHAiEA4V7roP0l5oi7dwGhXlgVrQtLLpwa8T61cKv8JUVTr5w="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjjhMOACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpdJQ//VDrnJtdtqPbJsJJ4TFceAQdwdmn7lfO1W9DpNxZDuMeTrKmx\r\nWRKGMKtHccMTNnxqh7at1FbfscYFlk8tN/kE6pjd4L6fDjqRPnszRxR7v92s\r\n7B18x7shg1Q/eOhsNHBtp2Ciue4p26VWgofnYAUc58VhtrWYpb3i34zbeD+F\r\nLehED1esL+ALhXXoXW8ooU89n9ZljtTVmON90sFWuIHnGsWzv5ld3FyXzSR6\r\naeFocQZFyhtB5IHQUQQ8NHl8DSThxtQGvV494zU7DgqkM2w+g9BZG02T079G\r\nipqpP3G8+FJku3Ukmyq3tXuXV72/2gs/XSz38hkeW2b6Qnb1LumNyWjrgevK\r\nfnPil1J3tWHkP1nB0D9FytHtzqk5GamNFo02EW0ipkMapyXVTlxQYRVXJM3J\r\nCcMJXp0ZaVmXaj04SRLf4VZvjVnqSokfrPSPwbF0eXiLjKSbysV7crXJBubz\r\nHgPeheGzYyWEuJ1rQUxIiIolcaTAj6hFVnXF0069+aPh+YCFc40XyP3yYCrL\r\nugJYQI9fNwTh8lvumwoq+47YAC8+KyDLNEaTZnqa+P/bUFlJiD9iTq96qojP\r\nufR+pH9DUCCu4ylMKtvewYtGiaIk2vsr0HhNNkdiWaTMzhn5xS75cProiUDG\r\nbq2bHqmDwipeAYN9tgoTcLh9SHKNXbeER/s=\r\n=AknD\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.17.0_1670255374676_0.44027480271885744"
      },
      "_hasShrinkwrap": false
    },
    "6.18.0": {
      "name": "cspell",
      "version": "6.18.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.18.0",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.18.0",
        "cspell-glob": "6.18.0",
        "cspell-lib": "6.18.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^11.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.18.0",
        "@cspell/cspell-types": "6.18.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.2",
        "rimraf": "^3.0.2",
        "rollup": "^3.7.5",
        "rollup-plugin-dts": "^5.0.0"
      },
      "gitHead": "6785657a445643ec1c9a17152e3c3733eb0e2a74",
      "_id": "cspell@6.18.0",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Lv8E9dfTw6syPPFNiPMd4AiuXBhR+31H1tYh1dTYwbjO2NLyQQO/H8jq4o9w77Ht/c8jkdXrllF7LdsX7nNeMg==",
        "shasum": "13912bb36fb8860b65d3f52cff4f33166b9e36c2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.18.0.tgz",
        "fileCount": 78,
        "unpackedSize": 175442,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCm3NbVdtuvyRyuZO9VzLS0gRZQ+yYt+ejSv3coitnVfwIgU2x6EJjoRTgl9HYerxwjEYEhbdwGd1BSyv1uLwMXKF0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjotLxACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmri8RAApE9S9HPuy4W+sDTZ1lSYskOHED+paQvU3SYk9BmKbrc4jXDF\r\nm+MkzdzE7qclbRA8YvbGjl3pbICB4X3z6mYDXIUjXWaLNXBxk4BX0Fxbb6US\r\n/Pn2tyLT+rYofJhvkn0g+Y9oSOkA6YHYrPk5632tQhoS/EYDGopmiblCqTaP\r\n5jpfWxuCrJYWfG8I+ZjTePAT8IoXQ+xKSBpIjq/3cxWHlu+1g5CtX5eyLlt2\r\nOT1v3ud9AtO8dH9sl15VpVjDddxeWnV81dJxl9EE+qriH9cv4sYupHuf0Hei\r\nBliS+zWL9gR7cQHDaPLzP3VDrz/KOh+krSiH5eRwPjdHnAfOtvwLSvsP4jhv\r\n0Yj0PLOFED3klhTU0LyEqUzjxvzF6xJCk/Ua2AdxHqeLbicNXAfV1P9c4gEV\r\ndjNiE4KEfOGkRT7XS3VheM11zGoGvmP/HdsU4YqgMsXzshq7PPKwVqv7qhJL\r\ncDKXv55yEqp13rr3Nzdw6r32MCwt+87CAAJoRrnzYbwfrvhQl/zgAStS6e72\r\nCoa7QXxsSqKKuG1s1a9BEl+r3zE4TD6BYlCV+WjBw8gTmeNvEl19GeFbQQoK\r\nkwKEdxY3h3qZkJRvtOJr4sq/Iznnk+qowGvZntdfKXsICmg8PwtmQrNpiJvo\r\nqvZGkWhMlSasd7f/M1qFqFv0ryal/HEdgyA=\r\n=SexL\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.18.0_1671615217501_0.1636792657076609"
      },
      "_hasShrinkwrap": false
    },
    "6.18.1": {
      "name": "cspell",
      "version": "6.18.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "rimraf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.18.1",
        "chalk": "^4.1.2",
        "commander": "^9.4.1",
        "cspell-gitignore": "6.18.1",
        "cspell-glob": "6.18.1",
        "cspell-lib": "6.18.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^11.1.0",
        "get-stdin": "^8.0.0",
        "glob": "^8.0.3",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.18.1",
        "@cspell/cspell-types": "6.18.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.2",
        "rimraf": "^3.0.2",
        "rollup": "^3.9.0",
        "rollup-plugin-dts": "^5.1.0"
      },
      "gitHead": "2570a9bb03e68864d30ed8024786b3b2eeddab2b",
      "_id": "cspell@6.18.1",
      "_nodeVersion": "16.18.1",
      "_npmVersion": "lerna/1.13.0/node@v16.18.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-euHEQuyZwe/oiTiHJr4lSBnT4MrWMNy3V3GiOmi2Zekw/DTgN2glvsMskudobcDB/HReCtUlG8yALySL/GiLvQ==",
        "shasum": "35c657987d822d2cb7b5eead925ff786ec4f4727",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.18.1.tgz",
        "fileCount": 78,
        "unpackedSize": 175447,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD8su8ngcSqlphucv/3L5D4LpOzoIzy19p/y/OmdF3fuAIhAJCxp7waWxatqh2+Oco1VnOXxe3kzs1dHH5tB40dn4Gb"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjrZC8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqByQ/8D1hElvFHQxXXzD6IcrWxysmRF6AIBuDLdoDP6rf6UZeU31Gb\r\nSPX30IgLOaE48JEvuxLdqLkdnUrJi0njjB59i0TFZzPJDEbpIfiOxAZSov/I\r\nvyGoyBt2bgcFZO3at0uPUvXl1zPDmFuhNoLhhlMEgcdH69HshuOPyNd5Litp\r\nDyU2lpSu8BBZfjOfU/SpU2up0THz2CVqEUb9f1wYvcvFybfteXLyKpT31IaL\r\nlFqyO8ESH/XEBVlkZWZB308OrfEfrHKDdDAf3D3u4EDooNXQP4yv4F7Fz46K\r\nFI5iWKSDik3WmG3MNQXoN3TYconA8kymzbXTUoNhppT1DTZlGmBC3KW9Z/As\r\nfvhve3BDeUXtnYWtkghcZPirsWUjqqeIFNERa+CwqHK20NBQwrJTAS41PuvE\r\nQjWT6h9VhSn0rMWgXFw76dnLn/Kl0SEOYtAN+1YCKTDKBg+XVWnbw3FWOD93\r\nJjQlq8/LoERt9U8n8RwBz3ZKh48j33q8QSUollzW8Nn5ofEB7ZXzbwaInug8\r\n2s/Atcknr9lpH3WxXJk5g1GrgW6fzAudeJFtEpptY2exjOpz42ZtSGhpDqor\r\ngO7thCY6Sl6XKdhk2hZMZezIuH/Jg8HxjW9DGQpofomoPKGwfJGkLjQye9/P\r\nyWq0tm4WK/eZxCJwoxhG1ZUG9ydMfJnrUUg=\r\n=6un9\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.18.1_1672319164710_0.6344486374209473"
      },
      "_hasShrinkwrap": false
    },
    "6.19.0": {
      "name": "cspell",
      "version": "6.19.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.19.0",
        "chalk": "^4.1.2",
        "commander": "^9.5.0",
        "cspell-gitignore": "6.19.0",
        "cspell-glob": "6.19.0",
        "cspell-lib": "6.19.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^11.1.0",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.19.0",
        "@cspell/cspell-types": "6.19.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.2",
        "rollup": "^3.10.0",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "f643f0cd6384905618dbca950bd65a39a77dc028",
      "_id": "cspell@6.19.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.13.0/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-MHCAYkDXxYkQHD8J5DUAs6/VrK51lUY/hMuhSnfkmb5BLYOEhhS/tnM7DUtykzxLI9LLGP/fNcy3huC+aFjrkw==",
        "shasum": "687f87b4a3179d0e64fcd0d3a375d808f4e3587b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.19.0.tgz",
        "fileCount": 78,
        "unpackedSize": 179466,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6barfrlx/T30b38erNi00yPL5yOLMVwjIbv5XgPGO7QIgWbgXGx/xedVLRgv4hvdXUksiA+lKBu/NDWf92jEnwpA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjxrXDACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq7cQ//V6Hw9SRm5SMHlmyM5BWEC5SQwpPbV9BcwTRuFmmb5W6mTR09\r\nEQ0KJ+BnBDQL7A9dcrgshbgURwzi1Pby+7lCjSWR/g2gvF+tEsQTs2ztBxpF\r\n/Bu+wZo8FFMcgYu7D14ZUKTlrVo5r8aVTQQZ0eY7wMDvtg2RtGcseEwekQ/P\r\ne2LRIzlXs9lOoZBXpWjVZBa/R8hai43+IVrt8NsX8G+P4Bfu666hK+TYuEqx\r\n2O2yO5k22HatXvduWYE7qLD9zMXiqIlghDMMuDtGUli9W3PMgexVf0vvm5hI\r\nz5ylQ3A/g/D/vmxiId92KliHdseha+N1QQOuQN69dsCe2W0waB4R3xNWf5xt\r\nsBtcojOOTJFqqmFwkSXFaZ5bdzCpfs9l7racwxJuMl1kXk35g2OKeKtVTdKS\r\nAcqs+iEF/FL6ratanPYjumjcNNE9Mw9Xp/co5tZN4k4k1dzgFt6l7sSftcAv\r\n5s+e2tOZ4bli6intMhA0C6U+QJYHB1r0PeSCI83y1vm1g5RZS0BgSOeyODjP\r\n+emPb9Ghk0QVXUWcWs4rxT6it8gSP+lHDC6GC9s5EQwzzZ7QiyXcLpSCFzA9\r\nzP2W9yCLNhEHF1D/dnxtfEfqb4FfqPUuvNS/yu7dohxOW/CV9KBlTcbUHFhQ\r\nt6jdm/arroeA1Iek+mCPpDMSRvFw8XUtiDw=\r\n=Bi9n\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.19.0_1673967043200_0.28836494475829433"
      },
      "_hasShrinkwrap": false
    },
    "6.19.1": {
      "name": "cspell",
      "version": "6.19.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.19.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.19.1",
        "cspell-glob": "6.19.1",
        "cspell-lib": "6.19.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^11.1.0",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.19.1",
        "@cspell/cspell-types": "6.19.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.4",
        "rollup": "^3.10.0",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "1e9b8823fb92689fc0f598df3def7a5abf8bc005",
      "_id": "cspell@6.19.1",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.13.0/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-LwWhBfk0XampjviTXy2nE9U2p6JrEgffZPuOKFkL2PSc6YT/oV4ZF/brrjcO4ZmPnHOZOCkLsOyJKJ4Ysj5mrw==",
        "shasum": "142df1fea5988b019881b8a17329ecbfb3743bbc",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.19.1.tgz",
        "fileCount": 78,
        "unpackedSize": 179467,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBZJjstkoQ2VfFnFRDyZDS1+q1B18Fw6GL3Jt+CCtQijAiBbtqyIGPEqzauh+R+XgPq0xf1mSgs2aNi8I3DXJQMF9Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjxxRMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmroIBAAkRTv/pFpdPhdSznBelM1pGbVgcZZdd9+sImgAOgsiky+JM3w\r\nwWjRrFuQ6FX7a0i17GOdV0b1m4jzfvf6MgYwjlvVDFsOMetUpNGypg1tdN8R\r\nLUBbs5tsGpZ/3pX1Nuo1w+vvwzpPTkYqt8404m77FucBrNmtSditFK+Ol8IE\r\nbNAVSY8nb8npcpRx3ZaA5GzHiqMaOx4hZJqQWmiw3Ntw3/5SjSBFQkQivP/n\r\nDsdbpMI4LMVMfqLBYf5FgLY5+AU1IxwrOJ1vrl9+e2agjo24t+liWnfTa4vi\r\nYnOarYFozHfFDzMEi6KXaVlmdjBDyLqR1k0xmT0skpsutaS9w/gxC740W8Xc\r\nRxRoU1gQS3S4MP4c+fxMyoT5GEtlgInhSwN1NgEIDHbAdN1p5SBQZ1ZF/LbA\r\n3bNfxGYOH5hQfew7DacgZ0zCOTSAcusOXCd5nGOmhgaJLMLJn+sOj24d7oby\r\njGoXZmCKi3u28XA6IIWXb8g5uH6O0LeVLWxEwW+N48NjCMD6rBo4cn2iE27X\r\ncYipzt7Yb1HlBkHbUKFhqtMBchKm5I7Q6SlXMDBCoO0JBIsZQPA2u9KzecSH\r\nxpWdvAXMsLx3XlA5cNfGDDd6qI5OAWOC1W9G9K/q/HGUCBfKIOrnMnQu/Zx1\r\nOgdirC5vo4lJBxyRC1/ZmhOsw4x2Wozdl3Y=\r\n=SBlN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.19.1_1673991244200_0.4635505602513994"
      },
      "_hasShrinkwrap": false
    },
    "6.19.2": {
      "name": "cspell",
      "version": "6.19.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.19.2",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.19.2",
        "cspell-glob": "6.19.2",
        "cspell-lib": "6.19.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "fs-extra": "^11.1.0",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.19.2",
        "@cspell/cspell-types": "6.19.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/fs-extra": "^9.0.13",
        "@types/glob": "^8.0.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/minimatch": "^5.1.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.3.1",
        "micromatch": "^4.0.5",
        "minimatch": "^5.1.5",
        "rollup": "^3.10.0",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "0413716934fdfde59971d24773e7df83623bb529",
      "_id": "cspell@6.19.2",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.13.0/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-nyrxnTcv1UzzdElZe96OMU8mxJGaLBnmPCR/HOaFE367EZD+WS5fcpoDBHC9tfD7yJv4+q5sjByYZltcV6jo0A==",
        "shasum": "ebb7c49c4155d9320ac45281d196a7d8d025d562",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.19.2.tgz",
        "fileCount": 78,
        "unpackedSize": 179467,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICZMXecyQ38xRjvwveYjqDF+5N2rf8Cq8bHAcyXA8zN0AiAe1n4BpgcVuC9x7pml/Jql/aBB2VB/ZZdV0ONfELZ4og=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjxx2kACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqxyQ/9EiQ+eKQT18NSyWn985Wx5OZiVU7KKmdrYgok1AypfC+R1Zgt\r\nPHgRQiRe9VeW6PmnELwXsEClrP1L+xL0+4cbkqYgjGKkfBMNm/4F//5WoQpQ\r\nMnrESpZsF5lro03DM5EfpaHYXaAbOltrXE/eCOzuCgcydOpcS3eIyH8lrRFH\r\nm1qzmCIhqOP4/6NLXj510tCxPip3fZyAoL3W8E0i6Ue1uIMeIMnJ2AjO5zVS\r\nIKJpghv58a5O64WVVPwaldefnts20RjiYIwNCpPO1uLWDO67bDTuBR6h6bR4\r\n4/3cXHUqek307FtRdqs5hxBZHyz9tE5xVAxe2CaXXEdeZdd+XpFZ7mNUdafw\r\nzdCfaZ3N8x8Q/TIo9G9T7L69XhcFataZrYJTUTG8tqdeDCGhSY2m1zf9rkqq\r\n+HQeywSMUhCOTsdfsnYby8riuhOlSXBhqFqqkQXQ5xg0kxI8ofxmrRqaLZrc\r\nH5P2BWT+Z6ngUf4GQuk+Mi9w4dDY/gK61vYim2Xth517tJ/9fGc71VmhuUQx\r\nWsHuGbTlEkzfsSWVpUeRlgmzU6gjQjPvlDnHiUBqTO65v0/4zuaWvsnEuzos\r\ni5bY3KHwwYvL/1q9Xf6bZ8hPrJXMcnvzIG2SyZgNdiR3Q12DWv3yn3D5JqXT\r\n+dBL5JQN4Ba0vL7hYvc8nL2eA8yRtfnXlX8=\r\n=w4iw\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.19.2_1673993636333_0.5065479276636262"
      },
      "_hasShrinkwrap": false
    },
    "6.20.0": {
      "name": "cspell",
      "version": "6.20.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.20.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.20.0",
        "cspell-glob": "6.20.0",
        "cspell-lib": "6.20.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.20.0",
        "@cspell/cspell-types": "6.20.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.4.1",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.6",
        "rollup": "^3.12.1",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "9de0bdd5b8da54daa72ccd6c328274bd796ada33",
      "_id": "cspell@6.20.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.14.2/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-uEb21bqb6AvzOLXBVXCQhmYiHlTt7PVF2vZ5kSbkoBKDT0sE3W52wQlYsJ6hnGpGtnhIOSWqR4cqdoZKSDMh/Q==",
        "shasum": "635a27471c2ac1ac5727652f3d123531fcdf6eef",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.20.0.tgz",
        "fileCount": 78,
        "unpackedSize": 179629,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEM8vejLiAkPIZYt4RpNxfFHWhwqwg/UCzI3dOuqf6nUAiBjdMzFJ/TQIFhRabqSO9dtH7YwX/CcSVJiq2anbzE2jw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2oa4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmracw//VYSvM9deuY2TF44T+hO0ESLrRkIbDlCjmHP29EBo6l66RU7S\r\ncvAVct42+Ul0gPSd6aK59KwXxiwRmtr92F6W9GyVOoUWF0DEqHyluoJeIQxP\r\n47HG9SFLLtyWQvbNIqDYxybGuCijFxPbAPSZvq/ouDhY4qyVij0yDo72QF0T\r\nib6yrIM4Qej8/bELOkYrt4k/CTa6eWvuyD4mHv66VexW0s1HCnuP/xZ5kg+g\r\n1rg9zvBo1GRC6QoxCnp1vlDnMcgWdfr2Xgf+f0VuTMuPVZzMNchz6sCOeULf\r\nbDx959Pw3aqu/vG1RG5axjoFlr78Ka4+KA6LXPXJJORPVii/V+ei9smryUXx\r\naOvbKYLfgqoLtSuO/IAGK+BGaG/prwdnabfXeC+zuPTICesUiEy6+tB6pSIN\r\n7hBIa9r9iXiXsn0mfbGSjJEWdhSAMFtof/zE6mdDW1f7knwriL88CvmeR4iX\r\nKQK6EMH8lQ7mRp3LP+HJp6S9hK5y4tq/Zo4JadAHsQGlmrpRe+powrNcEQ53\r\nxcz8lccXWGdBRTq+Tl5UgBgdApF5v+dGa7v0ekHYZkqbSQQg+zgVEoRrowns\r\n6wOcF7uQesxC+xy/He0JnRS8vpZTTL6EOFISjnQa9UV1vwyW0R+1Fyk8Tkoi\r\nxaD0jZnzCmohGWV4yUbGTkAwBMGfM3DrnEI=\r\n=pkM1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.20.0_1675265720351_0.06324552717328258"
      },
      "_hasShrinkwrap": false
    },
    "6.20.1": {
      "name": "cspell",
      "version": "6.20.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.20.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.20.1",
        "cspell-glob": "6.20.1",
        "cspell-lib": "6.20.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.20.1",
        "@cspell/cspell-types": "6.20.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.4.1",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.6",
        "rollup": "^3.12.1",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "508a06d32dd59d881d07cb60fe8c0a7c0bddf8eb",
      "_id": "cspell@6.20.1",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.14.2/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-6HfFqjtSUFvT00U4xF4PZoT8CZr8gTHn2f97TtF+ib18SWK6gAlY526CoRhFiSBHLlSaaJkFJTN9zxuVp8mWHw==",
        "shasum": "2f9d0a02d720fcee802595b6e134e539597f3c7d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.20.1.tgz",
        "fileCount": 78,
        "unpackedSize": 179629,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDn12beaF3/LMRF1Jt6MUH0KVV6H0nuKWc6deqw/VD8kgIhAJORoUr2u+qALYVQbjKRWV4zxc+Z9CIpuLLujuXLUM2Z"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj2qxvACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqwPQ//Rzb61i5Uahok46sOABpSRo8Khy01JEsqmaVkos+YOmZk+Tth\r\nc0Ine8FzF+xB4hWNAEu15mXJp7dPa+6iIvopUWJ9P5ZxyoRb2bZCPFyGNmZF\r\n+fyMN3WZrA0vpqY/4h2E9JbYruePqxplUkL3ekPUzrS8SUFkf20saVOYAEAl\r\neuefCwy2My4KTbJes3ZCd5PwIfcRzrxcWYgHDkGLhXdP8HoVZ9Wd6fK46OS+\r\n6odLR5vKyuOZWXNO5hsUPC+Qi4LMj00Uf3Q7535ofyc73x6rwpVHcSW/+xdD\r\nb9/9SPELK6hMI2/KzDM+ge4kd49HnB5DzkQEjFggXJBzEpvrceO66fQ+fIww\r\nhrw1eNh+Tr7P+qAoO8DPw2Ug8Nt775HyYwuqYFUZR6Qczq2vs1F2ucm1cZVq\r\ndBAnMexgN5LfNyQQQZFA6jrhAqPmrFOuW4uxbJ8Ff24fy4Kx6IUtBJ4oEfMi\r\n5UaM8mmd6EebO/IvrwvJ+bcSp/cVFABMzWtoUByNNaLugx81Accgpp3p0Z/+\r\n9vxjcszEgrpKoIwbwjAxDH5edJYQUulypJGsKKTc3sjk5ymNUkcgYj4lx69B\r\nvGvQ8Ippv/iS+ozD265XPaE6DuN2HsvwQ0JjFesJEaGhAQgHCIEfEna8Lk0y\r\ndMRSGcyFbq3xw2w1rcJSdqbZNV6cLZYmmbs=\r\n=i4FN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.20.1_1675275375351_0.76253904465771"
      },
      "_hasShrinkwrap": false
    },
    "6.21.0": {
      "name": "cspell",
      "version": "6.21.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "jest --coverage",
        "test-watch": "jest --watch",
        "prepublishOnly": "pnpm run clean-build",
        "test": "jest --maxWorkers=1",
        "test:update-snapshot": "jest --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.21.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.21.0",
        "cspell-glob": "6.21.0",
        "cspell-lib": "6.21.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.21.0",
        "@cspell/cspell-types": "6.21.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "jest": "^29.4.1",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.6",
        "rollup": "^3.12.1",
        "rollup-plugin-dts": "^5.1.1"
      },
      "gitHead": "67b37de0cbcbe62feb8fb6ec95adad1275c14caa",
      "_id": "cspell@6.21.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.14.2/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-CORVBl5hsAjlJa39tjvJOp+B7T22LVPmWa8VG767GbbiKguAoJ+Z5cTYL4jrz+g1IR9tcNbLGeWjNOe8H0te0Q==",
        "shasum": "a42da0586db9792cd806afa0ad6a026083aea954",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.21.0.tgz",
        "fileCount": 80,
        "unpackedSize": 185293,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEcC9BG4fETM5LHYcceUz0WnBXQi3zDT3e2WtjmsozJoAiEA7eVYQjBUMkbwvZ3aDAci8TgL1Fdte8wTWYWaNCt+spM="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj3OEBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqbEhAAh+dPO3/0fcKhDMmXULnNo9WBwAmwg4qJjJUBN6CACeM8iHSl\r\n+b304+19ThbQEHw3IHFCP3zlczdtTv1n5eMtyynl+O6xCOvQHHItBX6+V3Ek\r\nutw+pGIKzyFc3h8fNLie40A4vHTqmmYHosWW6Ut4dQ9QORmtdOAZ2qRwz8df\r\nV/nwXSlq/eBBHN9AQ5/B2GvoXJ7+3fIC4cRBdnzHX90hkP5gqqeUVVm7eA9T\r\n3/KybrHutC8V4KXGnnb22f/TQU6ZejVMSC9cBe2N11Gpt9DtVnoAyMLi83la\r\nNcTHxs4CbcsWGfSmpYKH1Lz0aOXa1vtBI4dfo6mj3Ii4k00EX2mG7IjOKSZ8\r\nuf3gk2CnbOOyhATUcTIt8wjJWmK8F0d6o3kylk0fpxW62StTlPjRpQIfB/mR\r\nSihJheGoZsVFtYJDpLNsVbnIxPEL3qvw9bwOQYCWRXnD1rDFqL5dPFJdQ7Gd\r\nyUOT6O57V2I1hac3xXRmjVLXSuJOpXJJUj5Gr4+Itadc2fHopW1HAwWySbVK\r\nX+FwKGyTrw/+t+xysAkrjUoUT7bi/PzwThGeSpXECDdloRSuknaEU3LJ4Nb8\r\nrsY73gT5a4xIOVaTZ39o27sJTpgDrTJpXXZpO5tDuZ8AHt2XI1JHiwasANe2\r\n+1nW1ChE+NwMqicclN5TChzvYdPNjaGituk=\r\n=GxUa\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.21.0_1675419905062_0.6864591332328138"
      },
      "_hasShrinkwrap": false
    },
    "6.22.0": {
      "name": "cspell",
      "version": "6.22.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --updateSnapshot"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.22.0",
        "@cspell/dynamic-import": "6.22.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.22.0",
        "cspell-glob": "6.22.0",
        "cspell-lib": "6.22.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.22.0",
        "@cspell/cspell-types": "6.22.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.6",
        "rollup": "^3.14.0",
        "rollup-plugin-dts": "^5.1.1",
        "vitest": "^0.28.4"
      },
      "gitHead": "a133874ed7590cbe140f5067cfa80db84b644a5d",
      "_id": "cspell@6.22.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.0/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-cyF2xyV5nqXw3y5f/r/XxEF+3aj6dxwDLIRW1SYDZ8gV1I9pZwupgM7+jwmqes0CNf/mbAbWbhNQrh2MP2NsfA==",
        "shasum": "0cac9d18f3c4b1e969b3fb275aca5e012b3602c0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.22.0.tgz",
        "fileCount": 80,
        "unpackedSize": 185926,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCK62CkhiUYTDByFQPDgTOmRAp2cwZ89UeY3BjLtSjbRgIhAMY43nUKZ+SkzjI9fMl5tjjnlhPkaPlar0zrWhZjQGyB"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj37frACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo2Ng/+Me+02cV7JXt9GWindkO4M31kaaxYwlQMQpuN3uC+mhUsPcQw\r\ntA7aN62KRyAskAsvXKA8/cVfGgPx9QCH4h8Jga21mngLI83LuwXxRYeePT4V\r\n+AtHKnJk6NllER9dedKuJ5ABsOSje00SMMHjCwZTo/M+IPHo9EK8QM4KA2v8\r\n1tlBNUknQCEfji8dlE3j1xVXWWC0FpddzljL05EOYmEl9i2GqbXD67qkUXfQ\r\nI/WS4La5IpUlKVZDMe+ZkMCFgmp6wEOzKRA8oiYm9nf8KLvD/wkoQLAgEaWP\r\nk6H9bx5MHaQimwZ9tJjrHnZqNf+uIisnmG3se0lUAOLaZXwfJF3bjhsCgqg2\r\nHGm7oEJzVz2kEitWi4ZT1K8z7UynUxnHJR4MnIaTPsy6xpgQ2+P7wbioF2QB\r\nEvWYhYipE/nGlRFPvCJMHCFFdaZP73VsiyWikIp1TtTYAnHkr5MOoftgPBpG\r\nPDbKBRQmrgiTHlNdRRF+wu00odFEuGXzbQ5hUKI4GaDBA7umSUjLlRWOnSbB\r\n2JBJRmP4cWSryi3RQf/vn/J1ewP1G1GeR5SDBwCaSI4RoMkGT8wTI2O04u6A\r\nVSORPpwwmSMqjnFAALE5gK91WOdnQUkPwnoEuuEEz4eaYiQrtNl0AA6plnbD\r\n/YFFwlXizJb16CrctvjK94b4lZKvtELdke0=\r\n=s+UT\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.22.0_1675605995280_0.9213766087195647"
      },
      "_hasShrinkwrap": false
    },
    "6.23.0": {
      "name": "cspell",
      "version": "6.23.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.23.0",
        "@cspell/dynamic-import": "6.23.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.23.0",
        "cspell-glob": "6.23.0",
        "cspell-lib": "6.23.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.23.0",
        "@cspell/cspell-types": "6.23.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.6",
        "rollup": "^3.14.0",
        "rollup-plugin-dts": "^5.1.1",
        "vitest": "^0.28.4"
      },
      "gitHead": "a7cfbfa6cf42c9d9746dd8229d9f1317472e5af8",
      "_id": "cspell@6.23.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-mSJRM8n6KJdD6eRDAU3j/Pkq/0IFS6uVF1b0LGfvEHlkWr/WGg/5Syqb5McpRB1ZwXL10UnrTR9qwHguqPGArA==",
        "shasum": "9b03054ef8149d3279434f1aa9918782272d1ea4",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.23.0.tgz",
        "fileCount": 80,
        "unpackedSize": 185918,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDlBTG0lhHB8VaGXgYOAkuBytCXj0iIIB4w1XAoSO8nUwIhAOZZcfUT3r4IGZcPL8Qd3aydWXJFR6xINh8I1VcBkSM9"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj56loACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo1yA/+LUJbiv8nPIo1x7OMXK2XU3Kbqbzub7V0oyJ+5aXfTIt32Ps6\r\nBEhcdT6PQ2dT/1C/E1pb5U6f6cigqQV3PEsyFIr90zHUN1rOQwST5aqqCyHM\r\nlyCER66Ik/ISqPGLmGJVBGgBC9dufNrBuIKDmzcdWd989KJrp+9DibGNE0hB\r\n1gocag+Le3hVqylPY0yO/zs5Ffb57iCkRhItEMbzFYLQyg0v15JUm4IEfmC/\r\n+ww+TS692n/eFR3SwUEzT951HPc0CgMlSyboeyxmAAUnhRDNtsWSQq/av5E/\r\nurcIz1YqQVkDWdcAHOJYjd4UhKLyT+N9FKII0EPMnyiaXyTb1sJqJcCXAfLT\r\ns7j0hzD291vksnqAYSWAeUJISmiR3WisL1Wgu2hcbqRkoudC2hQ+vWQzyzh5\r\nchUe9f2DcHb95oV7ds6uBc7KazooMQrItiPjZxI1Hldrt4Ymzy21u4iQnX2u\r\n6QXvkRL6zBs5JgdcFdxYtmdQRYFmRfCjnUCtAgzGzMmWUOf82UbwwBBo5UXp\r\nooSvdpNw+4+R2mN0lBcrnLKBwKvkB3S1KEO/eyWLU0GCMPNOMfNHtHAK6+xj\r\nApEDs2KjCQw2qL2bi7R1QqdUpqgmI1bN+ZbMMqkRZItiynLhwEjoyZs7FeTz\r\nZtEzVIGz/LdIBD4o/LBA+AM6H6NpYZD+Ldo=\r\n=XTTn\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.23.0_1676126567756_0.033575313619457425"
      },
      "_hasShrinkwrap": false
    },
    "6.23.1": {
      "name": "cspell",
      "version": "6.23.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.23.1",
        "@cspell/dynamic-import": "6.23.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.23.1",
        "cspell-glob": "6.23.1",
        "cspell-lib": "6.23.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.23.1",
        "@cspell/cspell-types": "6.23.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.8",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.1.1",
        "vitest": "^0.28.4"
      },
      "gitHead": "dace8b0625beb2766565f47bc813dc0a45480dc0",
      "_id": "cspell@6.23.1",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-ZSvgYXZVceuKi7NSXRQQ70hd3ehY+PyKN7vbyGHfeQOCugnWB6tsjVLZIWtqOnhAi6Gr7e567B7aPAMiviOdXA==",
        "shasum": "b0ae643645b0a28eec2372a87b3af073cfe4ab61",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.23.1.tgz",
        "fileCount": 80,
        "unpackedSize": 185954,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDqyYig8FrJBlm5ua593ITXuIsAc1A8sdwXxgq+WEBphwIgPB2AdYOetUMpkEZ+AnGRHH1PJHzv8F7R7ZvmRj0Pnow="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj6RhdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqDrQ//QPYSnniPYgaZ6g13rDVIYCefo9VIVuRt9pNcFTP7pGcsa87o\r\nxwHwaodDuDR0pfk0m3ollG1SmCWx358QJ7uK518C8CC5bKsb9tbyFVqkkHPD\r\niuoH1+KDDupbDnaI0c4trQhln73gV00/kbsMjjvcba59P17iVLFdPpsZzuZr\r\nh+vW0RI/yGF4QwKpbMjWZ8fY9xaM8N50JytnHXFAuyIuZZpyF1f2u8hM98nn\r\nSK9C1/XFrVujUA1ds5CX/ED3j55LLOkQgn6gAzO17rAhc/BSRxeuapN6XSaz\r\nr5R/qXwGoJdSTJXJsPfzleNMqPrVIwXiAX/IDsvf56v9O6GPED+hnDpIthxD\r\nlGYhCR1jKzbCGml/ypox4PO2g+BNKtLL8pkUNGJ8QOrGvqH0hEkcEcgdWZeS\r\nW7Pu6BvrbUeMfoisqVAHkeQXfDITT+YejYYlIiKIziB8iRzi3mIhoHyKyIkA\r\nx74Dg4smbM1Tc2XA7awy2ItL6Iq9PF+3hZ7j6av1dqSni+C8qXVmPAhLGfJC\r\nDt11uZsHlRo4gfztKWI2ay/saH/xlzlLe1W+443Lu+VkATzEr3Uw1Qt2sjEg\r\nbtXc5JYDeCrOuit53pnLs+foo+ni7s4GXyo+D3cWjJ5kxymTs3UqXI3kAB14\r\nc1BDG90gDi9WYXoeQZitOf7TR0fzEufAGX8=\r\n=rZ7W\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.23.1_1676220509699_0.6238536652311932"
      },
      "_hasShrinkwrap": false
    },
    "6.24.0": {
      "name": "cspell",
      "version": "6.24.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.24.0",
        "@cspell/dynamic-import": "6.24.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.24.0",
        "cspell-glob": "6.24.0",
        "cspell-lib": "6.24.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.24.0",
        "@cspell/cspell-types": "6.24.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.1.8",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.1.1",
        "vitest": "^0.28.4"
      },
      "gitHead": "0d1e8bf9426cd0bfb814df4f61da12d8aee57ddd",
      "_id": "cspell@6.24.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-NdmBDabyRmndvL62sG22fs5bDeAYCoyWl7qWZ8d8AKqfy2Ar4gCtVRQR4KD0d7xgw527/QRY+pxXV9FYZVJYcw==",
        "shasum": "6b5eb564dac962140c832b8208f069c96e1a6630",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.24.0.tgz",
        "fileCount": 80,
        "unpackedSize": 186603,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAku3o3brqkKEG3gWCY3PJxDVHsZQYY9l01CzVQqfFyBAiB2UWyPlTdOrvEn0jPOLwlX26iuQQ0mIDSaPnyRzmipCg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj6mBhACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpUTQ//Sd4fpZjd99bG+ar5iAaA0/VJFyMWYMTshSBc1QXDYGB/NH/f\r\nPxKViAup93mEvK9z0oOpxUlRZvXht7k7CPEm60vRHQN5/MCIl2wjw1nwC8+0\r\nW1AGrbE+8vP90mj3GE9sdzfJvO++0n2m8sdKIG1YRyO+dHfvck77y7RZJUsW\r\n0lpq+N+6bp9nZdddn3JtHmDENRGF1eOXLeVdRVYB8w09P8ARmbYLOHEdFV31\r\niaGxsWUXTk5SoKEaSuGE5VZ//h88QneZlCuK+/UFxQOK6tXMGHKzF+V5fhsj\r\nxEGYtTdfALos0biD9OFXnsXDsar50IQlVTo5TaRKbCtSx0/72CSyv3CdOk9M\r\nVn/y+fcf3RCNkmJINHYvZkljTMTiBS4Wo5t0K5Ied5rCgbnBSfAooMIEONoK\r\n6XRpFT0h+Is8073SFknNDhe95XnDVlZJGu53+V1PFDGcc4zq66wlIwONJNjv\r\n0m38ofQhw8qMLAN8M9Bk4GmKWg4aFsZ1RSJ3QIaTgCNxT/SPaGRQO6U6RUaw\r\nZO1JxxatxFo71jWEbxHaKlfeN+13d2U3BBgI4KMp/i9kW9wkMyRbckUlOzBh\r\nRdhlHC+5/L5OoBzz4AajcQ66wHYXQKqyAlrnyeW2LBSZtj7ldPbl6eVDTQQf\r\nBzv4BL7BEzL4IIZDiN0CnYgnIYkAGf4X2VU=\r\n=ZOF1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.24.0_1676304481326_0.5010182022224094"
      },
      "_hasShrinkwrap": false
    },
    "6.25.0": {
      "name": "cspell",
      "version": "6.25.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.25.0",
        "@cspell/dynamic-import": "6.25.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.25.0",
        "cspell-glob": "6.25.0",
        "cspell-lib": "6.25.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.25.0",
        "@cspell/cspell-types": "6.25.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.2.0",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "fd7541605e07c43887191097d58ab58d87fac8fd",
      "_id": "cspell@6.25.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-oPuzXAk6egpadqybsP9Eergrf/O9CF2v299auzFNabsmXiGrB8bGJ6wXcHJwUkHtr6EQqcnu+UNXIqnoly3Dmw==",
        "shasum": "b5d82409dd9ba149fa8eb1cf4b42dceced29cd19",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.25.0.tgz",
        "fileCount": 80,
        "unpackedSize": 186603,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDldEdic+ZBOCyFfjul5yG48mC4fA2ZoF4AL6FKRS6vkQIhAMvpQ88Iqu7u6nBQEIs3D25HxN5MldqCYD1ZIk8UQaPT"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj69ZVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrwfg/9EUnDEZM6mgMOJAdYFczJBumBT3GNJMY/giJ02LQvHBVTNYIj\r\nn9XxeNiuBlWtBaN4N5KgP1j1/7lqfvShoUMVufYQK3LeMQhxo6OPHSKNT1WO\r\nQg5ky31bpl3F/DV+yLGVnONMGIDs15J2q0UKw+IKmV15KFl+t8SIJG0CHEP6\r\nuB27GTqO1EtRO4cauj1oXrKF8ybZSGDefAHDLgGohH3NrhjrFem2k6LHQV6O\r\nOqnE0Eua1GR/FalQCp4IKV0bM3ALCROjTh26PgbQ3I55al/lYVZ3Gs5ypwen\r\nBz9KXCAMZsWK7yDeX6d7EG/29Q9fKYArdfbsdgSHx0UHr41ktlTdgraFYUZD\r\nbpfLQTpUr5izYgIHKD7cdBovb3IWQ5S0DtnQBXRgU73LqI0/By/iPin53MnC\r\n8JkmkNhkvb26p0ZAgtSXEu8sXqtEvIyHgu+9hWWg68zz+8i/js4JpB4XLxkh\r\nt47D5dZMI46glFqL4oyQVG2PjRGbGkbM/rolwLcI4oNVsQ5zptyfz+sEJOgI\r\nC9pmP2G+7ZLSPjFzT+lAa1lmpfyzUA/EKdadFQj2p0w+c0r6iG4uC3jqrIFO\r\nmcPf2ViBo6gDegZpZN6XEhkQYHxtqz9RzLnJJgvwgBDeS3806VnOzOdkyKat\r\nZnMBTN0q1Idn3HqOCk73OIGwRkCPuowKCD4=\r\n=Bq4z\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.25.0_1676400212736_0.7990463004832211"
      },
      "_hasShrinkwrap": false
    },
    "6.26.0": {
      "name": "cspell",
      "version": "6.26.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.26.0",
        "@cspell/dynamic-import": "6.26.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.26.0",
        "cspell-glob": "6.26.0",
        "cspell-lib": "6.26.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.26.0",
        "@cspell/cspell-types": "6.26.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.2.0",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "a72f603f4f1afbe237f938b1a23d7cbe2a07d86f",
      "_id": "cspell@6.26.0",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-RHyM5MzToYjdaXVEM5WMmIOoLySaRzp9WcSsLAHxDjcsullkPD83x+WmW18uUGVL+zTbU+MFT6MByUzjNP/5QA==",
        "shasum": "d73fbbfab79919fc075cd7f280cd06b558399c78",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.26.0.tgz",
        "fileCount": 80,
        "unpackedSize": 186603,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCkEpx9VPTC2VSC2fqcl0/FmNutuZfpXUyFsF4ste0PwQIgFYS0wOiJSs5jGSSmER601CUJcPzeN05zgdYTin9A6QY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7IvuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqonQ//Y5jJsEnyhlYdCOXhSU1V9Njexwx8zxPolxe5/NW93RhG5oeP\r\nM5TmLDZkm9MIgf+BnzPfLGE0RvhZ+fLR+/n9fCzZTUQVjJkKtwuNsYMmuPPB\r\nL4Iwu2O4k9gm1V8A/+jm87j2fFjLdyThr7db1H9os4AwtC9Tpz/aDyJxO/Qq\r\nPiJt0I21gdqUGe362TmUnAwptIPirqaUfNPabm5lZUG7kbwoEssz6XyNgt9Q\r\nokck4YMc2Y98H1/MFI64p2lQTdsevqRVnoi3bz47gGeNlqVKeugs1kcxinHk\r\nPhOsqWUbx6oxznwPxRq5lOo6laTSCmY6PMkEg5SRz0YJlG6hzoJSuw/tGLZX\r\nOvtjIi7FCd7Lz4coYu2RIo8kfS8CoqpZ41ytj/LNiU7lzOHFraKT9eOUff/n\r\nCY6mX4r92ElDT5SrYR+NOyjRuViXjyU/gkCBvh4nZUavb4OBIlQoAYAh5Kgk\r\nlqzGsjAXXoIkzDKkHPIAy26NUtlCUsLYNZb3FtFyCLAGVfmYNky+MnfEiyVd\r\nKnJRILQSK3E/qc4hDzVrfxHUlKPp0cZ2ao+/aZX9t4wacXJMScQotwiRKgUy\r\nlX1QXGO0d+UWVa4RU3tGolDIG3LgtxvMfm4LtA2wbPco69qS4a9oeZrvd6GU\r\nJAhub6S8n4XfE+4lCDLHwRI4jfOXnf167b0=\r\n=Wirk\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.26.0_1676446701748_0.6139374655386689"
      },
      "_hasShrinkwrap": false
    },
    "6.26.1": {
      "name": "cspell",
      "version": "6.26.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.26.1",
        "@cspell/dynamic-import": "6.26.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.26.1",
        "cspell-glob": "6.26.1",
        "cspell-lib": "6.26.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.26.1",
        "@cspell/cspell-types": "6.26.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.2.0",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "675e091816f61ce767c7f9b193ea1384313c8da2",
      "_id": "cspell@6.26.1",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-jYR1Z27yM47aaTjCAxBPmOiv1sODOCUPCpKXqHuIzPWqwCV7eswBND/gB/WieVzzcg21woNUcvH7FKHSfl78aA==",
        "shasum": "9fff785cba9462077a17a5c3706d26fb584f7f82",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.26.1.tgz",
        "fileCount": 80,
        "unpackedSize": 186603,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDssMDg/2AQOLAtf17M9NAnVkpu8eu+s18yj3Hmu1CvZwIhALnml5nD7Nn+1xdBphAYGOp/oCR9SVRUKwPdg5i0/Kq8"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7KPdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrHAg//U0/VCRt2vA16XKMONxV/ogEb0Yk2JVzP1i2PpQhcIlrLj1DZ\r\ndgQifMJE8WUIXZ68CDw+5Y1FokP/lEtJCaXyXgD/a0xlGUnu+J/XhlY57ivT\r\nJjCn+/xxa2coU3bDJ5mUEqoaJzmJSSHUtM/051OFctiCJqnM0MCkEf0I01oe\r\n/9O5HGRk4KqeHFZEt5JHvgIZVF+h4UCKQtqKasU+iDs2ROU8BG0f7GzhZ1Zg\r\nijfDYkPdKLazYnTEaFv27oaCwNAkmbXuJrCfiwxKASRFta6oEKvR7dlt1IIQ\r\nVFzoK5ehJfL1UgtbUbiPi7SLUpgRReuv47oHkTfFUwTIDSlkB3siLSVhzOpg\r\n3Cc+4/hKmorUSM6UoFuClkwmYNfDXD8rJ7RtkiYnXDYU5ZeRPpaEi7I6ffb7\r\n2TQFMZ4mhMx18tEj6kO9AO6PId7ovEavuEEwYobYkKitXeONkAmw2psgX8PC\r\nnkjfyDtkmFLefNd0XwikksqvczASFo/Ded1MBSZhLektEAUxDEqhKeFFsgys\r\nfGgQvi931kSre2yUGWEB926THnRnoZRSIMcjKXZo5IvMigjdbmn0qZRxhiLM\r\nc/a5pd2YrHwBNogJy/re5cUVPQzBF+9Gi8vnEaM6w+PJrJG0TFP+zRRShxHg\r\nHK2N9WokcB95p3Njx7TrC9PRdIoj5aH4mTc=\r\n=fOFM\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.26.1_1676452829088_0.07156370579132876"
      },
      "_hasShrinkwrap": false
    },
    "6.26.2": {
      "name": "cspell",
      "version": "6.26.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.26.2",
        "@cspell/dynamic-import": "6.26.2",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.26.2",
        "cspell-glob": "6.26.2",
        "cspell-lib": "6.26.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.26.2",
        "@cspell/cspell-types": "6.26.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.2.0",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "9c983b5f96c3d7b089e49178ab0b437b5eada256",
      "_id": "cspell@6.26.2",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-b5kltJv/J2OUgcfM3NpWMP5y5dBf3SQBEEK1WDbjDAqmLNNK+oDz1Tu8zX9sfoqyc2rs7cMiONeQe9PEyvijUg==",
        "shasum": "a8ec8393c1b2ee2790efa86a29f8ee3c9977ed19",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.26.2.tgz",
        "fileCount": 80,
        "unpackedSize": 186584,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDKomJqC9/Rdag4ph4aq+/2SCsCDz7klUWjzpnLK87+EAiAJ+t2M7gcXsjUDpgvzghQeq0zqxdIfH5919j2BlyQFyg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7ecFACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpRHBAAhpuLgCuBS7g1vzC0UV6JOHiwA6G1tNBjbzVigLzr9MLa1xU2\r\nEwGeakBwGQofz6jOLLQ47jXET9xYF0KwJaSTZzNr9nQqaDBY4+zvmZoQWvYH\r\ndnuE1UUcE3Dlf7L6PdP/m7imV11HM776tdxGJOtVXz9CXN0hQgECz9cy8Jyw\r\nF4d3PP/pBSvAgOxS2euExb6okQr5cLUWWd71PR6zCqHJqF29j758t7pW3fY4\r\n9nohtDq5/+ZDqYFqosgLE0OA+yuSs8t+GSRyS6u/wHTi6f0yksqct2yPg4Sj\r\nvZgnkFh0WfWCfWB3im9vmsCGN1Puv/DDIDrR2QAsImVyjVGjUJcDYLiwcpT0\r\nNEXGhBYXaEzLWeOxK8SoF9l/lgCo2pUEtbxZ/ENHkRaOWTHxsBBv77suJs8W\r\nPNEy9OV+c3RPGmfjKZ+9XWNBLACmiR2xvXQg2ARHUmkHUEKCPu23jPFEM40N\r\nto9Jrg23zNUGqTqR5UE0LPPp5sofAuCiiySzzVnBNEOlOXSIj94uMyo3ivr9\r\nEgmlo2ti4GvEVZ2cnqERFBC8PsRhOqTesgScIKPyuYdgp5OFXh9PkK0RSviT\r\nHKsL88EHgBX3H16P3U/riLWYgVUhuspATeL/GtY2j4PLNiccbipdsrhKDhnM\r\n2oFj2RzGRFj3AjeqKUm91GHjYlt2SBqVRuA=\r\n=iFew\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.26.2_1676535557770_0.8963648382732543"
      },
      "_hasShrinkwrap": false
    },
    "6.26.3": {
      "name": "cspell",
      "version": "6.26.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.26.3",
        "@cspell/dynamic-import": "6.26.3",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.26.3",
        "cspell-glob": "6.26.3",
        "cspell-lib": "6.26.3",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.26.3",
        "@cspell/cspell-types": "6.26.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.0.1",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^6.2.0",
        "rollup": "^3.15.0",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "b8c6e0a31c58ad61b4814f92dccfe3df4999ff81",
      "_id": "cspell@6.26.3",
      "_nodeVersion": "16.19.0",
      "_npmVersion": "lerna/1.15.1/node@v16.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-h7p8JpWSFhgNbsJLlpjzMCQ0k6TuhX/M5JcrED14x17CuZR7ad29lQDRF0Un82Wxhd8hJNxZubV9IBdWZA7Qig==",
        "shasum": "f778de51a01e77c0c5aa060e0c0b197d1aa14619",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.26.3.tgz",
        "fileCount": 80,
        "unpackedSize": 186626,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDjKL5/9IGux3j2ZzZmNx5xaQ8Kst/aioodfqRL4mLVqwIhANfrd5YzB40/kBfMro7RU+sQOJ9lpkgiqArDGs2UwcZP"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7hb1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrgDg/+LoJ7V8r540Eiv/v1RpAbf8QyQdTETrmzO9dv+FNjKFc9UaS0\r\no+TgRfvWYVDFBTZwhxUxzKpXGug9rmGS/XwxGEdU9z6CnD6IXYZF+FHVYnxw\r\n+Kzav0RWi3ohewzwtwWmwi9J+gK68a9Ns7A9in85+SZvGRc/rjrEAiCXQjZM\r\n/XuEXNUHMoU6k5eFyoBSHLSTru/Q+d5/1RFNDF6DAVPeaRotAGhIdsd1qiph\r\n859ggaUd6X3IX4KQ5ZHRuomTTWPSoIWEePYWilw53Z7TROQchNG/LTBuFPHh\r\n24M0eEMNg7o4Pt4BwaSLYmOKms5Xt2rxXdmZJNg2K0tsqyMFMsDlnfGaXrJ8\r\nn+FG40xYTcEJ4twP2/an5Oew7iKIDalP3xoBUwG9myfMB0M/WeT32WBQeKRB\r\n4+DmIyJx1WVENt4sTdHZt9i1A5nRiksx3NwHTV46zhkf2te8Zw+x9yV0a8iw\r\n7vTV4hny6PlnrRPovOdD4mC6VELi03gOvVYADSw5V1LjEcobBe/HDgK/+irn\r\n7/kdoqIRTycWs69W+irBezRmSiOSQkiAG/RpwwENEfZql2cxn+780MI9OvhF\r\n/GS3TmfBCoiHq571GBCK/CjPO/AhIKoXdJdyHYFK3cPlHWYRAuOJuB9wszAx\r\nTWVv1Mp92SiqrAmNtYZzgRCisX2nAD527ig=\r\n=tQ0k\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.26.3_1676547829617_0.6360782414414727"
      },
      "_hasShrinkwrap": false
    },
    "6.27.0": {
      "name": "cspell",
      "version": "6.27.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build-dev": "tsc -p tsconfig.dev.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.27.0",
        "@cspell/dynamic-import": "6.27.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.27.0",
        "cspell-glob": "6.27.0",
        "cspell-io": "6.27.0",
        "cspell-lib": "6.27.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.27.0",
        "@cspell/cspell-types": "6.27.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.1.3",
        "rollup": "^3.17.3",
        "rollup-plugin-dts": "^5.2.0",
        "vitest": "^0.28.5"
      },
      "gitHead": "b0e31c7ba91ba467d5fd9c66f238bb5d899f4833",
      "_id": "cspell@6.27.0",
      "_nodeVersion": "18.14.1",
      "_npmVersion": "lerna/1.15.1/node@v18.14.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-BhDzXJIRFcpswOy32tgnoOw2OdSM91pQuUpRxfZvRxdM4HBxUrodDYJ5HbBz7D0vNBrXFidFX/157KNX4m1gmg==",
        "shasum": "8e3b2265d4be712060a6ed09bbfb72215519a8f0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.27.0.tgz",
        "fileCount": 84,
        "unpackedSize": 196784,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDJ+L0ezUgIjvJdpKLdOlW2vuWgjiGCVrA4lo7uRiUWVwIhAM4LbytXtKR+vLjdwB8QFCSCeX9yzjUXFnNmDUnCtypR"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj+w82ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr1pg//VXfmJvzVry/TFoAc/Bo5aUipXeU9XIx4iSssjWQp3IAFXqhu\r\nPsrXWoZREZ15hUSJFB82lyFsffM9Am3bs+9adVF+vlaG9Q8Si+5FPS5EsYuz\r\neLNCBSQStvYbHJ0nfNYHoZbbibZXxQxiusJ+CFnQwpHhVfrrELv+EXP+Y6nS\r\nu99gcFlAffF6qLD61iWkAIa1/ivH0agYxN/i5kgjhDOgXln2XnLs/whm73qO\r\nJAUnZ12dBa8i4vHntISZhhncvC/pLnQrsDi3rP/7iz+aK1vltMsC9NBY8oZI\r\naGjk/e8Bp5BphDsNcWoreKcrwdD2qHqYtzUMux4kDIlV9E7pBsPEC/O1kUuV\r\nDRLsH4wEd9mZ2V0GLcXsuQJ/04VJvpEqz/y084zEkmTpUYbyid3TQDQKioia\r\ni60Hss72pJwVoLf3wctN4Ile3CT1HMGN9jGkQO4/SDmDxVijjodWFbfWvhd7\r\nMPxV1EFK0fIOVhXLwZ3umzrMv38k61CRcvvczUvh9FbnM95IPHQW29eOyyLM\r\n1a/cMphEzn0BTZ4dLceHf1tbo66KU47TQxD5TChN0q/mmscQp7j+ziBVGG+U\r\nihi2Oh0NAUqMbRal8vH8+dwKDE4do1CRAa1arTWgj7mZudmlRycflKcU3lo4\r\nmmOhvyiZj/BlkePK+fMU70C3qFXQrNR8Xc8=\r\n=jtk1\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.27.0_1677397814071_0.4102475106746941"
      },
      "_hasShrinkwrap": false
    },
    "6.28.0": {
      "name": "cspell",
      "version": "6.28.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "main": "dist/index.js",
      "typings": "dist/index.d.ts",
      "bin": {
        "cspell": "bin.js"
      },
      "exports": {
        ".": "./dist/index.js",
        "./app": "./dist/app.js",
        "./bin": "./bin.js",
        "./bin.js": "./bin.js",
        "./application": "./dist/application.js",
        "./dist/app": "./dist/app.js",
        "./dist/application": "./dist/application.js"
      },
      "typesVersions": {
        ">=4.0": {
          "*": [
            "dist/*",
            "*"
          ]
        }
      },
      "files:comment": "Due to a lerna bug, patterns like `!**/*.map` are not getting recursively honored",
      "scripts": {
        "clean": "shx rm -rf dist coverage .tsbuildinfo",
        "build": "pnpm run compile && pnpm run build-api",
        "build-api": "rollup -c rollup.config.mjs",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "compile": "tsc -p .",
        "watch": "tsc --watch -p .",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test": "vitest run",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.28.0",
        "@cspell/dynamic-import": "6.28.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.28.0",
        "cspell-glob": "6.28.0",
        "cspell-io": "6.28.0",
        "cspell-lib": "6.28.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.28.0",
        "@cspell/cspell-types": "6.28.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "1c314413e76908e5fbf61fd2555726112b177c0e",
      "_id": "cspell@6.28.0",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "lerna/1.15.1/node@v18.14.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-HPw7bO0H6l8vXyUF0Ybp9IucVt15Og8YsOfQ4RIaCLU9uJP4RgwjwHVPnCJiQvhC5s4Zbw1WzX/+J8PP83oIUg==",
        "shasum": "9cba0cbb439a0ed506c20581fb5dab1f4a779c8d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.28.0.tgz",
        "fileCount": 84,
        "unpackedSize": 196679,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHHvRVEY4x0PPr2i4VZ2RUjNnQeY1+sJ1AV3NkjYSpwmAiEA7Ad1q/mVHagp2NDbUI6Il3AoET0RcmgEnwxP6vL6s7I="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkAlgbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpX2A//fBcJqd7YEpQqeXURFePwrzdzprKT81vrOPmhsOqI3Gw6ZQNR\r\nY9x614mDu1KKi8GWdve8lzJ71pRjIMHX7eI6IM9J5MId6FHmGf+3SSkR8fE+\r\naNjWLZUcVtR2pwulF4qiNpyyN1ttlV4R1MMq1KaVn9p4qpDA/tGd7VX5ggxu\r\nh8kt/f5JBgws/wermQep1/vLnTRbm4oMie2TtpTTSCrhjGD1t4r5c+1EjFAq\r\nnt+7rnK8Jd23U8l8xdS3c5tIzlJ20LOHd35Jsv3Vbl4pKMMFr+4yf5kPcp/6\r\nnyElxYbb4yr9g8GEAcZHcWwzlyF0dA+7IttQGoF5jLYOU7lIE//MzQ8ybKac\r\nDFVd8kA0BBObV8hnuDGnIMDVyxNP+S5N4W8SCKw+R130OEawrTZaVYcvjcx2\r\nPpYn0B2OVkKZfZUs0gwl30OCtt4VXF5wXclPM3hc+rDqnX+VFBFn3XKFnHoo\r\n4jfcqIhX7lxuUcZGlAy8GKw0hF80TrlR/LMPZPrjYCVLwiI06KKXcErNmtmS\r\nkDL1Giv8tvUPAaYQH4KTj90P6X5/lJCUAmLcuryIJKp3YcRYBh560/Nrd+tC\r\nfcsiNRa7bT/OY7xF7rbVCZSh5bRbK9RIe94V7HrKF/QdLYMc1eNxO5w4oaEk\r\nSgnIC/wO++4xd5wxDjEGTusO+6g6EEVxZXg=\r\n=K+UE\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.28.0_1677875227654_0.8081605729904391"
      },
      "_hasShrinkwrap": false
    },
    "6.29.0": {
      "name": "cspell",
      "version": "6.29.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.29.0",
        "@cspell/dynamic-import": "6.29.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.29.0",
        "cspell-glob": "6.29.0",
        "cspell-io": "6.29.0",
        "cspell-lib": "6.29.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.29.0",
        "@cspell/cspell-types": "6.29.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "2eabb1c47c12c2a42eb95d30329be6f544ee2ffc",
      "_id": "cspell@6.29.0",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "lerna/1.16.1/node@v18.14.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-YNuunxhMkG2nNmCc7ZOyyd7ceExzMHLhIoa3OQZemUU2FCRFIypM34hCsrgqQEi/vUp71TSEQwBgfI/HLQxfgA==",
        "shasum": "f8d508dd5b43af9b9efed00befcd1259897c2234",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.29.0.tgz",
        "fileCount": 175,
        "unpackedSize": 334028,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBLu9KCx5KwPG8d0dt9+L0VprLbXT3mITMlrgKkc2XjCAiB9gr2oPM0h4VFjEHD1H70oKMKKRyAOw1JNxoaguK/wyw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkDGZ7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp8Yg//QvD70DMXy/6qDshFJ9jY2UZPw/RxZzvCIyfQ5cI3Sjivbfu1\r\nzhTRYJ2LCJQkIW/A+8VGfhwWIUcYGscePw3ZPs6sETLRrlLvt1aa9TuWic5q\r\nsI0wEKYDNeqWww6bzQ4LfJ0ImelUY7pxgIn0F80fh+GDAgDLAIT/lsYs9hUX\r\nRjfc6RyB1ohYSkeqZpPtyGgGPYuZDG9w9kota6QJEZ55RHPe3G6++YaoWT4E\r\nd7aUSI9SEHR3yIIzipqgiC079M4AEp62ciZtl+rcSkhz5a0V0ZvfhMr0IW+f\r\ng/zi2Ykjr3waVt4R3cFaRuxhZbIGiVpHf6athiCgKui/QXQ3mfdmcLxWvPHM\r\n1AiIzqG2ns/gVLE9zQiYog4+IEfDszsmawgP2waFb9aPAMmhoMp1dm5NxMK+\r\nhmezqlav6Tx3fdWxv1Z2i60HkPkMKrHF6N5PJ0algvW/HlQW+rRcMuTBrjJu\r\n3Xn+Cgb2NGmnZVk6ksiwH7AxLCniAmDbpczZJpuK1e7OqnCBiJfQ+HR2gboo\r\nmOTscAJVvqOhJChiCrVu/XW+HWrofpAA5NcD+s4bZlvnpn7Z5ymND4f1KvPU\r\nI0KhjjwZD9aZ3VbSKFrfFaydauXHSeBSANWEHjPeOE8zdG4gnSlP3/xLUd0y\r\nApZnaOQR5E8aU6oDnB7ulcfU13MISsWRSpE=\r\n=8drC\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.29.0_1678534267414_0.8097422138992152"
      },
      "_hasShrinkwrap": false
    },
    "6.29.1": {
      "name": "cspell",
      "version": "6.29.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.29.1",
        "@cspell/dynamic-import": "6.29.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.29.1",
        "cspell-glob": "6.29.1",
        "cspell-io": "6.29.1",
        "cspell-lib": "6.29.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.29.1",
        "@cspell/cspell-types": "6.29.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "e524c611f3529b22a7e8ae3449a5c9a01332d44f",
      "_id": "cspell@6.29.1",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "lerna/1.16.1/node@v18.14.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-HBvyPUdrT1B/+SnaRkbuUUJNsssMis30bznfrRRzOc1zKLVNRay8Pd/ZYASp1M0S0T9V1IiE8FGy4t6V4kb+Hw==",
        "shasum": "e61e2ade37fad7060cbf4ad571493b0eb9b7dbb0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.29.1.tgz",
        "fileCount": 175,
        "unpackedSize": 334028,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHTPviG5vGVtpTGV4M1fwuHQMIZWnqPpJLyenOE0TU33AiAPcZInxiLWH0WHUDzYWEnejiIaLDcL15hNIshCueWCnA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkDv3EACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoyWA/8CZ9xA4OwdZYXqlGijLMyhpgTwV/vR2aRzPLNx9Amk01wS9n4\r\nxqkN1dNHdknvAXnC4JbzaKmvKx3DMwEYTEnol/Jbfjk2CTLs94xu+olms9Ih\r\nkAsrGMYbsiNhzzUa1D7oOn3+mdssb1wLdku/X6tjGhw/8ZKqijt3jGg0+Jgi\r\nixU+8yc3g0h6w+b0Yo7OggfW+gThFCs64rr3gn8LpK8Ar0C2nFwzm9mEe3GM\r\nPLB7aSdS4tQTQhsfgFPVtX9OBfkDWfH1Mz5pDyQz5fQ+smbL5t69hVCYcMU3\r\nrM2oEtGHoh8a7qSIsDzFulAmxF7La0osAfJo1ITaXZuaiogGAoIwnqeoQ9sV\r\nwPrWU81ZmbTk1uMK29u7Rv6iY8SHVzIYaa2zrXtKTseX5VwbTOTVLUDcRxsI\r\nOxNdg+2KZ7H7KtrbJjgKCogrLcBucFzsQsp+ULmukxEW3f+ftotE+mF6ragz\r\nRLtPmM7kS5/D4g2iILQMtd2jmha7hzT8wGGhkgCkySoaP67AiKt82Q5ctUCz\r\nr3DfHSewDdi/dR3bd47OhBV8eNdOZBlgl4CdrbmWlZMcZXGtcUCYQBkg0x72\r\nlJS2HsK57zaSjwCe9U8AkEK3aUdAY8ycXR6JlnCyaaS+U8MQBqtsjPXmwoqq\r\n0CEbhUsOCt6KCitX8tZY/zDC44svridl9vE=\r\n=WUoS\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.29.1_1678704068571_0.5561300586021845"
      },
      "_hasShrinkwrap": false
    },
    "6.29.2": {
      "name": "cspell",
      "version": "6.29.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.29.2",
        "@cspell/dynamic-import": "6.29.2",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.29.2",
        "cspell-glob": "6.29.2",
        "cspell-io": "6.29.2",
        "cspell-lib": "6.29.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.29.2",
        "@cspell/cspell-types": "6.29.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "fae497508ec03795dfe0e0b70ea80cdf3d7be5a5",
      "_id": "cspell@6.29.2",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "lerna/1.16.1/node@v18.14.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-WB9FwcUc5viYPm7646bCa7DpNrSc07tXo5o9LuZ2WkmiTNje0RRxneEV9HjRp5t73o2XczSYtbhyVJL08N250Q==",
        "shasum": "089357fce178bf97c6c9e20c88a939ca63c9fc71",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.29.2.tgz",
        "fileCount": 175,
        "unpackedSize": 334028,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDSxGts00gx77xH+MsZ85+V+TXP0WYfWyixH7cpyt5siwIhAIZODsDxG6wrcY8N/RFdYas4UcvILUuUJVVCOWHRclIl"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkDxfuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrvQg//Z6ZKLrlgkApOjwkTOpOAHKQImadMWzCc5i+2u/RQnwmtwSjv\r\n679k/4Hj0S+Xpwps5Tb8ZyNYJZYTH4NPB+dqSiHhThH/gdLx52u1LKfCbHbm\r\nRxKWLNDlfmRTuRyd5Dt095ToFZoScq5jPEdbs++aFclwxI4ozEhXisWYtxsk\r\nPSI6gmrQM436qVedTiS+bbSyOJN2aRa4pMmC3sWxiIZOHXCNoBme0P1JtOH1\r\n2DWv0V3LZaPhjJqSrEJLrmGN5vEcO+mfaRvrEnK1PPRbjCix798Hr4ua1H09\r\nuIkS7bI+tmJuxfzaxczbzZsZZNzloNop5TNA9u8/PrPhZmWjBkUPp32VfdUi\r\nFm7tJfZ20S0RSBsE02zcf1KmazjTb5CaHZdhHKtsLJ1Ix7jL8ANb3vMnEVB0\r\n4pEJqUJcWT7tJj0oVhqHLbpzqsvsQcFu0VnqAn9evSswNmTBSwrZOGG6pr1j\r\n7WqsRYx502DiTqzjl5hwdC+11c+c8lsGgvRBCxGX81PMI3XfJuiG3NeOhmEt\r\nTHOQqdbBuknFjNcoN/jeutsBigFB7LbeMrZBGdhz8LFdPJojThSYyWiKRSx4\r\nWgH2XymVGNl+GuXgstKpAX0GN2IpGKYkRWNi+47IXpburpsWrgLkxXT6HUZF\r\nEvZbdk1Lb8DAQnCtIOpU1ooRwt4IFDd2oFE=\r\n=TDrP\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.29.2_1678710765850_0.12259680676753804"
      },
      "_hasShrinkwrap": false
    },
    "6.29.3": {
      "name": "cspell",
      "version": "6.29.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.29.3",
        "@cspell/dynamic-import": "6.29.3",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.29.3",
        "cspell-glob": "6.29.3",
        "cspell-io": "6.29.3",
        "cspell-lib": "6.29.3",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.29.3",
        "@cspell/cspell-types": "6.29.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "a46e27dd5e9d52d83f0bfdbeeafcda58ca516fc1",
      "_id": "cspell@6.29.3",
      "_nodeVersion": "18.14.2",
      "_npmVersion": "lerna/1.16.1/node@v18.14.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-lhNpCEsze7/YzD4yMb4LnSbCg2Qt+qKOuW/pR47ysqylA6EeBIl8Ea+kBYpSs1GuUHNEu3WXDE23gevePkMkog==",
        "shasum": "4541cd4d4d912999e075782ca9f65b46e85a3f13",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.29.3.tgz",
        "fileCount": 175,
        "unpackedSize": 334028,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCC8yTT+DuruUtJtab4tD3uyx7zzulEbO6MXa9/7dvdNwIgZPRWJiBotj/LeP11/PvBsflLanF5LXEVZRUG9BU4tIw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEBK2ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqHRBAApH1MKv48DEz9FGE6qMUwW4tPhJxGLlrcgLEW35I7eC9P/jHX\r\nogdRlLmg2X61pXpQ6E/XNsy56M8kajhZ10XCtTwcG6n6Fog/UZ6aIEeOC8Jr\r\nLDkIywAwwkVxskEV3clExlYb5UcYsYj0TPi1vdBQe7nbtBlvmxeWa+9xG3Pm\r\nlrYO8MetBqh99cfIQwATIXwzRaXnsAPjZa4Mutb9CZt295TWvnMwLJsTLrzW\r\nzIw4JuQdlkpZmfFf6peaaSKQAl1u4guzvm4qtcC30aYCXx4qPwwTa4Jx6/vS\r\nKzDVijuwmjQ2nuGP0//fX+/NfPT0WVkOnQnQi9UEv+m30jnNQj49FrHUCBnW\r\nwhJ3pgvTcFYkZhqrkX950NX4Zf6mxSHI3o84+txIMvp/KqyyZB/b97AcjoqY\r\nR3nSWICJb59H/cu3IAvPVx19i0Tg82+G3q8Qlp3lcKd3lbAal00GeQQXY8bd\r\ng59PRbtEE8P2s7ja1lGe+nLmiTpz9x4Zx5Kw+K33l4UyOdsLUWJ7K2JPLsoC\r\n4cEmtFtlnns2iK7AkB6LRG3AfVz+R3WFCe0tSVXQfCzTb1vfQ4iVXajPstCX\r\n7r6r9Rw7pnYbiWUtkGqHr6E6/DEnhyj4G/n+KoM9Fmu1L5y5KXETPcAF8fpH\r\n2B9SIRWmm/Kn0T3sZ/TLt4dsO3Y1aqJR3J8=\r\n=/yqw\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.29.3_1678774966647_0.5771231282012579"
      },
      "_hasShrinkwrap": false
    },
    "6.30.0": {
      "name": "cspell",
      "version": "6.30.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.30.0",
        "@cspell/dynamic-import": "6.30.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.30.0",
        "cspell-glob": "6.30.0",
        "cspell-io": "6.30.0",
        "cspell-lib": "6.30.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.30.0",
        "@cspell/cspell-types": "6.30.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "9af8c211fdeeb58e2d7a2be0e72405a23fe954cc",
      "_id": "cspell@6.30.0",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-jv89wDPPhXMVVyzOiQWRq2458QnoUaVrse2oXWky13UNVcHrsXq5GS4gQtKjAVxvwSJcVZpwtN59eyulrqAFpw==",
        "shasum": "5bd7fd8bbc5c864b7c22ba834f7531dfb408587a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.30.0.tgz",
        "fileCount": 175,
        "unpackedSize": 335699,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIETmt/FG0Hw7sFsPzu/EPUdPEOX/3iRt4Z/ZgVMXU8inAiEA7aaRcAXKEBnyuHM9Onx7FV4A1Vc2ZeKn8/dhfpPZjUw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkEzYbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpJTQ//RK/wBRnZ261L4XwTo0K3T9pIHP0I+cmnH2H0qXK5Ut0fEW4w\r\nMSqQLwFfU8wc9ouHjAujwagNjEgNs5vyDkkMgCIs/O/cI5bCBBuRD1TjJQCV\r\nEnX6JJCI1KLWqEKgzFBJ3CScvo5ZRLBc5FJCeqXCDVswTCEE3pLAbpQvyh6S\r\nP3F5GlQ9USG3Koy/VwDX+e7a0yESWBmeUxX6NT8o+ct1LSP0ug65/85wPib/\r\n8An2binCq+NNBuVPKET7YnVt6T58tzMGz87Lb1t5EoDM4+OpON6dyNcsVZ30\r\nCn7d7gCDykoHpBo2b/n/a3MCxwNlW2wF5+Gg0J4L1DoxTTpl6QVsLWNpnNBV\r\n6d45CyuBm+XtopZz0CsRbilbb7FVtI1/CFST+xgedt7XaranfKL2auBnWDaN\r\nsw3A0wUlWOqtC0zBv8B8AecI9SC3wd2AC/NnI7shFi/O4S4VUiGxc5d/AylA\r\n7ge8AuKfcvTtMw5zFkJe6LrgGuiFMmJv03RrEcAK4dPBVbdfaf+ikm/0JE5C\r\nk8EZx6SvBcqj48C02N9vUlUG2BmD+VmxOM2R0bdWHngKnIW31dPWpOYT0/B6\r\nMS4WK4YUBu365RGHFLfobc9Q8O8DE0i8dDFigFDrc6HN5KLiJq/L0VClTUyH\r\nTWKa3dPsJ5CKrBR0GkJJ9hyjVMpxGhJATQE=\r\n=IJ26\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.30.0_1678980635428_0.9398307308380491"
      },
      "_hasShrinkwrap": false
    },
    "6.30.1": {
      "name": "cspell",
      "version": "6.30.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.30.1",
        "@cspell/dynamic-import": "6.30.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.30.1",
        "cspell-glob": "6.30.1",
        "cspell-io": "6.30.1",
        "cspell-lib": "6.30.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.30.1",
        "@cspell/cspell-types": "6.30.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "3352b82591cd0cb27e5cd04dea93773e98a606df",
      "_id": "cspell@6.30.1",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-x/kO5rk5FXGEVfOyBYv73eMS9SfcK57mU35OSQ63mPI3X9Sj4uy5krrgd7lF7rCR3GcJQ0fV/hYkQzIkzN8IGA==",
        "shasum": "130dbc075fbcdee73b1f3e53271be4bba8589554",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.30.1.tgz",
        "fileCount": 175,
        "unpackedSize": 335699,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHVbjEhIiJ8Y+cz4So8LrUbds4GF46MbuDY2D9rpneqiAiAxQARvUlDNJZX7UVLyR9FMuYirV8C25MtBnc6tOFDvYA=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkFU+1ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpUMhAAlTFkfi81CNgArqpoxd31DxzPyjFAIZ5yVlJ178hmAeiIeiTf\r\nDd+Wa7BQCpVFIXFlN60eGA87kInm9JIiiLZZMvp6vZS5vkRycIO8p74fvd2k\r\njNWGJqoUvCIvBEr2i8JGxdUH4zB4tQwq7YzpMO0ni3ifTapV0NIRYJb42uvK\r\nmTJRpn5N37CAEjvU4v/K7Bsy1Q6DT5jnFv9UAW3hikAP7+gRES52uMd58Vkb\r\nRTUoeAJvdcr5K4dT6G1EM5UVhIwPkuS7PGUS+1CHcH7oxpNLqjBH9oEkggEM\r\nqQMQAfzQlo5Z0p/ragVWWbV/P/CHcqqYtANb6KtFaooHIL1wtysbbT6ro8op\r\n+aliq+sAlOAxJF+MiptlfEKiBmnQLg4FRnY4lf6D1AQn95VkLWV4uuXiQWWc\r\n+1g5mkDcLvaZofT+Sv1IUk1EcEa9aM/7EkqYL8FrO1rtBYYA9QSP2wPjJGrA\r\nTtWF7RzRmlPFr31ZATFzJhsu4Dd3/l8cqV4i8aZQ/yDmWqyCgGNAoFwju1ZY\r\nY9K/nKpI8F85KUMAar4+pa67xdEWGpLQ3sT9d2EHtFlYQYleU0M3icnTBdjP\r\nPrkMRPhBNJUNIS5VqV4cdNiwgsFf+oVLfH8nzt2nEqFjVCeJx0ad6cEu2rAL\r\nALksIVEKicb/iXM/H7NuPjVw6rRLWT29X6k=\r\n=8BcX\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.30.1_1679118261357_0.938380494226023"
      },
      "_hasShrinkwrap": false
    },
    "6.30.2": {
      "name": "cspell",
      "version": "6.30.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.30.2",
        "@cspell/dynamic-import": "6.30.2",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.30.2",
        "cspell-glob": "6.30.2",
        "cspell-io": "6.30.2",
        "cspell-lib": "6.30.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.30.2",
        "@cspell/cspell-types": "6.30.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.2"
      },
      "gitHead": "4da6895c680084f3b741ad24a73c5bb011a57b35",
      "_id": "cspell@6.30.2",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-2++f3cA4bCDON0Evd0D5GvhUU25yQx6Mhrm+DDBapBXKo6oXHn88mLNWU9csc6oVXrUcCAx3uH5U6FNKEiKGQQ==",
        "shasum": "2df9710faca930c1746dd45bc977c1983e2f2e81",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.30.2.tgz",
        "fileCount": 175,
        "unpackedSize": 335699,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAyxy41HnkingyZDvTe4nhHUStcuIspDM7Jfb57ku9OMAiEAyM/piIM29L8JUIsopdlJcZcgm7MptDKLS0ivu1Is2FQ="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkFgcyACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmpgqg/9FEIJAEB74ytfRq/XztBwuBbKwNAMFA4RCWuhdBR4vvXa2E28\r\niRiA50jKJ28m3rVkmAZDCayB5iuuwaZMoxV5a1AhWrACtbiC+Us23qA1/VQL\r\nS82K3epLoH69GIFUiuNPGTigtZcI/RUtSuBt1oKVPLors+CMsI9fS//0y76c\r\nQY96PaKb9zhZfuyVvo+nB6EhVo/aLJBUofoQSjP/0TI0xxE08nT4Md1Vubps\r\noDjPYluLUaUbbtQ8KmJ+PSnhjhuqFdSgsJIRMI82C1m0EkSMNZqPtv9gTrsd\r\nfEIRKzBa0OzzaTy/8f0edcnYbDI5geVerXuN8NsNbavCHo40bBGHBS9A/bN7\r\ncj+CmjTyt95JWzuS3+cLFR2wUPOzJLp5IyRmB8yt+ATYfCuirV6Bc+wKAEZm\r\nIDDcInmq5VFQbr2/qfEo0EdcofwS3HJjACMqAeoPG/0OyTCbuVrtvDMOj6tA\r\n7LKejy5TWRKbWa2s/2/ZpWyv+j6XYHgYs7W0DbQdr4lsEn+R/CB2PFfrFpSC\r\naIhzld2/cuHaRkUIv8ybQHnICQSCfdVIwAHRfnpQYdwXr1hyZVo3IHG+nadZ\r\nCd7EfWHjG9nGH5bDHs90jqyugmbl7zT/cCsI7HfMUWhblKYXwOnmJv0B+Ig/\r\nV8jFKgjEuD/6sLv/TwRzxifq3WxKPab7DTw=\r\n=P7ls\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.30.2_1679165234623_0.8288903147162059"
      },
      "_hasShrinkwrap": false
    },
    "6.31.0": {
      "name": "cspell",
      "version": "6.31.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.31.0",
        "@cspell/dynamic-import": "6.31.0",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.31.0",
        "cspell-glob": "6.31.0",
        "cspell-io": "6.31.0",
        "cspell-lib": "6.31.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.31.0",
        "@cspell/cspell-types": "6.31.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.3"
      },
      "gitHead": "1c0c3eb875bc1aab334bd56d952c0d0964468b7a",
      "_id": "cspell@6.31.0",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-UrawMVtnLqkuRrdbVzEhpf+qYlJAqJeZfgkjhrkFx1LWwLIO1jhhhLjSjl6NMxfVMzRz5FA2aylucmd91sfZlg==",
        "shasum": "8cd1d2ef1d0b76a2a03a99b1a3433098145559fe",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.31.0.tgz",
        "fileCount": 175,
        "unpackedSize": 335897,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCHjeTomAbdVeqGioAqD7c9X8k+fKhTYTkHShWVKqOIvgIgEKzLwLt+owuCZxFbGeZGWYOucoqyZ2rXrlpnXlMkX1w="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkHcRaACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqcbw/+LCgTDkJHFpXtRGQnk60kR20CXajzufAWFXYMufS8G96dq/aF\r\n3smbfM4eUqQdTNBaqO8VsovPjXRqO/GIr4g0JiVI8FOnPWPeQH0sg0bdaqoH\r\ntycQaAbzDau/w4Q/abQLAVRZDqLBySEd9atIGqAqPyT5uEpRXsqgAusltZwi\r\nbFAqjqNiwNfgLnZij3SMrb/V5xHNjvXKSRVN051CAhvH5hIy0XfkeK6EzHBV\r\nl1Lt9/NjHyKCSLXU/C8wrEbr2ZmkCV7ybh+Wc8ZrgTLLb5R7o4/f5PpYd7YV\r\nmI6qmx5A23qdgTMUwSlvJXS84r+rZ1RX+gZfYUTGXUZ4MUgV8V7Yt00b/pMt\r\nAf6Uy425pb6SprnXXEy7BpZVANKAuJ/36z2QlcHj87iVmntVS4J4e/tEsy9+\r\nYAoGPNgYn1ARrWENASsQ1z4D24W3qOexDIJ2NHKuKPFqzM/c/aT4agOPqHsn\r\nFXbFNiIQsLRkoZvbFRiFJ7vufyVyItmV5h3AWKA/eOHml9w8C7Crn0DgMoVC\r\nkXdLs+HRSMXdDZw0tdNgJsINUC1ADssht+cpKle3eBXFomWCVkfftpbsK9jk\r\n+bOYN5a1XcfGKlO9DekKnK65GO04GbwT7wKSaAAR1ZsM+BROnKfAPM9GMFiu\r\nok4BN2HrJ63llWpcxV92BGPzdmVwA2UBO7Q=\r\n=xKyu\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.31.0_1679672409892_0.25953004043840444"
      },
      "_hasShrinkwrap": false
    },
    "6.31.1": {
      "name": "cspell",
      "version": "6.31.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.31.1",
        "@cspell/dynamic-import": "6.31.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.31.1",
        "cspell-glob": "6.31.1",
        "cspell-io": "6.31.1",
        "cspell-lib": "6.31.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.31.1",
        "@cspell/cspell-types": "6.31.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.3"
      },
      "gitHead": "43c3652e27588f6643cf78fd764f12f497f89fbf",
      "_id": "cspell@6.31.1",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-gyCtpkOpwI/TGibbtIgMBFnAUUp2hnYdvW/9Ky4RcneHtLH0+V/jUEbZD8HbRKz0GVZ6mhKWbNRSEyP9p3Cejw==",
        "shasum": "78a1b3d32c8f6f232fb1a00b2df8a8e8d72cf6fe",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.31.1.tgz",
        "fileCount": 175,
        "unpackedSize": 335897,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDvf25fageOhpVGcLavoLEgbx1zycGt5dojNevgqtdG0QIhAL6aobIMc/ZjkRdXIgn1RQJCWPnpAPdxPxdSKAv6El7t"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkHdUfACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqVvw//TPD2v1FupPWfurlJ4bf9UWozGtC0wPpIrkJH5WLjSup+UKnk\r\nouh95ZIRylwxdTmujK+5bkBKERuKbBA8i2xL1YFdiF06MitsEZr8AjcQpWiJ\r\nU0D7PsafOYB7N/Zah13jzn4CQdyt5YG/2jpi62zELrnzA2GhMklv1RYHOOAf\r\nUVRgMGF3WAteMwvvBkr8xZcCGeH76hvlt48hAplE5s7AXZJq5ewQR/8rpiuY\r\nwiXasUpRvqESdkXESUWacX4pwgftPfzyOlAdke0drhBeAZIwITOSsMBeqGQQ\r\nzR+l4quHcUn9XDHGVUC050u1hsLMHw01iX/DJ9ymO8faQnuy3lTYLpYDOUIc\r\nlDwILHXyMd5ZidFKGdhxmfgXk/9xyV5jrNiBQiBvpHGSTX22EW8LDg5zZ88z\r\nTK8CVKQ5q1nnSPqLn96YGIFfiMC9kUoNOZ+VYvbt2LV32ISZ7tdgnGz0XxM+\r\nOdgkKjGhErzFrrRcPHDezZMc1H7UOpeHfxPtCTumKrmv+SPI+z0vI8d+6N8S\r\n45YY+ftO07lv19TpDbsX+4wkXPOm5R14hmD5g36WmYFycNlD1JxFuoZu8odJ\r\ncydkKP+HTGfMIUjMY5zGma7Wx/ByqnIMl52rCtiVZ1tKbjrzTitkcma2pOZI\r\ne6t4rh5LFxRoT3YIijK9ywVsCFsl6Qv7LrU=\r\n=AFtv\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.31.1_1679676702912_0.1311061155388349"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-alpha.1": {
      "name": "cspell",
      "version": "7.0.0-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.0-alpha.1",
        "@cspell/dynamic-import": "7.0.0-alpha.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "7.0.0-alpha.1",
        "cspell-glob": "7.0.0-alpha.1",
        "cspell-io": "7.0.0-alpha.1",
        "cspell-lib": "7.0.0-alpha.1",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.4.0",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.0-alpha.1",
        "@cspell/cspell-types": "7.0.0-alpha.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.6"
      },
      "gitHead": "626d1a01b413c1b6de0b386a5a264b78a10ba146",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.0-alpha.1",
      "_nodeVersion": "18.15.0",
      "_npmVersion": "lerna/1.17.0/node@v18.15.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-axm4ayihXW0bHlGwXrDq9KuiG8zvcr++mZzyKdFPtm3wahHy8gGlOjRnsYH/BRHU63honX7yh0KhkjQWZwLGQQ==",
        "shasum": "18e16d3194c181ae5ba9973c45f0fd7cf06e38f9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.0-alpha.1.tgz",
        "fileCount": 175,
        "unpackedSize": 335956,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDIyYDfPJY999VgHLj1lihINWrYX0sVS/P2DOw24uAkNAiEApOIj4MWXk47B7ridxJP0Blflnnm7eWybmVJ+KGoG6Kk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkOUKnACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9dxAAjqEs/ssfBlT9SIInUgCC07Dczg5f3bNdEwGCr1GuRCA6fJjC\r\nU04/9oCmcJVBJ2W7A8lFNC0BxX0wYmKr3doFHxFbiQ2ggvpZ9gtswOocUIIZ\r\nzMqaHmxnfs7aEuugRa4aTMXHafgYMNQbOFDbK7+1df7im0DGL1Zt2CPnQp4D\r\ngwowjLTEARATGjvrz8RQW4BlH3igFcuxaGHld5DphE0V+VMx7vTAuAgj2oQE\r\nT/Rpu5A8L6MmIoZVj3qQJznaeJYHbX8r/7OoIARLw2eQEaeX0tPGvJLjlu4O\r\nbYS4jEIHeqArnD7JlF/3dUtC0Exyg7Xa4OgcgGXubFnZcCoI6sVGUZWCaPhp\r\n46uPr3XZ1SIlTkWET2g5xi2fRD8caqbzDKmjeEdDjX9vAPDbfr4yJ37eqSrD\r\nwChIEXvAf51IEgFyBHlisRUMuTNlvyM64bMMTEEpAxo6/VZ42lXdzy8kzstz\r\niv2U7+hB0HIynVgxWd+B1oFQ/D0cJYBuWOMSh27Xv8LEt0mrHrcozwIXU3o8\r\nd/k3wfC1PPVwF7qSq/itJEs0hHU85NUpkn9TeKTsQuZK9E/EerRZlJHne4hE\r\nR7zZrf8XzwGW1NXHae/a49NjrrDjyJCFBTqfS0vFlc0TEQ/GRuQQURcuon7I\r\nvNM9qUKaH5x/N9ctTUA8xn0MNaCTG0eZxd8=\r\n=/yPO\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.0-alpha.1_1681474215168_0.8258157439253249"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0-alpha.2": {
      "name": "cspell",
      "version": "7.0.0-alpha.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.0-alpha.2",
        "@cspell/dynamic-import": "7.0.0-alpha.2",
        "chalk": "^5.2.0",
        "chalk-template": "^1.0.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.0-alpha.2",
        "cspell-glob": "7.0.0-alpha.2",
        "cspell-io": "7.0.0-alpha.2",
        "cspell-lib": "7.0.0-alpha.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.0",
        "strip-ansi": "^7.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.0-alpha.2",
        "@cspell/cspell-types": "7.0.0-alpha.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.0"
      },
      "gitHead": "a1b7c5daeef5afdb14d6444318f450b9fd9c035a",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.0-alpha.2",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "lerna/2.3.0/node@v18.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-mpv/mwqBui5ltsWgk/wEJSDYZQSodluIAqApZVVAow3gu0UhsCbLs1s51NMugOm0XIp8FcyPkUrCLWd05Mawfg==",
        "shasum": "35a8bb50dd3be7c95a088a524b10785c8ba71750",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.0-alpha.2.tgz",
        "fileCount": 92,
        "unpackedSize": 168416,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIF5F/V298OcRX6I/C0aTVgfRRdjJVQHNUVXlm6VeRjAHAiBj8VsY7e+DWeke3W+VreL8AylPBg40OgJQ0zW/UX5ghA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.0-alpha.2_1683443410224_0.9069626544574314"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.0": {
      "name": "cspell",
      "version": "7.0.1-alpha.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.0",
        "@cspell/dynamic-import": "7.0.1-alpha.0",
        "chalk": "^5.2.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.0",
        "cspell-glob": "7.0.1-alpha.0",
        "cspell-io": "7.0.1-alpha.0",
        "cspell-lib": "7.0.1-alpha.0",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.1",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.0",
        "@cspell/cspell-types": "7.0.1-alpha.0",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.1"
      },
      "gitHead": "9ac874fd367a2858df9aab07fafad183347f2033",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.0",
      "_nodeVersion": "18.16.0",
      "_npmVersion": "lerna/2.4.1/node@v18.16.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-odqnuK5bgwJ0jgdK7VbcrBUhUUlJxZX2Ka5BmF1b1qiBgQRviqnu4u+8yacX+CjftJq1m1PpNA5kHRtr3lwt8w==",
        "shasum": "ae3cec584fa3d0e8047e07f7c9412d5687cb694e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.0.tgz",
        "fileCount": 92,
        "unpackedSize": 168415,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDvxwz0hfXxDnKtRayIYwSe2DzxOd4oJ90ImPceuC7siQIgEeet/3EnwViZFmHyyKM+JrmQtTh+M59PQTfzXGY/WE8="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.0_1686295378367_0.8323229261555627"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.1": {
      "name": "cspell",
      "version": "7.0.1-alpha.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.1",
        "@cspell/dynamic-import": "7.0.1-alpha.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.1",
        "cspell-glob": "7.0.1-alpha.1",
        "cspell-io": "7.0.1-alpha.1",
        "cspell-lib": "7.0.1-alpha.1",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.3",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.1",
        "@cspell/cspell-types": "7.0.1-alpha.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.2"
      },
      "gitHead": "053cd11992a03203786ed64fdf9fa719eeded824",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.1",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.4.2/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-6JiRG6ByhlSoHlim3Z4z+kQ/RthSGlnEBaWN+BkpSXMxUfQ5MSjC094XfC357z+b+j9Y5LEqjkoZ27Md3QF/JQ==",
        "shasum": "74ed82a0b86b0c5eaa49a45c6e66b05329397f58",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.1.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDDZTfyWbCSHZnWQXwD3GCEarTeXB6GWRwT6xh9Oku1MQIhAPcUiykeioqiV00nOdrBFc5GcTFBqELBkgfnZQ9Aqbvv"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.1_1688819937454_0.34461676776161654"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.2": {
      "name": "cspell",
      "version": "7.0.1-alpha.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.2",
        "@cspell/dynamic-import": "7.0.1-alpha.2",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.2",
        "cspell-glob": "7.0.1-alpha.2",
        "cspell-io": "7.0.1-alpha.2",
        "cspell-lib": "7.0.1-alpha.2",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.2",
        "@cspell/cspell-types": "7.0.1-alpha.2",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "1fecd5ff35dc5c104f504e761fae85a2eefc02a6",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.2",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-xmqN6RedzIYTIKWph9F4vChrQgAyB+bCohIe1RnEf9N9hb2ZWxh3/ESGsIaz50VsOo5qO9LPu104BcKt8ziWuw==",
        "shasum": "a7460363baa19989418626d1c438771483232ab6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.2.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCwV+1dm2LMl7wZ8hyr6b5LAjIN0XfwRRQhuSZu3iSYvQIgRI487AhufuziMzEzSutUMNDqXB9bk14t1Zls5xQYWEQ="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.2_1688885016566_0.4724635118043041"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.3": {
      "name": "cspell",
      "version": "7.0.1-alpha.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.3",
        "@cspell/dynamic-import": "7.0.1-alpha.3",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.3",
        "cspell-glob": "7.0.1-alpha.3",
        "cspell-io": "7.0.1-alpha.3",
        "cspell-lib": "7.0.1-alpha.3",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.3",
        "@cspell/cspell-types": "7.0.1-alpha.3",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "66f669f88eedb9c81ae004e684bd0c21a74c82e4",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.3",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-15+Mi0Za3/qMRMSCW6PhndAEcAexAB1vHN2c5l77oplnevlStNneMs8/eHdLxTSN+k9agS+ztsM76yYsweG3WQ==",
        "shasum": "53db5d36d4e50b312bc70fd0c741fba7a11a53bb",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.3.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDyaPmAqYJcXqd369pdyDDdlw5nWIfqVeaB9piBy89eyAIgSht4y4KpBdKSGkSFWH6mbd6BRH8Iox4dPXG0I26tKyw="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.3_1689081525356_0.472986972488181"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.4": {
      "name": "cspell",
      "version": "7.0.1-alpha.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.4",
        "@cspell/dynamic-import": "7.0.1-alpha.4",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.4",
        "cspell-glob": "7.0.1-alpha.4",
        "cspell-io": "7.0.1-alpha.4",
        "cspell-lib": "7.0.1-alpha.4",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.4",
        "@cspell/cspell-types": "7.0.1-alpha.4",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "8d974b29bb443068fe200dede4636cb0828a5f21",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.4",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-ezX3SSioCK293Ic99heuIFlJChEWPZA9pzIjCYckSq0EjbEwL+BkpqifGFIMtfT0+BslhXYsl+xgd9ybm1jqgQ==",
        "shasum": "c848c4b2c4edbe0161a3efb9e6fd6b9e2721956e",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.4.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAlczLoxD4JzW/gUjy0QPgNmH3XHugJPQnRAal4SxHqhAiA51SoNkMuhx+VVcvE4Z2AJxRWDaR/8DC/EMt4AV6TSVA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.4_1689164779658_0.8729724371366534"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.5": {
      "name": "cspell",
      "version": "7.0.1-alpha.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.5",
        "@cspell/dynamic-import": "7.0.1-alpha.5",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.5",
        "cspell-glob": "7.0.1-alpha.5",
        "cspell-io": "7.0.1-alpha.5",
        "cspell-lib": "7.0.1-alpha.5",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.5",
        "@cspell/cspell-types": "7.0.1-alpha.5",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "5de6ec67ac1f77c2c994cb956317598a9034e923",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.5",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-xaJ7wPfW0psu9Nnz18va71fNO4/yOeLPRKwMYAeiGPNg49hoPfCVYswlMFcAm82936GZQMVtqDqITfJd3nkh2w==",
        "shasum": "5631590297b6fb9a4dd05e1c48a29006f7907f47",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.5.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDGFGnVV9DXWUMbKhLqtkM96r5oNTh1B38Lv4mUqm8i2AIgPIoa/4w29osk2JSQbjRtydLQkAwgOx5vGrwz+hEAT8I="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.5_1689310999480_0.3287745229362449"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.6": {
      "name": "cspell",
      "version": "7.0.1-alpha.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.6",
        "@cspell/dynamic-import": "7.0.1-alpha.6",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.6",
        "cspell-glob": "7.0.1-alpha.6",
        "cspell-io": "7.0.1-alpha.6",
        "cspell-lib": "7.0.1-alpha.6",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.6",
        "@cspell/cspell-types": "7.0.1-alpha.6",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "42a31c7216a9af068ae4b7c3921f8edd327f756f",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.6",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-g8ZPWiDzpQQtax42roDoUH68ZADc02gXXDquuwV4dDZQQA0sqbwIFyeSVaUAakxS12OvMSMiZRmxCupFqek3PQ==",
        "shasum": "91ee1eeb97c9b4bf9219b07d7bb9d387a07b7e32",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.6.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCuMuX8cLykDXAyloZvYO96kiSM1V9oFHnW6e9clzlq4QIhANBWJNtQKbRhxs8dRXtU6oGI9GVJ8ED31MJweo1o28n8"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.6_1689327045898_0.9386849464868414"
      },
      "_hasShrinkwrap": false
    },
    "6.31.2": {
      "name": "cspell",
      "version": "6.31.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "6.31.1",
        "@cspell/cspell-types": "6.31.1",
        "@cspell/dynamic-import": "6.31.1",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.31.2",
        "cspell-glob": "6.31.2",
        "cspell-io": "6.31.2",
        "cspell-lib": "6.31.2",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "6.31.1",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.4"
      },
      "gitHead": "aa78fdb9d4fc45dc74bcf31b6a6366784fe0d1c4",
      "_id": "cspell@6.31.2",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/1.17.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-HJcQ8jqL/1N3Mj5dufFnIZCX3ACuRoFTSVY6h3Bo5wBqd2iiJTyeQ1SY9Zymlxtb2KyJ6jQRiFmkWeFx2HVs7w==",
        "shasum": "c334ac34353fe446d82c27fe348bb17b4b3e9f7f",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.31.2.tgz",
        "fileCount": 175,
        "unpackedSize": 335897,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDuoztuIsuVFB3T/TX/fsZ04Hm67apuZe8elRcMLZODxAIgG+vZdakhO+2ooWzCoHnLWjV1GM0wNANkvntOpvxtRTQ="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.31.2_1689495240846_0.6936677711726964"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.7": {
      "name": "cspell",
      "version": "7.0.1-alpha.7",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.7",
        "@cspell/cspell-types": "7.0.1-alpha.7",
        "@cspell/dynamic-import": "7.0.1-alpha.7",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.7",
        "cspell-glob": "7.0.1-alpha.7",
        "cspell-io": "7.0.1-alpha.7",
        "cspell-lib": "7.0.1-alpha.7",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.7",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "719c2f9f55c79d35074f8493a37de6f40077325d",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.7",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-sJkzlBEy7wWT72Vfyz4KNsvS0AbLpowuZgiqZ4RmcCUrrB7Eu3ROPEaGv9QbaCmiIA4WjGR5Y1k3ePd/wlfMLg==",
        "shasum": "c6c48d6c0e20bdee53bd489dae0ad26724b54a25",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.7.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBlFiUA8Y5If32FBBSHVUv3nZc9CgeG74RE8LaX7DkHsAiEA+FFquBprfJZaMvNgfZTKGB4/tVDHZzycV3jIcJh+vEg="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.7_1689766129870_0.5417773583549284"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.8": {
      "name": "cspell",
      "version": "7.0.1-alpha.8",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-pipe": "7.0.1-alpha.8",
        "@cspell/cspell-types": "7.0.1-alpha.8",
        "@cspell/dynamic-import": "7.0.1-alpha.8",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.8",
        "cspell-glob": "7.0.1-alpha.8",
        "cspell-io": "7.0.1-alpha.8",
        "cspell-lib": "7.0.1-alpha.8",
        "fast-glob": "^3.3.0",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.8",
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "2c2d4db95da9d1cb7868d5de68e7c43776de06e7",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.8",
      "_nodeVersion": "18.16.1",
      "_npmVersion": "lerna/2.5.0/node@v18.16.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-SXUj44VTbdwOFjLtUQjB04wHeJ8xC+hL0fxxHm6cpxGpggvR7fC/ML5jeRnHzxlPQEB/TiOosykhGoL6PQr5Jg==",
        "shasum": "62fe352c27c56d860c0af67cc1b3280091198d5d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.8.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDCpHmob7zOXGjMuxoC1F4iGTU1uM7beDwJ1Jur3FW+0gIgZe3NsvYENn0Q3iYKxI8rhYIJxAA/UELae+9Nvyh+x/c="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.8_1689975281339_0.4223451775948046"
      },
      "_hasShrinkwrap": false
    },
    "6.31.3": {
      "name": "cspell",
      "version": "6.31.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.js",
        "cspell-esm": "bin.mjs"
      },
      "type": "commonjs",
      "main": "dist/cjs/index.js",
      "types": "dist/cjs/index.d.ts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs",
          "require": "./dist/cjs/index.js"
        },
        "./app": {
          "import": "./dist/esm/app.mjs",
          "require": "./dist/cjs/app.js"
        },
        "./bin": {
          "import": "./bin.mjs",
          "require": "./bin.js"
        },
        "./application": {
          "import": "./dist/esm/application.mjs",
          "require": "./dist/cjs/application.js"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist coverage temp .tsbuildinfo",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:cjs": "tsc -b tsconfig.cjs.json",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.js lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.js trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "6.31.3",
        "@cspell/cspell-pipe": "6.31.3",
        "@cspell/cspell-types": "6.31.3",
        "@cspell/dynamic-import": "6.31.3",
        "chalk": "^4.1.2",
        "commander": "^10.0.0",
        "cspell-gitignore": "6.31.3",
        "cspell-glob": "6.31.3",
        "cspell-io": "6.31.3",
        "cspell-lib": "6.31.3",
        "fast-glob": "^3.2.12",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^8.0.0",
        "imurmurhash": "^0.1.4",
        "semver": "^7.3.8",
        "strip-ansi": "^6.0.1",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=14"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/imurmurhash": "^0.1.1",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.3.13",
        "micromatch": "^4.0.5",
        "minimatch": "^7.4.4"
      },
      "gitHead": "0e8ca7b32f21aea40ade645172ef93017e6a143d",
      "_id": "cspell@6.31.3",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "lerna/1.17.0/node@v18.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-VeeShDLWVM6YPiU/imeGy0lmg6ki63tbLEa6hz20BExhzzpmINOP5nSTYtpY0H9zX9TrF/dLbI38TuuYnyG3Uw==",
        "shasum": "d06176e7fe7ac80c4dd5c4a927139446e433385a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-6.31.3.tgz",
        "fileCount": 175,
        "unpackedSize": 335897,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICWAF/X8RK4c2A1EHvnc3XnwlNtL0I0U5BUlRyTeFpmUAiEAoCs8HbWdekXvoKb0njDzfLFtIx4cLqdOTKveVG5faaQ="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_6.31.3_1691485253999_0.6856459965951114"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1-alpha.9": {
      "name": "cspell",
      "version": "7.0.1-alpha.9",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.0.1-alpha.9",
        "@cspell/cspell-pipe": "7.0.1-alpha.9",
        "@cspell/cspell-types": "7.0.1-alpha.9",
        "@cspell/dynamic-import": "7.0.1-alpha.9",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.1-alpha.9",
        "cspell-glob": "7.0.1-alpha.9",
        "cspell-io": "7.0.1-alpha.9",
        "cspell-lib": "7.0.1-alpha.9",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "4246258636a672b75df22d6e8c72bb3c63e8a500",
      "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n- Become a [<img src=\"https://github.githubassets.com/images/modules/site/icons/funding_platforms/patreon.svg\" width=\"16\" height=\"16\" alt=\"Patreon\">Patreon!](https://patreon.com/streetsidesoftware)\n- [Support through ![PayPal](https://raw.githubusercontent.com/streetsidesoftware/vscode-spell-checker/main/images/PayPal/paypal-logo-wide-18.png)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [Open Collective](https://opencollective.com/cspell)\n- [Street Side Software](https://streetsidesoftware.com/support)\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --relative                   Issues are displayed relative to root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1.  Find all text matching `includeRegExp`\n1.  Remove any text matching `ignoreRegExp`\n1.  Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
      "readmeFilename": "README.md",
      "_id": "cspell@7.0.1-alpha.9",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "lerna/2.5.0/node@v18.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-8YWmIDIpMNlanp8YFPxYPWGCrprwD3E9aYoRvQzrnUi47+aAK3zc1ynyKNKfQTLvl2aAU3lCTJDGvrNkv8kzWA==",
        "shasum": "82b1640b514cdf4ba45d15224c05ce0113405e20",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1-alpha.9.tgz",
        "fileCount": 92,
        "unpackedSize": 168418,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCLvV4h2r7fx8LtVD5hhaqebkMyqJOnHoAlfFk+4+VzcgIhANHDEAcgXauUfUiCIoBfBvkakwWrw2FU0IJEnf3CN3bd"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1-alpha.9_1691655086309_0.5356601654957358"
      },
      "_hasShrinkwrap": false
    },
    "7.0.0": {
      "name": "cspell",
      "version": "7.0.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "pnpm coverage:vitest && pnpm coverage:fix",
        "coverage:vitest": "vitest run --coverage",
        "coverage:fix": "nyc report --temp-dir \"$(pwd)/coverage\" --reporter lcov --report-dir \"$(pwd)/coverage\" --cwd ../..",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.0.0",
        "@cspell/cspell-pipe": "7.0.0",
        "@cspell/cspell-types": "7.0.0",
        "@cspell/dynamic-import": "7.0.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^10.0.1",
        "cspell-gitignore": "7.0.0",
        "cspell-glob": "7.0.0",
        "cspell-io": "7.0.0",
        "cspell-lib": "7.0.0",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "52960d5ed75655978f9b633f44fd106937a63cd7",
      "_id": "cspell@7.0.0",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "lerna/2.5.0/node@v18.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-E8wQP30bTLROJsSNwYnhhRUdzVa4vQo6zILv7PqgTCSaveg8Af1HEh4ocRPRhppRgIXDpccG27+ATlpEzxiPGQ==",
        "shasum": "f77e614c60254a6dd11f7a572e91904e395f2abf",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.0.tgz",
        "fileCount": 92,
        "unpackedSize": 168346,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBlEgqa4fVbMoJwHIv5KpRKCKX5MJbW9eQTTe7lyAiGLAiEApddtTNfXRjRrAKb5lLQTn/EVfox1VlMWj4WxP3hodWA="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.0_1691662295570_0.6284487553364064"
      },
      "_hasShrinkwrap": false
    },
    "7.0.1": {
      "name": "cspell",
      "version": "7.0.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.0.1",
        "@cspell/cspell-pipe": "7.0.1",
        "@cspell/cspell-types": "7.0.1",
        "@cspell/dynamic-import": "7.0.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.0.1",
        "cspell-glob": "7.0.1",
        "cspell-io": "7.0.1",
        "cspell-lib": "7.0.1",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "124eea257b724b8354d3bc38f48fe9529cf6f7be",
      "_id": "cspell@7.0.1",
      "_nodeVersion": "18.17.0",
      "_npmVersion": "lerna/2.5.0/node@v18.17.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-nl35cQJ1XxESRZS5QD6S+X1XtBU9Q/acUPXt8yZjd+PcgkyTwCRk7qwxwEodkTUMP3Yxkg5hGWMtzDXfNK35RQ==",
        "shasum": "67c6c2dc3229eb67851433ac74ea3c88ed71905d",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.1.tgz",
        "fileCount": 92,
        "unpackedSize": 168093,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEjaMrSW/ik/fDfKqWqJBU1a2DEwvUMZlOyIKHwASS1nAiEAv+NIQV8qnPrmlZSJpdE61Gx5ozi0qTPXyjkJ7Tc+tFc="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.1_1692605691725_0.1554262021721391"
      },
      "_hasShrinkwrap": false
    },
    "7.0.2": {
      "name": "cspell",
      "version": "7.0.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.0.2",
        "@cspell/cspell-pipe": "7.0.2",
        "@cspell/cspell-types": "7.0.2",
        "@cspell/dynamic-import": "7.0.2",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.0.2",
        "cspell-glob": "7.0.2",
        "cspell-io": "7.0.2",
        "cspell-lib": "7.0.2",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "25aa083421fc81e4d5b7cedb4755f9b327120cfc",
      "_id": "cspell@7.0.2",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-uTGfXSUgWCAXUfkAB2x9DvmX+9JCEq/jF7ye7pe9q2hVVl8axsznG0Z1Zbsjx6RxwfwsZDFqOUlixfHwFDaT3g==",
        "shasum": "121da19851784f860fef882ba1f3a992986e15d2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.0.2.tgz",
        "fileCount": 92,
        "unpackedSize": 168246,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDDc31Q0ymrzoPz45nQHW1IMt0xPEKrm1RD2kWyUS8hOAiB4t/3pMpV9vIgdJ6b9uIa6aLz5k8dNmHkiKr+wgqAqgw=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.0.2_1693237802689_0.2971830515639524"
      },
      "_hasShrinkwrap": false
    },
    "7.1.1": {
      "name": "cspell",
      "version": "7.1.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.1.1",
        "@cspell/cspell-pipe": "7.1.1",
        "@cspell/cspell-types": "7.1.1",
        "@cspell/dynamic-import": "7.1.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.1.1",
        "cspell-glob": "7.1.1",
        "cspell-io": "7.1.1",
        "cspell-lib": "7.1.1",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.0",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "2dafa5386c58637614034c7a6d0fa13c03b16e41",
      "_id": "cspell@7.1.1",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-jrzPeRwnx3HsLWTffwGMV9alORfQAOfp2GIntfTLp1pZsYsZvoJArnUE77imtsY8B/Z7YuIWaES8baanW23DuA==",
        "shasum": "c147736f114672158d03569f12639abd5c42743b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.1.1.tgz",
        "fileCount": 92,
        "unpackedSize": 168246,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6gI0UouVmIt6xPsx5l8TNik0EeeBzEyffIdF9QvUi2wIgKzzWB7fbqEiqAnG20YY3ninQQXLgy+wMHylTg967TWU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.1.1_1693238744143_0.2086960972255103"
      },
      "_hasShrinkwrap": false
    },
    "7.2.0": {
      "name": "cspell",
      "version": "7.2.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.2.0",
        "@cspell/cspell-pipe": "7.2.0",
        "@cspell/cspell-types": "7.2.0",
        "@cspell/dynamic-import": "7.2.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.2.0",
        "cspell-glob": "7.2.0",
        "cspell-io": "7.2.0",
        "cspell-lib": "7.2.0",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "b08f7ddc3a4aa22cc80c69ca6638b2a943659a31",
      "_id": "cspell@7.2.0",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-fbWZTvG+B+8b+j1zwgekORnKLmAWpNzCnqcbUcjxzI8K42jDBFsgPotjkOdd/oLYTQ+SO7sn05ZaRrve2kW/oA==",
        "shasum": "04ef1cd7a37213b3f8eecfb7c6eaf92ab81ebf3c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.2.0.tgz",
        "fileCount": 174,
        "unpackedSize": 303819,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD5QcdT4rrF8ArPYzGRr6tcuqB9hAKkEuBz9NJAAqXImQIhAKHYsvYk5MoxkJ+ODRIx/olH8jb+KyhauZOgcOFAsLYg"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.2.0_1693303937638_0.8050914472065118"
      },
      "_hasShrinkwrap": false
    },
    "7.3.0": {
      "name": "cspell",
      "version": "7.3.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.0",
        "@cspell/cspell-pipe": "7.3.0",
        "@cspell/cspell-types": "7.3.0",
        "@cspell/dynamic-import": "7.3.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.0",
        "cspell-glob": "7.3.0",
        "cspell-io": "7.3.0",
        "cspell-lib": "7.3.0",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "4a16b099b64c5b55645529a4ae79bc32aaf0fc8e",
      "_id": "cspell@7.3.0",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Cpb+wmnnviKXqnS0D8gz/U1VBlNPuslQp4FAXYYyzinFjf7mf/k8bNUSxNHTTbgp0taL8HDjMe6RL9DrJPAAvA==",
        "shasum": "64bda93f65b28d6c645970c285af8bd7f5d55ac2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.0.tgz",
        "fileCount": 174,
        "unpackedSize": 304208,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDKGflcarNSc3R7cyXg7ei9+6gMNmNBjw10FE8cZz41MAiEA4jvXqPMSXOmnRmI/NmXaaRL3kd34XDs3OtQnGi5bE2s="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.0_1693545855615_0.9011217506069791"
      },
      "_hasShrinkwrap": false
    },
    "7.3.1": {
      "name": "cspell",
      "version": "7.3.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.1",
        "@cspell/cspell-pipe": "7.3.1",
        "@cspell/cspell-types": "7.3.1",
        "@cspell/dynamic-import": "7.3.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.1",
        "cspell-glob": "7.3.1",
        "cspell-io": "7.3.1",
        "cspell-lib": "7.3.1",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "999b382d928e8288ebb8be5b056d04116213f4ee",
      "_id": "cspell@7.3.1",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-fvs6xSMxKp3dRlVKIZmV3WmFyP0oOXCXuPiDIcs7CfcLeDjQ3AI6jsO3N1pqkIA+sD+Y2XbRsN7OQvHfKEu4fQ==",
        "shasum": "b07c7e11ff2633d73359c36519fcb1181f490b64",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.1.tgz",
        "fileCount": 174,
        "unpackedSize": 304208,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDxP39Nw0nWkOtCC0UUxpgcyEVai2VOcHpXVBIJ1EiflgIgOZKz1TBPhhQX912DTCdFnyxeo3ZxsEuoIYz0FQlbfrg="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.1_1693554887129_0.5891499759655896"
      },
      "_hasShrinkwrap": false
    },
    "7.3.2": {
      "name": "cspell",
      "version": "7.3.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.2",
        "@cspell/cspell-pipe": "7.3.2",
        "@cspell/cspell-types": "7.3.2",
        "@cspell/dynamic-import": "7.3.2",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.2",
        "cspell-glob": "7.3.2",
        "cspell-io": "7.3.2",
        "cspell-lib": "7.3.2",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "71d88d4e4d2252124a952c78d4fc03ce0a6d67e3",
      "_id": "cspell@7.3.2",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-/YY1C0CYBP+GueFon1BUgcDGc1YXDCyAIjuebvRygjt1cXwCklQVF5bZIGCrimgjzTrY+wx0ePgzuVQ9RyJnOQ==",
        "shasum": "1e240d0bb4668a73ea730169bc16014e27e5ab09",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.2.tgz",
        "fileCount": 174,
        "unpackedSize": 304208,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH6GtuWhB7VkBiRiT5q67tPawvixP3wdVmqR/pkxjHz2AiEAqkEAVZvRs2JySiBy104XBSScZWJB4wtIzDW2rvB9enQ="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.2_1693561832191_0.014786463530447547"
      },
      "_hasShrinkwrap": false
    },
    "7.3.3": {
      "name": "cspell",
      "version": "7.3.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.3",
        "@cspell/cspell-pipe": "7.3.3",
        "@cspell/cspell-types": "7.3.3",
        "@cspell/dynamic-import": "7.3.3",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.3",
        "cspell-glob": "7.3.3",
        "cspell-io": "7.3.3",
        "cspell-lib": "7.3.3",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "da65ffafaa6a039cedc52d9e029c53ddd273a1fb",
      "_id": "cspell@7.3.3",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.0/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-T2ev0PGnXEqNHd3J9W58W0YWfMmNb25EExSi9mWoF7RhKvSxa4alNtvwNMxLYRA2DjWXjqBesXPY2UWCIn/Y0A==",
        "shasum": "db70b5798112b1c6eef3d80b70121960ac85b60a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.3.tgz",
        "fileCount": 174,
        "unpackedSize": 304486,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEMSexuPgfjkZ88eIb6S5QOIIaAeXYsfdRYKdzLQT8YaAiBE900sxH14wBCpil3Js2b0twomRAepiOEvemBPRHrMBQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.3_1694254212165_0.8691136549182554"
      },
      "_hasShrinkwrap": false
    },
    "7.3.4": {
      "name": "cspell",
      "version": "7.3.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.4",
        "@cspell/cspell-pipe": "7.3.4",
        "@cspell/cspell-types": "7.3.4",
        "@cspell/dynamic-import": "7.3.4",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.4",
        "cspell-glob": "7.3.4",
        "cspell-io": "7.3.4",
        "cspell-lib": "7.3.4",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "7849a4ff2561453653fae9b9067b39252aeb773f",
      "_id": "cspell@7.3.4",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.1/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-oXbL/0glpf+9qhLqZcpz83sjXG5lhNIGhvDSnrT51O3tgsAwWLs9nMVaqj3jCjKwqdyHwQihtqBlE8KLtjXUDA==",
        "shasum": "ad0327bb18491056fba826870a6a2297a95ffb08",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.4.tgz",
        "fileCount": 174,
        "unpackedSize": 304486,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBcQZQULwERTfodlYmQG5GqNcklm3s9Zdw2cc4MvEBcWAiA7zHP7FEqQeXxha9rK/fCCqcXwKBYGiBqUouqYphxTag=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.4_1694355729902_0.5184018734736562"
      },
      "_hasShrinkwrap": false
    },
    "7.3.5": {
      "name": "cspell",
      "version": "7.3.5",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.5",
        "@cspell/cspell-pipe": "7.3.5",
        "@cspell/cspell-types": "7.3.5",
        "@cspell/dynamic-import": "7.3.5",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.5",
        "cspell-glob": "7.3.5",
        "cspell-io": "7.3.5",
        "cspell-lib": "7.3.5",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^6.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "23fb2fbae335526185ab53a22e0cac0f3e8f1a25",
      "_id": "cspell@7.3.5",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.1/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-5CcFqHpi5VoJUvdnmC1bhg2leHTaRlj+ARjt+c5clEgiK9FOv0StdlVKCY4V5R96JEBfnsc3SSaNnCu+6oWAVA==",
        "shasum": "cef8290097009f2b80627cf1c125ac8ff6dce6d0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.5.tgz",
        "fileCount": 174,
        "unpackedSize": 304486,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCLh4pDDuxGNaUiIYH5veoB/CdPR8lw04oysw4ark9HcQIgW01pyQ6oDp4rdbt8xeaPMgQeIBBZ8jGBeYhLbSQzk78="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.5_1694376628755_0.6731458394684473"
      },
      "_hasShrinkwrap": false
    },
    "7.3.6": {
      "name": "cspell",
      "version": "7.3.6",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.6",
        "@cspell/cspell-pipe": "7.3.6",
        "@cspell/cspell-types": "7.3.6",
        "@cspell/dynamic-import": "7.3.6",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.6",
        "cspell-glob": "7.3.6",
        "cspell-io": "7.3.6",
        "cspell-lib": "7.3.6",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.2",
        "@types/semver": "^7.5.1",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "64ab7715f3f6566c1917084557f2ee415798c6f0",
      "_id": "cspell@7.3.6",
      "_nodeVersion": "18.17.1",
      "_npmVersion": "lerna/2.5.1/node@v18.17.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-iN3D05nwCbS6MdignKwK97vQPX3yrT/Nsu3LhhFptU0O5PO4hvRzFuSzEq+AumMby4Tuf9HcGP5Ugvyi7Gb3gw==",
        "shasum": "6b3a031da25e4b04daf46ce14a667060ea03dc7a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.6.tgz",
        "fileCount": 174,
        "unpackedSize": 305779,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDY5JZ1HjYlH0DmJnFVI0gNDZL2dB90mPgnNXl5EFAUwAIgFpRpYnuimR4FNCTo6LdIfSjjF3+hdnTgUlppZN6i9n4="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.6_1694587427526_0.7738466172571683"
      },
      "_hasShrinkwrap": false
    },
    "7.3.7": {
      "name": "cspell",
      "version": "7.3.7",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.7",
        "@cspell/cspell-pipe": "7.3.7",
        "@cspell/cspell-types": "7.3.7",
        "@cspell/dynamic-import": "7.3.7",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.0.0",
        "cspell-gitignore": "7.3.7",
        "cspell-glob": "7.3.7",
        "cspell-io": "7.3.7",
        "cspell-lib": "7.3.7",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.7"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.3",
        "@types/semver": "^7.5.3",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "22246a7924b9ae27ae39f0d0217890a1c2736f68",
      "_id": "cspell@7.3.7",
      "_nodeVersion": "18.18.0",
      "_npmVersion": "lerna/2.5.1/node@v18.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-p23EuTu+7b2qioRxC7sV1TVfxIPm7928BtT4jYBHGeONiYP0EOOWNP8ynaksMYLTifQBzH1Q0LO4L5ogHiQsfw==",
        "shasum": "f07eaf2c635036133214c65e8280a375d1be5d0a",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.7.tgz",
        "fileCount": 174,
        "unpackedSize": 305779,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFIO5IjSEAqfW/OLhO1zY8YEWZt7bILVrfhsrDAPtVGyAiEA/gYDBJ7qM7heFtXd2daH7qp8QfeIEITxcBqJWzZdi3k="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.7_1695885116394_0.6454613476968951"
      },
      "_hasShrinkwrap": false
    },
    "7.3.8": {
      "name": "cspell",
      "version": "7.3.8",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.8",
        "@cspell/cspell-pipe": "7.3.8",
        "@cspell/cspell-types": "7.3.8",
        "@cspell/dynamic-import": "7.3.8",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "7.3.8",
        "cspell-glob": "7.3.8",
        "cspell-io": "7.3.8",
        "cspell-lib": "7.3.8",
        "fast-glob": "^3.3.1",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.2",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.3",
        "@types/semver": "^7.5.3",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "6717f5726b74c695d9023dbccf6f7e8a7ac6361f",
      "_id": "cspell@7.3.8",
      "_nodeVersion": "18.18.0",
      "_npmVersion": "lerna/2.5.1/node@v18.18.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-8AkqsBQAMsKYV5XyJLB6rBs5hgspL4+MPOg6mBKG2j5EvQgRVc6dIfAPWDNLpIeW2a3+7K5BIWqKHapKPeiknQ==",
        "shasum": "69b7bca7decaca54b101389c749d3eb53e797d3c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.8.tgz",
        "fileCount": 172,
        "unpackedSize": 305245,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCGsAfIe20xnoJkgUMmAab7xuX6l96nJNykclB4TPUlTgIhAL52KnnqcFMsU5Q2CuOoW6KHCzqXel4KPmDh2CgqNbtc"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.8_1697217143037_0.24989644990803872"
      },
      "_hasShrinkwrap": false
    },
    "7.3.9": {
      "name": "cspell",
      "version": "7.3.9",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "7.3.9",
        "@cspell/cspell-pipe": "7.3.9",
        "@cspell/cspell-types": "7.3.9",
        "@cspell/dynamic-import": "7.3.9",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "7.3.9",
        "cspell-glob": "7.3.9",
        "cspell-io": "7.3.9",
        "cspell-lib": "7.3.9",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=16"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.4",
        "@types/semver": "^7.5.4",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "77c7fb3ffd80a626ec07d704cefcaa21d62fd460",
      "_id": "cspell@7.3.9",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/2.6.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-QzunjO9CmV5+98UfG4ONhvPtrcAC6Y2pEKeOrp5oPeyAI7HwgxmfsR3ybHRlMPAGcwKtDOurBKxM7jqXNwkzmA==",
        "shasum": "bf0752a38ea50c24974059f69e3ceffba8580f23",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-7.3.9.tgz",
        "fileCount": 172,
        "unpackedSize": 305242,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAtG/5VrIVXFYK0IgEsEOmtTxswqsNuCdr1HXh7gaUToAiEA6ri2a16oyQbmu2Xai9Cab6t2cfbeJII/jTPYHSoruV0="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_7.3.9_1699353887361_0.22013559105347125"
      },
      "_hasShrinkwrap": false
    },
    "8.0.0": {
      "name": "cspell",
      "version": "8.0.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.0.0",
        "@cspell/cspell-pipe": "8.0.0",
        "@cspell/cspell-types": "8.0.0",
        "@cspell/dynamic-import": "8.0.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.0.0",
        "cspell-glob": "8.0.0",
        "cspell-io": "8.0.0",
        "cspell-lib": "8.0.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.1",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.4",
        "@types/semver": "^7.5.4",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "67c22bf98baed1c17bbc658fba8656262d17e370",
      "_id": "cspell@8.0.0",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/2.6.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-Nayy25Dh+GAlDFDpVZaQhmidP947rpj1Pn9lmZ3nUFjD9W/yj0h0vrjMLMN4dbonddkmKh4t51C+7NuMP405hg==",
        "shasum": "f44dd022ac91a8c098a3f09596315cb4e1d166d0",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.0.0.tgz",
        "fileCount": 172,
        "unpackedSize": 305410,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBwVDIRe+1pz6B1grczxUmjFKEH2rWuVH2zPi83tE+pGAiBJNNKV4dBKVLPhUGIAMlu+BRXWNJeRnRcqbyO5CNTyCA=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.0.0_1699373949738_0.9473206443147903"
      },
      "_hasShrinkwrap": false
    },
    "8.1.0": {
      "name": "cspell",
      "version": "8.1.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.1.0",
        "@cspell/cspell-pipe": "8.1.0",
        "@cspell/cspell-types": "8.1.0",
        "@cspell/dynamic-import": "8.1.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.1.0",
        "cspell-glob": "8.1.0",
        "cspell-io": "8.1.0",
        "cspell-lib": "8.1.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.2",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "28568808deaf39b9ffa71fd0f722441ff1b8c794",
      "_id": "cspell@8.1.0",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/3.0.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-oxQLyhW3yIAfvDdtoobvriWqfWVqOBo1o+WWRxlDyJdKDBH6my++p6KU3ZjxcJb7VG+CRLGfU7zASWwTPxMXRA==",
        "shasum": "73c9e7e3c1bcac80915bc14aadb0d5ac60b5bc2c",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.1.0.tgz",
        "fileCount": 172,
        "unpackedSize": 306242,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC57wI7t8pwPF1aNNvP2mv8JRG9seDSr66qNFkOIXVy7AIhAPVBBGDUNUW0aLZN0kZ1LDdlwPLzYajmDz/o9xoxK0WQ"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.1.0_1701436098229_0.5144659236740137"
      },
      "_hasShrinkwrap": false
    },
    "8.1.1": {
      "name": "cspell",
      "version": "8.1.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.1.1",
        "@cspell/cspell-pipe": "8.1.1",
        "@cspell/cspell-types": "8.1.1",
        "@cspell/dynamic-import": "8.1.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.1.1",
        "cspell-glob": "8.1.1",
        "cspell-io": "8.1.1",
        "cspell-lib": "8.1.1",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.2",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "b0ac8d928b7e15fb1eb3d5b89374db1aa0ccc1f5",
      "_id": "cspell@8.1.1",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/3.0.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-FZAVWLDxeBRzb923gqmfUh+hcAUJE2CbLex0ixjbw/ENYrRFzMoTx8caiMKdaJjKfUliLTv2aL/IXOac9iFWqw==",
        "shasum": "849fc9f49fb9dca13d4e807a187e6e5ca33386d9",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.1.1.tgz",
        "fileCount": 172,
        "unpackedSize": 306266,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCVSLKCG5+Jj7RNaHwWzZO3rHcZpGKRZJ4fh7KH91vefwIhANCXtA6MHZN3CiXvzjDqQOn/cMzICAi+nlB4xCf1cW5H"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.1.1_1701687298378_0.6364143421340378"
      },
      "_hasShrinkwrap": false
    },
    "8.1.2": {
      "name": "cspell",
      "version": "8.1.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.1.2",
        "@cspell/cspell-pipe": "8.1.2",
        "@cspell/cspell-types": "8.1.2",
        "@cspell/dynamic-import": "8.1.2",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.1.2",
        "cspell-glob": "8.1.2",
        "cspell-io": "8.1.2",
        "cspell-lib": "8.1.2",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.2",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "ba4eef94480562e7641298b32cb99723fd64aeca",
      "_id": "cspell@8.1.2",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/3.0.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-MOU+lwbzzXT1mcrLCYb9ecfPtquuys9RQy6KehU4S1Oub4715LiXct6+DqDt8NK6w4R3WRo9ixh1bnL3LoVEMw==",
        "shasum": "e1a220de8597ee136de8755e4c4e72185e2ea843",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.1.2.tgz",
        "fileCount": 172,
        "unpackedSize": 306266,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2lSvSalraySCAYLRHqVURBACLfDD2UNNA9TIgIVQDdQIhAOzQRMIcXehOJHAqbP+Fdw+X3gK1dxOaWE/sA37hvQWu"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.1.2_1701703288451_0.9600605163534919"
      },
      "_hasShrinkwrap": false
    },
    "8.1.3": {
      "name": "cspell",
      "version": "8.1.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.1.3",
        "@cspell/cspell-pipe": "8.1.3",
        "@cspell/cspell-types": "8.1.3",
        "@cspell/dynamic-import": "8.1.3",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.1.3",
        "cspell-glob": "8.1.3",
        "cspell-io": "8.1.3",
        "cspell-lib": "8.1.3",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^7.0.2",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "ea4335117b7c0e7b9ec22738315c82fae24ea997",
      "_id": "cspell@8.1.3",
      "_nodeVersion": "18.18.2",
      "_npmVersion": "lerna/3.0.0/node@v18.18.2+x64 (linux)",
      "dist": {
        "integrity": "sha512-SU4Su6002bPoJYaiMeNV4wwLoS8TwaOgIwaTxhys3GDbJIxZV6CrDgwksezHcG7TZrC4yrveDVsdpnrzmQ7T5Q==",
        "shasum": "c8643b86d7e06b69e7032bf2ddf3b27563f85c43",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.1.3.tgz",
        "fileCount": 172,
        "unpackedSize": 306346,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBTkFveJTbiSKj2C6DwyboEyCIOmx2hTkdHJYHgloFOeAiEA7Z8pFpSd2KE9jiR6yueAddtXHjzRbPZSLGAlxGGcpOU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.1.3_1701869767121_0.14696906133446075"
      },
      "_hasShrinkwrap": false
    },
    "8.2.0": {
      "name": "cspell",
      "version": "8.2.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.2.0",
        "@cspell/cspell-pipe": "8.2.0",
        "@cspell/cspell-types": "8.2.0",
        "@cspell/dynamic-import": "8.2.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.2.0",
        "cspell-glob": "8.2.0",
        "cspell-io": "8.2.0",
        "cspell-lib": "8.2.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "3bcd6430bb33fb221d07030a60a2d61a2479e7ae",
      "_id": "cspell@8.2.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-qGU1+KvxuHoDDQnk9OHjcC+MBlxP8QmMNCJfuTzVuFxfik0QKhqZrM5K3UpcRSxpmcMICc0Eev2K9ZziA08LGw==",
        "shasum": "99733793d7ca4157642ce55e10baec9eefa2ba27",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.2.0.tgz",
        "fileCount": 172,
        "unpackedSize": 306698,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAzXAyh4Jt3LDIBn3BW4cKOuLRqsMhM2A9FPwxc5FWSgAiEAk3e2CO6AI46srFF2zYA32pghP8eKvx0BX2Y8hrpq/I8="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.2.0_1703082299937_0.9125398321948879"
      },
      "_hasShrinkwrap": false
    },
    "8.2.1": {
      "name": "cspell",
      "version": "8.2.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.2.1",
        "@cspell/cspell-pipe": "8.2.1",
        "@cspell/cspell-types": "8.2.1",
        "@cspell/dynamic-import": "8.2.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.2.1",
        "cspell-glob": "8.2.1",
        "cspell-io": "8.2.1",
        "cspell-lib": "8.2.1",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "b0c889ee4068aa8a2447106c5c7f449debc85bdd",
      "_id": "cspell@8.2.1",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-LIn3AiEtin1pLmC3mALuBlbFliAGXaH/laLg/TKCaNXsmQrDTdgxRCz5OizoP7T8dvd/AXF9XI7Omwq+VYl2ag==",
        "shasum": "c784df21220a0841c9286058c9d8eb4218faa886",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.2.1.tgz",
        "fileCount": 172,
        "unpackedSize": 306698,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIB+3wKgnM2ctWp8jAGF2SWLI4cF6SRRZHt2HU6oKml8AAiEApjukYpo9T6Wi3pWy6XvuD8xqYymolWSZAfITQ9KUNGY="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.2.1_1703094765741_0.4861244413484136"
      },
      "_hasShrinkwrap": false
    },
    "8.2.3": {
      "name": "cspell",
      "version": "8.2.3",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.2.3",
        "@cspell/cspell-pipe": "8.2.3",
        "@cspell/cspell-types": "8.2.3",
        "@cspell/dynamic-import": "8.2.3",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.2.3",
        "cspell-glob": "8.2.3",
        "cspell-io": "8.2.3",
        "cspell-lib": "8.2.3",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "e3098b21e0a199d61226f8ff4989d48b385eddfa",
      "_id": "cspell@8.2.3",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-lJEIglmBINLW4Jwn+5W1k6Zb5EjyRFLnTvc1uQ268/9pcsB+GWUZruplIe5+erR3AxZ+N7Tqp7IY9j2Jf1+/Fg==",
        "shasum": "9e861887a9babf0d1c2c7b709e9bc0b39c2f4a18",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.2.3.tgz",
        "fileCount": 172,
        "unpackedSize": 306698,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCYRZMKJo03rameemRDWRZoKHF1oa6K+gvUZ1L/XnuD9gIgLnBUepwX1MfcoJTjAOfgh3nWtSKH8n/3+u0jBOaK9Cs="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.2.3_1703230811791_0.29177223605320646"
      },
      "_hasShrinkwrap": false
    },
    "8.2.4": {
      "name": "cspell",
      "version": "8.2.4",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.2.4",
        "@cspell/cspell-pipe": "8.2.4",
        "@cspell/cspell-types": "8.2.4",
        "@cspell/dynamic-import": "8.2.4",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.2.4",
        "cspell-glob": "8.2.4",
        "cspell-io": "8.2.4",
        "cspell-lib": "8.2.4",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "d3c5ff685b3aa2bf984f557d81380f2c994547e0",
      "_id": "cspell@8.2.4",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-dmhyGelq7P5Mnu8hrx+Zqbpag9Afz8dDEK1kcG6bwcu9ROSTL4/l23P9M/L4Zh4EDDsX9pdO03z864jpHtUwfw==",
        "shasum": "f5cc37abafc76b2ad5b5a740c12627483c28e1d2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.2.4.tgz",
        "fileCount": 172,
        "unpackedSize": 306698,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIB5UsFgS20h61pbYoX66Wh/g9zNIN72IpZ+wRNzn11K2AiAguH2N7WLjPhqfPh9jk63IW5qxlBD36ILrv3+Av/e3xQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.2.4_1703762379690_0.9153908008250797"
      },
      "_hasShrinkwrap": false
    },
    "8.3.0": {
      "name": "cspell",
      "version": "8.3.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.3.0",
        "@cspell/cspell-pipe": "8.3.0",
        "@cspell/cspell-types": "8.3.0",
        "@cspell/dynamic-import": "8.3.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.3.0",
        "cspell-glob": "8.3.0",
        "cspell-io": "8.3.0",
        "cspell-lib": "8.3.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "019c7ccd326b7fc9e106069ddf6008d5079bbd12",
      "_id": "cspell@8.3.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-sciaIYoJIO1HbOPSVhspXCG24csW4PdgtB3EwwwKs7hon8ZbGaWVJBntxaJOrhTS/JgRaRDqXhW3daQqKLoUrg==",
        "shasum": "647c080acfeaa99736e2359c9da937ea4b189666",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.3.0.tgz",
        "fileCount": 172,
        "unpackedSize": 306698,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFnq1xZW4LErkt7dVNrjqVmFvGjSeOFptn0AuCjuFlyCAiB5n550prfHjFKiNMyKstSu4eoigVj5Ghet8zmSlmREhg=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.3.0_1703927835523_0.4883879590277871"
      },
      "_hasShrinkwrap": false
    },
    "8.3.1": {
      "name": "cspell",
      "version": "8.3.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.3.1",
        "@cspell/cspell-pipe": "8.3.1",
        "@cspell/cspell-types": "8.3.1",
        "@cspell/dynamic-import": "8.3.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.3.1",
        "cspell-glob": "8.3.1",
        "cspell-io": "8.3.1",
        "cspell-lib": "8.3.1",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "7136c39fd5f47c2acd44bec0bede924e55e1a107",
      "_id": "cspell@8.3.1",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-VA7Z1jHyhr0+ZYGzrLSKouoZ1U1dFMQ38B4pMnKwx/qbngBPqFHOZXJfNRrHgbgicC7fwDjsm+4OvxUluOKR9A==",
        "shasum": "0b4529de0b207c930408735e1f168ebeb69bad3b",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.3.1.tgz",
        "fileCount": 172,
        "unpackedSize": 308476,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC4LImhQBeK8cpQEqQPdyfS1ILpu4krX3ZX7uEIVW3WAwIhAKNY3LFykdPEZYMS40QtAH9C06MbcxmfQBPSTx89lJgD"
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.3.1_1704110718206_0.18384762188804915"
      },
      "_hasShrinkwrap": false
    },
    "8.3.2": {
      "name": "cspell",
      "version": "8.3.2",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.3.2",
        "@cspell/cspell-pipe": "8.3.2",
        "@cspell/cspell-types": "8.3.2",
        "@cspell/dynamic-import": "8.3.2",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^11.1.0",
        "cspell-gitignore": "8.3.2",
        "cspell-glob": "8.3.2",
        "cspell-io": "8.3.2",
        "cspell-lib": "8.3.2",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.5.4",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.6",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "98f622b2b12529f2d1ccf0f3a57991e4c08b3e3a",
      "_id": "cspell@8.3.2",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.1.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-V8Ub3RO/a5lwSsltW/ib3Z3G/sczKtSpBBN1JChzbSCfEgaY2mJY8JW0BpkSV+Ug6uJitpXNOOaxa3Xr489i7g==",
        "shasum": "56e7e919d87d38016b4c34b8c8ee745404c230a7",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.3.2.tgz",
        "fileCount": 172,
        "unpackedSize": 308476,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHarywSGPBK3TLJGcTacfJ7h5nOKT5qT2Zp4u6uJ+n0/AiEAhroAKE7uKeW29T5deAyEiHrs47OB2I/2+iM3DBkCwbc="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.3.2_1704201301239_0.8517988449593352"
      },
      "_hasShrinkwrap": false
    },
    "8.4.0": {
      "name": "cspell",
      "version": "8.4.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.4.0",
        "@cspell/cspell-pipe": "8.4.0",
        "@cspell/cspell-types": "8.4.0",
        "@cspell/dynamic-import": "8.4.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^12.0.0",
        "cspell-gitignore": "8.4.0",
        "cspell-glob": "8.4.0",
        "cspell-io": "8.4.0",
        "cspell-lib": "8.4.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.6.0",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.7",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "f9ad457ca2102c6642c377417a95a4415f5ec3d8",
      "_id": "cspell@8.4.0",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.3.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-1PW0w51V9n6NApf8Jbfji09jyRg7gHDm4acn1UbOd+v3gkefuaofYeMyLyupY5igloeIukTkvi3mxo+vu0hpxg==",
        "shasum": "c53bc4e30db57fed1bfa9b6ef3ff566fb8f0f8d2",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.4.0.tgz",
        "fileCount": 172,
        "unpackedSize": 308492,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHzs5I6bEB/LyvYne/6EOdlUBtmxOK4pudyBMTX+4E0PAiAZ3C9JCzRsqhcK56Dxc60nwd+m0tkzAfWGgzcw41X9JQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.4.0_1708336283382_0.5659850996730207"
      },
      "_hasShrinkwrap": false
    },
    "8.4.1": {
      "name": "cspell",
      "version": "8.4.1",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.4.1",
        "@cspell/cspell-pipe": "8.4.1",
        "@cspell/cspell-types": "8.4.1",
        "@cspell/dynamic-import": "8.4.1",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^12.0.0",
        "cspell-gitignore": "8.4.1",
        "cspell-glob": "8.4.1",
        "cspell-io": "8.4.1",
        "cspell-lib": "8.4.1",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.6.0",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.7",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "d57dbadb81b859d659c578cd8e81ac5dbcbaae8c",
      "_id": "cspell@8.4.1",
      "_nodeVersion": "18.19.0",
      "_npmVersion": "lerna/3.3.0/node@v18.19.0+x64 (linux)",
      "dist": {
        "integrity": "sha512-QoyUroQiMXak4bfVq1oM5PK78rO1R2/BbZMtZl4ZIFxWh2VapkYhK6tiG2wvK/wSD2jXe+n3UflD6CD8663dIw==",
        "shasum": "b16b2ee04e4aa75f7ca128aba8634e5d0c3126b6",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.4.1.tgz",
        "fileCount": 172,
        "unpackedSize": 308492,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGZkS70A1xVrc/+GNxhyvc8CrOzkLGsTtgpMp60ULj4TAiB+qunnHtQ5w3R43PeiN7+H2wQkc6dqczZ9tcWBIwdTnQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.4.1_1708419444839_0.6711023184574381"
      },
      "_hasShrinkwrap": false
    },
    "8.5.0": {
      "name": "cspell",
      "version": "8.5.0",
      "description": "A Spelling Checker for Code!",
      "funding": "https://github.com/streetsidesoftware/cspell?sponsor=1",
      "bin": {
        "cspell": "bin.mjs",
        "cspell-esm": "bin.mjs"
      },
      "type": "module",
      "sideEffects": false,
      "types": "dist/esm/index.d.mts",
      "module": "dist/esm/index.mjs",
      "exports": {
        ".": {
          "import": "./dist/esm/index.mjs"
        },
        "./app": {
          "import": "./dist/esm/app.mjs"
        },
        "./bin": {
          "import": "./bin.mjs"
        },
        "./bin.mjs": {
          "import": "./bin.mjs"
        },
        "./application": {
          "import": "./dist/esm/application.mjs"
        }
      },
      "scripts": {
        "clean": "shx rm -rf dist temp coverage \"*.tsbuildInfo\"",
        "build": "tsc -b . && ts2mjs dist/esm && pnpm run build:api",
        "build:api": "rollup -c rollup.config.mjs",
        "build:esm": "tsc -b tsconfig.esm.json",
        "build:esm:ts2mjs": "tsc -b tsconfig.esm.json && ts2mjs dist/esm",
        "build:lib": "tsc -b src/lib/tsconfig.json",
        "build:readme": "pnpm build:readme:help",
        "build:readme:help": "pnpm build:readme:help:lint && pnpm build:readme:help:trace && inject-markdown README.md && prettier -w README.md",
        "build:readme:help:lint": "./bin.mjs lint --help > static/help-lint.txt",
        "build:readme:help:trace": "./bin.mjs trace --help > static/help-trace.txt",
        "clean-build": "pnpm run clean && pnpm run build",
        "coverage": "vitest run --coverage",
        "test:watch": "vitest",
        "test": "vitest run",
        "watch": "tsc -b . -w",
        "compile": "tsc -p .",
        "test-watch": "vitest",
        "prepublishOnly": "pnpm run clean-build",
        "test:update-snapshot": "vitest run --update"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/streetsidesoftware/cspell.git"
      },
      "keywords": [
        "spell",
        "checker",
        "code",
        "camel",
        "case",
        "spelling",
        "spell checker",
        "spelling checker",
        "lint"
      ],
      "author": {
        "name": "Jason Dent"
      },
      "license": "MIT",
      "bugs": {
        "url": "https://github.com/streetsidesoftware/cspell/issues"
      },
      "homepage": "https://streetsidesoftware.github.io/cspell/",
      "dependencies": {
        "@cspell/cspell-json-reporter": "8.5.0",
        "@cspell/cspell-pipe": "8.5.0",
        "@cspell/cspell-types": "8.5.0",
        "@cspell/dynamic-import": "8.5.0",
        "chalk": "^5.3.0",
        "chalk-template": "^1.1.0",
        "commander": "^12.0.0",
        "cspell-gitignore": "8.5.0",
        "cspell-glob": "8.5.0",
        "cspell-io": "8.5.0",
        "cspell-lib": "8.5.0",
        "fast-glob": "^3.3.2",
        "fast-json-stable-stringify": "^2.1.0",
        "file-entry-cache": "^8.0.0",
        "get-stdin": "^9.0.0",
        "semver": "^7.6.0",
        "strip-ansi": "^7.1.0",
        "vscode-uri": "^3.0.8"
      },
      "engines": {
        "node": ">=18"
      },
      "devDependencies": {
        "@types/file-entry-cache": "^5.0.4",
        "@types/glob": "^8.1.0",
        "@types/micromatch": "^4.0.6",
        "@types/semver": "^7.5.8",
        "micromatch": "^4.0.5",
        "minimatch": "^9.0.3"
      },
      "gitHead": "098601b2e007bebf9e5ae894bed9a50559a102ed",
      "_id": "cspell@8.5.0",
      "_nodeVersion": "18.19.1",
      "_npmVersion": "lerna/3.3.0/node@v18.19.1+x64 (linux)",
      "dist": {
        "integrity": "sha512-Kg10itkOZKoIcKE2KSQWVVt0Yo2pssvd66kuzo5S3x7lc25yggz8W+piHzUH99E2aNQ7CTzH7H78ReI53pt4tA==",
        "shasum": "3eb96456d64b49ed2a3de4ecfeaf338a1d3d0eda",
        "tarball": "https://registry.npmjs.org/cspell/-/cspell-8.5.0.tgz",
        "fileCount": 172,
        "unpackedSize": 316475,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICnRlX4G9UGcEzrhBd9WOo4HyrAeoaSO9Yorr7x/cj+nAiEAyqqzrYNfPFloVZPmckma9HpnowvCyX6oqSHfBM3NasU="
          }
        ]
      },
      "_npmUser": {
        "name": "jason-dent",
        "email": "jason@streetsidesoftware.nl"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "jason-dent",
          "email": "jason@streetsidesoftware.nl"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/cspell_8.5.0_1709304802290_0.7981077988318961"
      },
      "_hasShrinkwrap": false
    }
  },
  "readme": "# cspell\n\n[![](https://github.com/streetsidesoftware/cspell/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/streetsidesoftware/cspell/actions)\n[![Coverage Status](https://coveralls.io/repos/github/streetsidesoftware/cspell/badge.svg?branch=main)](https://coveralls.io/github/streetsidesoftware/cspell?branch=main)\n[![codecov](https://codecov.io/gh/streetsidesoftware/cspell/branch/main/graph/badge.svg?token=Dr4fi2Sy08)](https://codecov.io/gh/streetsidesoftware/cspell)\n\nA Spell Checker for Code!\n\n`cspell` is a command line tool and library for spell checking code.\n\n## Support Future Development\n\n<!--- @@inject: ../../static/sponsor.md --->\n\n- [![GitHub Sponsors](https://img.shields.io/badge/-black?style=social&logo=githubsponsors&label=GitHub%20Sponsor%3A%20Street%20Side%20Software)](https://github.com/sponsors/streetsidesoftware)\n- [![Patreon](https://img.shields.io/badge/-black?style=social&logo=patreon&label=Patreon%3A%20Street%20Side%20Software)](https://patreon.com/streetsidesoftware)\n- [![PayPal](https://img.shields.io/badge/-black?style=social&logo=paypal&label=PayPal%20Donate%3A%20Street%20Side%20Software)](https://www.paypal.com/donate/?hosted_button_id=26LNBP2Q6MKCY)\n- [![Open Collective](https://img.shields.io/badge/-black?style=social&logo=opencollective&label=Open%20Collective%3A%20CSpell)](https://opencollective.com/cspell)\n\n<!--- @@inject-end: ../../static/sponsor.md --->\n\n## Features\n\n- Spell Checks Code -- Able to spell check code by parsing it into words before checking against the dictionaries.\n  - Supports CamelCase, snake_case, and compoundwords naming styles.\n- Self contained -- does not depend upon OS libraries like Hunspell or aspell. Nor does it depend upon online services.\n- Fast -- checks 1000's of lines of code in seconds.\n- Programming Language Specific Dictionaries -- Has dedicated support for:\n  - JavaScript, TypeScript, Python, PHP, C#, C++, LaTex, Go, HTML, CSS, etc.\n- Customizable -- supports custom dictionaries and word lists.\n- Continuous Integration Support -- Can easily be added as a linter to Travis-CI.\n\ncspell was initially built as the spell checking service for the [spell checker extension](https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker) for\n[Visual Studio Code](https://code.visualstudio.com/).\n\n## CSpell for Enterprise\n\n<!--- @@inject: ../../static/tidelift.md --->\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of cspell and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source packages you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact packages you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-cspell?utm_source=npm-cspell&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n<!--- @@inject-end: ../../static/tidelift.md --->\n\n## Installation\n\n```sh\nnpm install -g cspell\n```\n\n### Docker\n\nThere is a docker image at [Packages for cspell](https://github.com/streetsidesoftware/cspell-cli/pkgs/container/cspell).\n\n`cspell` commands below can be run by replacing\n\n```\ncspell\n```\n\nwith:\n\n```\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest\n```\n\n**Example:**\n\n```sh\ndocker run -it -v $PWD:/workdir ghcr.io/streetsidesoftware/cspell:latest lint --help\n```\n\n## Basic Usage\n\nExample: recursively spell check all JavaScript files in `src`\n\n**JavaScript files**\n\n```sh\ncspell \"src/**/*.js\"\n# or\ncspell lint \"src/**/*.js\"\n```\n\n**Check everything**\n\n```sh\ncspell \"**\"\n```\n\n**Git: Check Only Changed Files**\n\n```sh\n git diff --name-only | npx cspell --file-list stdin\n```\n\n## Command: `lint` -- Spell Checking\n\nThe `lint` command is used for spell checking files.\n\n### Help\n\n```sh\ncspell lint --help\n```\n\n### Options\n\n<!--- @@inject: static/help-lint.txt --->\n\n```\nUsage: cspell lint [options] [globs...] [file://<path> ...] [stdin[://<path>]]\n\nPatterns:\n - [globs...]            Glob Patterns\n - [stdin]               Read from \"stdin\" assume text file.\n - [stdin://<path>]      Read from \"stdin\", use <path> for file type and config.\n - [file://<path>]       Check the file at <path>\n\nExamples:\n    cspell .                        Recursively check all files.\n    cspell lint .                   The same as \"cspell .\"\n    cspell \"*.js\"                   Check all .js files in the current directory\n    cspell \"**/*.js\"                Check all .js files recursively\n    cspell \"src/**/*.js\"            Only check .js under src\n    cspell \"**/*.txt\" \"**/*.js\"     Check both .js and .txt files.\n    cspell \"**/*.{txt,js,md}\"       Check .txt, .js, and .md files.\n    cat LICENSE | cspell stdin      Check stdin\n    cspell stdin://docs/doc.md      Check stdin as if it was \"./docs/doc.md\"\n\nCheck spelling\n\nOptions:\n  -c, --config <cspell.json>   Configuration file to use.  By default cspell\n                               looks for cspell.json in the current directory.\n  -v, --verbose                Display more information about the files being\n                               checked and the configuration.\n  --locale <locale>            Set language locales. i.e. \"en,fr\" for English\n                               and French, or \"en-GB\" for British English.\n  --language-id <language>     Force programming language for unknown\n                               extensions. i.e. \"php\" or \"scala\"\n  --words-only                 Only output the words not found in the\n                               dictionaries.\n  -u, --unique                 Only output the first instance of a word not\n                               found in the dictionaries.\n  -e, --exclude <glob>         Exclude files matching the glob pattern. This\n                               option can be used multiple times to add\n                               multiple globs.\n  --file-list <path or stdin>  Specify a list of files to be spell checked. The\n                               list is filtered against the glob file patterns.\n                               Note: the format is 1 file path per line.\n  --file [file...]             Specify files to spell check. They are filtered\n                               by the [globs...].\n  --no-issues                  Do not show the spelling errors.\n  --no-progress                Turn off progress messages\n  --no-summary                 Turn off summary message in console.\n  -s, --silent                 Silent mode, suppress error messages.\n  --no-exit-code               Do not return an exit code if issues are found.\n  --quiet                      Only show spelling issues or errors.\n  --fail-fast                  Exit after first file with an issue or error.\n  -r, --root <root folder>     Root directory, defaults to current directory.\n  --no-relative                Issues are displayed with absolute path instead\n                               of relative to the root.\n  --show-context               Show the surrounding text around an issue.\n  --show-suggestions           Show spelling suggestions.\n  --no-show-suggestions        Do not show spelling suggestions or fixes.\n  --no-must-find-files         Do not error if no files are found.\n  --cache                      Use cache to only check changed files.\n  --no-cache                   Do not use cache.\n  --cache-reset                Reset the cache file.\n  --cache-strategy <strategy>  Strategy to use for detecting changed files.\n                               (choices: \"metadata\", \"content\")\n  --cache-location <path>      Path to the cache file or directory. (default:\n                               \".cspellcache\")\n  --dot                        Include files and directories starting with `.`\n                               (period) when matching globs.\n  --gitignore                  Ignore files matching glob patterns found in\n                               .gitignore files.\n  --no-gitignore               Do NOT use .gitignore files.\n  --gitignore-root <path>      Prevent searching for .gitignore files past\n                               root.\n  --validate-directives        Validate in-document CSpell directives.\n  --no-validate-directives     Do not validate in-document CSpell directives.\n  --no-color                   Turn off color.\n  --color                      Force color.\n  --no-default-configuration   Do not load the default configuration and\n                               dictionaries.\n  --debug                      Output information useful for debugging\n                               cspell.json files.\n  --reporter <module|path>     Specify one or more reporters to use.\n  -h, --help                   display help for command\n\nMore Examples:\n\n    cspell \"**/*.js\" --reporter @cspell/cspell-json-reporter\n        This will spell check all \".js\" files recursively and use\n        \"@cspell/cspell-json-reporter\".\n\n    cspell . --reporter default\n        This will force the default reporter to be used overriding\n        any reporters defined in the configuration.\n\n    cspell . --reporter ./<path>/reporter.cjs\n        Use a custom reporter. See API for details.\n\n    cspell \"*.md\" --exclude CHANGELOG.md --files README.md CHANGELOG.md\n        Spell check only check \"README.md\" but NOT \"CHANGELOG.md\".\n\n    cspell \"/*.md\" --no-must-find-files --files $FILES\n        Only spell check the \"/*.md\" files in $FILES,\n        where $FILES is a shell variable that contains the list of files.\n\nReferences:\n    https://cspell.org\n    https://github.com/streetsidesoftware/cspell\n```\n\n<!--- @@inject-end: static/help-lint.txt --->\n\n## Command: `check` - Quick Visual Check\n\nDo a quick visual check of a file. This is a great way to see which text is included in the check.\n\n```sh\ncspell check <filename>\n```\n\nIt will produce something like this:\n![image](https://user-images.githubusercontent.com/3740137/35588848-2a8f1bca-0602-11e8-9cda-fddee2742c35.png)\n\n### Tip for use with `less`\n\nTo get color in less, use `--color` and `less -r`\n\n```sh\ncspell check <filename> --color | less -r\n```\n\n## Command: `trace` - See which dictionaries contain a word\n\nTrace shows a the list of known dictionaries and a `*` next to the ones that contain the word.\n\nA `!` will appear next to the ones where the word is forbidden.\n\n![image](https://user-images.githubusercontent.com/3740137/129488961-b99dbd2f-7daa-4462-96cd-568e0d4c3c6e.png)\n\n### Help `cspell trace --help`\n\n<!--- @@inject: static/help-trace.txt --->\n\n```\nUsage: cspell trace [options] [words...]\n\nTrace words -- Search for words in the configuration and dictionaries.\n\nOptions:\n  -c, --config <cspell.json>  Configuration file to use.  By default cspell\n                              looks for cspell.json in the current directory.\n  --locale <locale>           Set language locales. i.e. \"en,fr\" for English\n                              and French, or \"en-GB\" for British English.\n  --language-id <language>    Use programming language. i.e. \"php\" or \"scala\".\n  --allow-compound-words      Turn on allowCompoundWords\n  --no-allow-compound-words   Turn off allowCompoundWords\n  --ignore-case               Ignore case and accents when searching for words.\n  --no-ignore-case            Do not ignore case and accents when searching for\n                              words.\n  --dictionary-path <format>  Configure how to display the dictionary path.\n                              (choices: \"hide\", \"short\", \"long\", \"full\",\n                              default: Display most of the path.)\n  --stdin                     Read words from stdin.\n  --all                       Show all dictionaries.\n  --only-found                Show only dictionaries that have the words.\n  --no-color                  Turn off color.\n  --color                     Force color\n  --no-default-configuration  Do not load the default configuration and\n                              dictionaries.\n  -h, --help                  display help for command\n```\n\n<!--- @@inject-end: static/help-trace.txt --->\n\n## CI/CD Continuous Integration support\n\n### Mega-Linter\n\n[Mega-Linter](https://nvuillam.github.io/mega-linter/) aggregates 70 linters ready to use out of the box, including [cspell](https://nvuillam.github.io/mega-linter/descriptors/spell_cspell/)\n\n- Can run as a GitHub Action, on other CI tools and locally\n- Provides an updated `.cspell.json` file with new unknown words\n\n**Setup**\n\nQuick setup following installation guide in [Mega-Linter documentation](https://nvuillam.github.io/mega-linter/)\n\n### Git commit-hooks\n\n#### pre-commit\n\n**Setup**\n\n```\nnpm install -SD cspell\n```\n\n**`.git/hooks/pre-commit`**\n\n```\n#!/bin/sh\n\nexec git diff --cached --name-only | npx cspell --no-summary --no-progress --no-must-find-files --file-list stdin\n```\n\n## Requirements\n\ncspell needs Node 14 and above.\n\n## How it works\n\nThe concept is simple, split camelCase and snake_case words before checking them against a list of known words.\n\n- `camelCase` -> `camel case`\n- `HTMLInput` -> `html input`\n- `srcCode` -> `src code`\n- `snake_case_words` -> `snake case words`\n- `camel2snake` -> `camel snake` -- (the 2 is ignored)\n- `function parseJson(text: string)` -> `function parse json text string`\n\n### Special cases\n\n- Escape characters like `\\n`, `\\t` are removed if the word does not match:\n  - `\\narrow` -> `narrow` - because `narrow` is a word\n  - `\\ncode` -> `code` - because `ncode` is not a word.\n  - `\\network` -> `network` - but it might be hiding a spelling error, if `\\n` was an escape character.\n\n### Things to note\n\n- This spellchecker is case insensitive. It will not catch errors like `english` which should be `English`.\n- The spellchecker uses dictionaries stored locally. It does not send anything outside your machine.\n- The words in the dictionaries can and do contain errors.\n- There are missing words.\n- Only words longer than 3 characters are checked. \"jsj\" is ok, while \"jsja\" is not.\n- All symbols and punctuation are ignored.\n\n## In Document Settings\n\nIt is possible to add spell check settings into your source code.\nThis is to help with file specific issues that may not be applicable to the entire project.\n\nAll settings are prefixed with `cspell:` or `spell-checker:`.\n\n- `disable` -- turn off the spell checker for a section of code.\n- `enable` -- turn the spell checker back on after it has been turned off.\n- `ignore` -- specify a list of words to be ignored.\n- `words` -- specify a list of words to be considered correct and will appear in the suggestions list.\n- `ignoreRegExp` -- Any text matching the regular expression will NOT be checked for spelling.\n- `includeRegExp` -- Only text matching the collection of includeRegExp will be checked.\n- `enableCompoundWords` / `disableCompoundWords` -- Allow / disallow words like: \"stringlength\".\n- `dictionaries` -- specify a list of the names of the dictionaries to use.\n\n### Enable / Disable checking sections of code\n\nIt is possible to disable / enable the spell checker by adding comments to your code.\n\n#### Disable Checking\n\n- `/* cspell:disable */`\n- `/* spell-checker: disable */`\n- `/* spellchecker: disable */`\n- `// cspell:disable-line` -- disables checking for the current line.\n- `/* cspell:disable-next-line */` -- disables checking till the end of the next line.\n\n<!--- cspell:enable -->\n\n#### Enable Checking\n\n- `/* cspell:enable */`\n- `/* spell-checker: enable */`\n- `/* spellchecker: enable */`\n\n#### Example\n\n```javascript\n// cspell:disable\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n/* cspell:enable */\n\nconst words = ['zaallano', 'wooorrdd', 'zzooommmmmmmm']; // cspell:disable-line disables this entire line\n\n// To disable the next line, use cspell:disable-next-line\nconst moreWords = ['ieeees', 'beees', 'treeees'];\n\n// Nesting disable / enable is not Supported\n\n// spell-checker:disable\n// It is now disabled.\n\nvar liep = 1;\n\n/* cspell:disable */\n// It is still disabled\n\n// cspell:enable\n// It is now enabled\n\nconst str = 'goededag'; // <- will be flagged as an error.\n\n// spell-checker:enable <- doesn't do anything\n\n// cSPELL:DISABLE <-- also works.\n\n// if there isn't an enable, spelling is disabled till the end of the file.\nconst str = 'goedemorgen'; // <- will NOT be flagged as an error.\n```\n\n<!--- cspell:enable -->\n\n### Ignore\n\n_Ignore_ allows you the specify a list of words you want to ignore within the document.\n\n```javascript\n// cspell:ignore zaallano, wooorrdd\n// cspell:ignore zzooommmmmmmm\nconst wackyWord = ['zaallano', 'wooorrdd', 'zzooommmmmmmm'];\n```\n\n**Note:** words defined with `ignore` will be ignored for the entire file.\n\n### Words\n\nThe _words_ list allows you to add words that will be considered correct and will be used as suggestions.\n\n```javascript\n// cspell:words woorxs sweeetbeat\nconst companyName = 'woorxs sweeetbeat';\n```\n\n**Note:** words defined with `words` will be used for the entire file.\n\n### Enable / Disable compound words\n\nIn some programming language it is common to glue words together.\n\n```c\n// cspell:enableCompoundWords\nchar * errormessage;  // Is ok with cspell:enableCompoundWords\nint    errornumber;   // Is also ok.\n```\n\n**Note:** Compound word checking cannot be turned on / off in the same file.\nThe last setting in the file determines the value for the entire file.\n\n### Excluding and Including Text to be checked.\n\nBy default, the entire document is checked for spelling.\n`cspell:disable`/`cspell:enable` above allows you to block off sections of the document.\n`ignoreRegExp` and `includeRegExp` give you the ability to ignore or include patterns of text.\nBy default the flags `gim` are added if no flags are given.\n\nThe spell checker works in the following way:\n\n1. Find all text matching `includeRegExp`\n1. Remove any text matching `ignoreRegExp`\n1. Check the remaining text.\n\n#### Exclude Example\n\n```javascript\n// cspell:ignoreRegExp 0x[0-9a-f]+     -- will ignore c style hex numbers\n// cspell:ignoreRegExp /0x[0-9A-F]+/g  -- will ignore upper case c style hex numbers.\n// cspell:ignoreRegExp g{5} h{5}       -- will only match ggggg, but not hhhhh or 'ggggg hhhhh'\n// cspell:ignoreRegExp g{5}|h{5}       -- will match both ggggg and hhhhh\n// cspell:ignoreRegExp /g{5} h{5}/     -- will match 'ggggg hhhhh'\n/* cspell:ignoreRegExp /n{5}/          -- will NOT work as expected because of the ending comment -> */\n/*\n   cspell:ignoreRegExp /q{5}/          -- will match qqqqq just fine but NOT QQQQQ\n*/\n// cspell:ignoreRegExp /[^\\s]{40,}/    -- will ignore long strings with no spaces.\n// cspell:ignoreRegExp Email           -- this will ignore email like patterns -- see Predefined RegExp expressions\nvar encodedImage = 'HR+cPzr7XGAOJNurPL0G8I2kU0UhKcqFssoKvFTR7z0T3VJfK37vS025uKroHfJ9nA6WWbHZ/ASn...';\nvar email1 = 'emailaddress@myfancynewcompany.com';\nvar email2 = '<emailaddress@myfancynewcompany.com>';\n```\n\n**Note:** ignoreRegExp and includeRegExp are applied to the entire file. They do not start and stop.\n\n#### Include Example\n\nIn general you should not need to use `includeRegExp`. But if you are mixing languages then it could come in helpful.\n\n```Python\n# cspell:includeRegExp #.*\n# cspell:includeRegExp (\"\"\"|''')[^\\1]*\\1\n# only comments and block strings will be checked for spelling.\ndef sum_it(self, seq):\n    \"\"\"This is checked for spelling\"\"\"\n    variabele = 0\n    alinea = 'this is not checked'\n    for num in seq:\n        # The local state of 'value' will be retained between iterations\n        variabele += num\n        yield variabele\n```\n\n### Dictionaries\n\nThe _dictionaries_ list allows you to specify dictionaries to use for the file.\n\n```javascript\n// cspell:dictionaries lorem-ipsum\nconst companyName = 'Lorem ipsum dolor sit amet';\n```\n\n**Note:** dictionaries specified with `dictionaries` will be used for the entire file.\n\n## Predefined RegExp expressions\n\n### Exclude patterns\n\n- `Urls`<sup>1</sup> -- Matches urls\n- `HexValues` -- Matches common hex format like `#aaa`, `0xfeef`, `\\u0134`\n- `Base64`<sup>1</sup> -- matches base64 blocks of text longer than 40 characters.\n- `Email` -- matches most email addresses.\n\n### Include Patterns\n\n- `Everything`<sup>1</sup> -- By default we match an entire document and remove the excludes.\n- `string` -- This matches common string formats like '...', \"...\", and \\`...\\`\n- `CStyleComment` -- These are C Style comments /\\* \\*/ and //\n- `PhpHereDoc` -- This matches PHPHereDoc strings.\n\n<sup>1.</sup> These patterns are part of the default include/exclude list for every file.\n\n## Customization\n\n_cspell_'s behavior can be controlled through a config file. By default it looks for any of the following files:\n\n- `.cspell.json`\n- `cspell.json`\n- `.cSpell.json`\n- `cSpell.json`\n- `cspell.config.js`\n- `cspell.config.cjs`\n- `cspell.config.json`\n- `cspell.config.yaml`\n- `cspell.config.yml`\n- `cspell.yaml`\n- `cspell.yml`\n\nOr you can specify a path to a config file with the `--config <path>` argument on the command line.\n\n### `cspell.json`\n\n#### Example `cspell.json` file\n\n```javascript\n// cSpell Settings\n{\n    // Version of the setting file.  Always 0.2\n    \"version\": \"0.2\",\n    // language - current active spelling language\n    \"language\": \"en\",\n    // words - list of words to be always considered correct\n    \"words\": [\n        \"mkdirp\",\n        \"tsmerge\",\n        \"githubusercontent\",\n        \"streetsidesoftware\",\n        \"vsmarketplacebadge\",\n        \"visualstudio\"\n    ],\n    // flagWords - list of words to be always considered incorrect\n    // This is useful for offensive words and common spelling errors.\n    // For example \"hte\" should be \"the\"\n    \"flagWords\": [\n        \"hte\"\n    ]\n}\n```\n\n### cspell.json sections\n\n- `version` - currently always 0.2 - controls how the settings in the configuration file behave.\n\n- `language` - this specifies the language locale to use in choosing the general dictionary.\n  For example: `\"language\": \"en-GB\"` tells cspell to use British English instead of US English.\n\n- `words` - a list of words to be considered correct.\n\n- `flagWords` - a list of words to be always considered incorrect\n\n- `ignoreWords` - a list of words to be ignored (even if they are in the flagWords).\n\n- `ignorePaths` - a list of globs to specify which files are to be ignored.\n\n  **Example**\n\n  ```json\n  \"ignorePaths\": [\"node_modules/**\"]\n  ```\n\n  will cause cspell to ignore anything in the `node_modules` directory.\n\n- `maxNumberOfProblems` - defaults to **_100_** per file.\n\n- `minWordLength` - defaults to **_4_** - the minimum length of a word before it is checked.\n\n- `allowCompoundWords` - defaults to **_false_**; set to **true** to allow compound words by default.\n\n- `dictionaries` - list of the names of the dictionaries to use. See [Dictionaries](#Dictionaries) below.\n\n- `dictionaryDefinitions` - this list defines any custom dictionaries to use. This is how you can include other languages like Spanish.\n\n  **Example**\n\n  ```javascript\n  \"language\": \"en\",\n  // Dictionaries \"spanish\", \"ruby\", and \"corp-term\" will always be checked.\n  // Including \"spanish\" in the list of dictionaries means both Spanish and English\n  // words will be considered correct.\n  \"dictionaries\": [\"spanish\", \"ruby\", \"corp-terms\", \"fonts\"],\n  // Define each dictionary.  Relative paths are relative to the config file.\n  \"dictionaryDefinitions\": [\n      { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n      { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n      { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n  ],\n  ```\n\n- `ignoreRegExpList` - list of patterns to be ignored\n\n- `includeRegExpList` - _(Advanced)_ limits the text checked to be only that matching the expressions in the list.\n\n- `patterns` - this allows you to define named patterns to be used with\n  `ignoreRegExpList` and `includeRegExpList`.\n\n- `languageSettings` - this allow for per programming language configuration settings. See [LanguageSettings](#LanguageSettings)\n\n## Dictionaries\n\nThe spell checker includes a set of default dictionaries.\n\n### General Dictionaries\n\n- **en_US** - Derived from Hunspell US English words.\n- **en-gb** - Derived from Hunspell GB English words.\n- **companies** - List of well known companies\n- **softwareTerms** - Software Terms and concepts like \"coroutine\", \"debounce\", \"tree\", etc.\n- **misc** - Terms that do not belong in the other dictionaries.\n\n### Programming Language Dictionaries\n\n- **typescript** - keywords for TypeScript and JavaScript\n- **node** - terms related to using nodejs.\n- **php** - _php_ keywords and library methods\n- **go** - _go_ keywords and library methods\n- **python** - _python_ keywords\n- **powershell** - _powershell_ keywords\n- **html** - _html_ related keywords\n- **css** - _css_, _less_, and _scss_ related keywords\n- **cpp** - _C++_ related keywords\n- **csharp** - _C#_ related keywords\n- **latex** - LaTex related words\n- **bash** - Bash/shell script keywords\n\n### Miscellaneous Dictionaries\n\n- **fonts** - long list of fonts - to assist with _css_\n- **filetypes** - list of file types\n- **npm** - list of top 500+ package names on npm.\n\n### Dictionary Definition\n\n- **name** - The reference name of the dictionary, used with program language settings\n- **description** - Optional description\n- **path** - Path to the file, can be relative or absolute. Relative path is relative to the\n  current `cspell.json` file.\n- **repMap** - Optional replacement map use to replace character prior to searching the dictionary.\n  Example:\n  ```javascript\n      // Replace various tick marks with a single '\n      \"repMap\": [[\"'|`|’\", \"'\"]]\n  ```\n  // Use Compounds\n- **useCompounds** - allow compound words\n\n```javascript\n// Define each dictionary.  Relative paths are relative to the config file.\n\"dictionaryDefinitions\": [\n    { \"name\": \"spanish\", \"path\": \"./spanish-words.txt\"},\n    { \"name\": \"ruby\", \"path\": \"./ruby.txt\"},\n    { \"name\": \"company-terms\", \"path\": \"./corp-terms.txt\"}\n],\n```\n\n### Disabling a Dictionary\n\nIt is possible to prevent a dictionary from being loaded. This is useful if you want to use your own dictionary or just\nturn off an existing dictionary.\n\n#### Disable Default cpp Dictionary\n\n```javascript\n\"dictionaries\": [\"!cpp\"],\n\"overrides\": [\n  {\n      \"filename\": \"legacy/**/*.cpp\",\n      \"dictionaries\": [\"!!cpp\"], // add it back for *.cpp files under the legacy folder\n  },\n]\n```\n\nThe number of `!`s is important.\n\n- `!cpp` remove `cpp` dictionary\n- `!!cpp` add it back\n- `!!!cpp` remove it again.\n\n## LanguageSettings\n\nThe Language Settings allow configuration to be based upon the programming language and/or the locale.\nThere are two selector fields `locale` and `languageId`.\n\n- `languageId` defines which programming languages to match against.\n  A value of `\"python,javascript\"` will match against _python_ and _javascript_ files. To match against ALL programming languages,\n  use `\"*\"`.\n- `locale` defines which spoken languages to match against. A value of `\"en-GB,nl\"` will match against British English or Dutch.\n  A value of `\"*\"` will match all spoken languages.\n- Most configuration values allowed in a `cspell.json` file can be define or redefine within the `languageSettings`.\n\n```javascript\n    \"languageSettings\": [\n        {\n            // VSCode languageId. i.e. typescript, java, go, cpp, javascript, markdown, latex\n            // * will match against any file type.\n            \"languageId\": \"c,cpp\",\n            // Language locale. i.e. en-US, de-AT, or ru. * will match all locales.\n            // Multiple locales can be specified like: \"en, en-US\" to match both English and English US.\n            \"locale\": \"*\",\n            // To exclude patterns, add them to \"ignoreRegExpList\"\n            \"ignoreRegExpList\": [\n                \"/#include.*/\"\n            ],\n            // List of dictionaries to enable by name in `dictionaryDefinitions`\n            \"dictionaries\": [\"cpp\"],\n            // Dictionary definitions can also be supplied here. They are only used iff \"languageId\" and \"locale\" match.\n            \"dictionaryDefinitions\": []\n        }\n    ]\n```\n\n## Overrides\n\nOverrides are useful for forcing configuration on a per file basis.\n\nExample:\n\n```javascript\n    \"overrides\": [\n        // Force `*.hrr` and `*.crr` files to be treated as `cpp` files:\n        {\n            \"filename\": \"**/{*.hrr,*.crr}\",\n            \"languageId\": \"cpp\"\n        },\n        // Force `*.txt` to use the Dutch dictionary (Dutch dictionary needs to be installed separately):\n        {\n            \"language\": \"nl\",\n            \"filename\": \"**/dutch/**/*.txt\"\n        }\n    ]\n```\n\n<!--- @@inject: ../../static/footer.md --->\n\n<br/>\n\n---\n\n<p align=\"center\">\nBrought to you by <a href=\"https://streetsidesoftware.com\" title=\"Street Side Software\">\n<img width=\"16\" alt=\"Street Side Software Logo\" src=\"https://i.imgur.com/CyduuVY.png\" /> Street Side Software\n</a>\n</p>\n\n<!--- @@inject-end: ../../static/footer.md --->\n\n<!---\n    cspell:disableCompoundWords\n    cspell:ignore  compoundwords stringlength errornumber\n    cspell:ignore jsja goededag alek wheerd behaviour tsmerge QQQQQ ncode\n    cspell:includeRegExp Everything\n    cspell:ignore hte variabele alinea\n    cspell:ignore mkdirp githubusercontent streetsidesoftware vsmarketplacebadge visualstudio\n    cspell:words Verdana\n    cspell:ignore ieeees beees treeees\n    cspell:ignore amet\n-->\n",
  "maintainers": [
    {
      "name": "jason-dent",
      "email": "jason@streetsidesoftware.nl"
    }
  ],
  "time": {
    "modified": "2024-03-01T14:53:22.880Z",
    "created": "2017-01-22T20:30:26.514Z",
    "1.0.0": "2017-01-22T20:30:26.514Z",
    "1.0.1": "2017-01-22T20:45:19.070Z",
    "1.0.2": "2017-01-23T16:41:16.632Z",
    "1.0.4": "2017-01-23T17:08:38.321Z",
    "1.0.5": "2017-01-25T21:50:00.459Z",
    "1.0.6": "2017-01-25T21:54:04.882Z",
    "1.0.7": "2017-01-25T21:59:18.817Z",
    "1.0.8": "2017-01-26T13:22:27.821Z",
    "1.1.0": "2017-01-31T08:10:30.635Z",
    "1.2.0": "2017-02-01T10:18:39.081Z",
    "1.2.1": "2017-02-01T12:54:41.850Z",
    "1.3.0": "2017-02-02T12:30:17.897Z",
    "1.3.1": "2017-02-06T14:30:57.912Z",
    "1.3.3": "2017-02-17T12:07:27.241Z",
    "1.4.0": "2017-03-11T11:58:28.796Z",
    "1.5.0": "2017-03-20T20:33:40.931Z",
    "1.6.0": "2017-06-10T16:33:45.050Z",
    "1.6.1": "2017-06-10T20:35:12.205Z",
    "1.7.0": "2017-07-11T17:36:55.415Z",
    "1.7.1": "2017-07-11T20:15:45.788Z",
    "1.7.2": "2017-07-11T21:29:24.583Z",
    "1.7.3": "2017-07-21T20:28:37.766Z",
    "1.7.4": "2017-07-21T20:51:36.701Z",
    "1.8.0": "2017-07-23T13:25:15.854Z",
    "1.8.1": "2017-07-23T13:35:09.373Z",
    "1.9.2": "2017-08-06T11:57:01.853Z",
    "1.9.3": "2017-08-09T19:42:28.005Z",
    "1.9.5": "2017-08-28T10:59:08.543Z",
    "1.9.6": "2017-08-28T16:32:21.669Z",
    "1.9.7": "2017-08-30T20:34:26.601Z",
    "1.9.8": "2017-09-17T20:15:36.930Z",
    "1.10.0": "2017-09-25T19:05:23.446Z",
    "1.10.1": "2017-09-30T22:20:59.192Z",
    "1.10.2": "2017-10-01T19:48:47.485Z",
    "1.10.3": "2017-10-01T20:15:35.140Z",
    "1.10.4": "2017-10-09T21:44:57.224Z",
    "1.10.5": "2017-10-22T09:48:02.292Z",
    "1.10.6": "2017-10-25T21:07:10.089Z",
    "2.0.1": "2017-10-28T18:30:44.241Z",
    "2.0.2": "2017-10-28T20:51:16.583Z",
    "2.0.3": "2017-11-16T16:58:45.655Z",
    "2.0.4": "2017-12-17T13:32:10.701Z",
    "2.0.5": "2018-01-24T05:34:59.026Z",
    "2.0.6": "2018-01-27T08:38:39.246Z",
    "2.0.8": "2018-01-27T16:33:31.592Z",
    "2.0.9": "2018-01-27T16:58:54.867Z",
    "2.1.0": "2018-01-29T21:05:59.692Z",
    "2.1.1": "2018-01-30T20:09:09.045Z",
    "2.1.3": "2018-02-18T19:16:29.031Z",
    "2.1.5": "2018-02-20T21:07:19.833Z",
    "2.1.6": "2018-02-20T21:20:39.885Z",
    "2.1.7": "2018-02-26T09:36:37.639Z",
    "2.1.8": "2018-04-02T05:43:14.809Z",
    "2.1.9": "2018-04-07T09:18:55.536Z",
    "2.1.10": "2018-04-15T19:06:35.205Z",
    "2.1.11": "2018-04-16T18:48:45.084Z",
    "2.1.12": "2018-04-21T13:51:07.040Z",
    "3.0.1": "2018-04-29T10:47:32.317Z",
    "3.0.2": "2018-05-01T18:29:22.827Z",
    "3.1.0": "2018-06-23T15:22:33.528Z",
    "3.1.1": "2018-06-24T07:39:26.531Z",
    "3.1.2": "2018-06-24T11:35:06.133Z",
    "3.1.3": "2018-06-24T12:26:26.897Z",
    "3.2.1": "2019-02-03T10:19:49.014Z",
    "3.2.2": "2019-02-12T22:18:20.858Z",
    "3.2.4": "2019-04-20T18:44:01.281Z",
    "3.2.5": "2019-04-20T18:48:58.783Z",
    "3.2.6": "2019-04-20T19:19:48.158Z",
    "3.2.8": "2019-04-24T14:27:54.834Z",
    "3.2.10": "2019-05-06T10:22:52.837Z",
    "3.2.11": "2019-05-13T07:36:10.948Z",
    "3.2.12": "2019-05-13T08:56:45.498Z",
    "3.2.13": "2019-05-13T15:03:59.151Z",
    "3.2.14": "2019-05-13T17:32:03.487Z",
    "3.2.15": "2019-05-14T10:22:43.789Z",
    "3.2.16": "2019-05-14T19:53:43.190Z",
    "3.2.17": "2019-05-15T11:59:16.126Z",
    "4.0.3": "2019-05-17T11:43:39.118Z",
    "4.0.4": "2019-05-17T15:50:43.830Z",
    "4.0.5": "2019-05-18T07:52:51.788Z",
    "4.0.6": "2019-05-19T07:14:38.269Z",
    "4.0.7": "2019-05-19T07:20:43.304Z",
    "4.0.8": "2019-05-20T11:37:16.456Z",
    "4.0.9": "2019-05-20T11:54:54.536Z",
    "4.0.11": "2019-05-20T12:50:39.284Z",
    "4.0.12": "2019-05-20T19:47:57.273Z",
    "4.0.13": "2019-05-21T14:34:51.442Z",
    "4.0.14": "2019-05-25T10:51:37.246Z",
    "4.0.15": "2019-05-26T05:20:45.620Z",
    "4.0.16": "2019-05-29T09:31:02.092Z",
    "4.0.17": "2019-05-31T09:59:10.288Z",
    "4.0.18": "2019-06-03T08:00:18.109Z",
    "4.0.19": "2019-06-10T13:07:48.928Z",
    "4.0.20": "2019-06-10T14:00:16.034Z",
    "4.0.21": "2019-06-10T14:24:59.848Z",
    "4.0.23": "2019-06-12T18:25:56.702Z",
    "4.0.24": "2019-07-10T15:03:24.413Z",
    "4.0.25": "2019-07-14T12:02:10.333Z",
    "4.0.26": "2019-07-14T12:07:19.928Z",
    "4.0.27": "2019-08-10T09:45:25.107Z",
    "4.0.28": "2019-08-14T11:43:07.981Z",
    "4.0.29": "2019-09-07T06:29:19.741Z",
    "4.0.30": "2019-09-07T07:27:15.665Z",
    "4.0.31": "2019-10-26T08:31:48.990Z",
    "4.0.32": "2019-11-02T15:32:40.026Z",
    "4.0.33": "2019-11-06T07:21:45.546Z",
    "4.0.34": "2019-11-16T18:00:51.480Z",
    "4.0.35": "2019-11-23T09:14:24.744Z",
    "4.0.36": "2019-12-08T16:20:33.519Z",
    "4.0.37": "2019-12-08T22:00:54.727Z",
    "4.0.38": "2019-12-21T12:07:08.278Z",
    "4.0.40": "2019-12-21T20:37:11.854Z",
    "4.0.41": "2019-12-21T22:37:34.024Z",
    "4.0.42": "2019-12-22T22:23:04.887Z",
    "4.0.43": "2019-12-23T09:48:03.301Z",
    "4.0.44": "2020-01-01T09:46:59.969Z",
    "4.0.46": "2020-01-25T13:21:24.294Z",
    "4.0.47": "2020-02-15T07:31:27.851Z",
    "4.0.48": "2020-02-19T09:21:24.243Z",
    "4.0.49": "2020-02-20T13:58:34.491Z",
    "4.0.50": "2020-02-20T15:25:21.899Z",
    "4.0.51": "2020-02-23T07:53:37.166Z",
    "4.0.52": "2020-02-23T09:50:34.951Z",
    "4.0.53": "2020-02-23T11:37:41.992Z",
    "4.0.54": "2020-02-28T16:20:22.967Z",
    "4.0.55": "2020-02-28T17:24:07.488Z",
    "4.0.56": "2020-04-10T09:40:32.511Z",
    "5.0.1-alpha.3": "2020-04-12T12:53:00.899Z",
    "5.0.1-alpha.4": "2020-04-19T08:25:40.996Z",
    "4.0.57": "2020-04-19T08:26:51.744Z",
    "4.0.58": "2020-05-05T20:52:08.188Z",
    "4.0.59": "2020-05-06T15:16:55.286Z",
    "4.0.60": "2020-05-06T21:32:10.717Z",
    "4.0.61": "2020-05-07T17:32:44.123Z",
    "4.0.62": "2020-05-16T10:53:53.595Z",
    "4.0.63": "2020-05-16T21:44:29.019Z",
    "5.0.1-alpha.5": "2020-08-12T19:46:23.774Z",
    "4.1.0": "2020-08-12T20:03:52.594Z",
    "5.0.1-alpha.6": "2020-10-17T20:18:47.332Z",
    "4.1.1": "2020-10-17T20:19:01.073Z",
    "5.0.1-alpha.7": "2020-10-18T09:48:19.796Z",
    "4.1.2": "2020-10-18T11:09:03.648Z",
    "4.1.3": "2020-11-01T09:27:35.681Z",
    "5.0.1-alpha.8": "2020-11-01T16:23:24.893Z",
    "5.0.1-alpha.10": "2020-11-07T22:31:29.266Z",
    "5.0.1-alpha.11": "2020-11-07T22:43:18.271Z",
    "4.1.4": "2020-11-09T07:02:54.226Z",
    "4.1.5": "2020-11-09T14:11:59.795Z",
    "5.0.1-alpha.12": "2020-11-12T13:41:27.993Z",
    "4.2.0": "2020-11-14T15:31:21.553Z",
    "5.0.1-alpha.13": "2020-11-16T23:03:10.549Z",
    "4.2.2": "2020-11-17T23:19:42.373Z",
    "5.0.1-alpha.15": "2020-11-18T07:44:07.483Z",
    "5.0.1": "2020-11-20T07:41:52.175Z",
    "5.0.2": "2020-11-26T07:00:57.443Z",
    "4.2.3": "2020-11-29T16:35:10.077Z",
    "4.2.4": "2020-11-30T12:03:34.152Z",
    "4.2.5": "2020-11-30T16:59:01.783Z",
    "5.0.3": "2020-12-04T18:46:57.843Z",
    "5.0.4": "2020-12-15T12:22:54.484Z",
    "4.2.6": "2020-12-15T15:14:09.374Z",
    "5.0.5": "2020-12-15T16:00:28.257Z",
    "5.0.6": "2020-12-15T16:41:27.562Z",
    "5.0.7": "2020-12-16T14:33:43.015Z",
    "5.0.8": "2020-12-17T12:13:05.379Z",
    "5.1.0": "2020-12-27T08:24:18.555Z",
    "4.2.7": "2020-12-27T08:34:33.941Z",
    "5.1.1": "2020-12-28T08:23:41.897Z",
    "5.1.2": "2020-12-31T13:57:50.606Z",
    "5.1.3": "2021-01-05T15:23:49.108Z",
    "5.2.0": "2021-01-23T08:07:07.918Z",
    "4.2.8": "2021-01-23T11:45:35.677Z",
    "5.2.1": "2021-01-23T14:44:20.345Z",
    "5.2.2": "2021-01-26T09:23:51.909Z",
    "5.2.3": "2021-01-27T09:40:53.106Z",
    "5.2.4": "2021-01-28T19:58:38.764Z",
    "5.3.0-alpha.0": "2021-02-18T19:18:14.034Z",
    "5.3.0-alpha.1": "2021-02-19T20:48:44.138Z",
    "5.3.0-alpha.2": "2021-02-22T09:23:26.677Z",
    "5.3.0-alpha.3": "2021-02-23T17:47:16.442Z",
    "5.3.0-alpha.4": "2021-02-25T09:26:42.814Z",
    "5.3.0": "2021-02-25T12:13:36.283Z",
    "5.3.1": "2021-02-25T14:55:54.891Z",
    "5.3.2": "2021-02-26T19:02:30.750Z",
    "5.3.3": "2021-02-26T21:11:53.736Z",
    "5.3.4": "2021-03-01T12:44:33.177Z",
    "5.3.5": "2021-03-05T04:22:19.738Z",
    "5.3.6": "2021-03-05T10:07:33.554Z",
    "5.3.7-alpha.0": "2021-03-05T10:36:42.162Z",
    "5.3.7-alpha.1": "2021-03-05T11:09:40.021Z",
    "5.3.7-alpha.2": "2021-03-05T11:41:56.520Z",
    "5.3.7-alpha.3": "2021-03-05T16:18:45.553Z",
    "5.3.7": "2021-03-05T19:02:35.388Z",
    "5.3.8": "2021-03-17T13:33:39.858Z",
    "5.3.9": "2021-03-19T06:11:14.023Z",
    "5.3.10": "2021-04-02T13:19:14.437Z",
    "5.3.11": "2021-04-03T14:12:03.348Z",
    "5.3.12": "2021-04-06T06:52:02.337Z",
    "5.4.0": "2021-05-05T09:52:27.944Z",
    "5.4.1": "2021-05-11T11:48:26.713Z",
    "5.5.0": "2021-05-29T04:41:44.937Z",
    "5.5.1": "2021-05-29T06:12:59.937Z",
    "5.5.2": "2021-05-30T10:30:18.568Z",
    "5.6.0": "2021-06-05T13:36:31.683Z",
    "5.6.1": "2021-06-09T11:57:35.214Z",
    "5.6.2": "2021-06-10T14:43:32.346Z",
    "5.6.3": "2021-06-11T12:45:57.508Z",
    "5.6.4": "2021-06-15T07:03:47.102Z",
    "5.6.5": "2021-06-18T22:49:37.110Z",
    "5.6.6": "2021-06-18T23:02:01.227Z",
    "5.6.7": "2021-08-13T16:41:38.288Z",
    "5.7.0-alpha.0": "2021-08-14T12:35:15.901Z",
    "5.7.0": "2021-08-14T13:25:08.919Z",
    "5.7.1": "2021-08-14T18:15:32.289Z",
    "5.7.2": "2021-08-16T12:37:15.574Z",
    "5.8.0": "2021-08-21T18:26:20.596Z",
    "5.8.1": "2021-08-24T10:43:40.876Z",
    "5.8.2": "2021-08-25T18:09:23.128Z",
    "5.9.0-alpha.0": "2021-08-31T07:53:27.729Z",
    "5.9.0": "2021-08-31T10:37:32.808Z",
    "5.9.1-alpha.1": "2021-09-12T06:19:17.870Z",
    "5.9.1": "2021-09-12T11:36:12.106Z",
    "5.10.0-alpha.2": "2021-09-13T09:15:50.876Z",
    "5.10.0-alpha.3": "2021-09-16T11:42:29.135Z",
    "5.10.0-alpha.4": "2021-09-16T19:30:39.397Z",
    "5.10.0-alpha.5": "2021-09-16T20:42:16.901Z",
    "5.10.0-alpha.6": "2021-09-17T05:50:06.129Z",
    "5.10.0": "2021-09-17T07:23:41.763Z",
    "5.10.1": "2021-09-17T17:58:29.776Z",
    "5.11.0-alpha.0": "2021-09-28T14:08:21.508Z",
    "5.11.0": "2021-09-28T15:01:22.058Z",
    "5.11.1": "2021-09-29T06:40:41.644Z",
    "5.12.0-alpha.0": "2021-10-05T10:34:41.914Z",
    "5.12.0": "2021-10-05T10:58:29.150Z",
    "5.12.1": "2021-10-06T05:24:18.859Z",
    "5.12.2": "2021-10-06T14:40:47.572Z",
    "5.12.3": "2021-10-08T16:14:31.918Z",
    "5.12.4": "2021-10-31T08:36:16.504Z",
    "5.12.5": "2021-11-02T06:51:35.040Z",
    "5.12.6": "2021-11-04T13:28:26.427Z",
    "5.13.0": "2021-11-17T07:50:56.722Z",
    "5.13.1": "2021-11-24T19:28:49.088Z",
    "5.13.2": "2021-12-07T09:26:11.092Z",
    "5.13.3": "2021-12-11T08:47:32.602Z",
    "5.13.4": "2021-12-18T11:02:22.725Z",
    "5.14.0-alpha.0": "2021-12-29T11:27:22.875Z",
    "5.14.0": "2021-12-29T11:57:13.313Z",
    "5.15.0": "2022-01-07T13:57:58.345Z",
    "5.15.1": "2022-01-07T15:44:55.169Z",
    "5.15.2": "2022-01-11T10:20:55.361Z",
    "5.15.3": "2022-01-20T12:18:50.933Z",
    "5.16.0": "2022-01-20T16:42:59.414Z",
    "5.17.0-alpha.0": "2022-01-26T18:04:47.846Z",
    "5.17.0": "2022-01-26T20:43:23.645Z",
    "5.18.0-alpha.0": "2022-01-30T20:39:37.160Z",
    "5.18.0": "2022-01-31T06:38:11.716Z",
    "5.18.1": "2022-02-03T10:16:26.439Z",
    "5.18.2": "2022-02-03T14:07:24.128Z",
    "5.18.3": "2022-02-04T15:34:59.168Z",
    "5.18.4": "2022-02-07T07:15:01.442Z",
    "5.18.5": "2022-02-15T07:55:07.685Z",
    "5.19.0": "2022-03-12T06:10:15.650Z",
    "5.19.1": "2022-03-13T10:20:44.747Z",
    "5.19.2": "2022-03-14T09:42:52.579Z",
    "5.19.3": "2022-03-24T07:04:23.101Z",
    "5.19.4": "2022-04-01T08:21:20.470Z",
    "5.19.5": "2022-04-01T16:18:57.610Z",
    "5.19.6": "2022-04-08T14:02:12.640Z",
    "5.19.7": "2022-04-09T06:00:05.514Z",
    "5.20.0": "2022-05-02T11:51:21.822Z",
    "5.21.0": "2022-05-17T06:10:22.079Z",
    "5.21.1": "2022-05-20T13:51:50.715Z",
    "6.0.0-alpha.0": "2022-05-20T14:36:21.972Z",
    "5.21.2-alpha.0": "2022-05-20T18:36:20.382Z",
    "6.0.0": "2022-05-21T12:12:53.386Z",
    "5.21.2": "2022-05-21T18:55:10.858Z",
    "6.1.0-alpha.0": "2022-05-28T11:50:10.230Z",
    "6.1.0": "2022-05-31T17:44:07.584Z",
    "6.1.1": "2022-06-02T06:49:06.957Z",
    "6.1.2": "2022-06-09T09:47:33.663Z",
    "6.1.3-alpha.0": "2022-06-15T13:15:56.083Z",
    "6.1.3-alpha.1": "2022-06-15T23:14:48.834Z",
    "6.1.3": "2022-06-28T10:25:04.728Z",
    "6.2.0-alpha.0": "2022-06-28T18:29:52.252Z",
    "6.2.0-alpha.1": "2022-06-29T13:28:03.022Z",
    "6.2.0": "2022-06-30T15:13:18.008Z",
    "6.2.1": "2022-07-01T07:32:46.570Z",
    "6.2.2": "2022-07-01T09:06:49.848Z",
    "6.2.3": "2022-07-07T13:44:02.813Z",
    "6.2.4-alpha.0": "2022-07-13T07:16:17.589Z",
    "6.3.0": "2022-07-17T05:21:07.316Z",
    "6.4.0-alpha.0": "2022-07-18T10:58:03.282Z",
    "6.4.0": "2022-07-19T15:06:26.627Z",
    "6.4.1": "2022-07-23T10:56:05.512Z",
    "6.4.2": "2022-07-26T07:54:46.878Z",
    "6.5.0": "2022-07-29T18:39:53.773Z",
    "6.6.0": "2022-08-08T04:40:31.030Z",
    "6.6.1-alpha.0": "2022-08-10T07:19:26.714Z",
    "6.6.1-alpha.1": "2022-08-10T10:25:26.167Z",
    "6.6.1-alpha.2": "2022-08-10T13:04:30.252Z",
    "6.6.1-alpha.9": "2022-08-10T15:54:05.371Z",
    "6.6.1": "2022-08-10T16:05:21.406Z",
    "6.7.0": "2022-08-18T16:56:26.039Z",
    "6.8.0": "2022-08-21T10:17:17.663Z",
    "6.8.1": "2022-08-26T10:47:41.421Z",
    "6.8.2": "2022-09-12T13:06:15.969Z",
    "6.9.0": "2022-09-15T13:25:47.562Z",
    "6.9.1": "2022-09-18T09:10:37.891Z",
    "6.10.0": "2022-09-19T09:13:45.253Z",
    "6.10.1": "2022-09-20T09:09:28.996Z",
    "6.11.0": "2022-09-30T01:50:12.868Z",
    "6.11.1": "2022-09-30T03:28:33.097Z",
    "6.12.0": "2022-09-30T11:57:40.551Z",
    "6.13.0": "2022-10-28T01:52:23.319Z",
    "6.13.1": "2022-10-28T05:48:03.379Z",
    "6.13.2": "2022-10-31T08:18:13.217Z",
    "6.13.3": "2022-10-31T13:00:25.866Z",
    "6.14.0": "2022-11-03T13:59:59.612Z",
    "6.14.1": "2022-11-07T10:39:19.548Z",
    "6.14.2": "2022-11-11T08:42:49.893Z",
    "6.14.3": "2022-11-17T07:38:10.988Z",
    "6.15.0": "2022-11-25T17:34:59.573Z",
    "6.15.1": "2022-11-30T13:49:29.783Z",
    "6.16.0": "2022-12-02T13:38:37.903Z",
    "6.17.0": "2022-12-05T15:49:34.921Z",
    "6.18.0": "2022-12-21T09:33:37.664Z",
    "6.18.1": "2022-12-29T13:06:04.931Z",
    "6.19.0": "2023-01-17T14:50:43.368Z",
    "6.19.1": "2023-01-17T21:34:04.366Z",
    "6.19.2": "2023-01-17T22:13:56.583Z",
    "6.20.0": "2023-02-01T15:35:20.510Z",
    "6.20.1": "2023-02-01T18:16:15.496Z",
    "6.21.0": "2023-02-03T10:25:05.261Z",
    "6.22.0": "2023-02-05T14:06:35.521Z",
    "6.23.0": "2023-02-11T14:42:47.992Z",
    "6.23.1": "2023-02-12T16:48:29.880Z",
    "6.24.0": "2023-02-13T16:08:01.541Z",
    "6.25.0": "2023-02-14T18:43:33.004Z",
    "6.26.0": "2023-02-15T07:38:21.953Z",
    "6.26.1": "2023-02-15T09:20:29.313Z",
    "6.26.2": "2023-02-16T08:19:17.922Z",
    "6.26.3": "2023-02-16T11:43:49.752Z",
    "6.27.0": "2023-02-26T07:50:14.230Z",
    "6.28.0": "2023-03-03T20:27:07.865Z",
    "6.29.0": "2023-03-11T11:31:07.597Z",
    "6.29.1": "2023-03-13T10:41:08.762Z",
    "6.29.2": "2023-03-13T12:32:46.002Z",
    "6.29.3": "2023-03-14T06:22:46.913Z",
    "6.30.0": "2023-03-16T15:30:35.703Z",
    "6.30.1": "2023-03-18T05:44:21.525Z",
    "6.30.2": "2023-03-18T18:47:14.800Z",
    "6.31.0": "2023-03-24T15:40:10.124Z",
    "6.31.1": "2023-03-24T16:51:43.072Z",
    "7.0.0-alpha.1": "2023-04-14T12:10:15.412Z",
    "7.0.0-alpha.2": "2023-05-07T07:10:10.459Z",
    "7.0.1-alpha.0": "2023-06-09T07:22:58.572Z",
    "7.0.1-alpha.1": "2023-07-08T12:38:57.645Z",
    "7.0.1-alpha.2": "2023-07-09T06:43:36.751Z",
    "7.0.1-alpha.3": "2023-07-11T13:18:45.569Z",
    "7.0.1-alpha.4": "2023-07-12T12:26:19.830Z",
    "7.0.1-alpha.5": "2023-07-14T05:03:19.697Z",
    "7.0.1-alpha.6": "2023-07-14T09:30:46.103Z",
    "6.31.2": "2023-07-16T08:14:01.099Z",
    "7.0.1-alpha.7": "2023-07-19T11:28:50.185Z",
    "7.0.1-alpha.8": "2023-07-21T21:34:41.555Z",
    "6.31.3": "2023-08-08T09:00:54.186Z",
    "7.0.1-alpha.9": "2023-08-10T08:11:26.685Z",
    "7.0.0": "2023-08-10T10:11:35.849Z",
    "7.0.1": "2023-08-21T08:14:51.931Z",
    "7.0.2": "2023-08-28T15:50:02.920Z",
    "7.1.1": "2023-08-28T16:05:44.303Z",
    "7.2.0": "2023-08-29T10:12:17.818Z",
    "7.3.0": "2023-09-01T05:24:15.758Z",
    "7.3.1": "2023-09-01T07:54:47.314Z",
    "7.3.2": "2023-09-01T09:50:32.358Z",
    "7.3.3": "2023-09-09T10:10:12.441Z",
    "7.3.4": "2023-09-10T14:22:10.093Z",
    "7.3.5": "2023-09-10T20:10:29.065Z",
    "7.3.6": "2023-09-13T06:43:47.828Z",
    "7.3.7": "2023-09-28T07:11:56.633Z",
    "7.3.8": "2023-10-13T17:12:23.371Z",
    "7.3.9": "2023-11-07T10:44:47.679Z",
    "8.0.0": "2023-11-07T16:19:10.033Z",
    "8.1.0": "2023-12-01T13:08:18.527Z",
    "8.1.1": "2023-12-04T10:54:58.608Z",
    "8.1.2": "2023-12-04T15:21:28.656Z",
    "8.1.3": "2023-12-06T13:36:07.389Z",
    "8.2.0": "2023-12-20T14:25:00.195Z",
    "8.2.1": "2023-12-20T17:52:46.016Z",
    "8.2.3": "2023-12-22T07:40:12.032Z",
    "8.2.4": "2023-12-28T11:19:39.897Z",
    "8.3.0": "2023-12-30T09:17:15.702Z",
    "8.3.1": "2024-01-01T12:05:18.428Z",
    "8.3.2": "2024-01-02T13:15:01.437Z",
    "8.4.0": "2024-02-19T09:51:23.527Z",
    "8.4.1": "2024-02-20T08:57:25.001Z",
    "8.5.0": "2024-03-01T14:53:22.445Z"
  },
  "homepage": "https://streetsidesoftware.github.io/cspell/",
  "keywords": [
    "spell",
    "checker",
    "code",
    "camel",
    "case",
    "spelling",
    "spell checker",
    "spelling checker",
    "lint"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/streetsidesoftware/cspell.git"
  },
  "author": {
    "name": "Jason Dent"
  },
  "bugs": {
    "url": "https://github.com/streetsidesoftware/cspell/issues"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "users": {
    "flumpus-dev": true
  }
}