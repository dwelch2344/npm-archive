{
  "_id": "prettier-plugin-tailwindcss",
  "_rev": "127-531dbc4eb5cdc749895ab0903515954a",
  "name": "prettier-plugin-tailwindcss",
  "dist-tags": {
    "latest": "0.5.11",
    "beta": "0.2.0-beta.3",
    "insiders": "0.0.0-insiders.81c446e"
  },
  "versions": {
    "0.1.0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.0",
      "description": "A [Prettier](https://prettier.io/) plugin for Tailwind CSS that automatically sorts classes based on Tailwind's internal class sorting algorithm.",
      "main": "dist/index.js",
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm test && npm run build && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "gitHead": "288f92c2eedee2ba0ca85bce641637339ebf621a",
      "_id": "prettier-plugin-tailwindcss@0.1.0",
      "_nodeVersion": "17.3.0",
      "_npmVersion": "8.3.0",
      "dist": {
        "integrity": "sha512-mCS5sM5GtGBV/5afsxUI9dj7GSRad6OnW7PoXVMIyYFvtce2IHj0zR3nWBdXFR2I7HYg5dd0dcWZYnSn24sxfA==",
        "shasum": "6af2f55e4a4ff07299a29955d2f5621e2aba64f6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.0.tgz",
        "fileCount": 12,
        "unpackedSize": 662596,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6gk2CRA9TVsSAnZWagAAjbwP/iKT8BQVeS+844tmua+x\nOqjuoI5bmINbO60/WwT6WDDg8Inm+xs71hYkTaVOAiqOmM8tjFDdiZ+pRl6+\ndopSQyOjxnnhx2gVCKVxixHQMTdMmZNOU3XLsZwcL09U75cFehPGMY9cXODZ\nSbyhHE6ScZ4UX96DLEPOFYWiRTNm5NqnL+/cXnl681IQ3/UTRtNFJlZgSs1H\nyqr8U/QElNiUAq/Hd6qgiNO5PiBZ0pxUMTEQr1JBZhjM3vnWMd6iRllJTLF8\nBkbzs1ng/RghbSATANwB8pWKCai+Q7uEqhIBfBDeIdv0XOR1EA3390TFddxX\nmnlfaW8oW269/EmZUdA545lJqnJlaVqz1t4IPBBrPzWsCQuf5vOXo0SWrmtw\nCxP5dtwQ6dozUMWX/30bqh9SJNlKJy0UxzCadEHMvhZdSIXj6lPotAzoRpIA\ndiy+PNR4h6JTtdG/NqMgq0K9Bexdo80FCgw+6hg1X83gL/q3xULZTThAgkZw\nT+qPhg6LJXNToYCH4RMEF4D0xXbzENXLbaygOxsaIA7nsydlNIUh/p7Ddr4c\ntaUJTXXwaO1bTV99bGR5sNBHQkkMzngVmRhUaNVUgPnaheIgvDhdAhengyK3\n8apLM8VmybQ7PMrpPzHtQWtsyCcmlGETetnxKwwjgez/nbn1xXenLVh9X9by\ng9YQ\r\n=p51G\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC3rCvmTBvCTj7QDf1SI371yPtYjmhoAH6IIIdt59FNpQIhAL2Pm5Q+8FtYJoZWF4ljtzIYrrEqY/Ajja5445Lv2eLQ"
          }
        ]
      },
      "_npmUser": {
        "name": "reinink",
        "email": "jonathan@reinink.ca"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.0_1642727733755_0.6570803583770513"
      },
      "_hasShrinkwrap": false
    },
    "0.1.1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm test && npm run build && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "gitHead": "4a4d036554601bb853b792f89c78700006edbfd2",
      "_id": "prettier-plugin-tailwindcss@0.1.1",
      "_nodeVersion": "17.3.0",
      "_npmVersion": "8.3.0",
      "dist": {
        "integrity": "sha512-mjwWE0fswYMiYw4KlcINXw5It6nXfJl3N0+eVFtuvjw+cJjFmErE7hXYJZnUSFSWXJacpCjx1KVkxSOolu4zBw==",
        "shasum": "1318ada36c61f6f5e858232c831ec19cb1ea6f76",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.1.tgz",
        "fileCount": 12,
        "unpackedSize": 663765,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh6hoQCRA9TVsSAnZWagAASv8QAJwdAbAdA1F77dbkjEO7\nZqL+qXgb6Kkr6NhdZSVV1QfV6u2r6eZ+gw7Aqa3we4shNgoaTuv3L8oKJZXN\naiolQlqB16ZHpkvkK9pUoJWD3IHbYxeQ9a+CLxHsGL+IZvKyU1BKzKUfrqnI\nTgKUTXZqMV9bQD13eLdOCf0CB6QynVivrJcCzJNsEOPNFAfSQfQWTHD5dPJW\nGhWetsts14ZWSVYUFBNElrlCuXly36vFmamCqpmTDrzIpCj9stUZH++CPDJc\nWqNQTq2Iales6J+/fddd0ZCRqqVspZTGlJ/C0RuS4tvXDMjvQhatDwXhkQIA\ntmt/V7LmNhaa1h3MzuUI9exqVTuai1ndR1/qLiC68zJ2YmoQGHtcMC7LDnK+\nB3SUBgZkbUvWqbaoRelJoAW5EagEnESBlXNL7trL5yDl1EEiabQ7UfP1wzsg\nLGfWiWetvKjw1xiZupHPnGItBLs/34d3YXObtLSb5OeJLXjno7OvWminX9oE\n+fNg4ZzfzbjxEn/MeeoMaBHk+rAo5KwERaBnKJVBfr9A51h9uyltBFN6rQ7p\niCdZfJ4S6iKyf1PTxqUKDbhj0XGoM2gqzipPKbrpEpvfvVJqaDUQFkdhe5ZZ\n+fZ5Gn8Q/wUA0fIR6775Ku/eOKZO0YtkgVWIHeEHEWBzBpV3OiVsPBUdy6F8\nnDDw\r\n=P8/k\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD5ojDWLywHd0RrjWguXnDOaITy89EAm3tPYHmKLYeRrQIgN1zSDLOe2Bymc8kXLDLj0HrmEZiKDu83h78yhMPdU0E="
          }
        ]
      },
      "_npmUser": {
        "name": "reinink",
        "email": "jonathan@reinink.ca"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.1_1642732048079_0.5894741127415566"
      },
      "_hasShrinkwrap": false
    },
    "0.1.2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm test && npm run build && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "gitHead": "fbb565a53e25bae81f511726e6812e6e670b4734",
      "_id": "prettier-plugin-tailwindcss@0.1.2",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-dvfbiCzrqB7XPGhNp8t9I44WT+7jPbeX01Pj3NCqgvZRUVHwgaVbUuHYX6s4NbDVPI/jTcw2HuXcUMFSYniaCQ==",
        "shasum": "cf877c9f0f90e3a6f6bdf0ea5856be406070a28f",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.2.tgz",
        "fileCount": 12,
        "unpackedSize": 664025,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh7xJtCRA9TVsSAnZWagAAynEP/0g9gQy+1wuxFYp5SeTp\nqJVffJUpS+oQa4hhNuYAD4jScH1GncA/KAG5JPiAvL9MjTOPHDQDjc+J/AOB\nCwjzuBs51o+lqLCvUszRdXEIxqO866HBIRwA64w/lbs5J9+gRxd8MvQtoMMy\nHCD0MSY9niqPC6+4smeywqwuSfhJ/7q5PCEOuBRm+87KPNL8D7qgmoWAPiWB\njbtPVC0Hu4gIkbvJGntRrHIoaTMJ4sOaOGKhIrdSKenT6/kqFbPS2XYAoC3g\nO5qoOdYyfGO0an/KqilkWpS/iCN5GzSMspIOeNWxNYjvhPaqkk89XOyKHYYK\nIE3F/pTzjIh4CDQmZjJDnNPFgE3x1ep07dgtgbR8/SOtPQ4duTUs/ZEzZ3L0\nX+lHa99p3LkbqMTqN9gBV4Va9igLp0SAm14/zhxc57hALmI8BC6wG16gpMF+\npSGs9wog15eQFbrYHb/Upwly5wISOPs2c7mpsE7icMFlWAxuSwuM0xQGWKjK\nkOMjpauGn1nvtZrZtiAif/EKeAdiaj1qnxTLGVqXWpEiSa1yv7mmQRWk/eQL\nAKT2yqQORYL8lmPGyBbONvaBANc6NrP6w7DM5t4AedKulILg6eCJoP4HwnQi\nRZ6aAZ6XK6v2raBo+CwBtd1hlsaP9OPXKsz8viVl0Oy+bWIimeMwaSFfA7pZ\nWyQH\r\n=SvCN\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGNDL4HOLfhypgv1Hm+4NYka8hoH8rKfsHvCRRqv1JNjAiBK7s+LOBWSnAhmUHw+/fPB1WdKUQhtgQS/l7BWHtYcow=="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.2_1643057773387_0.9551903331974101"
      },
      "_hasShrinkwrap": false
    },
    "0.1.3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm test && npm run build && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "gitHead": "6d4e9dbf8d0f856e12bd53557cd3203379c32710",
      "_id": "prettier-plugin-tailwindcss@0.1.3",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-k+X4HfaLHXwGlu3JdW6XahQIk3lvzBtx2F2jSMFmOU6Mqll9dhZdGz1MJFAHxzvLxEWvMWZQA4MmCIhsDid5Kg==",
        "shasum": "904d31084fef0a6070e185707b599aa3c153a53c",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.3.tgz",
        "fileCount": 12,
        "unpackedSize": 664089,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh7x3NCRA9TVsSAnZWagAAHl4P/2QNOxz7nV0NMhOhyToC\npsDddEhFBjKcQXJB2FSPlutxGtESZjS2rY0FcqsGARiU9zJO8ZIrBAgGJvsw\n6q/RJQDiITg2FHGfmih/E/VQwHoeoUsag259RFM/kYRmWz2+mDABo8hbKoLy\njJEYTLOEZNk3CtywXw4tOO2VK2Z2HzEd5fTxhC3Ngs5j+du+ndOp8K8OCCkC\nzaamCPEm+TjRyr0AXzN5SCuzbYnE+tGV5NfKota2bjTkw/44Vnw0ucAXOLIB\nqUaY5XAyFJuLZcG3pCV4aANUzfO6xsUEdr6ZSuE/upqo2nKZxKxcYAZdkq1U\nkp//+pZbOYeUPOyZv6b2yVBEeYudNgOhGPSSXMhBuNiWFZ+C6QCEMMtqD//J\nQrdVma84G3MmcIwQdvX4xf6+4Kt5j2x+mCOGgLqJKxYurkf8ZjhZj9BAFhE5\nXTEYx2RvDHxbSorMUqXnuBa9fDBKaKgOW42xd3314MhWjkmiZW+cqgVY19pp\nIYNvKSzZxl95UhfoMH0a6SMDGOm09RWUx/hQjvMTeZXK0nvgofVNWqHHQSD4\nh30z/DS/i3mzwXmU539yCfLO6yQN0C6uh/cw0gaIK0veZoD6XFFTqs3G2Z+P\n4ZQLYKuq7+l+w0+5mD7j0I0xxE2uDUhv9FlNGL9Z/ZM4ALdQvFE5QyzDBcRa\n9NVY\r\n=Sr9Z\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCrw5ujoHFjzJJdiHy0yRej1JujHxioeE5ZEVRqEMT1SwIgbJZGJ62wVsGLlfDmczvQnVP+V3qtbEk2o3nAmHDzqdQ="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.3_1643060685484_0.04477851442959757"
      },
      "_hasShrinkwrap": false
    },
    "0.1.4": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.4",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm test && npm run build && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "gitHead": "f052983acd37d573e052fb50b92ddab5a11bfa0f",
      "_id": "prettier-plugin-tailwindcss@0.1.4",
      "_nodeVersion": "14.18.1",
      "_npmVersion": "7.24.2",
      "dist": {
        "integrity": "sha512-kt3YFWqxcG9+bilBI0hPF7RjQZNtgBRvjJZGw6B2MNAjPqlfcYIiZnNaIEnq4XimKLTzZYxz6jQnUXmSQ/5njg==",
        "shasum": "b09e826a57a0f69b0662eededd659b3d5a5551e7",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.4.tgz",
        "fileCount": 12,
        "unpackedSize": 664133,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh7/n0CRA9TVsSAnZWagAAIkMP/3CWS3QNOzf4lA7Z0ukb\ne1JH9RqAlMaI0XJ1LCzYBAY5nS+KNWpatGf95Vnpipa/nmZfQ4Hu3wVSrh/U\nc7N6PR7tC5PIDXJ0IuQMyo2fc4Dxu9c34QqG1ThPTdyrCwsk3BK/4oIDOA5c\nrBR9VFpCr/nkqT85wBoR96iOG/NcJQBp8B9u+GOMPtt9G35uRn5wRRPOLzb+\n+R78rf/SuUE5/ucgmTGbhdL5elQ0Lg3V+hAkpAfirOejWYc3xYNQ7fshAN1b\n6ubUQIF6fuecF2nFm1vllxIdcftC9uXd0ZnU7Os3cppfgjis/C7c7svUlhPF\n9XTT/A8bfDV15woZ2j5PXJ5aRDjqxwWgnAYHFGHA00z4yuPyBk1h2Gf3yECM\nEf+RpuxB7milRF+1yzGxKygJc3ilftFld2fqrM0GrwjpnEVsH4SZKQEf7K5M\nKWMDWfD91LxhxAuI9E6BcU4YsoCJq03Bxi/w7OpCI2f9/wehQOKqneAdFdRd\nrMST98Q1wf0j5w0wjTTPfLZaUhK233Yzuk76LoUBtSc5hwfwclkptNNKcb6g\nW8/TXXss74PuiSw1tAt37k/DJvTK3S2IAUMMGkJaf1avsue9mEldv4TrrsZs\njQmIuF+z+zV6tWncpNBJhj4Hp0UMI8ZmuAf2Ve05LZsy7y9l2FyOmNhDQyCN\nakXZ\r\n=V+i9\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCvwcd0TggysAtn7buOS5y9h4YjRfj0+LcjQLMKywSltwIhAOqE/WiNJJ3UPk00sdd1zorE2oEJHRA2uNamlgk1z9II"
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.4_1643117044456_0.3843146040347927"
      },
      "_hasShrinkwrap": false
    },
    "0.1.5": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.5",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "a3dbd89560a8eee1cfec073ab6369cc393cd72a2",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.5",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-e+jTxwiHL4I3Ot8OjV1LAiiaAx0Zgy71xTL7xNmJtNmhpja7GKzFSAoulqBDS1D57B7lbZDCvDEKIWIQSBUmBQ==",
        "shasum": "1709b4cea44873cbfefe9862f9f0827a51fe8cc3",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.5.tgz",
        "fileCount": 12,
        "unpackedSize": 664653,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh/Vt7CRA9TVsSAnZWagAA+UAQAKLM+etToztHEFQVhiHG\n4Bkab3o11HUZpBNabIZbjMxjm+2/XFm1So2ZlPVNGrq8KYPu7tQl7NoO05zP\nFZ/YLt+5MzbLEa7oFO/MCBkymqhaYrvFEwevJJXIq6JTWuP1UqvF3lzMxCu/\n6Klbh1IcuBqmR2hWqJNQRfOVdiul1N0+eXZ8Rb565RX1dQXePuJhfM8PliS5\nqMrumCGSDeKsFJNjs5LNMOOOlrXt2iWtY06uuXiEVUshrItbOzMcbA9B/6bg\ndfoSzzFJTZuuLqHO85merxh+iBxCJ6q0XH8cCNtWRKs0PEhOc6MdAGyhAkgJ\nKzIAhMWDmmeclA2lrtu2QsBbHEXv0CKTYx/DUi9mDEsuyQ3IPRSUgWoWsF3F\n/+AFCOpi3iO9O69u4EG2mWEDqpHvCJGuvcmyRAITEW+JAljkkH/4O0LGmsAl\nPlYCtS0kWufjEaj4mLKu+xZ18i+WP1Gs3xHGimYARKAGk80gICaZF4rwA0o7\n4+Z83Sq2vU+Kn/k196YGZMiWD2akEY8DfBZlJxvTAeRINxZlyyLUz5dDpuGG\n2Gm6KaA9ZDrjn0/fBT+lu6eXwkdInYiV8P7POhw+Ulq7WkACjusdPtcQefrx\n6GOgn+eeiRUwTFcOIvpzvzDn/P9OS6V9qMLX4FJKet2rJIynuW+WUp0mOETi\nr1EW\r\n=aQ7t\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICmEXxfOS3/FRtrrHOeieM4XhSJfs0osC29Vsf4lYbHJAiEA8xIfyY6umNSZnJLtOij/lksZoXF9sD7lxg8eQ3Zojyc="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.5_1643993979415_0.011687420403378557"
      },
      "_hasShrinkwrap": false
    },
    "0.1.6": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.6",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "6666aea6ca40768f1ac8145c3461586c44b98bad",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.6",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-7OcFAv6d41KV61cDdn+mZycddAXQhv/B2yfA7ooK/yXPnBJf51Lx7iODOOQwOoMzSJQ/MJNqlK3BxqT9gDKVLA==",
        "shasum": "a086682c16ba51629d068a3eb153662be5987e52",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.6.tgz",
        "fileCount": 12,
        "unpackedSize": 664656,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiAlOhCRA9TVsSAnZWagAAVpEP/1u1uzEi3o1MJRWpnCbB\nw79qgd+q1t6LOZBGZrujo5wXPhTLHyCNUrWpYyHn7RarYojLa2YAgoi8gaHI\nX3jO1tmaoJ0Vl9XjblRwd8HtQ2jOGYTfSgs95pQPuEVgK3fTLmp0eSH8wsPa\nn7CdO/87wSP7cNgMm3QpvlOns8WR9+wahqxwDfp0m9Si2IoHbp9poXsuH+rT\nq9WsCwJa0m3f0TRwaaidud908gAgr43DlARxcObazgyB0JCdGGsoZV8Khr0G\nP7qMw7vO2KwF69BIwlQYQXdK66rpaCVwl/2KCf+67G5R2VxdSnB0vNQKjLbZ\nA1Si5JEGJhUhCJgLZLVJWrOBQn+460LSU8nAn59FI4MJO8vfI+Xs3u38BuYq\n24k0M7f3ny2W7jgmQGH02O+/LDqO6b3M1tkIRrONfSyw7i991pOLZ8hLIHAT\nmBU2SEUqOl2Cq2A1CW6bRwtW5qOcyz28WBS5LKUQZ8RaZW65ZKK6Ahf13N44\n1wFdNh1I6wF6GhlSS/bAQwREX63OJqiLF4TPh+3dlhpi7VfifTF6XISbVbhx\nezWuNGO1dfvtNIoEYEtzvcXw5jF4a1zCc2S0vPqacQtAFF6lZTlWawa/K49N\nnN5ZyEfnO0ScBpC6gVimPKPUpC1S3C8WuWctyy8NJLbnoFzG0uhThcPg0xLV\nCOBP\r\n=UKg+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGwXe0k5JK+OAfdnYzN3GtdrQJN7By706o2Hz5MyWy83AiEAueOsbN8Wnsyj/D7xaHKztzF8E/Pn0bSGxZqY2gUgUTk="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.6_1644319649422_0.5146800107554881"
      },
      "_hasShrinkwrap": false
    },
    "0.1.7": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.7",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.15"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "2f489114a8499002b7ab9fb9756a112f242046ce",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.7",
      "_nodeVersion": "15.14.0",
      "_npmVersion": "7.7.6",
      "dist": {
        "integrity": "sha512-tmBr45hCLuit2Cz9Pwow0/Jl1bGivYGsfcF29O+3sKcE++ybjz9dfie565S3ZsvAeV8uYer9SRMBWDsHPly2Lg==",
        "shasum": "f51de7b7bbabaa0724d3aff7a62957e5aa873482",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.7.tgz",
        "fileCount": 13,
        "unpackedSize": 669031,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJiA5v0CRA9TVsSAnZWagAAa/4QAJda1QtYiSsziwJ4Pyeb\njwIYBIMC7O3f3fw/erv4ps42uxLtN6l8TJ/+jXgc3jqE1jNMXNx+TU80NiWM\nOZ6uPckdHkGoYbZNLQoAvvqhi1+/O+Cx6X2vQLuaqBQCRHidK4uxhii33q5w\npUPxJ9EKZ6iff/54thwrpyWPX4IMvoJotlCsb44+FbC8KN6B/5V6Xa4BP/dp\nfaCrrxNjmqmQSVIVFllW1ML/cNUxC1yk8hQ4bv3QHDoshc6f04f0qIQsqo82\n+ji6CyLbTOfFIJC03VLe7u1f8yeCBZFnAxSYK2MiBM9wattQiHee3GXQR48p\n5+Zyw/GPYqxX6441rbXjBSXfWC1NalrQOyWd8w/q/T8HiY7EfSvu3P7+sw9E\nzfarZSu/jBHxixmdXolzHI5vUnCZ7h4Nhc729CLm+6OtEGEIlSLnanzKZBKV\n14DCKNgycLqSoCGtMt5y76I5ysTiFgEg56QaSHsroGGQwUhb/hp+ilP0RtwP\nKf9yhak2pWUuRT0IC5Or9t5a14SR/rrlLwxt+Aa1ziWhZcN8AIjNNSu8o6bl\n4zd5bS8gw87Ld6hCjvqhE4MVHrC+NASsyvMTx8bzbgZ/fvtj/Jm7Zn1xeTa3\nAVzCw5mVAZ73vx3tb9+T0REYicfvEeCq41Wn/XnjkzwTONz+o2ReuWaueNdJ\nPQNc\r\n=I0s+\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFeqiZuJH+6AgbeoyYDjR4lT68J4hcFvnK/REX1SbkXwAiEA6qy2/SvnQ0OETXAffBe7CtlVjzkJN0y2T1Vu94eshD8="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.7_1644403699947_0.1431286793679909"
      },
      "_hasShrinkwrap": false
    },
    "0.1.8": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.8",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"tests/test.js\" --write --print-width 80 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "eccf570935afb349907c7739c2018a339a9c1435",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.8",
      "_nodeVersion": "17.4.0",
      "_npmVersion": "8.3.1",
      "dist": {
        "integrity": "sha512-hwarSBCswAXa+kqYtaAkFr3Vop9o04WOyZs0qo3NyvW8L7f1rif61wRyq0+ArmVThOuRBcJF5hjGXYk86cwemg==",
        "shasum": "ba0f606ed91959ede670303d905b99106e9e6293",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.8.tgz",
        "fileCount": 14,
        "unpackedSize": 671178,
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiF8TLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpXkg//ZZ7ZryhaLC7LC0j9qTaYshQPy7jgaO7cNsu5xtCEPlzPWIOt\r\nLSwzFb3vNK09tsTsBNifgtqQOaBIDbmDVEfeyRhi0mVHoO7O+7jSulEyE4n5\r\nOll/AFQnGYSzGEybWSYLSvK0QXbLAB/YfgUUVS3AGzZQZrbrXkghNqSTk0LZ\r\nVByLD/YqXJ/Qia2vMy+01mLfHXdazOOvHX3qFQf21br2UPfgQmABHlYolUKv\r\nUplou/BuVN86/YFKY+OYF5INE9DV1cATzCdOEwB3M6Xh/2uSwegV83FWxFF7\r\n3k0jbrszlomDOBLn1z3tqdnu1/HGeS2A7DJlgzkBEkUriNmjOslpTYQxUP1u\r\njIB8G01l2wuBOCW/Vzo59p7k5dP+96q7WYOxMUN707OnzBQCeRIyFtGJTmIA\r\n26d8T7YMgDPIxcd7Z+iLe3UdTmsVCklaGauTy49D1r9TEvNZfrG7RYIzd/Vl\r\nWjlv4zGqi8nWk9Xehs4kWds7tjFav0393BOf6/BTCNQiNcMTcf1GP/Ci9iEJ\r\nFhtTJL8t8I3NXsAgGk3z2nBhLY1oEKIdA8Hb8M3MRHGObyDJ3goWaz6KfRTq\r\n/HT/7Ra9raXWsCyT5HKiUqhOOsodidh6TDBksOQKDPWI31MYAnf6Fvv4cKql\r\nayUEdLqza5DPT6Mim9Vg0XKGjGj+zQlHYBU=\r\n=tjD4\r\n-----END PGP SIGNATURE-----\r\n",
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGm3Syr9gtQBrZO8kGU0skPyQEJHuqpl1E+TG3TOSAvzAiAQfCbOopUtc1YHG4689EYx+ncsD4ymsBnri2u+SG1VSA=="
          }
        ]
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.8_1645724875279_0.5469196903587799"
      },
      "_hasShrinkwrap": false
    },
    "0.1.9": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.9",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "e2fec96928c3ded26f9a3f80190bba1d1cc32792",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.9",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-xqoDNnFfYhz3PxaptKO5lXwVU/MAfT6PTZPxiKKutKTgaLeQBjxts6j7BLbkI0FezDrGDUZQjDZpmnF9dv2hdg==",
        "shasum": "5c24bdf56c548a3f8806226db0c69c0791a7c94e",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.9.tgz",
        "fileCount": 15,
        "unpackedSize": 678242,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGdaOtyRmmubu8OLw9LQ1nMjVytgZpvUsjCWAGfBSL+pAiEAuPfDr25CfFSHhVyXF9nRPcPJG0UfggyLd9Qk68mWxQ0="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiXwy3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmouSg//SnSIRfz1I2B1x7RyLsIMrpAnapYSRX5TZAVRG1e5CZk2JqIR\r\nDtosIICC5iask7smIO26FYe5UAZjEf0xqKDeP2nBYk7BK6ek0kJ6qgj3DIDz\r\nhE3Y5g+7vR6e6ViZsZVgYJr2EhZHBniJBid5HTk9erE73Ann6H+9SbJa8VRU\r\nfkNlA6TnjLdUoMRXciV/9fBjkMkKoLOy2qJ08obE9FbkqbB2LWcjiRW/Asgo\r\nduoyNHOsL8qTch52hI1Ehd0ICqhC7McL/CpKyAHLBUrk5XJje4pupg3AjnP3\r\nOrPSHWI5Iqp3qs9e7ahP/xY4PnIIGLL4X7dnSxneiEQCmZwvSkgPpmMmahgz\r\nsQ00SKMbE+B8YQn5pEVzqFaArT8NAQNd9+FH/ztCso4Av1k1nTYFxaFun08P\r\n5rbLtUEKI33vT44bLdXDGJZ5ZvuEzwl++IX0sE0PUS6ZGE9LhmMW+i+LdIf4\r\n3/K0QEHo4wP9aEroO+k0wrpbvxtZ7Flg4lgzJpBiVZ7pVKB8MBxlaCU4fYcB\r\netqWz5IQy7aWPhnxK97a50fv6aoycCgE8jYOhQKAFbmOfZiwQjVGIhh8LL2y\r\nnT2qKmp38gx4FBQM7lLFvO1j12KhhWqCZ6hSxtxQDiVDS5JhrwYR56RWtXtQ\r\nmmFKRxs7YTdGiznNBGcD7Zr4GnY34SYZSRg=\r\n=5CuB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.9_1650396342971_0.10871666596731133"
      },
      "_hasShrinkwrap": false
    },
    "0.1.10": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.10",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.6.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "e8c03e21cfaeb723e0ea58d56c747e25aa010dfa",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.10",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-ooDGNuXUjgCXfShliVYQ6+0iXqUFXn+zdNInPe0WZN9qINt9srbLGFGY5jeVL4MXtY20/4S8JaBcd8l6N6NfCQ==",
        "shasum": "437bd0757819c8393fc780e17e50e8a7518e2a6b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.10.tgz",
        "fileCount": 15,
        "unpackedSize": 677811,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD/sRTJfkq7uQT2Mzj0pWCU/wQqLBbpOBJJ9+I0CI8z6AIhAIuZay+duNFNpd6+GCiRKWKtZX44Uw1talbUGzsYQFXK"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiX8IWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoCehAApSD4uNYephVLYog2No6UTjRnmZOsNdF5c3LzOB8jOlju7bxZ\r\nVHNNCCUzrqGlylliAEF4390zqnFIraFsAA5SJRjeoRaDy5ZtSwAgOUQW1ooq\r\naFKYOO6q1xlsALaHlpcPnVkzoN/a01Kh7yvECAdnMaoWk/1HnFiSuqQZucza\r\nj9e0NNGN5PdkIlUk1GRf+Js7dXOZOArDGX0ebXea+AKJE44meAx5xbPJs2HD\r\nYn2pNV1do6ozeSrTjmihTNvxkVlWFcawB5nuhFUGEKTo9iIlQYIAzzI7/hCK\r\nVc4DHhhucB4k9WBL33XJ7yQAYV91VoBDSurZ2/iqaTrHqanvSgeQGPRXM2vI\r\nueDEsDngYeWhpm7gQGBF7Ax9AwIs9VAcDRn0AQ4DrCe6AdxBeMPLg5QODcDU\r\npBI6qJ04xPcx4+LMsORZKkZiUPxuDeSq+nX3gNAAhvoRjk7ajeH6ZY1w7ATj\r\nOuQ0FeDklPCADSoUS54ax/AeR0435/6NKeObhZNs6fvQwIicRBjT3rjyFcnb\r\nkfjcIEN/RPNBYd3xig86rO4ZqCIB4sOo4L5nFAYGJSYoNGGHg9GFXz6H1fce\r\nWPoxEgV4zzgnxFCgQkiCEEcxC/8UL9lmx09PCelY61N8evHYQ++9V8+yKc6l\r\nBy7l7VzLqvAcjUZ8UqG62eSoAL8JPguKBDU=\r\n=P9V5\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.10_1650442774340_0.9975579238264112"
      },
      "_hasShrinkwrap": false
    },
    "0.1.11": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.11",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.7.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "bc08a56556a2769f4e267a8707cc19ad64fb59f8",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.11",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-a28+1jvpIZQdZ/W97wOXb6VqI762MKE/TxMMuibMEHhyYsSxQA8Ek30KObd5kJI2HF1ldtSYprFayXJXi3pz8Q==",
        "shasum": "6112da68d9d022b7f896d35c070464931c99c35f",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.11.tgz",
        "fileCount": 15,
        "unpackedSize": 678149,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC+yxl5UYEkd/3muh3WOZ69IEcmtldslQuz/86hkEzo6AIgXRYuIlweEkbrc4Tr97gvU9iGOaK3cxIPl+euxkgr9HI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJigifsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmr7jw//W2wZ5SbHU4Ov/9ZBhaW3/CEgG17o9oXYc2qn/Mnn3Ms8NWkN\r\nqjX3E7FSotK5NMOT1NXJnfXegH5JCZvI1Wz+YVKF9Mxy9coNqfy/mcEFS1lG\r\nNc8VXhzjvNgc87YsVbdEIFdmZxridVTqMnsfM6lOj/EyGPLjfVvkYdCFmNtt\r\nOSX0W6di3HoNRzOxrisP3KoLMoh2kfdO2ZU3q3CdjuCudtpAEx/gqeSuTT0P\r\nswCTPoDeJtYYSCIjM+1wtN5oYxMEPn9m83sojyWecJ8FnhRfWFOr5CdoUzlc\r\nOySoAbt1yL3mAnOpOsm2P5KBtmBU7axt57qpwhiXVOVCF6BfeDhaUebhbW5U\r\nDnTXFY3O21WnKES2sIvkgXfQI7NKqQ10ymuK3pX03EaqAqeQQ9DWsi1HbTpn\r\ngDWmOHWQ7MTYA2NSjueCa4bQc9aE48eH2BnFqYQ/sMvTsTC6MFktiV7BiCoC\r\nOk9N1XuJAH1Z4F+DupP3Dh8hSEfU+VDJWisjQJ+8L214t0UsR7IAMfUVlm1i\r\nsuncMBR4GWMEHrBF/+r9iJuEPxMUQrRhZMeFmM08XixBAYdn2qHRpHJMguZ4\r\naK9AVv9NozRnKQpswnwrTObhnsDT8rqiA1DWOAcD08ytRF7B0EafpzO0jyO4\r\nRjv/9rZKNHQH6jihM80ZJlBiN6GTt6vwhdQ=\r\n=8Mks\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.11_1652697068143_0.3650519315004921"
      },
      "_hasShrinkwrap": false
    },
    "0.1.12": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.12",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.7.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "11c6cf06df745ed4d50314adfbb06c96d93e5d86",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.12",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-pEZ6tppwknCeq3ObR9g8t61AhWtVRRR3I0EQNeiRrrJ3D42FJGeUDxiFc/LJRYEeAx5JOxagsF0MICwuWOJa+w==",
        "shasum": "d002a0e25d76a06fdccb6f3c6c52dd9f85e3ccd8",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.12.tgz",
        "fileCount": 15,
        "unpackedSize": 678726,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFGTIA4rkN6JXVNlIQwCRYMlFtgmruYrT7JzZhlCoScrAiAyc8C81+LR9qxvjDb8KSjIGd0FxSbmW3K2r8rXHwkqZw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixvO7ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqvTA//c1rRC3okYu3PkO+2CcTlG3J1viuDsg4JAHBSZSVi1GS+VXC6\r\nSVB3sD04/W5S+EAApieOXFYYC9rorr1BVL+EWjx/B48D7JDoafHSpfmf+IaY\r\no+zS6m4GypeqNACy5wg9BfXjD8qGDRjlHaYBZhHZiQ7ixkyG2kExSJNhKkYZ\r\nyv36wW1JaKrcqj4i8QuBgA3ggnBAx2ID5p+VejAsgXFImpgTkGpia0qvIxlW\r\nQ60JBeEaAMsvhRueJOn64RLE9C53jB1KmC31V84Mib8Sq1uYxUiKWPeHFoWt\r\n+T0QSBok4498IxAf2b+QvnWk/0Qw2IhxI4VcBy88ct/Qpox3hB24TQHZwKxH\r\nzu1d+l0G1qN9b2mtp+his66RqcnYQNPgbmujDn6OfMun6yl5KLcGjo0pypBD\r\nlI/k7LRtkXL9f2Qh11O0T6+FgDmcHcX7wYn1Wx/Ejq1+Mzv85+AlD+T75dos\r\nh5ooh1N0Bt07n3SHxZoEL9NX9SEXZ1JRbFADXS+FucJd1BdIcp7S0HzIfa1h\r\nx19MrH+2jYzaXSH8OIYz//RCBMPhOrZAV7WM5BWoMgNsY3jdR2hAiiLjhi2t\r\neZTzoae0n2iz/i8s1HJcF/5O49P4eZczifSA9XO1v9aeZgNBZuLKQI808EjX\r\n1PAalbv8aehiBmp6J8OCH9oj/hjm2/JbkeE=\r\n=tlQb\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.12_1657205690756_0.2603582512688769"
      },
      "_hasShrinkwrap": false
    },
    "0.1.13": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.1.13",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-svelte": "^2.7.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "gitHead": "c782614302b17d8920db065cb8380088d30b1780",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.1.13",
      "_nodeVersion": "16.14.2",
      "_npmVersion": "8.5.0",
      "dist": {
        "integrity": "sha512-/EKQURUrxLu66CMUg4+1LwGdxnz8of7IDvrSLqEtDqhLH61SAlNNUSr90UTvZaemujgl3OH/VHg+fyGltrNixw==",
        "shasum": "ca1071361dc7e2ed5d95a2ee36825ce45f814942",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.1.13.tgz",
        "fileCount": 15,
        "unpackedSize": 679023,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE/LAtxitYlirtOI5H7vR69GLsG8HxIvrVGvumi5mNpMAiEAqgpW/JRnN3ivly8DKbZr4+ap/QEGl0IqXjRElOQZf+w="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJi3sKWACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq+Tg/+KXFH6QvIn1DQFvCHETrZlPrGaX8vxEz8t9sjf9TUQMS8Et0I\r\n5qCFsg12liggww5Zr0IqZFu3hrUNNtoDiLbePzhuS9norb8N3gOkaOJlzhpE\r\n2vZ7j4sLFsGGPPPjLGVCGF/hSmTBJqLKuM+foK8hWUqIhDBKFfpNAbiNfnX8\r\noD8ahG/W5lPfLjLZw2BRjnZFuvPAkVJSirCioBlvdff945Xc+LcOUDJcjo1Y\r\ngLvgTOX9uAjGCO7CrabbWkZGJqpgNsMKri07miOoHkIXvOkzP1LhkXonmkph\r\nmhcXwhzvbWophsViU3XKA8C+dZEMOIx0tTw89pypjz7QoKCjo6c0X1PiPAgc\r\nLOj3B4fKLOfus9jAly+UzT9pSFIaqrujJ9KQeGMf3BY88URTi66T2yWO1hic\r\nDL04+vtV/2v1oR0jdh6i/l2yTt5ACzo64VB98g2ynug/7p7nmtuALGqe8lCf\r\nEqEFbosKCk1lni4MZn/wbv1N0DIgl5sETgl24wzC4L4wai5xRVHB/1gtC2Bs\r\nlmPUmCsGzvnhmM1vJf/C/hHkfAy763XMRZu2tkiEJZ/kBPVNGp/KvZdu+cqe\r\nBy/zvNP5HP7UO4d+bE2lpPobdaeeMsyokS5J1EudUiwz9zczf1RZ3Vokh8Zg\r\n5gwR4bY1H8kT5x/7BP55zmaUqbvTbKA4Lk0=\r\n=QAV7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.1.13_1658765974065_0.7565055813829056"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-beta.1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.0-beta.1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.4.1",
        "prettier-plugin-organize-imports": "^3.1.0",
        "prettier-plugin-svelte": "^2.7.0",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nTo make this plugin work we had to use private Prettier APIs that can only be used by a single plugin at once. This means this plugin is incompatible with other Prettier plugins that are using the same APIs.\n\nThe most popular example we know of is [prettier-plugin-svelte](https://github.com/sveltejs/prettier-plugin-svelte), which can't be installed at the same time as the Tailwind CSS plugin.\n\nTo work around this, we've bundled `prettier-plugin-svelte` directly into `prettier-plugin-tailwindcss`, so if you'd like to use this plugin with Svelte, just uninstall `prettier-plugin-svelte` and everything should work as expected.\n\nIf you discover any other incompatibilities, please share them in [this issue](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/31) and hopefully we can figure out a way to make it work.\n",
      "readmeFilename": "README.md",
      "gitHead": "5787d2bcb2f1cad81292550225279485e435f7ce",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.0-beta.1",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-u5tM3lF+fvJcXJL54UIIKu8onzCz3AqEnP57oIH61QHmbxHgsj7UdDO/OZ/bfbq53KRvOA6hBRtemwOInGBi+g==",
        "shasum": "89798ea9b3e894575c6e0b053593ea81eeff446e",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.0-beta.1.tgz",
        "fileCount": 18,
        "unpackedSize": 680351,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHHJdWHJB7nw3ZIOJtNBPSplEVtS+IFTGNhAkbYT602qAiEAqAsq5+Tvp6ACM7l64YrCj84VXDbwIaIh2lvWsk8L0sg="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjbrDwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmoXfg//SqkT7hQtuE3Mo7Sr9zMj6lWyyyJ8My5SKf4bPjSs6RmgyJpR\r\nQLTi4c1ML3evKWeqTz6OfV3G6y7uYR/HerI/RQFYJPvXOLDk2apCm9exEZfM\r\nB83IM3WkX7mfA+NnOZj/3DSJi4dIrjRbt1cNzDxmN2nxFvd1RY4qLl+eI5hw\r\njBJyVjHcEeT/hlPkc8N4M2xUwdgzkO50Q5JZz4pz2A8mtZsYxj8Q+5tXtlF+\r\nzrK2xZZTsefcpDOIc2Xr2hSrqBfC069+YlrjKD8XUXyPfR7KjLKlXo5A46kR\r\n6glFgzvKpPMmuDUIeywAcZo4s0guVDcCcBBpGOZXb4ubHT3dy4SGGPdQ5hNT\r\nKDfDPaz1ybqU54o0de8Oj/02jmCF3G4n2zJx4vIDIOI5nTAWtZoQ2yJQYkjK\r\nKKcsNbzxaYhvO5K9At1w+12P5XOOWivfPZtmob3LEaEsetdUOP7puZF2iqHp\r\nItASu2xcTFIhN6MCR1osEYcNzAIdKE/Y3Ip1T0kpQiZ7qio/G/RwtG11YihG\r\nb+pF1LVhBWCk3F+KdqSSXEqJa0jCO6yEBejZ0zHUoRXQukuAW5zKSDg2F9Lf\r\n2Lz+cxZu9IYlYfdxbY/4TuxdEWdM3zR3iJeeLmIorK18Lp/eOBu2OwmAAW9W\r\nE/hSA0l4AQrEUQr3Zg1FSm8m93cFB6HC34w=\r\n=+bz0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.0-beta.1_1668198640517_0.29401265383893893"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-beta.2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.0-beta.2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shufo/prettier-plugin-blade": "^1.8.0",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.4.1",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.1.0",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.7.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nTo make this plugin work we had to use private Prettier APIs that can only be used by a single plugin at once. This means this plugin is incompatible with other Prettier plugins that are using the same APIs.\n\nThe most popular example we know of is [prettier-plugin-svelte](https://github.com/sveltejs/prettier-plugin-svelte), which can't be installed at the same time as the Tailwind CSS plugin.\n\nTo work around this, we've bundled `prettier-plugin-svelte` directly into `prettier-plugin-tailwindcss`, so if you'd like to use this plugin with Svelte, just uninstall `prettier-plugin-svelte` and everything should work as expected.\n\nIf you discover any other incompatibilities, please share them in [this issue](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/31) and hopefully we can figure out a way to make it work.\n",
      "readmeFilename": "README.md",
      "gitHead": "47a2cab38d573ed8f8c38561ff9c0f31099c756e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.0-beta.2",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-8RTVv48cq1L3EQDRJCqfDPZU0cV81YbuKdMOX0SjxIlHAHu50t4vFiLn54VYztO5FWrGGBUkkpq/lojZpWUrxQ==",
        "shasum": "3a595fb0c7d6f7d57cca66db8cce60fc2aa5e60a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.0-beta.2.tgz",
        "fileCount": 28,
        "unpackedSize": 702507,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGUrzkloc7RShJDxnIKUdr2zIPG2f4tjj0I1SJ4fK+t7AiEAogB5PdnqetzLCsOmLtNxEGFEo4RnZqZJhiftBEB0iOI="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjdo+QACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpFsg/9HMBkX0UJrNnt/7gL+Uy6ZqGwb1Nj0uXInq5qyBGD7ypgZSgz\r\n13ydExGMsA4U/xHqI1V0MSrEmfj/jGZTi8OEm5rH3XJtsWUpSh4Z+Y/Oev5s\r\nMr1RsjfZFvzPvbzOIikHJ+0XGvGDaWVwpsdiqsRCbOh4JwVZ/yfmg6nfNNW1\r\n4rCDXumUhkmP4ccfHvpa6qCYL7BPDfJ+ABeIpA/qiseOKJNyQdtxN2213DR2\r\nPOGtXgQtuTpX1bIApsicVysqZ50wUyvxv66qsoXxVucOHyd4zEFBbHCxkKbw\r\n3QQWwhyZrIfLoWHpOM/zLP2nfxS4AMcLG+dFGya5rvOYdlY52r+CYORm4nSF\r\nOvJHx31oPX98D0pW68lZjUfjMT71WH1deRXEi2hVJI2n/s9IG+qdu2tsRuez\r\nxcpja+NW70u+tSlGHjWIObjpGdCi7b2iWpEspoZfwSRLJEWv/0+5kHY00PQH\r\nN+IIEZSHIK0jCtnkvND/3aS2YR7wHIqkFw9SSOT5kcBTcXdjKBO84Mn8wuR+\r\nwmIrMvMc4oJelgRobDOFL18Xf3Y56XFeEFX8MTVUsfiyjWQzrCUO/a/eitvY\r\n1C+NXVBuK3PBN3bWwlxFLQdq8t7LyBgefwWvr0Pu8TgAiYd4CxWRuoWkOUm2\r\nAp/V4aMhSMRr+RKNJF6gvUpIoNe1ccgJKkA=\r\n=JXrB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.0-beta.2_1668714384567_0.046859827204795534"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0-beta.3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.0-beta.3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^0.4.0",
        "@shufo/prettier-plugin-blade": "^1.8.0",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.4.1",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.1.0",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.7.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nTo make this plugin work we had to use private Prettier APIs that can only be used by a single plugin at once. This means this plugin is incompatible with other Prettier plugins that are using the same APIs.\n\nThe most popular example we know of is [prettier-plugin-svelte](https://github.com/sveltejs/prettier-plugin-svelte), which can't be installed at the same time as the Tailwind CSS plugin.\n\nTo work around this, we've bundled `prettier-plugin-svelte` directly into `prettier-plugin-tailwindcss`, so if you'd like to use this plugin with Svelte, just uninstall `prettier-plugin-svelte` and everything should work as expected.\n\nIf you discover any other incompatibilities, please share them in [this issue](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/31) and hopefully we can figure out a way to make it work.\n",
      "readmeFilename": "README.md",
      "gitHead": "6a1a9d21173824681b376e7233bcaefc67f81152",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.0-beta.3",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-aq8gjelLGg/XGSHgxcJJhw4uaxvy7Ikdd6fcYE4X4I6wkDSiaPmnuSik+lkW4R9xbuTcekdZAkxXh7TeOl+eXg==",
        "shasum": "bed6eb278475a15389c77dc78693a1e86aea2178",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.0-beta.3.tgz",
        "fileCount": 29,
        "unpackedSize": 704417,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6odx/L387DFrEkoyOD/DYGMxt8GpGKyYway0mPjdp1AIgGLikHvwkoyBX4VYXjkZRTQ0xpLe+WZKKmCrpMgFrFbk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjfURsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqPKg//fryKjFKYsxcr0yPzHBDN4g0LNMZht1Lbrx64yC+f7zqfYVnP\r\nigFtU5g/m3VZouSv88vG4qM7fwBne3oTplKQDzq3+cTR+g12qezAgPR0eh9L\r\nmfbqI9UyzJv29VQJvKYglScFgY/dvTijR3nSRMVB10zgqvXTIs1AjCmKkKu8\r\nnCbaD0TpE6+sNQPsTGbr+xeP7fnh6CZA84M2W1AAZ1olyXhEw3mbqj/BBzOk\r\nvgwBc9WGQkaz7CLlaLaJuNr64rHdfNgMclO0ATOqI+0/d912vWw7XSvpty43\r\nUYEdwjLVXnVS092D6fbpwC8yIEXYdnxsrAhz75330+KvGpclrKTBu/KnO61B\r\nZUl0v9JyjDrZFeLpoacLGDLRfOZ/+agtlDkeSRSi1BA5JhgPddIUnHB01Azu\r\nEvBDrdQuTrx+8H+o/Dp/BYWKjd0qj5pvw2VisvRO1aVGMXO7wylgKcojH5cd\r\nmHGN954cW2aV/bt8CJx/qkTTwey8Q/PaCCD49VIgcmQneNaem3vrlNOA5s3L\r\ndccCu+LRawIeuE5HDC+JwZj0+ogSLzJxUFAcoUCmcAWFXY95D6RrePNekFty\r\ngpKX3brwbq91bXza0mrP9nwGLZt4y9g1NWoEe5evszRAygR6gdfmQevctsMr\r\ndwim3UtOTmWuVJ4yZuxEaIMLDSUIdSf3JMk=\r\n=yj5S\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.0-beta.3_1669153900145_0.6574896491213054"
      },
      "_hasShrinkwrap": false
    },
    "0.2.0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.0",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^0.4.0",
        "@shufo/prettier-plugin-blade": "^1.8.0",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.4.1",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.1.0",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.7.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "6d39ddd419e81ef6d8aa6095c9d750a29336c6c9",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.0",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-Ruqig/mdWCSpqdq9WK44nrmqM4BFWTzBPhPGwC5NK3coV9eZntEQPB84MGZbjAg0XQU02jVRHXNRPREBzxvM+A==",
        "shasum": "5d6823ef8356103fd0aa19d1e08cb49534100464",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.0.tgz",
        "fileCount": 29,
        "unpackedSize": 704708,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC7v4xmBe+8BRoddN/xz2d7kPHSNM8FLVvN3saDLF7kDQIhANLep0fZ0z90BW9LIPi4ZadHS8Rqavn0hSp9ij5hMHg6"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjgSnrACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpoMg//bOPem2jMZYROwRNuZjAKU36eNS/GCCav6h+WExvUGuvhKggf\r\nZAC7JXbQcHLYNCOuamCkkGj97V8fIX6cZov0AKiwprg320tODQvdvlBICtZD\r\nYm3kmPNidrJSkvEmot4yjICmEq5A6Dmt2MTWC0TPorm+TOqb1kb3wNpcK2Nf\r\neC9WYRT3IfthzdtmMJC2zyH6Wdjrg9XBYBdkKlRxlA2G73aRbOobX+2vwGU1\r\n+wJ+Ydp0Hbp6AEUtqo1ZtMqrVzfHp+hM+qItc2zg3QUT/XLbFaueGggV+/s3\r\nffjhbCq9wkL60NldUOcylGxSEZqMEBIkKNy/27biEyyjkgwYqtxIz7/WitzU\r\nA/gvVgd45zTvoPwMybfdk2prkm5TgzBV6M1H6+m+wJBHJCtINGe3jwmEERDG\r\nO7cDWUsjuA1QEpai+ekTmK1CVXf9WOWWYiKZMLvLTdZUH6q2l9yaVmMYVL/B\r\nwhdQWWM91tiX7AGkkEV4qHa3K62IgaFh2+NeNWxo9m2RxKcxpUnP62m+2toR\r\nLHKy2ZawG9weNWtUfMMK7riIKbV5Mmw7HfACAJ+benMrKslDQcKdlo+hFwUB\r\nL5l++opGJWs0OhxQ9gLLem6t8BkWB+rZ567StUVXPQb7NVCt2UhPzZbzMUKa\r\neV3HFefnWpvTAqoNohShpIlcM6M4iEhkePw=\r\n=k2tU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.0_1669409258941_0.1428182217223164"
      },
      "_hasShrinkwrap": false
    },
    "0.2.1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.0-rc.2",
        "@shufo/prettier-plugin-blade": "^1.8.0",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.3.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.4.1",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.1.0",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.7.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.46.4",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "prettier": ">=2.2.0"
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "6d6bf64bf0a3baeb4b69c0b76f4bf9cbf9a0e91e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.1",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-aIO8IguumORyRsmT+E7JfJ3A9FEoyhqZR7Au7TBOege3VZkgMvHJMkufeYp4zjnDK2iq4ktkvGMNOQR9T8lisQ==",
        "shasum": "989b35afd86c550cb671da69891aba4f4a051159",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.1.tgz",
        "fileCount": 29,
        "unpackedSize": 704807,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIG3qfmH5B2ohEJwF5JAfU+7HKa97CqiuPRjkXO+WZduIAiEAtAQwOSY5gAssTdP5ZIP8R8oEabvjGnWb36puWcAlD/Y="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjklu4ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqF/A/9EmXv1gNbL5CYAXVxw/M9QJ2uDlSUeXU2VVn4Za2M2UGuAaPb\r\n+wdRBOXVjPcYyR/dmsghoos8tA71c0jbkUSqh9nAkQC4DIWI/OKMlpKvo98D\r\nRoHzQ7F6stl7jdTo4wCwHmsA5tlsO0pBcdVIdjMh3bBge4INOBKBphk/Gw0r\r\nq0n4Asxm3JRrdpwQnhO7+7YuT+8BCGsi/fr9cyYBRLSP4PoT57eaekpOsjcr\r\nfJ7k39KKPbMDQEUNQShD5VbuskDeThwYYyiFh0HjotdueQ/ayN+YVgfAceuh\r\nAtPoJgp0yypDwH5w5tzUbxBfV4i4MPyE+XCHXCd7cecPEW8UL/JFUkXviUC8\r\nZ+QeYzqhIHM2EhjbJ99nHQJMMTAEBePcxckIEZsxtx1b+nbKsgJfkRNp0SUs\r\noFltwI1o7LjovSZaFr60g6y6zgt3zLSYefFxBWC+Fts/KQmlasMkuhx6JUBF\r\n7GPf9Yhz1aM97snmWhLkL3QKblXgGv9Aun7G1BDzEbbStnfekQ1TYr7xEfDp\r\nEcvDorQz2duPIJ5jg1BPMUffPYC6Zk+6FE1nZ1d2+ryMMTyV/SpAWnNEKf4w\r\n96I4GaSKk1hoB7bECpaswcm3WHfpz7yFflnot3m1qDionFbnjWrVX+mNXftB\r\nTvfbTO5jAL4uBob6uMs6oCVL027bHCW5Bpg=\r\n=sVBU\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.1_1670536120764_0.9620415935687536"
      },
      "_hasShrinkwrap": false
    },
    "0.2.2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "0a5e7d3373eaf70eb7002b4b3fb259d79fe11993",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.2",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-5RjUbWRe305pUpc48MosoIp6uxZvZxrM6GyOgsbGLTce+ehePKNm7ziW2dLG2air9aXbGuXlHVSQQw4Lbosq3w==",
        "shasum": "61f4437936c79c8cc2915f31b4bd512605177239",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.2.tgz",
        "fileCount": 29,
        "unpackedSize": 706421,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIDoCWSozFdnAdm+Nety1m0S8mkFhoOePb0BN+wob3LZfAiEA3ZWEHCf0Ys6YM+uBRXb/k7hbtVx997G+8PnCLWWvhYc="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj0EI6ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmro3Q//TcIP4njfT1ivM8MPFBcqO79ZiLBlxcn0iQB1NYRx6ts6LzJS\r\n0Fv0ZYRX6YGNIEhIhanuB+IDRE4mbPMaLoHFDx+KTYAVlYK/owiI38X76zDt\r\ns1Sa8/4eZWOSzlcvTDMGpT5NDD6XHU+CxSizYwIj0YccD3BOysoqYeKGs7Xx\r\nKJVJMpU7JnM5+tFi0w70aI3ErVW3P2jTY5v/MNGu7aHtF2ZgaezdavmdmqyH\r\nJAc/G47+5OUL3jsumZs8OxxKynYbyWEIVJ2VH6FygK/XVZpbs97qrK04VfGT\r\ntD0UHTlw2uIzthqfqO2/UIHLLImphO+2bR5fUdk8e3T44rbz2raQBGx/7nnt\r\nEmmqpLVQFHkbvWMlvFlXULysP1+A3pj7tkfmzmDB/ldRJm3grazxRx5fktGh\r\nMyIRZu0S1COSYJO8PuW499SWO6GZf0/WyKKXm3NiM8Fgzfw1xi1oyngUVbG3\r\nXLHK6GDsHA5oGONtGpJphyQsRc4kZDpLeAzTONhXP3cY9IjrhcZwcbRGrHz3\r\n4lYyPf14lh31EYfp/71gt1Bg60/6pWcHkmPbUPS24xdGS4j2m0+LKwcGGXSK\r\nEhVYiCV3nfu7KlDKCu3P2Bv5cMty+CLePJMgcTCbIfZ62ue2qc9XvG7rRwJk\r\ncUNER02N3xcBevtAHMFt4kcINo0JQi75Ew0=\r\n=aG6P\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.2_1674592826343_0.9453910304034205"
      },
      "_hasShrinkwrap": false
    },
    "0.2.3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "fef2c9cb28e897f5e3957f289a642fc4b7867313",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.3",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-s2N5Dh7Ao5KTV1mao5ZBnn8EKtUcDPJEkGViZIjI0Ij9TTI5zgTz4IHOxW33jOdjHKa8CSjM88scelUiC5TNRQ==",
        "shasum": "b68a1de10056fc84055426af132c2697bea0955c",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.3.tgz",
        "fileCount": 30,
        "unpackedSize": 718140,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICzH1b6AvFDZh5BKkYZpNN0Z1VtMxw0ggjP9HlHmXiiUAiBhCaXbmt09VPgW/gTpAD0o3ECQWtHCmkrm8xzmEEAg7Q=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJj7OXIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpUfQ/9HrBYQsnzNFVEpTA4liGjRzqdttjTL42NfUCiTwdN14mvC99f\r\nahLXoJi/hJQ3rJM6NdZZKb6N7Dm/WeH8PT5YXbn0zwv1RpSUqmW7J9Nreki3\r\njbP2wG9YNUd1BJzaLlZoFgzSo+cuC9hw812ZK5dX+ZIJqu8osDE5wNp1jfi5\r\ni8qWUF4WGcElY6BndMrSzyZZAtHrHhULx6Z6mP5GZ4EV+moyOlSI1LnEdeNS\r\noO8HOuqDIbfqv2RZXdOE6bblP5GJrE9Dt5oXWJUCD9XvMmQ52+8K2dZfHG1s\r\ngeAlQRfB8soXh8zTlxAw8ktMkk9k/67egMzky+yEp69Cu1rliudND9FgUrUU\r\nlCFhqn4o6uLPSRY/NaAhsU0c0e+ngSQYz3nDubQOpj1TcgfvbhSKLjCTmts2\r\niJJx4dcuFaBdBLeQvrY+hXy/0hjO+QjfGTRnZz19No4lZCPPMVVU4pl5N2BB\r\n22UG50V3VygU+OmqG3UGgjXgk3PhWAjgpRrP/EkRpr8Du/3BvBLKwFH9XpTw\r\n4dw7+Dw+6jquMJ2IjFsCy/nV3oRXgb/12gW9appilb40yCpOGDuFZ+MeUP6s\r\nXqYMCB+uVtco7F82hVApFM3KYSy5nypoA83UhzXVtHaCR/MOgEhlKJXeKIwL\r\n6wOcZMVwLZnK8t8YuGrAMPIksVk3nZ6L38c=\r\n=2mVY\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.3_1676469704313_0.4252965700579068"
      },
      "_hasShrinkwrap": false
    },
    "0.2.4": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.4",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "11cf7a99ad5d1c0c603c2e994c2fab30983890ad",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.4",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-wMyugRI2yD8gqmMpZSS8kTA0gGeKozX/R+w8iWE+yiCZL09zY0SvfiHfHabNhjGhzxlQ2S2VuTxPE3T72vppCQ==",
        "shasum": "ed0ca759bc948eb2bc48b419c6e57eb2adabdb0a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.4.tgz",
        "fileCount": 30,
        "unpackedSize": 718189,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDqMKwSsmV0Ee8RVfkD6GxUIZpiDqs3t+hKUqPiVYqIhwIgcuVksk3r6Qh7x3jjnaLS2kcvaNd9lKSkYJXGb0stWAA="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkALZcACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmptBw//fgzCj2JtoZNTFK934wvxgr1+KQxfynClJl4nNJ+hTxc9D8Jm\r\nlYLcGkcKu9l05bb9bxxtQD+a2hU0kC0dKerLXonfdu/iI9R9U3/1bdoKGroA\r\nHpZpJeivyhglqOFQIW1k2bwHNgRxmCtUt40oIqumMfh6cQ5k+RcborZ7UHmT\r\nE1Cnh+hf8E/2sw+QFtRnFuyrk0vWTQw4E4+8ZyQf/HGw4ryVwkt2w8sd23xJ\r\nCjvc8XzvXtWDd8h74eNjRAdP18nErwkNNmkzCQJZ0JJBwHXFKYGMYO79/wWY\r\nI3cGqam+99eXebRVhA+WfqcDhs54cPY5oMcr7QbeZgEXSf1M0sRQFijy3BiB\r\nEqzv7LKWZznesE6ir8IpRrrdOiOwoQCGPxnuLUdg2KYaMoRzZsG2UV8q6udg\r\ntvqKkQvv5CqJWkwnAx6K+i3XsTHdBu7Qxw73PP8vbXfhYFQaeZVt9Gi/QnoL\r\nJZOq0UclWoHefyZXdI0qjhsx/6e4kU+ekSCcKnf8h4VXQ/bh6tVobcsbPxn+\r\nTRTZftrZgocNGricKZi8Dc4acf3Yusc4WzOTBbnDIvEmWaxMIw8gh+EoDw1M\r\n3WpO6jBO86BhCJeDA3KnHIRSm8VMfk3p4uTWMYlqXfutVAHIfR8qRgx/eWND\r\nBGUpIumhoM6E5kCOo1yjxtqrMD66/heRziE=\r\n=VW32\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.4_1677768284388_0.9855674025888701"
      },
      "_hasShrinkwrap": false
    },
    "0.2.5": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.5",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "fa6efdb9009a0f1eceb3668ea79aacf1082a5ec2",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.5",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-vZ/iKieyCx0WTxHbkf5E1rBlv/ybFk8WTT4hL5W2jlVxum2Zbe0jMUpuQdDrpa4z2vnPiJ5KIWCqL/kd16fKYg==",
        "shasum": "fb9f07f22d0658fdedbf4d83254bf907656f7500",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.5.tgz",
        "fileCount": 30,
        "unpackedSize": 718319,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICS1YvggSP/aaTnKx7rWxYdyivmjGt2l2EETik60BbR7AiATmGlG8H7GR0uz2aEuzq8urkBEaiFvLdBiItjMjTIxOQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkFIU3ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpbDg//aJjLH3FEEyVpFsXvgyV/qNqdqfwoOuZU3PDHIKPYCSA+zuni\r\nJBs/QJk4WOeaqnTOJ+0CFlna3xWA/hdRk01SZSgRLa8+WFiApVnQF0Z2zGWv\r\nzBUJlAyae6dmt3UmrUbpwcgCDKIWTwWCZyWyUakisUSWS05xvJYuE9igaOH5\r\nGAYis8AB8nIesmSZAxnnoowM+69AcoTByMarGNsgl8wE0LMYZWiNv0VYCIWV\r\nxJhTSUds2JZxUGTE33UGsvf9sqUVtNRLEciVI1aoEHDsk1zRryKUA98elN2c\r\nWpfzhNUTN/Gvid5J4Vymx+PSYAg6Lf7a582YFRoX6992sh2eSIAwiC0vo2h5\r\n3WbrQzejKfA4BHoKtj6aMzJjvf+nZGCcW9kez0jop7IxMEOW3FMZbNQeODyO\r\njpchPHVEZTnHIAZDv4Sz2eXoj/ILGKISL9dsQ8WRojMlsCj7wY8wAtRzl3XV\r\n8gXG/IRGVlNavBiEzeVp0AaubHUb71AZ8NMkEnyGiEwTHZxL66j0cfUYVPfH\r\nK0/KNz2VWKN/aTiDlnsYsBGk0BMa/UsYPX+JbNoFWU3a8lLH61FvKpKO/zee\r\nwmi2m5y1w+8ax+trgTACu7ctJD2gSjbZTMHwX2MlBvCIL51PyeHExGooohrF\r\nQ33Op0Ha1IpkhkKn5ymeHQlsYFGBDbUuUTA=\r\n=vVJN\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.5_1679066423432_0.23829670393893987"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.6533049": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.6533049",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@tailwindcss/line-clamp": "^0.3.0",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-fresh": "^3.3.0",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.0.23"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "65330493feb7ef1465ef22d6e0c79e18b851798c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.6533049",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-uS97MB0qZq4doo4Cx2ybhkKb5F60crNe7H+y1K8s0zj20u/NHHxDPfswPLP/TFV7DZ0CGiz2JpH9kZumDd2iow==",
        "shasum": "c015e00642a22e7324f9d6e106e671529fbd295d",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.6533049.tgz",
        "fileCount": 30,
        "unpackedSize": 718222,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCS02AKD+PxKTy42h9hzsp+9cVbwP6A6Fyyys4ewXbwHwIgNB699G83QqODlniHO3dyGaZ5LYrhjLuY66L0YhDzZlU="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkGygeACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqLPg//eeFmMMpmeTqNXx7IjqwjVy4BXkzMevFP8pCVaUqLPxWNmohj\r\nKZCvMzdpbIxfSAOAsKs+Jga8fW+Viz06d9vlhddJlyj6xRBBezi5OqE9Ldlh\r\nWGf1gsad1Q5HYf+Qz97j9fmoJ4/ZgGNK61XRTj7Cz89Ycb/6IrfVfRPOl8pJ\r\n9n4Nczk9H6O7L5DFk2uFjSLO6pz4Z42GUVS1Cs/Y1D8PXSV+Pm1gQc8iHkPL\r\niJ2ivt0T31qQtTDtL610oa9SM7zozJ+T7Hm/LZ9dikbBD0HDf++kw6qXHAt4\r\nlx7B2OBg8/xkn7VJFwT+prQi+wxEcSav1hnZybbUPcfm0pAdTZBARs+g9/pX\r\nd/DpYnHj/ENdxcf1nClzX7pcGPnY6iX00K4DQaEaWMjvxfJdoAdQiIZKN43/\r\nA7RgJpRqTJAaSogRY0X9uXGQPSuWf2sGXULkvlf+J69rQO2FphfGpntEN75i\r\nyUw7X7ROtKUHIsZ26TYvJMUVylYQbYmy0xg0huHfAfJWc86nvFtFejhn1jKa\r\nMb8aNgiCgSJXLirEq5nMuKZzHpj00DiQ/lpRlLASncwljdLxUiABWKZbOG6S\r\nl9+9sWHzxEALtoqf1qz61GygKQ/j46FS2m9l4LRNkD/no61IF/afWH83zBtf\r\njjKB+7LiL04x/DJI+/D0tpW++3nvwe/h+b0=\r\n=+w2a\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.6533049_1679501341984_0.1624607483296956"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.dfadcf7": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.dfadcf7",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-from": "^4.0.0",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "dfadcf73e7b05eb2220dba8564a965d9ab908625",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.dfadcf7",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-PYFxbbtInpQIHFuEN2ipyxe27NAuXUMciF8PKnJGHTiSGAVVIKU9VVSMqK8dGkU5RTKkjyYvM92HxY5BmHy8Tg==",
        "shasum": "41c3f745f87f5e82d1a7c0018b99ae403b44621b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.dfadcf7.tgz",
        "fileCount": 31,
        "unpackedSize": 2504149,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCw7PVKjJgL1m1+hwRUEvat0mZAnN+C/k6dc/CvPwM+RQIgZZ2SWMjs8W3p6++4I8Kypxr0+3I3KUJ7YzhSQKPYRnE="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJCpoACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmqlPg/+OKMBmnguk9ea8WVRC2HT7UdTHbT2bi9rGGgxaf7jIEwvH/PR\r\n0xG3atdu3ZcjKGsWDCsP6o/xs7u44Lnxw25bV5aC4JOGVdXzadN3PlqLV2vl\r\nRaR8EXLBgFKs6S/zs2+M2XrmI9RIY193DqP0mUzucZ1CbAL9N8oOQdJ/GaxG\r\naIN+XgCU2oej4dWYLgZBM5vNZGR9lQiOTMiZOlSPr7QqtPsgbyGDplqzWUqe\r\nVjQdQRZ4qCerDWAEgCYUpIpUq5rgLO4Ouwv/gzwpl0x5lnD9s1L/nAo0Ft9v\r\nyKbuwW9G9j0d/Bp8EMDlnW9ZN2I62qPSQw845F0X48Ih9xg7otjs40JztHUx\r\nEqAR00EQH1tZeZTyaVSac1J/R/w1P32L8+WHa6fTvLzzoRKazxe9tSbW8z1t\r\n/lAa2hzbYnpGKtJpLweh64Gqu9EaNUuuwMDyCeO2FpnVL47BHRxidnGoq1+8\r\nvs+sCXRF1ix1jYhraHFg9+5y1OEgO/27+OsQNpakqnRiTejHHgJWRt2eBP4r\r\na5pu4YBOqydgVv9KL2P+vrUNkck9UAHkRAcGwXKwm6xe3PX7jcMOBA+5nqwN\r\n2haa8Kc5lhGWtO2hjdvuXFquxhF2XC6Douo4T1Wz2wdZiW10SDFSwn9uuHlY\r\nXtqfpabeNlk0TLZJqvbLEfkT4maEU5RVELs=\r\n=JumB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.dfadcf7_1680091752234_0.19948311494843063"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.7878ea1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.7878ea1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "7878ea10ce39df8abfe7fd2b3f0524bca5f41dab",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.7878ea1",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-jR0utQXB2o1fp5gVEjYz2THTYm1T6J9G2eyWawbDX6NRZY4IlhCA6VkM0XkZ3aGfRU9NPtWnL0rtlx+8WQno0A==",
        "shasum": "3d0bdc03d3b3107cb5353a1c1f042a5548e14369",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.7878ea1.tgz",
        "fileCount": 30,
        "unpackedSize": 2502770,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBscsmhYf/ULF28GT2P6g67z8A9TuPUF7orLH67zKYo1AiEA2iof8ubSuk7zl4LUAvzYQWj29lM0fmcsjx0oQD9OBLY="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJCsBACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqrrg//f+OoLwpwfkrsF/vxFI7ttcl6t3Eg3Uj+oT6qAtv5QRAfOHEd\r\nCebsaummp1wIRlUzSWgwqK/eXuwKuzWtrBnEDSu36TZp12+FlxQNEGkcze2M\r\nqS2vGNYfgMwFlaF9u/2Mz9D3LdmtuFf4FrKpWr0xVmvsZYff0N4ASq+Y1lpD\r\n5liM7Y0EBOXAwF6JFqKZXf/7I3TQaAwIleCLeqVFlQMMOo2pofQG56ZvC0an\r\n+/galjeBHvnRH6HXbqiITnXW9hNE6itX3Ws4EJgO7PBgiTXG8OGHSMAnke3Z\r\n3jeg58F0MxN8yu+EBt9rlmCJzFLCbqiupA+TOWsXisyNAAbtWUYMMHAnwp8Y\r\n6PxU+SXIjHXxJg9yuM58x1c6E8BpKbVj2lJgsRgMi7eaHpNJJXpXKeLC1/VV\r\nKbBxhMsUNlXwYLj5Nt0k/4HBrXYukjbHwNYUth0FKdt20c6RHAGcO0hP0uXT\r\nFbL9aQbGzTHwSSft1cLQeykHBBueEqlRFWf9LYdhGcDGIM5fT3Hcr1TsS8Wr\r\nhScm9uBNtByjw2DGBiNq9EhAv64bZae44LsZMsL881Z3QFm48ArNxjMrZdDj\r\ni/INtDeAwy07tHcX/3KwjMo740fMC594gpSqqaVAtAk952l865MDYNuttqcq\r\nfFpLVElYDUSCfga6IkWVBaqgpgkUwIBkOgo=\r\n=bza3\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.7878ea1_1680091905723_0.8870465885255641"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.41c7738": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.41c7738",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "41c773803259540a6512ecd2a5ed3df789a6b5b5",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.41c7738",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-wg3xyX+9HeXUu7C8D2oE7mXHIXLrzA5yaW/EZnD/YwjbWk4ruH74qKnztL0zRSzvjn+H8Z04fcILUyTwfBzCeA==",
        "shasum": "94ad22b377535c57e009f0d9fcbd30267a2aa2ef",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.41c7738.tgz",
        "fileCount": 30,
        "unpackedSize": 2502770,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDuv8rZoPWuuE8cwR+5Zwc1eSymw1X4nno4hxOALA6+ZQIgRpxaHh6D4q1qaRu0vocgFtGQ1rvzh7BrGE1noAQY5bs="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDJXACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq5Hw/+KC3PWelPldwRm+SapBOOswNyGoVXKoQPuMy8PvsjVIxB1F0n\r\nHKw+BDSAlhUB4S++vivV/bQSiNgmvODgFJiMTXfaxEylaljGzU4OzUfPhF2O\r\nXTuvvULTgESyiQ3faa7nSpJyAj1vzfWB5LHmiMQebRcuZylKtyZEsPHS/SjA\r\nGkuGLglL/pXLis+pikytE+0j+7UiQYhP9KgitYZ4ztr908PhZuDGk8/TBnH0\r\njubhi6MAnmK06DcA1HgxsaDD9O/rvNeeHUxWuT/fubW3X1EmcK/r6j4rlD8h\r\n+rX1vMaISX7CPmtAGEa06bgBEAgLHvaFlEBOZPCPxvctyBdZ9HKWVyf3ioJR\r\nKxVMsNX9SwwKZxM/mYtFTenMrjV3xSwMbgfW8heVbsz4O+0sDWYAq3D8ZZLL\r\n4f7v2pRFZIyihlJ2PZiHcWFWvhXP5mmAC71s0RkIVL+b5dq9Xlj7Tpc/bj9X\r\n93MpBFKSL9X1mB+COWVlXNvFsyDhyYKm3GnCopUOdguuXMtlgEBa9vdKj4i4\r\n5mpxJmew+yEHrMJUigA5bfINGlv4Ewb/U/pOdGAmqBG6d9i5PgyU7uaoJznD\r\nhSFAKNng0UQqNv/I4sz9wn8U+gw0NQxrHJxy6a0HxPpkssoeKwuwIeNL1VpD\r\n0tiK0sjTh3blk8aHW1Nw+LsMh2D8+KQZlms=\r\n=UXHk\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.41c7738_1680093783147_0.5235577355203989"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.2aabc3c": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.2aabc3c",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "2aabc3cae7d7263ab68d1c9954f4bb92a02b5f68",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.2aabc3c",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-ABrKsQUMLQ5Y77u5ADjmCeyKponDvp8P6EGmb10J5B+WKvEG4kzbPcQHCajfnGHNZzu7RDYZT3l3UxduqDw2Xw==",
        "shasum": "5a56a2a4e99a2f79507eeba66f9eda80faf5045a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.2aabc3c.tgz",
        "fileCount": 30,
        "unpackedSize": 2502884,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCYwXFHEzVWxGd+6Jps2OYzafLLi3zZt7JSZkw9jW80yAIge7+MLlCmc9RFg4ijBZCY5UROeP/oMpFMtuBCgdUdiT8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDQJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpiSQ/8DAxKzTI9avBNnr+HRirPl56yDNHJXK3/HIS4PBehCaIXSgkr\r\nnilTCx1uAt+NLnOoxj0T9wnPlDKRm9doJLo/uM0f/UB7jZnzg8gBCahDDL21\r\ngZ1sA3TAhQaM4aQs86MsyB/VsXXJK6WpI1mYs0rwxvEJfb/8j/OiG9dxIBYy\r\ndk8M5tUeaVfFRnVP1vP0kuDGqVVVcIIH3/b0WItQZnfHv6TqRyG3cCVC6Hm9\r\nU2oE50UTzW1UsSVXLLZSdr+UNMHn9pAH4DH6cMngz9OYTuRopa42S372PUVU\r\nN/Gpx/CI9He/4AgYQMFzn6Hg0M2f2ngYiapFiSvxo4uIDoMvDN8xEZNIWfUD\r\na735btIhlUCy3fz3xm5Hw39rn9DALJA/5GRW26lTQt2sjQWNWc96bT1IInBT\r\nSyGxHknrm+u6tY/o6qMnK7r97TWH9o8UvG1udXQjwQLBihcP9Dy5c3JW6i0r\r\ntmEPQ5yaWl90QQ07SOprarxlng8gDIXU/5TPWCzLyUQvsgulfxzwnWDl/eJt\r\numUCw+mjP9Nc9S7470gN7bHnz3AfNOEW6VB30BQaD4Ym+HlLEF4w/bSUunca\r\n2nk+3nwUMHoHo2TJV8m5OPZ4EO1+mqBqUi8pkptZMTMzkqTtTEa2x4Asg+2A\r\nUengq4pi2sVsvfOSE8VGJIZ3JL95NQ6d8Z0=\r\n=T9+i\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.2aabc3c_1680094217407_0.7015774344656305"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.4815839": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.4815839",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "4815839569982112964655bd171d648960f5572b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.4815839",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-jXtb1BgqrxoUPquUcHq3FDg4SvnIZsawemiwGOCKO69FSVhLO7cdCtt2vEj8ilyh49F47oSarzRyT9eiJxsaOw==",
        "shasum": "e43f93ee806bb4fe400f4dcb4789e1f787852d14",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.4815839.tgz",
        "fileCount": 30,
        "unpackedSize": 2502884,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD6qQtLQ5yx1/5kLc+ZDPAtMOtmSyyYavnsTvx7ZveifQIgXwkTxLfpw+x6g77ULxam1eioaGec4+W7DO6C619evbk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDVjACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrgPw//WGa0Gh8dtPoBT9pBYol/bwSgxO5lhhuVly8PqRH4hzfS947Z\r\nnsQNKK7Eh5V8oAizG0U3BBX3GhllELqfNeeJjKBRwJcPCmRC1NhcrhQ6oLeW\r\nLiEB2hZoMovlUIjjpMu/zA86qIhYIc7cfn8y8oPfdpEChc3PtwlyVn1q4ODK\r\nO8OWe2eIfJLLWcYg041x906a3oe3wUjnHvBqStziP98sgMYz+Gy26wYoilii\r\nE/ky43pndWsg6DaLuNVb/AoHDQO9sXLNkUtZms6sqgu4LIoxspGUZSkMddUV\r\nkCYYAl7FNgqK7FZlXoZOW/HfL3rDnZzqae11sNnizsX48iKBP+MAdeMyMKi9\r\n/YQZx5wOZlO5dDwBWtVzfYMwVePkjesmj8Yzp1tm8EhUPslHe4SfIpESZhQ4\r\njvnzdjkg+zdhQ1en84tf8o0yid66fTPgrsn8cLNaWSwyYnj6ivcnPd6hkoMZ\r\nBfsbWIsz9QicB2UqGQMlMbtnUaFZp2S6Mjn8L6oNH+SFY+00VFm7rFEPk6fz\r\n8ox4ASZpiDfbc8saCGOWtDOqiKKr36n13GncYpD0KUoH4hadLfZC4cOvDVP3\r\nCO2+I8wVfKQrTWYsaCMWcSA1xsImxLEgjPCJADeGMPhEvodTdBgvyhvM8Tkj\r\nvPUk87S0jW+xVzRyYnhRBRDgq5V96Ihpi3g=\r\n=ru0F\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.4815839_1680094562854_0.228777754219331"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.134c19b": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.134c19b",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "134c19b5ca2db3317082826fff3eb83d45f9ca5f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.134c19b",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-A/izQx2t+1MqfbKDm/w17oOj8ohH3xm+GU5s8xvsLriBvOw4m7nji9mdAUrfc96IK9eu1SxSEMTNRLlkT/pWiA==",
        "shasum": "244e20a0fdc5be6618348d3d96435a5817631632",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.134c19b.tgz",
        "fileCount": 30,
        "unpackedSize": 2502884,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDYR+j3jLP9FLcp/5MHQf11je3z/yewcVrhCQd22/FowQIhANEJRz+3RHF2HoCFmO12IEoAqFMguCoLe3+8jnr0gEoB"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDWIACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpxCg//e8e0lAm3IN5o+apHwcPcps2c8qb633lM2C0+IteE1Qb6uvvx\r\nFRlTfyeBbYqMtnjxsG2Sy+FXW8I82N1peSSZJ7XcsNZhVrM6JT84CzuMRd/o\r\nOy1kwN/vZHEMrtxdKYTdKwyZyXCKyKL3q7vLrMJFR7uDKyN9nMyVcRr2IVFs\r\ntofr68J4221SB84LSDBoAuvBPEgOuaoZZDEGNDQ3qH2lBjQCpv2GMWj3BhXf\r\nlBkso4dx2XD2m2DnBKVLJrLBbhZUS3yIBLQgBXIWcUTUdbQZPikEFAwqyHUq\r\nqDVhILYwaDnsm9cBf/TFiKUrW0GN/l+13OJYezc9ArUqb5r00ONr7YWdWfvj\r\nheFoMp1gkWXqjuhn3z7yFbScsTWs6iKEbq7X8p8dXUS1oeY4nMhwWWxGfUWr\r\nea/pveeBFBpK3qkSi+sAmDSqhPLJR+p/i79qILDxZzK3TlGSF9al7EHAAbaa\r\n0FsGon37hpkYsMQ5KbkhqiGhPf55zEZHv1SoKBl3U3Y0dVufH0pJOHhsWdTT\r\n0N+mw8j+xnz0OezG3khUdkGAPPAcrqxf2rdvUlsE/S549eDniT1SPBM6tlWy\r\njCFJEBp0t3VlcR3RJDCHjD9upzcGnABEIdf4Q7wyUnyeoGwJiH+NJ1ny+5/e\r\ndrasd5j0hMqHlcf1hrNL3yzx7sbiFgYQIdg=\r\n=cAdX\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.134c19b_1680094600305_0.650208126010765"
      },
      "_hasShrinkwrap": false
    },
    "0.2.6": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.6",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "70ea7aa55d5ecc1b9202273b4c4deb84c4d8c979",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.6",
      "_nodeVersion": "16.17.0",
      "_npmVersion": "8.15.0",
      "dist": {
        "integrity": "sha512-F+7XCl9RLF/LPrGdUMHWpsT6TM31JraonAUyE6eBmpqymFvDwyl0ETHsKFHP1NG+sEfv8bmKqnTxEbWQbHPlBA==",
        "shasum": "d57e3d960f1a968bf16d2a5846e94f95d6b8add2",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.6.tgz",
        "fileCount": 30,
        "unpackedSize": 2502867,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCQYLx5Hp7l8H4vjJDTa/P3ldSOa2U3+lcL1f8iYlKSxwIgbpi1ymiQ5UPlHIW4QwdJYubBg/wBPu9bHBG3D+g1Wuw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDYMACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqv3RAAlShQzYRTRuwynk7ITc0dNeM0bw9oPiydsy2/MER3cE42lAUz\r\nrKE3khDGAn4MBwQzwhEdlq/q4NNFr9zc6xW4n7nwC4E+9FfEq/fl3q365iO+\r\nJ+gMxIGPCJtdq4T2CHmA8uWbs60FT8zLsUeXL3bGgaJo1viwAMq4ALl21ahW\r\nJW+1+uXRSHXp7OW5+VhGYhSYwftqqRE0HM8YX3sbBF2LMTXkg53b7ZQF/6Pn\r\nQQVpR0QNonWYYFrJTJTVq0QYPpuWaOzkFo1kw10zJ5CBjuvfp/0agBl9+3//\r\nqvMpLtHAofCkGnLCSz3P3W3YXa04ISMcGPIcReqIhOfPhkJDf1Be6p7i0UQT\r\nt5YxH91R3hiyIjaV9Gw/oIqTRoSE07sFkLnnF25eHgBaoXzDwPyjDgyR+Pf3\r\nV75n6aCjQMsTXblidSkBaxWuVrC6B1wO6/BN9PNEc4sQrOWPuIxSsekg7cYn\r\n39kzDM30HRD1gUpb2C9NfdB64C+DzHAq05GfrB/BPzyOa38LoOIGHl2Tni4t\r\nU9M1HmXpUZt5SnKtTXBWp4gRcppK+4RzO5l9TQ8Iy1OqNwcP5UDdhjyyDyf0\r\n/pe1igedV0AqBKCVdlKFdZZ6NdXWQ/x8rPq+0I3S3t62blDZRNLLMK6qvR0x\r\npFD7/ucO9WPMT7ULpqt+/yWKdULrsPQQ00s=\r\n=+lku\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "bradlc",
        "email": "bradlc41@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.6_1680094732414_0.9867277048270415"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.70ea7aa": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.70ea7aa",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "70ea7aa55d5ecc1b9202273b4c4deb84c4d8c979",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.70ea7aa",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-f/x2fb8Cux9E3bYVPffPT3vdAE+FB4X7/9CVUct6P6YFtb1pggfexnnmhTtQqxv4Mo/T3lYFKMm9H3yyfTgWeA==",
        "shasum": "6b89fb68f572b681a5cd0f6f68d9770d8f87f310",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.70ea7aa.tgz",
        "fileCount": 30,
        "unpackedSize": 2502884,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICQyM0sqO1vEVQoE8xpbN86wlUVtHN+TJQ3bNBUVLQanAiBZnkEP4umqLkG6Mk/UUIiVKPc2dS9BMQOZY7k6vYNZiw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJDYpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp6uRAAn2/XJyKqIctYLtwyc8lVxeMzfy/+k1pnGHx5flZu3pRDiHH5\r\nJT34+RpGglci3Y+YnERFjxtXRoEOsJV2moR82LlA4Sf+ucA3Pj0uIzQwg/7Z\r\nmnTC7nSG64e3RpGuZWr1w0YIzTv/qtqSYW/1iQeS/OGdcfU9ZMUpdOxx2V3N\r\nbSP93aXsbQzivdSmZvAZU+egv7X6bVS+9E6cn46kvLFKXkBXLH36jt0QUR6V\r\n/gzKETezR6nMkpJ19iz3wKK3EcqVEVtsvlWDkfKy5ULBHOY2XLTBMgYBYgrW\r\nOBpE7Rfs4W/btzAlH2Ezdpo1tNKgaWoAoUTKs4CEhQJcDdNq6RcKcyubF1al\r\n8KRuGyZT9CnjcNu90wNdELUrwtc1sXF9rFd6hjfRr/9KZWw4Qgo/TqPKU9N1\r\ncCRpk2D3iH+Z+8KJ+JOkLunMBZFLQZWg9hGXAUz08qzYHyi+bvEdkx8jSb4B\r\nN9zLh5eHfrH9e/PQ5VNUWORpVY6pfFpl9DnhsD7tA8NSam/piHEUUDm0m46K\r\nn/HDv2KJgIeD+BZ+CrNxLndIs8Pcc4iBJZDbho6JBvmyUh/qRG2m51qhgQaV\r\n0Wygh4vHea1qqz5fy8/3//VR3FnRmPSqvNOuWaK/FkMYSpJmTcaRD6CFpGIo\r\nAckDkEM8otQECc4u8NqHUcmGp+7cJkV3R4M=\r\n=at/M\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.70ea7aa_1680094761172_0.9400021364786011"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.af16880": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.af16880",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "af1688036b832ff9ac4f47c98d9a0c8c591f434b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.af16880",
      "_nodeVersion": "16.19.1",
      "_npmVersion": "8.19.3",
      "dist": {
        "integrity": "sha512-foZJK/5JFcCoQpDAvWpy2HjzfrcHChWoTy7G3tFhfBOFpfyRE6bmtW7EnzEDD3z5eYNiLkiK/oRVgpVdIrfLjA==",
        "shasum": "a6d734cc3f2ca7d5c67209e980d5ecc92430aeef",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.af16880.tgz",
        "fileCount": 30,
        "unpackedSize": 2502885,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAqniHReZ9+IOX89Cmg7j5OET5iwPv+ik0DO6tXmm71gAiAluM8AAitEx6yKLdH2pDOq1UxwyuY6Oh0yRZDxbuuVtQ=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkJ1FLACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrZwQ/+IeXWO9YEI9YVnrfGH5PQoCtm/EODBy4gDpP+k0E+MmJTTmxg\r\n8klQoIqD6uQSI1hiFLtNMcYsCuYZbSRpKgxAmgGqquf2LuAzhVJcZ5ySRgKB\r\nzWr+t78LvKz1fGzGnY9qONjF2ukVe+oluEYjJGwxgjHyla1RXB8QyCa2nj5a\r\nryU8c/ZiLfNk4H4Em082DfK6VIwULXai4V698jgE/J7HMyJdYNjDpJcm8dtV\r\n+9nRB2acUQHvHkAJzkU+nGgrYmnUqw3HkKZ5wrnW1X8nKZKU6p/+y1dHhq1f\r\nXcshHQ1OZLUyBVx3vOCbbyph2BaHYvE/Xaddss6J1/n3kJ4xPoOubqIjHGct\r\n+Sdxy9eNlun25/qDoHwWJ+hJVt1kFyclwFKnPcyeGkadcUBIwmkOazJ6EPXe\r\njBdcs8OciUbvljnCCuv4HaXDHtzgnAaIm3WVPzt1kkxd3JPXXCoTbZglxkQK\r\nuImHLmvCHGNME+GWReYmI1USWpnxdRP9wCFLJVNCdkp6uM+GaPCNbJauCfQY\r\nIXnRr9HK7OvKlEGgjtnparwJCpxmjgHujJIKB4h0Pez9odoFWKiKuUsN25hB\r\noUSojXIDLu9sZaZfD6DnVUdpsNWkBl2conWN7gzsksATebPz990d8rqWwq4n\r\n00lDKiGF5/PB3VKYGZXR1AZtb1vGBUBt7bc=\r\n=55TV\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.af16880_1680298314846_0.9741578614702633"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.d539a72": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.d539a72",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "d539a72d3b27df906b08d06747f7c58768ff6512",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.d539a72",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-kUcQUgMY8y/q/AzRzqJDGVMfmHDKm2R0DxMk5w0LvtYlMxKab+xjHop1bxLE1JMR3VwvEmIM2TRlAuSaZmTWzA==",
        "shasum": "39bba12eeb0c70811de4dbaa16ffe5126fed90d6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.d539a72.tgz",
        "fileCount": 30,
        "unpackedSize": 2502885,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEF6wgCJWsTHEpS7nNQHNewiK0qLDQV2cKx2FHoa8rovAiEAiFgNrh/ssXOj3m/VvbCAO5i1nnGxd3gb6mCJG3Y5QXo="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkLXfJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmqb4BAAobJaoAF62Z2j5orImDjODG1zeS5i4OR99Svw06V3SnBiHF6Z\r\nEkYQrlgCBXmxfUZrHz8RLIAwS/RdQYoA7HqqHDyvLXiGnAak7WFiiKbb9GjS\r\nmCY+/DT3r/nztsA+ZGpPg0S1YGfFNCjbPNNxotVFLd5vYmup4CoSvyaRQI54\r\n8iAXnFpsCJnoh4aODw+f9Do6JTLBDyJ3dcciYiwaBQPj+yEuq4at6/+iLRnA\r\nO5tZHB181eemcGUldbbkBv/AYZPtw2xlFP4u255OC2/+6Ki+aUKcGG38JIG6\r\nLx6SF4BJuwzwSgtKgAVWloXv90MNzF17YrK43RTu108niAw/pUS9g3Sm8Rh1\r\nn5tWdWpX67tjyng7LPMgyl6f8gGFfYM/IL6aqcrm9NtKpSfzCMm7Uqd0JCSW\r\nb6oo6xscAicpkFv3WJHqhA/Vl1TKS7xxQ8T8LylCcJ0tgM91mElDGPGcVhMV\r\nj0LQnrz/aaFwMp5tk+X8P3rDhxH+stb/EJuAXs2J8QJVLdKzWzdNJ90zjVt1\r\nw/EfrGaI+FpzFZiPVyAPmcuEYtd0c2wkafMn71yPEE9KTbJttu5bMjj4EoUt\r\nRnbzVShjaQXiA3nY09oM3G3sNIPG6KXGpxj4Ga49vNhc4sJCXbyQuPnsg9qU\r\nSnAsTVyc/o/GKIT8rKFox6KlyIpS7qkz8y8=\r\n=jnEB\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.d539a72_1680701385389_0.9142883193415157"
      },
      "_hasShrinkwrap": false
    },
    "0.2.7": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.7",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "d539a72d3b27df906b08d06747f7c58768ff6512",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.7",
      "_nodeVersion": "16.14.0",
      "_npmVersion": "8.13.1",
      "dist": {
        "integrity": "sha512-jQopIOgjLpX+y8HeD56XZw7onupRTC0cw7eKKUimI7vhjkPF5/1ltW5LyqaPtSyc8HvEpvNZsvvsGFa2qpa59w==",
        "shasum": "2314d728cce9c9699ced41a01253eb48b4218da5",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.7.tgz",
        "fileCount": 30,
        "unpackedSize": 2502868,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCMsfG5ITDYcemM7M9qrbamhy/J76og4mSgiwRzw6ASBwIhAMdvRdwBTN6uQY6muTBAnQ8NH7RSW9+oPmRK13zOWhwg"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkLXmuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8Mg/+KMSMNf8e5O3iMr/+CwVh9fU4HddCSUSX+FcVNvW6JdvGHTZZ\r\nOttAXyjbH/lqXizq66j5o08wOJKsWn5vmsUIz5ZA9DpxEQw7kW7x5zJ3WBo8\r\n3Oo0oax1utSkHNGq5kY+iXUi9jHPDKHg4sjb+zwmJFAqXScH9ZRcqWFzJ7L0\r\nKBMweHP5YUiLHcDwiEJo8vDSDTt57M/VP1vPRXmgG6g7qbZQeMI0bV9sfbB6\r\nmGVS1Od0Z5DO+eusCV69zYdKkc/fs4sW4KO5z8WO5VsFb4D8hVPHD+33bC98\r\n84VE9Cl8mDC6ScCVkE3kz2CN89fqMVmmPqX1htGvjbFILuSpQUAyF7UiQyiY\r\n/7dVqzIN3dW6MMkqKtRAENYjW5v1X/dJEODqcrBEXai5obrqRtRtl3VtVfPj\r\njiYEbTtLxgAfJVv48Eno5ZeB7Xs+vFt8dgzjGhtDIfq/JFWGcuFP7ESol2QC\r\neC5VMXJOo5/uBHZYWQJjBX/TBM0YOJmsynY2Cl+EXvG7pnNeIzG/nkqRjNBr\r\nWUNZG4kVwP0KaYGSrAe2a+OeUqmWu2s7D/cMDCP+AnRw3jJWWhxFWSmYyzgR\r\nn2hZEZvWic8HL13PlA1LfLkwNNDxSWuHLET51K3cmL09cj7mNp8dZQkOY3PG\r\nP1K7ypPlsMSJwAAooOLjofNxHh8WWlYXG+c=\r\n=Cfro\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.7_1680701870499_0.6277683728222887"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.df84d8f": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.df84d8f",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-php": "^0.19.2",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-php": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-php": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-php`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "df84d8f669ad9cfa017f8f7e47686ef0ef7277fc",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.df84d8f",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-amm+ygsfaVPkhsuNRQw5EOPzcvKdbJlKUq+7k+lgqWPicqNRhDj2uDtvA0XBGRInkTvCWokmm3znNzlFmPfBSg==",
        "shasum": "e47833de3f93af46f490976800766aa8863fec24",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.df84d8f.tgz",
        "fileCount": 30,
        "unpackedSize": 2502885,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDOmNZhGlMYkytDi22ondBPEnV96C9EP4v3wsrOBCxm1QIhAIXB4/yiFZtlvCigPsF/ukW5yQTQWyj+OXQ1lkYvui9h"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkSsiUACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrMFhAAnSPgDCGOct3epOQj21KFNabOhUZN8dlCbQV5lJWFKs+w8qby\r\np+qPiO8NNyvdecRqX9v73RAll8bYx/VPBqlcCTir6HB3AxTci+EIz8D7lXp7\r\nX/YROvSxMuaq8eUjIttbe4O2v1UL7OrGxNW2lzlmXoYyBh0lX+Ki9C5BCWvB\r\nqohppvpYLzD51FIjckZ2Hs8G4Bzg/qg5V7chLsTj2BMrel4K/ShKdt4g1adO\r\nBXBIEyIa6XIr8Dk7RzWA7aUpiwQWsCtHrqVA2r3yIztpsKakKdNyqSp2Qext\r\n26YnK1Hpk7DxWgUYHoXHVimWXApe7O1jG2+Q5t+1ALOr1EdOLXS0vDCkFitD\r\nslVdiURGnZJS9YRoDlQAgKMh2FYcJvVcKRFppm8WPF56hVPC9WWDDscbF/ff\r\nfeZYYYwhN3UNmx8ncLOO9w6LNUO9yvsH5QlrXf4wq4Ec4tIdMon1IXpxEUXu\r\nevBZxursHps1OfvC0FCtmS+YFMN+2HZ0Xdplt+BzXLSkApsO3wWicAudSSPs\r\ndBDS2ADyUEELhWYcgXDT0tgNv7q1cRtzw7pyN4ikudVfCbn0Q7ZmFvTUOozT\r\n9X3727kvXA7MxCjuDoZgk5v16GhrxK+awT2gLw3eNPLxfbtDkZsIAYTqDVCd\r\n5lSfvfY2JNLDpb2VHQvPHczKUr205I0T8Lc=\r\n=VLpq\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.df84d8f_1682622612183_0.2588932362342109"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.dfc4f64": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.dfc4f64",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "dfc4f6446418aaa6fc292b29d9ef5a7f1abc91d5",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.dfc4f64",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-D8wX1ZA6SMrqJlXKz3b/azIRXA5EPopYdzjV0AhSpw9mlcbpNAhhChFQjY7bDp7f9LpPqyA+MYNpjkN2Uy2dcA==",
        "shasum": "2dd574e1d020eff1f2d9550f321a990165871da6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.dfc4f64.tgz",
        "fileCount": 29,
        "unpackedSize": 2501207,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEMCIFMNOXZVbGq9EJUy4meBZHfOyLELw8ZIBJ89qAWYdod8Ah819k9iXB9CpRw9oLg+DqHtFKcTQHcibM5whthk/UR5"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkS9/yACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrH7Q//R5Yrun5yzpDRe7BmEsfSEvcctrczR79KGRObUzwUWSXsKBK5\r\nYEit8x/WMaS2eM8mVyXa/H5BpTFqGbUPQlbK153lpq4AzLCnzbFTxLsWloM5\r\nbrW24nw5zdxjeVNUo2+mlYvukgIMeV3GB8xVmME2fk+QPdvUOJ6My4cuxV3F\r\nVZTVWmMZFbCSgdQgIOlFsx+Q+ewUnB0NyWuG2hSE8n9uuqlMha900Uz7TG6B\r\nbU6L8/rTovRmKuVNiBSS6+uSJMhpF2jFi06ezEr/dNXjRw1cR+HblsZLOubA\r\n5y/sM0wkl52G7UMYmAZv1Fu8XtcTdgqYPiPUS70DDNwL/DKmanPy4avkLstC\r\n4h6D2uc1Q5fsVfh0lIcXKW6XwTKZ8Q/fDkBHPPfUoazI6k9CMZmGirkquZoU\r\n+Ve0c5i5kSvMZLmayQSWKGDmm7t1j0vMBzqT4RxW7JqD769Zy0ZGfc99QFqt\r\nsyxN+RWVm67buxJgehRCLO0E85Ffdawi93TnfRUvt/XtgN0G2CyJiNDtengJ\r\n+r/Ax37pmRyYSAY+sJC0WqREWdkL/dAnaGXak42hA+CWrNNDC1g/0FVItGgk\r\ncACJzw6+EvyPUVixE0fsNoEVYxANVs8f2qkvKopOzz2dUP3AEYfZVdxJPMez\r\nz8ny4Ov3LhCfCXBDbA1MPmk8Rgf3DJBZ3tM=\r\n=3NyI\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.dfc4f64_1682694130215_0.08269365320403654"
      },
      "_hasShrinkwrap": false
    },
    "0.2.8": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.2.8",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "c5ff418daae505ed396e86b230381e9105b69ee3",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.2.8",
      "_nodeVersion": "20.0.0",
      "_npmVersion": "9.6.4",
      "dist": {
        "integrity": "sha512-KgPcEnJeIijlMjsA6WwYgRs5rh3/q76oInqtMXBA/EMcamrcYJpyhtRhyX1ayT9hnHlHTuO8sIifHF10WuSDKg==",
        "shasum": "e9c0356680331f909a86fefe8fc2b247c21e23a2",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.2.8.tgz",
        "fileCount": 29,
        "unpackedSize": 2501190,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIE7QrDDNtG/flMTlXFN82DI7YCXbc943Qsq3QEfvEuGOAiBW70pR0aoYeVeziqoBiG7jTuqXIHeousH1cGxS0cGUOw=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkS+AdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrxmA/9E8qfp4AYRU7j18EfYgkZZVa4XxwCuVkRwXOl4tNsKINHd/gZ\r\nbTrNMqfnHsQSCifvU85Cx/FqFhdxiSuTr8lFpZqEZ/WKwj0B24F5nP+TE2ve\r\nu3Ga8M9ed24FQCzguvpJDKVBqrnSn9rZjql+inWqr+3sX3XzXQfZZ16bUoet\r\nxT+Hc3FKNO7b1d1+e8FUTTY74S0YYuABuiHa6GyOzqDx1zWiOhHPFtjbBAF1\r\n7LXmtjRDDlt9irCa6vuVLTjYq+RiDvAjyfHmExCFqyuYcHcEtm/u3/5kQmeC\r\n5eW1D6VAu9Kzf3l1A/tTYoPkR2YOxGLOTNpTnE7O5AhHbQ0RTb3URiOPxoSw\r\n1EBOzmR4boZeEVVLlLupHn2i5HqVUTVv8sb0H2eUeBG13dRwl6CSo8T9Drnu\r\nZ1+k7SMZtjsg357H/qMbOPPqIU/OGzqRXgO1AjhdhnD76CHna5f9HK5j2sP2\r\n2wHtq2llpqVPGM1KauBix301K8Gi/tecwh/avmIuH+zy0Je/U+rjBAib3xaB\r\nO5JHHDDO0rCUn/+KLMXU5vpWc3itX3vJ54tGGQYbh9IJ+uKrsdiv9Ky7Jsd6\r\ntSWyAXa/lNcXYorRoRclzKkufq6xrwRn4GASgO9xEp+X2ToCLNG/zegtSP2G\r\nHOur8Ahc0FKKs+rnsOJOQDmKmTnQOg1JyVM=\r\n=e6m7\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.2.8_1682694173055_0.1660479293810475"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.5f9db4b": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.5f9db4b",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "5f9db4b539047b17df8e60cc6df8f7a6a3b3182f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.5f9db4b",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-BqwZzD5WDl8Sv83oy8mWn3Pdgbe74QloWxWztsfe7aEfw1ErDU/poRM/ocupmicrdBASRHyV7LJ5pMGIlWsUOg==",
        "shasum": "04aa1868bde9523ee1f6ef96018731f5bd943021",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.5f9db4b.tgz",
        "fileCount": 29,
        "unpackedSize": 2501207,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCXchQmOIn7azEgTnIF1King/pyTh59fMCa6Y9UdDR13wIhAKDgbeJEjf9SG4TWtm67PVsh9v3u8lPXa3p6ZEUrmd4d"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkS+BJACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmp5xg/+MLTBfqR1Kpb9c4HOiVidIrU8vModrtfteJ5S9iAWSXvcGA7O\r\nxIXDWLtO/w8Y8uCI7hrASj0sFyrKpphNzXmRAGQfxqPRqUuyjN5ngSsJFkI8\r\nw7j8aX5Pl05iCGgVZFgeqx0s3WLOVADuZ9bb5gu83tPYlUxYh16gf3U0XB5L\r\ninkHuN3bdKvvJZr5nF9tXMieV2KyOgIfnVBIZzD0S2xzc3aCCL/o5ZtWxFCD\r\novqyg9lOKlX8Mw1bvSJJeL2sen60RLoUTcRLHrZEtwYXNBM2QzSJS6hljMCY\r\nPyn1RiUvbFmARv7X+SlYZ33w6myX1caCszTrc6oUH8rItx/BINy2zQefrt2m\r\nBdAABiSKkDB4xREnmjoecF9Y+wCYgyeAvikfbT/HfT4/Q3pgnY6/9DXIuKuV\r\n6w2u+SVpYTxSD5GtJG6uNB4fCeOs7Nw+wvhyGTEhIiOn8AUPzvKR6UdRHNSg\r\nNRJwvKZ11IWnQcUPQHVLInTJyZJowzk0pi5Mdb7+HEcoIxGcE9nniDbzNpsV\r\nI2nISa0KCh52+2WnGrbQANqM/RKYtAS1Gr1krCedgqW4r9kJeFFlXWELYmcf\r\nqMyXwOQww7IjzvHC/vzOnJbLR+DaBOdqpxyA2b73UT1z3eUJ0sqMK2hCI6xd\r\nA0LBRxSfFmM992g+mB9ZZvjUeeCKJ0fgtHk=\r\n=28yA\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.5f9db4b_1682694216887_0.9694724748118357"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.c5ff418": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.c5ff418",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "c5ff418daae505ed396e86b230381e9105b69ee3",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.c5ff418",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-sIBe5J8jzbzHRIZimrkSx2aEwRhPfushN+FJb8dG+6nF04Yfhyd/UlkLn0AXCmjbaipjdxYKMNm1tENwoT7bUQ==",
        "shasum": "516b5d0c81d1bb2b4ea5046065de01f6f19ae625",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.c5ff418.tgz",
        "fileCount": 29,
        "unpackedSize": 2501207,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCJjOeSUByZATisTCT9eLFHbaTKB5JLLo4pad8XOMRZTgIhANuUDbASobmNsYC92ZySlht9LpabqXxE1bMlGXHOWt3B"
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkS+BbACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmonGQ/+MtBKdpaIxKLBVe/vcHHs4vLdY3nFkxmxYmNxxeoZfKXrqwyn\r\nDAtJVzOya+bkTAaGgZBAmZKx3otQG/O8l/aRIRWNfRl75oGv7SB9VILlDTen\r\n8Am9rElTKyKV4kNxHwxDMTz22Ipu3kvGVbOpSzNigBZF6kNmiSr+4+7LC/1P\r\n3hDx7v4443SLubFPxFWewsSf64Ucl98GsDOFUyqOIYcb2lsNR4aoLJkcilF4\r\ncpP78YDzAYjiWBDEmtkMh90jbfReVbUh9LPhoNdklAGmo/qtZP4LIM8VhR48\r\neZi+pYzxK84IghGfGmV+7y4fXhUmsZFM9U23WFQ9/D8FYKIwIjc1rGJFGJ39\r\noES9CeYbkAzgZ3zkNa3aP0qEcdU2VYS+J4xOC5yweivclX82q1TsfbTESkgV\r\n9tLcWsPJN5R9NOKHHqZr3ZAPAMJ3SyJI7OX4EJo3WVX+uPG6el+Avo25ce8N\r\nnFpeHWXJP57yNKeH4qMlXypJuHyUBUtmMZfMTkWUTDi5sQ8/bwt7gA/LnG4Y\r\nBjoretm6MPbrPVrj5M4KwM7GwBODb3uRz/qSyP8/lsXI4ho7BugflKfSirD4\r\nyi+21c6lWsnH8zmh4lsND1FVzPRASpwORALtYQDVEUuMleVjenjIGGUJaM/u\r\n0KdJ354CGPeYrAGvS1oEDNk77lTO+zoj0js=\r\n=cs84\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.c5ff418_1682694234892_0.8738244132859305"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.a78dd6e": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.a78dd6e",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "a78dd6efcd8ffc046950b0749694df90eebe2d5d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.a78dd6e",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-oRcqySgssecSe9TKhLRjtbouaEwUm6WTW/PRSnM1FXQb+JnWCu8j+U5Xfdd5dJSxpR6qBXsL205tsD71r5Azhw==",
        "shasum": "cd9ee6a9d745664de49f8ba36854ada403661ebe",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.a78dd6e.tgz",
        "fileCount": 29,
        "unpackedSize": 2501207,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC6AdW2I5EoUk1qCcG/j53Run8FP+fspS67M+6tRyC9kAIgX8NfVVzH3z/yBCtDwelm1zjZ40fXaPXNCxaNWiqzU4w="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkS+DwACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmogOg//eMZgzzTHVO/sYKwSdtzEhlOOSjsEQsGvobPmUEK+7K5YmoRF\r\nNdPnRmqP9/4/5b1AcryySC2SigmLqFYU36KAJkDXNLTIlpXAy1Ll/5SDXRf1\r\nWJxN5IUHencthgSYvKxMHy8g85pwbWVdlpby2QppK+WvT66Wb2+lPZ27JUiF\r\niurK5Wu5M7lO0iaOzxUQ3RolGLz7fqcrMH68csd5/gFt14uShdW8PZgzDusl\r\nmXm+dZrjJkmkM+5277EbYb2Ms5QHmiGBeg6ja3gVbHMjm7qNjklVbnftcRB+\r\nDpdcv/cK/XcObVWENeWbEnP+ticEPtdg+AWX1hfYa71COotty+JhWdG/KdTB\r\nVy3Tdp/JWfaA1HIIafeMG9IFMSdrI/tesqE+rwXgbLJOBkozuJEI/SGb6EF0\r\nVgqe1Ue67rc58dIwPEHLM5M0ToBKvF2ZD+BBPwaj+GkqIzfGOPGUgpDxiQEY\r\n0PFDIo/koE41gykwLSx+4crukh+dvpjhxHZkhpvceAjDvI07jXN5pc2Sfkts\r\ne3575PE/g/CBHPK6lO0E3go5y9tp+lxkLFJlmkvRxEwakDhR7V6n71HgqfSP\r\nbSswUx4mFKpb0lXJ/EAn3rUTjzqHw9/gcRmYgHxcYgB7Vc5fmL3F4fAR616m\r\n1KpOMYop32FH+5ddoxRbunwUTn50YJyj014=\r\n=dk6n\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.a78dd6e_1682694383881_0.25063120602928635"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.fcbe554": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.fcbe554",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "fcbe55466aa5037de1f9271c5b1ed217e532a491",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.fcbe554",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-CrehaawXZgbhOEgnZMP89go77hrbRCOOf9xvw6ifMqVg/+KmPdMDzf9IECm2ko743T5/8bsUGdDkDXYrOU7nvg==",
        "shasum": "ee82fd0103f393554f8bceab538c9113fb9be98a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.fcbe554.tgz",
        "fileCount": 30,
        "unpackedSize": 2503103,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDv36j5NEK5vcA6dbDldn93s54oG4yB5cFBIXGXjPvm9gIgHwGfS9ozXPy75Ao+46hnUFHoXYeYV9WiqpHNJCqtaKk="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkT+H0ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq4IA/6A8dlhtobAthtRO4TqtQMkiFX2uCbM6l8CElU8J7btkP2iWam\r\nKgeUTZPJAHNIaHc9Dwx9nUpao5GQB5O6/0/3Tb9oaXWdNOwN8V+23tondSot\r\nVPb96y6v7A4TXEl34UYTh6bMLLpOTK7BNnIvy1lBnGGNEmsuFueae0NKubAd\r\nhymbVxf6XEi8OyEcLfHAOPjM2KQIqp+DcnaYVhGkbPvQDqxQeUHJMXJ/JJQf\r\n+sr6Q9PRNTeAVhXRAu1DY6gjAOz6YbGdeYc7exq4hHh0/nCZHhYH8FYYcC21\r\ntomems5ctJnBm2a6oARDwTEzkEu46vZzuyh+zZi9Up6iKCTj8hGQoAhsIjVh\r\nSQTAehR5tLsabQKwL4QiwzGJ7Y9/4zhC+EWpEemeopbbiA22jbWftznULq5J\r\nvKzvWZ7Vu85FD9HiC6EwUskG4ahtnMIRF7yqQjUlcY6X0k6n1Kk0GJDXfJ0z\r\ndUxMfKfrqL0tCfFPL2tJ5AopK9wGO+S6bu35XjRoebMEjt+5DoOImiTueLiw\r\n5iSy/spDbL+cFrXAw2kneTHOHRaXNpmwRVv1DFRr6LqbEqp2GY3G0MovdGlo\r\nj/a62upnJKeN+VZiswe+bW1LmZPPOSIIyESg3fkUPJEAnRGSpnPNhFZTJ5bk\r\nh427Ms2yJDHq4KiNCsbgvV2BcHKl2COQGs0=\r\n=0noD\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.fcbe554_1682956788180_0.8193145893607943"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.71f41a4": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.71f41a4",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "71f41a4ef3e8f91ae1fb3466a06d62048197042a",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.71f41a4",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-bKtmpO1+zXNuYcZE6mXoKpPUEmgU/xfN6SEJaxzdmwJkHY+BQL5kjatz5GzaviI1R9/4Nvc6zplbbFKXi12DFA==",
        "shasum": "7443a4b7613ffce028759ebc8edf37cfe68c1385",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.71f41a4.tgz",
        "fileCount": 30,
        "unpackedSize": 2503103,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC1chQP54/BoShlECp+r0IFHe7jjzFKvrLmLBPVbdwBnQIgY6e8tXsTUQGnXoVQqgnI3kLKbITvM8v596Fl/AsKUj8="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkUAhsACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrkhhAAir+t35+j9x1YlOYlnm+KUtz628v3WV8//DvSEkYvL7uy1k6f\r\nas2y5LR4W/x+wSvSabkruui6TIvDKFv1e/p5r361WtUoavMLODNqqw09Ro7e\r\nfichjjZYnoftY871CXtLTGLdDtEJSQk1wLwJcbhpVnL5DPr/1qx0dqnY9q4i\r\ndtVOwuL5cP2iruch2rCyrxJTz8EaUYrJ1lDpE2wk6AxnErNK+C/yo0Wey2Wz\r\nGbgbQ7w3owz8V+llqDEU3BmE6nMRzem/6X1tfu0Dxca5KCDcC/ohUcqndjHG\r\ndU1TjkcgWzsftCqgH4YsymqUPqvJJkB2uWTqi+RWrFK63t6shEtiVlPboORM\r\nKfHmAJdIFibNWIY6zbki2DtaI9mgEqRnFmcF11hvJ5yfS5lIkQLarrg8zp7J\r\nmLEeBAk/2tuP6BZtztNVnoLkhn2V3T5vQ8AEkG7pfahZ+o/dDkaSnPcqWNjF\r\n7YtDcN24UJamc3JJARD7/o+iuDG/9jIGrwJlM9ghohPCCxawcWrjXFDSrYT2\r\nT+QZCjVKi2Cv80NXa+YvwwH14LcY0HTRFnV9b+viioVJPXwxn5D1eO7XQK09\r\n2DVGPnACwJNRXXTGI58y4vvuBj0n/Z359GYndVHIcRJC1aK/yilNbZx9oijw\r\n34zNXetxgYyJVr9NjrReg4VvT5F1velfGyY=\r\n=4vhl\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.71f41a4_1682966635651_0.4248715493297286"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.474c344": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.474c344",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "474c344e397e52260f1d5489ccd528b5e7b67d5c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.474c344",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-ASoO/6VEzcvo+vwsMQaXl5tYN8/hQJbZ9HlMWcrNLBLapJExKvNLlz3nSs6KBhHQcEg8rmbQHoE83yDfC2zlmA==",
        "shasum": "91880ce2e3c23004197b1dd55f29fedee0fd762b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.474c344.tgz",
        "fileCount": 30,
        "unpackedSize": 2497011,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHX2D7LEJefIdvnqFR690bACj7YM6BiIgCYenzbe8ULAAiA0HxXsmGyrI3bBzU67EwotbxyXWjblWiCZyEH2y6w6wg=="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkUnEdACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrWRg/9GvmP85x+atomVCFNFSniurFL8L/Iz99FltQXMah6WM1eOhiH\r\no1JS+Dw0Xc8uCEte9DcgTbOUxokn5AJTP3d/G2J3Vf51OPqTWXHDL3jIIigb\r\n3NUb+CLIlFjzZm3MJw7Yfjj4FQC6+yZw6fk5IP6JkGHYEv8LyU4Wy0cBjSRW\r\nEV5KjJUTeBmd7rBTfKbd7dsR1ODl/dncYPutu8TnMivu0w2AkIoDamWwRsh2\r\nxPvbotadf/8r/2hPUEKmkG85yhmNEet2hxFzOt4sD7J/4m/vwJyVy/g8JhDL\r\ntALM4OWSdMb6FoWkgc0eMtSmDDQ/NhB7el1wrhV5P5vGifyDmFHGnE5ilZas\r\nGGs+Q+KuT9LKP/oq0TeQrjXkxZ+6N0+btd11cccI/nvXx8r0U/Fs76Lvf91S\r\nmBP3T8cC47gauqXLU8bLlGNDGNDHyBzpO6M/tqLHqMDfW/lLSaccktKmY8DO\r\n9p1QCEYNwV9wxRqdTTIUxRwdNJfo3Be/s4QQE1YlQc+1KBGEHeo7HQcC9fQr\r\nq+R7kATVifTsU1UAGPZCDx4tYqxkcwq4mGL+gP2FyjNtoFgB7Wo0jegstw1s\r\nkDdFP2GqLLu2R0Kd4rC2RVnV2lgTeGF+xM3oFlNwteYCLUjwMgeMxJnyUX/A\r\nakCyAOYG5sVGdqxn7hI/tM0zo//TJkpJfvc=\r\n=Gjz0\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.474c344_1683124508703_0.2326307816217752"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.78bd35b": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.78bd35b",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Resolving your Tailwind configuration\n\nTo ensure that the class sorting is taking into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "78bd35b859a10f98df1600cea3c21d4da1a9a925",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.78bd35b",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-b9lcQbPusY8E8BRV/egCV4/aBrewWjkzfPGe7L19r/REMO+YMr0WcTVC8AP1CJhbz4U7Rfk3Q2+PF5cCTCxlEQ==",
        "shasum": "007854ce1c7f98d98637acd63c9e1e0a3d00c5fa",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.78bd35b.tgz",
        "fileCount": 30,
        "unpackedSize": 2497014,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD/xpszODhS4uRYgEnwvdmZZhYBu3e3reCqsVYp4DkA3QIgd3THcixAqB+VsIF8nEAmIVDAFdFiXJOEr9jGyfMMoCw="
          }
        ],
        "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkUn/mACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmrxhg/+KeIxNGH6R3I0q1Aay42uXZEpQkB4YtsSigIoBI68NP7Wo68Q\r\ncWIht55TLBFBFW17YrMqNIpLyvfOLFEgWt3CG+qasFHVtYrGmtLgbi9IZzCJ\r\n0W30+15eSXZRLmw22uk8FxnLpguIOED0bzJYl59e6+jAmLsqrArGMU2JsVr6\r\nquBP4gK8DtB7DAX5UJu4sx+hWcpiRwDChNebin6RFLmwobVo0QIHjCjt28Xa\r\n02xLxUeRW6QJPY3zAPw9/s2FqAiWovIAXXafJiG6tipddimQ8ofY+6kS5dN4\r\nbKBxSGjN8CArGWVqARvbPCNNg4JtRMpuNjDDtVEutKcberWfghoJ6T9Q76nu\r\nc4JSQxgzptwce+ahI1N+sqGCvYfheDfKu37vzp7Lkkkkz+WdgQfE74eDwMjl\r\n6HBzMOe66CkWQTcz/kE8fEmVI9e2LuBptd31ZqmqtZxwB8LFTX8NUP3tGJwN\r\norsXMRpE6ti9bJwldn/hiVeUzEhbBEGdfypZVUZ4SpqOs5zehkzUxvYLZtjR\r\ng/dx4wz2SNS4uXBz0QmiK0im/TMDTwVe1Gbdme8iSQhkuBYZhMqdcwZr78uk\r\ndgM5aoLjKzQycBqWMvw7xPxexIVREmVdJe/OooLjplNfX9jfyUvccObcDUhm\r\nONVhGASYKQHZMNPqrOkSN3QBnfXF+yVG97Q=\r\n=WjQR\r\n-----END PGP SIGNATURE-----\r\n"
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.78bd35b_1683128294050_0.7810120558123108"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.6ba6faa": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.6ba6faa",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "6ba6faab6c2eaadff3d61e2cf559b2c1f98e4aa5",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.6ba6faa",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-DgrgeXm3iPX+hgnANqB7CkWLHYyTJOn1qI8a6BJyWZVvJDXa+/DXWQpajzPOC0mckHtFJ0u3BqwIetHEskxiOA==",
        "shasum": "0f8cd3bb205adb488176b3284c03ee69c455375c",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.6ba6faa.tgz",
        "fileCount": 30,
        "unpackedSize": 2501905,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDpyj9DIDdLY+utR6ctifGv9j0Pbn3QR78jv/UTAWbWwAIgakiQ6NynUZ23k5jSt38N9kPWRZFLmnSSxbUkTzL6SzE="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.6ba6faa_1683660940926_0.6344866060228802"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.d3f787d": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.d3f787d",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "d3f787d86a50dcd9fa320eb6e0db95d392fc3437",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.d3f787d",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-p2qyXx+ycW8FPVQJsAW8AQg4Xohw0SPNA5c8vKgAof3kYWOXUw+WkyGVE9le7gXdnG3G8Bc7B+Tmmxt3uGPj9A==",
        "shasum": "44704b523a0a5ff9c4f97c1027d859394a6b1150",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.d3f787d.tgz",
        "fileCount": 30,
        "unpackedSize": 2502014,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIH4dAP0rdZss/mNawPg3dFxKQRtIrxZfZne4p3jYorNoAiEA/KEzVWu9PqycYe9nukVlTZ20yj1O37J+4qJjxKK01Qc="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.d3f787d_1683903739587_0.19853738300920432"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.cc1b192": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.cc1b192",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "cc1b1921d8e9f518d7d15255a0362ca7dba1b197",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.cc1b192",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-bEdcNYt0DfORBPLyaYC6HJQASsg/z3U2Eo5h4HgG70lqXmf8jSeP+BoxsjMcBhdi6vHKRg/IYMDMk3p/nihCSQ==",
        "shasum": "60bb3d7627a113c76a6a7190f1f9373044459f2b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.cc1b192.tgz",
        "fileCount": 30,
        "unpackedSize": 2502014,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCQbNJWCNYwZ6wJFCxIWAR8s69r7UkZfjlh4xMbmwWhzAIhALIBET+Ufy8eSR8Rvc7sEJr576Y1bkvVSGh48GIS9axz"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.cc1b192_1684159898736_0.4979556601842754"
      },
      "_hasShrinkwrap": false
    },
    "0.3.0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.3.0",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "gitHead": "cc1b1921d8e9f518d7d15255a0362ca7dba1b197",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.3.0",
      "_nodeVersion": "18.12.1",
      "_npmVersion": "8.19.2",
      "dist": {
        "integrity": "sha512-009/Xqdy7UmkcTBpwlq7jsViDqXAYSOMLDrHAdTMlVZOrKfM2o9Ci7EMWTMZ7SkKBFTG04UM9F9iM2+4i6boDA==",
        "shasum": "8299b307c7f6467f52732265579ed9375be6c818",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.3.0.tgz",
        "fileCount": 30,
        "unpackedSize": 2501997,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHqGGN/mDwbpapa4qXlUyPNgTDqx5xcr0rgN5HMjYWaxAiAqqMQ0m0S1rSw2b4yJscqWUd6Yci8IhEFFTY9ihCop6g=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.3.0_1684160129560_0.6264523734505216"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.59d8f46": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.59d8f46",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "59d8f46bdd84e2644c74185595a54455b7dbddf3",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.59d8f46",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-AMfUX08mHHcyCnPTuakPY48SKuFzB16ZcN+s4mrPlWXnuNLa1JIor1cL4cyBk7Hv4yb9BEjxAabl+PcqtBIE0w==",
        "shasum": "c266828392c1d9ce4738317da3097ab6668eee22",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.59d8f46.tgz",
        "fileCount": 30,
        "unpackedSize": 2502277,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQC4BpnCQH1OGJFp6PyjaQsbi2vG/Go2vwBYbWWmvhDVyAIhALEOW/sp9TiGSKrXHayCiDPSnSCLJm33yOVO7Iguguh6"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.59d8f46_1684508019402_0.2832551583940184"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.46d60d5": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.46d60d5",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "46d60d5fd144413f7f1cc6cd6cfb9fb436a8cf79",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.46d60d5",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Rn0j40tL8JWWlAKvl1Ttz6IORgqUB917ygHyQAWCxNnP/2ljNllnPt3OdYdCQ3fjmcy+K+uMItAowrAeJmC42A==",
        "shasum": "1f05bafc2b51c5a344493e9bad6c995449523a3d",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.46d60d5.tgz",
        "fileCount": 31,
        "unpackedSize": 2502952,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD3EfG9Ari/4CXlm8XkKf+dA6vh+k9lSkyMDVCAAob6cwIgZp2W/Ryza9SY8kbDg/34sba3Ukmc3ayM/hftpFrPnp8="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.46d60d5_1684511072689_0.766003108843418"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.0a1b1a6": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.0a1b1a6",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "0a1b1a6f35f8cbecd9de06ec847b2487d770795b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.0a1b1a6",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-X5VNefa0p/sK8M0l6lvr2DK4QHP/LbH+/b4IQvicrEVTgdrKVkpoBI5hCtjR1bd0KW9wv9o57pd+tkEz0ZnlwA==",
        "shasum": "ff74170e613b3c70839059149612a8bc097835d8",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.0a1b1a6.tgz",
        "fileCount": 31,
        "unpackedSize": 2502961,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFJbvZRqS2+VD1Rv+D7fgZRZxcerin5UrjHY2WMPL7sfAiEA8W4ssx+VnxtgVjMxYt06vzkJI9QPx+64NJ/6t5/tVCc="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.0a1b1a6_1685128802556_0.528797140250092"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.4443561": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.4443561",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.js",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.14.11",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.5.1",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": ">=2.2.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "44435611e1d8ea2a8b43017cff66cc1e81e32dc9",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.4443561",
      "_nodeVersion": "16.20.0",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-oBATnyMlRsYVDWDSApHScN1ZIwVqclUXDW1Q9Ll3gKOBmPYdBRFQHg4An5deKOS2haioSeIa0DGZY62ksVepkA==",
        "shasum": "841ceb73e719bb5aecd348d09ce3c6c6a075899a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.4443561.tgz",
        "fileCount": 31,
        "unpackedSize": 2503071,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAiX8C9pTnZfwBRNDiFHCNvahKsoNJfMnBsaQ0AcF+yBAiEAkMQEI9fYxY/lgWNcGH2aAJytQ8Di7pwQoZjl8JCcNqk="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.4443561_1685484057997_0.2930790951368265"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.fe49d70": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.fe49d70",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "fe49d709f6339475cb6ce4c7d86d57067347d616",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.fe49d70",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-j4Yhj4Nuv757xWIBmxfXgnSuIrbwFlB0MsFVpgRWl0ppVTys4+Ie8deYqMVn/5yqIqpjxP1Cui0rVz9HUWZtSA==",
        "shasum": "4956da818bcc8996269479a46d08d46c0f913557",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.fe49d70.tgz",
        "fileCount": 31,
        "unpackedSize": 4677560,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCY6pW0jhiCKGOheVFtJO0t2dMSX9ybIrCZWrikA1jSDQIgMSBY9KXNXhbhwDLAPqENia9iA31ORkGGMI/fHAfPwRI="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.fe49d70_1689088706519_0.03761400776859847"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.17ceff1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.17ceff1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "17ceff1c5216df8c6bb163d5a1e3458b9ed59d64",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.17ceff1",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-8wjss45kWONHCV8S2o4wRvsSyC3oVctovrMn2LxVUAov/OcT6r8s51ntzZnaXdqP40V/o54sTBDuF07GLyuJ1w==",
        "shasum": "ae1a97e8288192ff588565ea895245b869d4dfa6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.17ceff1.tgz",
        "fileCount": 31,
        "unpackedSize": 4677560,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDhL8+eJA6DGa88uvGXXkTUlG3fp5xQyp6h4MhRlV1KLAIgGFlJ7nXSbMTpkMJWR0pIetunfNd6YP4kfzjZj8m083g="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.17ceff1_1689089442316_0.13821815520857417"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.6ea4491": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.6ea4491",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "6ea4491cfe6b49520ceedd95d9e4636f6daca6b1",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.6ea4491",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Eq8VujNcPn3U5kOMaOV7FOhvamvGqyTv3U7WXnwJtr3jcaHmef8Z8oKKC8CrG8z8Er9kbrTgFSya8i5RkKHCEA==",
        "shasum": "d8f2260c3afca17048054d62df378d71e1be9982",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.6ea4491.tgz",
        "fileCount": 31,
        "unpackedSize": 4677676,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCNFH6eMeqycMtis7WC2/LZqVqNIK55MgX0lB+FsiYzrAIgd5fy+ywKAoBu1hqnc7Ieri64t8aD1tH1yVN7J2UOduw="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.6ea4491_1689090414934_0.7811245795349562"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.f713976": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.f713976",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "f71397648a957d64d310d229cbd14b823a19ce2e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.f713976",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-MIHG3WjqxzkunlyrNmfycLkuCkCnNUj41Cpx2KkHx/iQmrzFNCRsnB7K3GPCIJqMrWx8m0ALFppfNlEJy0Jqqw==",
        "shasum": "573bd41bbde7fa22e194bca0ff57658c9f4fb815",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.f713976.tgz",
        "fileCount": 31,
        "unpackedSize": 4677676,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2GlfjgM+9DPIR2q57L/GceREm+Azd0QT/kSAXmaY9LQIhAPfMrsC9tiGWEmKCxhbMVIKTHCpPGK4pSB/AJ0GzIRmv"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.f713976_1689090561699_0.30541199256853435"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.0184e34": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.0184e34",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "0184e3479d3eb673e742fa0595ba5239ef69772d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.0184e34",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-UP8y2jwBRtfxsFnbGrItu7xllMWM1CPk6Z/KBW9txnGSEGOKZO/e8NQkw1Nm8tfXa9gKZadz/x9tWq9QoHP98w==",
        "shasum": "6e7cfc497c1274da1ac597078319624e1df890c9",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.0184e34.tgz",
        "fileCount": 31,
        "unpackedSize": 4677676,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBPxInfebxNAA9pd9I/7Elcby2eeDLTKShIK5wJ5eAb+AiB6CDnNH2JHvkbEOyDFqT9kOBGAfwFzWkgZJx8QhtBA2A=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.0184e34_1689090686776_0.5583159424620374"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.532a996": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.532a996",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThis plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using certain package managers, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "532a996868387138bcda85d4d23e1c8a90a2f319",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.532a996",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-qsk/0egduoSd6X6aKsXkQOheWBkYcBwSchRd8PpL4LOe/wOjvt0R+DPQEgsvtlodwiTOuQ/4AOa3opUYx5VCEg==",
        "shasum": "eab4a315c8c426448d09c2e272e3861227f915b9",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.532a996.tgz",
        "fileCount": 31,
        "unpackedSize": 2515768,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAy9K0RBgCrr6MR/FYtThRkV12cMQORJxILFXd7atCZ+AiEAyNcl1OAFp6ksAEI6cznlVdLxBgzoWHPUKfpQTyA3Dok="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.532a996_1689090800516_0.48890600336598977"
      },
      "_hasShrinkwrap": false
    },
    "0.4.0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.4.0",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "gitHead": "532a996868387138bcda85d4d23e1c8a90a2f319",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.4.0",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Rna0sDPETA0KNhMHlN8wxKNgfSa8mTl2hPPAGxnbv6tUcHT6J4RQmQ8TLXyhB7Dm5Von4iHloBxTyClYM6wT0A==",
        "shasum": "b3bd20e28514607c584d4ce515ed09b76cc16dd2",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.4.0.tgz",
        "fileCount": 31,
        "unpackedSize": 2515751,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIBp8TCR9z7QFUKMSvyjhw9VBuhJY7LZDMiwkMwfLKgQZAiAcRPi0dVuYJv7Swfel6PPIZ2VLfmbD24B/rcLWEAwyAQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.4.0_1689090903696_0.4603310941970915"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.dfc23a8": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.dfc23a8",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nWhen using Prettier v2, this plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using Prettier v3, or when using certain package managers with Prettier v2, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "dfc23a8354f3aac3f203215605595a93c8a46634",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.dfc23a8",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-jTm7wxHDD0DxKWRuP48SMuSJJOZp20S1I6tyKltG08vmDP/BxtoYPFRPUrou3VpCYwpNR2sacyAWMgsrzmHUGg==",
        "shasum": "d7e6d27749a886c29e6584608252466be9901dda",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.dfc23a8.tgz",
        "fileCount": 31,
        "unpackedSize": 2515836,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCostlFmqzWEi2hdE2f5GXg1wQ4cIAEh5HiCoRkMN6NgQIgQ8W3E3/sN30eKvoiihV6T9C608C4gr687rB4Pf2urvA="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.dfc23a8_1689092843890_0.4654996131553577"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.a13d661": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.a13d661",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nWhen using Prettier v2, this plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using Prettier v3, or when using certain package managers with Prettier v2, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "a13d661318506a106588c532d6aa3421f103741d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.a13d661",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-qAbO6z5vD/fwJK0Q3UxzRzL8X0vSAqFRjs2oQHX+frFzfSBs+NsqciOQKzmpo7lwvESMOKgqfNh5Kq2z6Mo8tQ==",
        "shasum": "aaf77cdb07f14b8d6ba5450d0b08bcfc3f4eb9be",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.a13d661.tgz",
        "fileCount": 31,
        "unpackedSize": 2516152,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDNU4jal1LPKMDu2fX2/li6sdr1cxA1wyGDpilmfsRR0gIhALb7t9/jqOix4YYbac6OxqR1qiyI0hBBOKaRdwbqsSI7"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.a13d661_1689344380389_0.7889874881539045"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.f667b21": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.f667b21",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, just install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nWhen using Prettier v2, this plugin follows Prettier’s autoloading convention, so as long as you’ve got Prettier set up in your project, it’ll start working automatically as soon as it’s installed.\n\n_Note that plugin autoloading is not supported when using Prettier v3, or when using certain package managers with Prettier v2, such as pnpm or Yarn PnP. In this case you may need to add the plugin to your Prettier config explicitly:_\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: [require('prettier-plugin-tailwindcss')],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "f667b215b1ae765235c7d6ecb762589e13b21b62",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.f667b21",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-jvhk0zhuhesLb+cxSgdluIpPqXMLNmN3ZWM1SoNCbqwInL22UyvDghdbwHyh0z8mxZM/g4hmdkmODBbO45Hx4g==",
        "shasum": "4cda5e9224d884ea5b8cd573637a1abe7e28c95c",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.f667b21.tgz",
        "fileCount": 31,
        "unpackedSize": 2516152,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEOAE03nCeqGgw/v9P6teadlO8+yJCAfh/AeI9wDblA4AiEAj75EkmVwA/KtDwV1sFtMSewPYDymD0P6w06KwzcLYcw="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.f667b21_1689344522027_0.6820792218238827"
      },
      "_hasShrinkwrap": false
    },
    "0.4.1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.4.1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "gitHead": "f667b215b1ae765235c7d6ecb762589e13b21b62",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.4.1",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-hwn2EiJmv8M+AW4YDkbjJ6HlZCTzLyz1QlySn9sMuKV/Px0fjwldlB7tol8GzdgqtkdPtzT3iJ4UzdnYXP25Ag==",
        "shasum": "f7ed664199540978b2cbd037bac3a337d6689e86",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.4.1.tgz",
        "fileCount": 31,
        "unpackedSize": 2516135,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC9NsZvBT+zGxYUmqtjKMAPAVj4u6gi1pAlE2D2843XjAIgPj1dQH2pfo5S2mO/qkvfswElg9czpjUSE8oO50Q4ruc="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.4.1_1689344588108_0.342259390613856"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.1bc4f3e": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.1bc4f3e",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "1bc4f3ed1690ead3b83c8d3a1971c25f493824fa",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.1bc4f3e",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-+aMKDU2D4tOE0eoZHTMlPEbBnSzUtCILAmdEXdPbJoizULF/DFwF5DLno4w31iH8t8ITGrsW/N7/DDIjOg+Zzg==",
        "shasum": "4a4412e34e6b4a44b85255ee4c2fe834d34dd91d",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.1bc4f3e.tgz",
        "fileCount": 31,
        "unpackedSize": 2515741,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCy/qRAicr3Ng2Qy1UIOslCviK45Z4CKyGBzO/LVksXNgIgf30z/yb9+3IBa9uj1s+qr6+EaJzbLVAYjs/Vpb6XOlM="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.1bc4f3e_1689588130152_0.09244865644728195"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.e642c31": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.e642c31",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last, meaning Prettier auto-loading needs to be disabled. You can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "e642c31289cfdfee1f533511bf4b10342189b14b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.e642c31",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-ScHl1/jPkBldASzNehjdbaMwSEB4UG4o/nh5HmOJ+p1XbZqhnUeYnfnFiVuzcv7ekrCRAGVEzWMCyKj52dXAyg==",
        "shasum": "51fbe557763189ce53599e09723b29f2cd5bd20e",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.e642c31.tgz",
        "fileCount": 31,
        "unpackedSize": 2516009,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCtEAsbnFt0aa77IIbnbUbwTcpDz71gK73IMWzBzGEsQgIhAI8w+O4yTXTkTfXMp+yNHwPcbbqJ7YQ2LgyRGVMAogf7"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.e642c31_1690468107923_0.1806866238247007"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.ad48889": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.ad48889",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\n**Note: when using Prettier v3.0 compatability with external plugins does not currently work. We're actively working to rectify this situation.**\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last. Additionally, when using Prettier v2 (but not v3), auto-loading must be disabled as it may result in plugins loading after `prettier-plugin-tailwindcss`. When using Prettier v3 no other changes are necessary as it does not have autoloading and always requires plugins to be explicitly listed.\n\nYou can do this by setting the `pluginSearchDirs` option to `false` and then listing each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false // Prettier v2.x only\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "ad4888926cff174836556b95a7314685692525d7",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.ad48889",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-pAlJV7UpTEH6ZyDM+P0mut//D8yExw7uDwSOqxNBEEGXRRBxeTFTp5QYPyg5fuzGpQJfkQuZir8wo6ApAPc8Zw==",
        "shasum": "ab2133653c742f764a727ee4cbd35fc5b4fea840",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.ad48889.tgz",
        "fileCount": 31,
        "unpackedSize": 2516420,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIAx9vn6NcKN/f26k+bQi1vGKngCFIoLvOxyTM+UjVaYSAiAB23s0tEXG0M/oZxB1vIx/EgW3946Viilmt6YmSA0AUg=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.ad48889_1690564851438_0.5883160942450494"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.36f92f3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.36f92f3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.js",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && npm test && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^3.7.0",
        "@marko/translator-default": "^5.25.7",
        "@prettier/plugin-pug": "^2.3.0",
        "@shopify/prettier-plugin-liquid": "^1.0.3",
        "@shufo/prettier-plugin-blade": "^1.8.4",
        "@trivago/prettier-plugin-sort-imports": "^3.4.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^27.4.7",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "^2.8.8",
        "prettier-plugin-astro": "^0.7.2",
        "prettier-plugin-css-order": "^1.3.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^0.4.2",
        "prettier-plugin-marko": "^1.4.3",
        "prettier-plugin-organize-attributes": "^0.0.5",
        "prettier-plugin-organize-imports": "^3.2.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^2.9.0",
        "prettier-plugin-twig-melody": "^0.4.6",
        "recast": "^0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^3.55.0",
        "tailwindcss": "^3.3.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*",
        "prettier-plugin-twig-melody": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=12.17.0"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "types": "./dist/index.d.ts",
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\n**Note: when using Prettier v3.0 compatability with external plugins does not currently work. We're actively working to rectify this situation.**\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@ianvs/prettier-plugin-sort-imports`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-twig-melody`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\nAdditionally, if you're using Prettier v2 (but not v3), auto-loading must be disabled by setting the `pluginSearchDirs` option to `false`. This is because auto-loading can result in plugins being loaded after `prettier-plugin-tailwindcss` which breaks our compatability. When using Prettier v3 this is not necessary as it no longer supports autoloading.\n\nFor Prettier v2, list each of your Prettier plugins in the `plugins` array and set `pluginSearchDirs` to `false`:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n  \"pluginSearchDirs\": false // Prettier v2.x only\n}\n```\n\nFor Prettier v3+, list each of your Prettier plugins in the `plugins` array:\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ],\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "36f92f3b9f90a0f436620dc9d5b300be9e70ed59",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.36f92f3",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-0mCyfKFC9NOutR2IXJLnWZohi7T9HiQrczFFTJHNPQifnBrMw8sAaQKQO33PYZpBUh3i6l+JreIQ3TVZw7YmIg==",
        "shasum": "05ae24f48ad6bc4ae3966abf9869b150fd9430f6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.36f92f3.tgz",
        "fileCount": 31,
        "unpackedSize": 2516718,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIH0lQkAKTSqwISP7s61fXApPes0P8yzItF48W956vpExAiAK4SdlfGWxXc66NNBXEKoSWfyldV5FAbrr4kkfDb9sMA=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.36f92f3_1690565059646_0.9756656931000909"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.121f4fa": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.121f4fa",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "121f4fac6973ff8c1627ae8308e7ca1dcee7cd24",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.121f4fa",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-Os544LGJZ/Yoh4E/JvZ74xfEKmXZ0qPKYz/IUnUQE1cVRXf+VotWetA+IA7QILfJvBVGPdc5MhvdA6gnVgduLg==",
        "shasum": "35395e9affeb97a9c64f126f2d37c605b752e224",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.121f4fa.tgz",
        "fileCount": 28,
        "unpackedSize": 2501655,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCGC1EbM0lu+yQRDRX/ob7Oq6mpy+ycouYnGx57IIcoVQIhAOM1byfLOz7rrP9cJHJkfo3WqrgN/EdBiinJkyccbcv4"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.121f4fa_1691596596805_0.21188563925791093"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.ac70a66": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.ac70a66",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "ac70a669617987d2610a091058ec8758a4ab0e81",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.ac70a66",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-exj13cEBmknkYTgfCCEqXNOqtF7QOyqbTAlWzKCO61IvqFx5UxUTUvrtqGTbNO2dprFfZYMBHVIMOgTsbVcuWA==",
        "shasum": "632068e76f463f910eac8a910e1e396cc46e5cb4",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.ac70a66.tgz",
        "fileCount": 28,
        "unpackedSize": 2501655,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBAbFu47L5zZiykKXQzu4a0fMB//UNlIIurx9wFDFOZvAiEAhrOKV0/RyiEBarePyKwprd5fSHH3A0e5nvKnJMM/3YQ="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.ac70a66_1691597440537_0.5559400069315981"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.7dab79c": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.7dab79c",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "7dab79c6800be422ffe42ef13768275ecdc3391e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.7dab79c",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-OCCUelppQFebqyxqZzIeAWM5ctnkBrd6T+2pgZ92XAxqwyCqXE+h28V0dk4khLeeDDjh9AEU1ls6bPmrAyLGPQ==",
        "shasum": "ed6941c3b751c87d30f2ec644da2271bb2022d5f",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.7dab79c.tgz",
        "fileCount": 28,
        "unpackedSize": 2501655,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCoPx6LKNytY5gIw7FKqfuijbgJF+/g6PQk5cgSTF8r0AIhAJqw8QOpwv99oewpGXMVhP9JlIIZXRLZVlYtoN+JAWy6"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.7dab79c_1691677167407_0.25972720198805654"
      },
      "_hasShrinkwrap": false
    },
    "0.5.0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.0",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^2.2 || ^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "7dab79c6800be422ffe42ef13768275ecdc3391e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.0",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-EpP/Hg/D/LzjKJ+gYiSnsqk+PkrHSFQAuRHx/sj3O4r2kH0iJAOrKeKmI1X4Fm96M1BY+tO0KiV+/Y03MYbArg==",
        "shasum": "63238dc05a67510e65c65dc4d5f512a3e7969d40",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.0.tgz",
        "fileCount": 28,
        "unpackedSize": 2501638,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHbv49HSw3h/2/2e+z+9ieNLQDm3EMCNS39oOaddqVp/AiEAsZcA0gIXhG/4k5VZ/iQBGXC1JKCwA3/uFQQof20pnno="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.0_1691677574936_0.1321104286026531"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.f365a2b": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.f365a2b",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "f365a2bd08efb39bf1e194e44abf88558951c544",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.f365a2b",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-KWsjB/aTyM41jW1QaqThVUS6A/lWA9HJWVXH7QMwsgRxliKgWTin5zwSz5p4cy41IqcrBjtdn4mP/XizpfXvRA==",
        "shasum": "f5babecc361beedf9a52e8d02249f23de742a105",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.f365a2b.tgz",
        "fileCount": 28,
        "unpackedSize": 2501647,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICDL2LDUxbjClnvcyHiaP3ctTpZnpVsnbH5R2Ut5FFjsAiEAifjlwfkxwKLn/qv/eyWg44z4Me8F2qPwHNrUH3yPImk="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.f365a2b_1691682623832_0.7300619523376559"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.4b768f7": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.4b768f7",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "4b768f71641e410e60e0dea1eaad4f5d8529c83d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.4b768f7",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-w7e6NMPqk5Z38cCQYO4OKL4kOqEi3Q2rvlYIIx3U6nTTmxLffDzOdwN2s6Q7qyGr5cfSisDSGvjmFGNYL+6QOQ==",
        "shasum": "72ef9ae1ade7d24ab8f8716d2747c1133ef3b193",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.4b768f7.tgz",
        "fileCount": 28,
        "unpackedSize": 2501647,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDpuaPJlnadsOzpvWUbVKAHhLKNprKGsek8FPKFT1z+oAIgcUzU6Wg/mLf7fp0WOJN0GEDNpZO7ApPS7WZHUGWyUQk="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.4b768f7_1691682713856_0.8726021564903292"
      },
      "_hasShrinkwrap": false
    },
    "0.5.1": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.1",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "4b768f71641e410e60e0dea1eaad4f5d8529c83d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.1",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-dvJRVoYlzTXa7mD1DooUl0m+7XXMiaClTgZATah27x0vqWAnmoTdndGdpRZDUXl9chk1FFiaQ0ncquUOKBhMoQ==",
        "shasum": "6a57c546a5f24891b3802cd7a529523dcc0f4899",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.1.tgz",
        "fileCount": 28,
        "unpackedSize": 2501630,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCSRD1X8IN3A6hsgEViHaNjwYG7mUv13hU9b0ACTv4t2AIgDsaN5Blm+kmoTfCUyhnzRcMLAioFMCqxEhskiZAiEww="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.1_1691683011182_0.877388109040536"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.985302f": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.985302f",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "985302fca4b5222c3b6c6974b46afeafb60ff5e4",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.985302f",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-WGsV1zCc9oBmhCsSvxedbajQa2jAksT96AFeJkRPPaYwiasykm+A48tJPfiSRXsW1dCb4rIinCaNAtYdCLyJgQ==",
        "shasum": "ca3f308d5e507e23d14e1c1995ceae8463d9bc35",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.985302f.tgz",
        "fileCount": 28,
        "unpackedSize": 2501841,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD2VzFkxqITBQfU7dtosWp8jVSu7vhzCSQf1oWNGH7M8wIhAKrDn/+/CmSDQsQW4i+222A8ieGMawbx4SugpX134soP"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.985302f_1691695897188_0.3590342942505751"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.72cbb6b": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.72cbb6b",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "72cbb6b9ec76c241d262b1f190d0d0cfc828809f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.72cbb6b",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-09NeWveknBTs9jdvOx82+nznJzIoDTTuWR9d7R5qoTmrk7VuGj0Gr+eKNq309upqjn/FPcvbRAuOFUV3JgYh0w==",
        "shasum": "7f19b886408ecb10950276bebc7f7d88c9044240",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.72cbb6b.tgz",
        "fileCount": 28,
        "unpackedSize": 2501841,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBMWoLrx5f17zPQt8ab9dEBY12rY08SNvxYIEQbiuTM8AiEArJz6+YFKyozw8Hi6r3cvkeIxYIzzwKAcWolGRt1Ult4="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.72cbb6b_1691756629271_0.0038619415112930433"
      },
      "_hasShrinkwrap": false
    },
    "0.5.2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "72cbb6b9ec76c241d262b1f190d0d0cfc828809f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.2",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-i4swJk4f8YWK99BRPX3DdDNwMr6U1X8y9rvxGeX5zf090+SsHpPSVjgOb041Hh6/nZJWPi/JYno9UgBDm+/RxA==",
        "shasum": "87155de50ee085e743504c5843d26f29899272f7",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.2.tgz",
        "fileCount": 28,
        "unpackedSize": 2501824,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCL9dt1hebGfOJfckqx4PCXSV8Ruz06X/tAlTqHfDtxXwIgboJts86B3BcoMiKku+ZceCkXTWvEqtJ0vSwwVyyp3mA="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.2_1691756930746_0.9597943775759981"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.dad4b36": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.dad4b36",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "dad4b36b9e98ef4c6fa2e4ba009dde8d5b5b55ff",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.dad4b36",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-bKG/ISPfXaEIjTA8wOXgum+ZtBA4tceIZ9ylJpG7ooGbudtH3FQu4AYTRTlcZeldxpZUDS2/kqwosMqqIuSfaw==",
        "shasum": "9c53f1eeeb1d266c9ee2ce7224a79429e14ad1d2",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.dad4b36.tgz",
        "fileCount": 28,
        "unpackedSize": 2501872,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIHUW9g0mhfDR3mjX6yYCAWafoTQ4075TiTyigJ5W/uw0AiAlUPKbaghLI9Dva+88ZWAqSp+zSnHA6T6zS2Owt8ZFOw=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.dad4b36_1692027037768_0.739181140462688"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.468d3bf": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.468d3bf",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "468d3bf75b027ecad5d7307b809d905d6c932f9c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.468d3bf",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-vynjWkIQfZt1yLblWQ3HXtdlqYeI+ixfCpXFxKMXlx1fQulY/9b+yR1Jo6E0woH7FZCYSKJeAzSwlhADxocYAw==",
        "shasum": "571fd8671e59d52aa05e27554a13bb39d21f7153",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.468d3bf.tgz",
        "fileCount": 28,
        "unpackedSize": 2501872,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDmoUSMcMlB7vtulocb0ud3UlY9TZ7sgrdADBWPy8DFIgIgV7v9CuFbmZbR1kdh3Y01UcIfheNLeQ9v6zej71IwbjI="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.468d3bf_1692102065297_0.7918176523386149"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.b062544": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.b062544",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "b062544bad8e16d5cbbe3428d1fbedc262289b2f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.b062544",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-mT+IiVYsZzV4WEnq26NsDWgs0T/zrexk7ykLLW3FOnN627qVuOgLUqdcqF12NDmkhddkAW81QvQVVhpYxhV1yg==",
        "shasum": "674dd84706c736b2283f64cff7b1b52d2472f2b0",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.b062544.tgz",
        "fileCount": 28,
        "unpackedSize": 2501872,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICwFwUFwE8i3n5CDiBq6dIRB5YL7LevSxtC16Ga31H59AiEAxiZheiT7rZuOfEZHErJ/ZuLjOPc6o3mJpFknhIOZx1A="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.b062544_1692102100499_0.47581323443315515"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.3c4989c": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.3c4989c",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "3c4989ca0afbe1a7fb4bc53799023c113628183e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.3c4989c",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-VCOlWLIsP/F5IJBJk05rpDubRNL4I9hzJKmT/gOBF2AN9RXTE9/lzRHbkyTHe8U6OCLsrfgxr3T9Yms+o7jOmA==",
        "shasum": "651c1a6cd8ee318593e77ee6b97a4ad666a56a5e",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.3c4989c.tgz",
        "fileCount": 28,
        "unpackedSize": 2501872,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCICfyLiTBFqH9C2Kj5tKvdz3mbfQDIbNxquvKd7mr/A/iAiBEHt5saRK5UPmFB6/WiAnW+pqsI2kxev4bsspQbwAupQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.3c4989c_1692102142072_0.14650168488473336"
      },
      "_hasShrinkwrap": false
    },
    "0.5.3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "3c4989ca0afbe1a7fb4bc53799023c113628183e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.3",
      "_nodeVersion": "16.20.1",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-M5K80V21yM+CTm/FEFYRv9/9LyInYbCSXpIoPAKMm8zy89IOwdiA2e4JVbcO7tvRtAQWz32zdj7/WKcsmFyAVg==",
        "shasum": "ed4b31ee75bbce1db4ac020a859267d5b65ad8df",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.3.tgz",
        "fileCount": 28,
        "unpackedSize": 2501855,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCZNwAhfwk6resqz0clj0mQSZD6q3TRfcXHMITdjUqx9QIgKT4XR79LihgMI+iwssvwOiK7oNA0nnOtyFS6TRQp7jM="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.3_1692103086578_0.6971507845222253"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.14979f4": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.14979f4",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "14979f48e036381027f709dac3205ebb8633a645",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.14979f4",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-jY9akVsBj+LodrGa3PqTvVLbZhJkzIAk18exSEiSqhTvgHpNj1BuWSsifd2RCOj59RMh/kgWXgnUFj0ZbkYz/Q==",
        "shasum": "9c5182518248520d1b532dddcae41d69d7c46690",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.14979f4.tgz",
        "fileCount": 28,
        "unpackedSize": 2501874,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQD8sI9hwIgl73w2T2UB1pWDp9rN+lBqxpA7+W24U/ELswIgHMFCrzCH9Z1ZxpfRwmoxXHSUhzMR2b6zgdBCTtmidwo="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.14979f4_1692665894523_0.7244105349807857"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.e5605ec": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.e5605ec",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "e5605ecfa7ea90048579875e1f0d0dcd8c8a4afb",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.e5605ec",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-mBbHiG8lG6T0HGSehP+bFadefdP1c4qrDhRD/CIkMjbSuX7t9xYjqzGsymwsNiSpvUhgZ29rnQqxvwpkuKVmkw==",
        "shasum": "f8fe0d5c3c1df14acd6457d530f987d9b8495f48",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.e5605ec.tgz",
        "fileCount": 28,
        "unpackedSize": 2501874,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIFqy+OISNo2tOfsnuwZB7YFRP/K4BCMtPxiKoLso53KsAiAWbw9QpVHEWV19LJpmVoWismry+GQ4eFkvnNK1qW9mGA=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.e5605ec_1692665973555_0.3493013092493187"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.be81958": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.be81958",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "be81958b0a7a9a5b63b43ac2b785ac8ae2047884",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.be81958",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-HgvODaWy1P7/MNueIf29rjdATcXEYxg3DqLwTDaTmMqztrR3DUpUmlSLlgt6ZoBtxZ5J+cyQQy9909wmBk/iWQ==",
        "shasum": "d69d00517e217c5b1e4987d6e51b3d1596ca31e5",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.be81958.tgz",
        "fileCount": 28,
        "unpackedSize": 2502157,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEKE/srrlTnzI3b+qdPVrOYkVcikYiO7tYRsge2uSMxwAiEA5la27dgE4Tj1vBEBZruaRtJtzbVtCo6zsYFXqjg1MnU="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.be81958_1693340679835_0.5372944222367666"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.7694e65": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.7694e65",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "7694e65615b1860bfe0330cfdd5f378a6d76bc06",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.7694e65",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-9Lyky91bdhxX8jqEcwXEbsFwN1UGYgJ8prPUDvXIARjVux0T4MkDg3Qf8tmM9auJTSAVz9OI0TFiRSEGYrtwLQ==",
        "shasum": "30b7b93a1e7480b432f62b9ed956da31249ca5b9",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.7694e65.tgz",
        "fileCount": 28,
        "unpackedSize": 2502157,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEIKbyFN/fvSfViEFfH4JTB7+iguRFvGgf8hIbyn9jNZAiAclg97ysd6UmcOCXjOLJ04Vxdag4lOz8M3FqdXJM6kdA=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.7694e65_1693489938579_0.5235468737765232"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.3ebd2f9": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.3ebd2f9",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "3ebd2f90b01eb8a65673234ebdad56b556413d0b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.3ebd2f9",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-gYEFa81Y8+nqagywK3hfnik+/zuM4n6eQElbgqkZA2z1wKjE2CWEh5FAVfewevRNrt305HgwrEWxuFbfJIz7aA==",
        "shasum": "9f9fe90ae13def77549cdad69ff73bfc6e314766",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.3ebd2f9.tgz",
        "fileCount": 28,
        "unpackedSize": 2502166,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCzuyHHOzB0NW+QTsu4iInZ0btJjtSMJxkAJq7oayq/LQIhAIFNg9Sz4TrG5MS9Fm9XwGGEIwVVElqw0KErnot8iTiK"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.3ebd2f9_1693490275056_0.05548153562349789"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.93fd16d": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.93fd16d",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "93fd16d6b165c46829a8cf5ab75ebb35a6909b56",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.93fd16d",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-XxI7X+hlm+kAE4N0lEfcbt+nC1AY8ZmLj+pyUFFw6/ejPrpytzBcJ4I2cpu7GGGn7nO+zcKdoYWNkDgSS1C0KA==",
        "shasum": "d253885b481a8157e1ba4c4fcecd3ae55cddf7ee",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.93fd16d.tgz",
        "fileCount": 28,
        "unpackedSize": 2502166,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIBTFvrkYawb8wLPoi9lVKL5RrmyxnB+6+YSlDzvh2J+5AiEAoRgald6zkMzh1ovuYfB/2v8Phd6htis26+h5y7VE9xY="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.93fd16d_1693490417568_0.31099769943923317"
      },
      "_hasShrinkwrap": false
    },
    "0.5.4": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.4",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "93fd16d6b165c46829a8cf5ab75ebb35a6909b56",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.4",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-QZzzB1bID6qPsKHTeA9qPo1APmmxfFrA5DD3LQ+vbTmAnY40eJI7t9Q1ocqel2EKMWNPLJqdTDWZj1hKYgqSgg==",
        "shasum": "ebfacbcb90e2ca1df671ffe4083e99f81d72040d",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.4.tgz",
        "fileCount": 28,
        "unpackedSize": 2502149,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIEGogvQkBwZX0V1eCpkm62Glkg55Z91zXjn+jx8q4AThAiA3/z2qHMmXW6d7ajJFrGoapgCFd7Sbr2VthCD9l1xtDQ=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.4_1693490528519_0.2390974756424331"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.38fed86": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.38fed86",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "38fed860523d2058c60616d3a990c4e98ae7994c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.38fed86",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-r2aHgchTUdGLtj81JvjK8KzmpncX02X1Yp3eK5qnWMFQLzUXHaVU4TQwAMMso+8NRi8zjEOP3AQuCBAHQLCxUQ==",
        "shasum": "ac1d7dbc9526fabc18df123e3041cb5e5cb09b52",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.38fed86.tgz",
        "fileCount": 28,
        "unpackedSize": 2502166,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIHs5k8E/FG7eSYFOSR98+7ycLyQJUoVHeFQTiEqmwnayAiEAom0xCsYWFirTcScG+SNPPo76NPhzcsNC7WQfl7M13OE="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.38fed86_1693490573590_0.6848486148343629"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.b300077": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.b300077",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "b3000771d0c263669f8314092c17b56dbfbf9c41",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.b300077",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-4gfhNadBpla3bjgh/PPTOAt2eLdiORS96sNuDZXPn+O1CyLyJMnI/Z0tlL1Mw278H2olDiA9NdC8EfKRvK2vfg==",
        "shasum": "88e37eb036627b2243c697eba859243b850b89f1",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.b300077.tgz",
        "fileCount": 28,
        "unpackedSize": 2484862,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDtLBUrjErmwtsyUd/n2F0ZEhW4KTnnolv6tmbtWwVMBQIgNcwW8+1whSFXJeDT6Ccqqdyo6KTacqgNRH9mK9QfZg4="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.b300077_1695046994461_0.415519713953969"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.047d591": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.047d591",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "047d5917cbdd64f30bf02f2292fbbbc2d0c37acb",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.047d591",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-cs0seJ1f8OH0m8BZNf4s93npfkGKIxX1EgqcVduM2Vxw2W0A/dLOxwBvjGfwmX7qI+bxnZUNy8A3daZ66OeJ/g==",
        "shasum": "8de8032fd0d4058e524546e5b2449519b3c02844",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.047d591.tgz",
        "fileCount": 28,
        "unpackedSize": 2485113,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGbRrJLfbpnDRsdOxZxmRuFReM9E34+eqmZbvtgAzXNJAiAriqFABFPWPhCurcsBlAElHI9etd7m8SDiFuLVYY+fvw=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.047d591_1696353948432_0.9214776179371977"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.12d175e": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.12d175e",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "12d175ece1ef23fd19c73ee1ba08347158bf7d59",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.12d175e",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-UrSerbqdreqZOdgg5VIW9OQOZAyBiB7UCoYFNycJO1/8toU4BV+ywhNwi+AA1WbGAjqttoao3Pr6b1kuP1Q8Ig==",
        "shasum": "a2ca4a4b3d86d0566c87ba9e1b9d45de4407d1db",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.12d175e.tgz",
        "fileCount": 28,
        "unpackedSize": 2485113,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDrVJa7GsTx7iTZKehs7gY8Zj4U/jYvcyMev8sfoTf3GgIhANLVavQPr8pwSkb2jpmtm4a4A7FvijjU56Y2RDnS4esz"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.12d175e_1696353992531_0.8857507393218667"
      },
      "_hasShrinkwrap": false
    },
    "0.5.5": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.5",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "12d175ece1ef23fd19c73ee1ba08347158bf7d59",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.5",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-voy0CjWv/CM8yeaduv5ZwovovpTGMR5LbzlhGF+LtEvMJt9wBeVTVnW781hL38R/RcDXCJwN2rolsgr94B/n0Q==",
        "shasum": "2860de31772235231339ca5e8c745969532fab95",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.5.tgz",
        "fileCount": 28,
        "unpackedSize": 2485096,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCvp0HVLK6XhkLt0j8PLj/u5od4GSqbWKTnmIScVdfdYwIhALju2hYtzFmGnPSPVU0iy6t8uOTce22kRDdgmJEAoNdc"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.5_1696354314095_0.34865759391105255"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.b5a251e": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.b5a251e",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "b5a251e4b4aadcc47566b43431c91b0ad5510f0b",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.b5a251e",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-+suA9BWev5yL1CHIWp7/MIICR4Eah7NxKbM7qMfNWQP7BxJsZpLuLtseMgRHOmDoT/exf6jVvEMMZuwP/Dc02g==",
        "shasum": "2317130d63e1df8e43b30cedcf83748a1e322236",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.b5a251e.tgz",
        "fileCount": 28,
        "unpackedSize": 2485491,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDpxv+YW27huN2CZ315KCpACODm/0KZ8SKxBl9JeUR6nQIhAJA9JT4MetPDMfxX42UjLp67QFRrooyqwGXRNiG0S2Bi"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.b5a251e_1696430989996_0.19477502882132192"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.2968765": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.2968765",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "2968765936d4b0cff4eea851ef6388cfbcaad153",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.2968765",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-aDmFOWASoSM1W59fQ+1f3+ZFrW+vn5SNst5iqzwvNJYFWhMtXL0JufPNfiKQdmlQ46vs7+2in5AD7V+grBVx4g==",
        "shasum": "523bdadb5e79ffbd67eb9d9c12668f1b2dda194a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.2968765.tgz",
        "fileCount": 28,
        "unpackedSize": 2491194,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDeurLAxPjSAVTGfJxR+uUngzc0gBI4fynoJbRXzMH2OgIgRM2FUSy50FG9+UGf0yoGckLzJqMMv2C72lFZuhtX8ew="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.2968765_1697158015101_0.8473809789987834"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.c51df4d": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.c51df4d",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "c51df4d3956c0df87ca3d41e25f2284c6a7c712f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.c51df4d",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-o9t+xVs06H17ldkkvfEK0ykxw+i/4mmsOmDYSTtmamZDmnrAqmlWNlygxM1Mu54jWOLDrfLQTYp8ICreytJhBA==",
        "shasum": "6db3b7f5240dee77e03748d3159ca2dcd8650baf",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.c51df4d.tgz",
        "fileCount": 28,
        "unpackedSize": 2491194,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCsmgVvTfo1GMVknUK3nJlnTmS6pTjy0bPx+oXu1YTXrgIgYSitBSsZ/OtpUbqxvyJ6JvAWGp1tRRLZtrHSktdC+7E="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.c51df4d_1697158610143_0.5684599620635695"
      },
      "_hasShrinkwrap": false
    },
    "0.5.6": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.6",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "c51df4d3956c0df87ca3d41e25f2284c6a7c712f",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.6",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-2Xgb+GQlkPAUCFi3sV+NOYcSI5XgduvDBL2Zt/hwJudeKXkyvRS65c38SB0yb9UB40+1rL83I6m0RtlOQ8eHdg==",
        "shasum": "8e511857a49bf127f078985f52b04a70e8e92285",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.6.tgz",
        "fileCount": 28,
        "unpackedSize": 2491177,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIDGwXKENTVWha/8b7WBHyVYTVmxO1IcS1Am7mey3X6VRAiBClT1o1676EKB1KG8XwsswVaHxZq1YfH/kYrwh70qDDA=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.6_1697158764086_0.018386965997623905"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.15c1196": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.15c1196",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "15c1196673e2879384f357e2866886236b8ae865",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.15c1196",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-4YOR8WJkM2FoSlFyQ8TLK8av4TDRJ/souTqUaCYrmy5zFwsX/f+RC7htjR3AVtLdjpiNXurZU2gQdhoq5FldMg==",
        "shasum": "14ca608063385ec26978cbe80563fffa1ae50fa3",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.15c1196.tgz",
        "fileCount": 28,
        "unpackedSize": 2491179,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQD6sDjkqFgSNSB8kNMHI9+nNfD8+qgRwFX7WuiAumDGsAIhAIPMKS95nOY96nydL0SX7f4Wl+lxaaZ1E9Vu665DEjFk"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.15c1196_1699459286525_0.7990731906173849"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.92f10af": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.92f10af",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "92f10af02549b05834ede386b5596df1bf4a82af",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.92f10af",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-EIy7TIr8R6dzkPtkUT1WK9/e+PjI2sFivh2PTuwEck6wkpYkoOlikDnZs7ezu9OxecLt29pmk2xyEA/MZLraMg==",
        "shasum": "a74d2b1b223ca3181b34a26a9c9c87a4ddf52661",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.92f10af.tgz",
        "fileCount": 28,
        "unpackedSize": 2491179,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDp7ADgFB3q+l4/UkzavmjpwjEjoPjhshVAJ8l/i1WDbwIgKSIQdmnTAAIr2W8LEB+wvyOT4wMAwZwkg1xLWrqyMB4="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.92f10af_1699459379666_0.8493719761162253"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.38f2be3": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.38f2be3",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "38f2be3945e6e8702fef6cbc830b2717dc3e28b2",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.38f2be3",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-C+I9+qM1sPLnfzWD2VPGsmnMscxaACrzDhWYgznGy4BVdS51t4K1oHpM1sVx/yeYT+eRC5G5JsgZhvyPQeD9UA==",
        "shasum": "8884caadd970be47cc9b9e5b9654176528148341",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.38f2be3.tgz",
        "fileCount": 28,
        "unpackedSize": 2491179,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIE3uptuIGLRONDh91KMvNo2drDnhzFmiYhsOfW9rRTZyAiEA64j9n6ol58L88tYFdmCnpmg7i7H90ImR7xStfynaRLE="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.38f2be3_1699459410617_0.8951886649966065"
      },
      "_hasShrinkwrap": false
    },
    "0.5.7": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.7",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@marko/translator-default": "^5.30.1",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "38f2be3945e6e8702fef6cbc830b2717dc3e28b2",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.7",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-4v6uESAgwCni6YF6DwJlRaDjg9Z+al5zM4JfngcazMy4WEf/XkPS5TEQjbD+DZ5iNuG6RrKQLa/HuX2SYzC3kQ==",
        "shasum": "d05dc42c6f2167e3bf2c20e9f71a1fff4232b5d9",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.7.tgz",
        "fileCount": 28,
        "unpackedSize": 2491162,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQDqprfoFaq9s6IR3ZkONeRBvIMLAlEUfc+oWgawHdqS/gIhAJdg7A3AwZG2+ZZSk1z7Gku/I/P3JnYb6vjM2LeiwyqB"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.7_1699459523985_0.22418711343050002"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.cf301ca": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.cf301ca",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.2.2",
        "@trivago/prettier-plugin-sort-imports": "^4.2.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^3.1.1",
        "esbuild": "^0.18.0",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "object-hash": "^2.2.0",
        "prettier": "3.0",
        "prettier-plugin-astro": "^0.11.0",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.3",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.0.3",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^3.0.2",
        "svelte": "^4.1.2",
        "tailwindcss": "^3.3.3"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@shufo/prettier-plugin-blade": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@shufo/prettier-plugin-blade": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "cf301ca576007bfc52d5eea6c31fc67bae0bb98e",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.cf301ca",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-EkM8yPKdqqbvlFEatR7uQPJsFCxpNGdArhJsCjfUBtgGZvP1q8XwjRCSR8ME1U3npB+GQ/xefbeMRWnfzTefmA==",
        "shasum": "604546178d09732eab619d05c0dc403408e71248",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.cf301ca.tgz",
        "fileCount": 30,
        "unpackedSize": 2497134,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCC1Tp68p9fVyajq1GRDlUoga9Y6nTEAsNYGUB5kAu9nAIhAJhSk0K4meJo6UdHxrOc/27nbfuZ0E30GMOPqzrobcjq"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.cf301ca_1701785949533_0.42164276018154867"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.4cc6319": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.4cc6319",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "4cc6319c777b9f9d8288cd0ac17055321fefa3e3",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.4cc6319",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-58CkcBrLBdhHlJRwtLb0vQ5CUybnvYKa/+F3445VhtxQFtCYqsr8ZlQw2dCFMyEkmU9KG+oG2f/B1h3ie16iOA==",
        "shasum": "0125b08fb2cc150999e888081da5032466cb7215",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.4cc6319.tgz",
        "fileCount": 29,
        "unpackedSize": 2496701,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCOa1ic6wS9B8FLuveq8X4VfOJkx3C7VCMYRu2EVmAlLQIgFAX1mK6XvglxgiKUM7XyeHXpmzIxkc5oupJm6JY3VGQ="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.4cc6319_1701786387611_0.12905643466149108"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.dd4bfce": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.dd4bfce",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "dd4bfce5275be8edffe27522e417c93b4e121c9a",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.dd4bfce",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-zZ/73s5hiqVE2vH79XuKEOgvC+6IKfpULwmYt2xmyqqyk22DZ+KNRMhFbj4vjpT67ZV36i9V5fz3xHkoptx8Hg==",
        "shasum": "520b22543290970bc6ef83789e2340fee1434c3b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.dd4bfce.tgz",
        "fileCount": 29,
        "unpackedSize": 2496701,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIEqLFILdUt+BxX4CMZ5amA6yPsb6/1jeFlzchnNYA0B/AiEA674dld3+lw73ie18ca6Ny/jDIIFGY6UDfk6JHVAYo8U="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.dd4bfce_1701786634743_0.7840272874300047"
      },
      "_hasShrinkwrap": false
    },
    "0.5.8": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.8",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy node_modules/tailwindcss/lib/css dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "dd4bfce5275be8edffe27522e417c93b4e121c9a",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.8",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-9XqjDi0zA/6IUYe3cC80+Eb+z0DU4vFF4yARVKddRZaW2ocBVawjpsFU7FtLn/xlBA8Fubp6Pd3HP3415Go4aw==",
        "shasum": "4b5784d9268d87fd7e2b3606288afc129a7c9e26",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.8.tgz",
        "fileCount": 29,
        "unpackedSize": 2496684,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCICW/o0lr8RZ96m5FVaW/9xm8ITD/O88hn1QPKqTTmAqNAiEAn8YV9gZC3NdECsRDY6Zzv9BuTV+kw+SKBipCmkGVIs4="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.8_1701786782206_0.5723276380911568"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.fa38999": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.fa38999",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "fa38999d47ad4f372dfa51dc14ba217d058bacf2",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.fa38999",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-560rbr+Z5eDyIFCs4CA0HdkECtyNhidczf/aG2FLHbkT4KgnPFfM53MBPcgM8+y0jArdCc4XrgyMITw99dc6bA==",
        "shasum": "b4d07ffa1d0b9b090fc159c7962e4e94b3f39e63",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.fa38999.tgz",
        "fileCount": 29,
        "unpackedSize": 2496705,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIAQkY/7nasBx03cZOIqy5wH/wqTnxhnKTNnBX/GzsfvFAiEA119/dTZ/Bud2ZZbcd6la9dW+nhD+R9jKJaUBgAb3L6s="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.fa38999_1701816253714_0.19299205643669115"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.e3229c2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.e3229c2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "e3229c28a42325dcf4a8c56d477260154a6f2de0",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.e3229c2",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-s1doCfnK8afe0yLX8Qu7VB3WyiQFhJpMSPUh3Ym2zIu9bvZvu8rMx55ot8U9Arl+cRjNXodSGgJW4VzNhyg9zA==",
        "shasum": "fd43b3e9853def1a39e72fe61c11ea924958dff7",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.e3229c2.tgz",
        "fileCount": 29,
        "unpackedSize": 2496705,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQDChnJSL+N4SXENTV2wc4//k7ZaTpWCixslO3Nnky8dsAIgOlWut0sj1OjPmhYPKP2Je6a8QiGsukuCW9f2mUW8PGg="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.e3229c2_1701816331834_0.644485719986039"
      },
      "_hasShrinkwrap": false
    },
    "0.5.9": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.9",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.3.6"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "e3229c28a42325dcf4a8c56d477260154a6f2de0",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.9",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-9x3t1s2Cjbut2QiP+O0mDqV3gLXTe2CgRlQDgucopVkUdw26sQi53p/q4qvGxMLBDfk/dcTV57Aa/zYwz9l8Ew==",
        "shasum": "fdc2bd95a02b64702ebd2d6c7ddd300198de3cc6",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.9.tgz",
        "fileCount": 29,
        "unpackedSize": 2496688,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIGt2Ehh4YPxh2+ytA+xjdL+IIpc9/LZQFM+JlALejF0uAiEAgdcINLgJeyaX9p01szAck6cEbkzSTgqIZnHaHYYZq4k="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.9_1701816527823_0.39391938605135013"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.9f8780c": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.9f8780c",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "9f8780c27254dc845ef2acc65762fcda885dd6f7",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.9f8780c",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-E3jkx11Bm7Mn945CfXzO6CqPzi7JAP9r9MFv7p7f3FqLZjezcKNwPIIFj84sE8Bo8UcQhc3Yc66JimbsyW/67w==",
        "shasum": "2ce1ebc59d96c980195cebe3f04cf06f9077a15c",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.9f8780c.tgz",
        "fileCount": 29,
        "unpackedSize": 2499174,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIFsaT2Di1+1a+YPykoSkOjw0pLlAyfkSONIHdSAwozNsAiEA76Q4Z/I9m9oGBDYqrokBHaHpJZjgpTk0cQCybr8P6nQ="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.9f8780c_1703010602389_0.4187341851841144"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.885b14f": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.885b14f",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "885b14f2dffce4064a80924f9dacb7af974b890c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.885b14f",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-E1lOKCyviKyAQk7QlyQIXkd8RFjao+ys5AENk7YX9JWGYZqo+mMwNPTx7nEcZlVy1pk9XaB+SAvJgkrkIBbqyA==",
        "shasum": "47fe0a46e9faac66e3ba863522872eb09cd56723",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.885b14f.tgz",
        "fileCount": 29,
        "unpackedSize": 2499174,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGr0xRWX9sAhnbAAQPvtp7Og5jXiEmuW6+XXCAtsWzalAiAHIkYXKi20ZVl64HlU/ALVMoFm2rM9pE+brpCalO9Bwg=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.885b14f_1703783027269_0.18809567588234244"
      },
      "_hasShrinkwrap": false
    },
    "0.5.10": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.10",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.0"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "885b14f2dffce4064a80924f9dacb7af974b890c",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.10",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-9UGSejqFxGG6brYjFfTYlJ8zs4L/lvZg1AngFfaC5Fs1otSskASv5IWKmjPu5MlABQUtTKtMArKyYr/hWpXSUg==",
        "shasum": "c7a68d8751e4963f290f980fd61f9d9882660b50",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.10.tgz",
        "fileCount": 29,
        "unpackedSize": 2499158,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIA1uq0U27wjteGnwBrlqdyZtWB/Y9MXg4J9DG+io2xBnAiEA4QK/J7Yfp1TziA1s9fPHm/dk8RyLpeSTSgktWvMK+fI="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.10_1703783103031_0.1304087092179742"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.08f5c4c": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.08f5c4c",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "08f5c4ce0ef2298cb02d5fea35c9c191501b3265",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.08f5c4c",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-d4hhm/YJsr9T/JGHWoGm3vv8443xHPaL14bnS0jNEpuDCr+0cb8AB8N6HZC/oThIvIjbfF1iN201yrywkCbQ4A==",
        "shasum": "233e7f9dbb6707f83057168a3be42b00151a7ce7",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.08f5c4c.tgz",
        "fileCount": 29,
        "unpackedSize": 2500533,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGljVuGt/QdH49s3/P7qG58Np/4PRzdNd5WEfpJ3Xz7tAiA6GfRnqL2Qlbe8vlEohSgRzhSmQPcfeN+AYkxe/8FuYA=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.08f5c4c_1704490894022_0.42289654020695444"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.bf40417": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.bf40417",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your Prettier config:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "bf4041707ae9c7fcdef286d95ebe142bcd1ae5d1",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.bf40417",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-OqXn5V+zQjVp498SWg36OhDwBzeHagKn0LwJkfvMqR08HBHPBIgOCwW57hPeAWffrA+/rnMDdbabbDN7d6I5dQ==",
        "shasum": "9f9fa1dcfd84dddeea5eb9666e011764dd182e8a",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.bf40417.tgz",
        "fileCount": 29,
        "unpackedSize": 2500533,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEYCIQCcrTEyVAdpPq3MldP6vEi1afaMolu7EFAyUWaDVCm5LgIhAJ5tszVMiLrrzwajXfD6oIS3SkpMuEYgeNAI/FWvDjvZ"
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.bf40417_1704490989331_0.05885794121338872"
      },
      "_hasShrinkwrap": false
    },
    "0.5.11": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.5.11",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "gitHead": "bf4041707ae9c7fcdef286d95ebe142bcd1ae5d1",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.5.11",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-AvI/DNyMctyyxGOjyePgi/gqj5hJYClZ1avtQvLlqMT3uDZkRbi4HhGUpok3DRzv9z7Lti85Kdj3s3/1CeNI0w==",
        "shasum": "1aa9308c3285b3cb7942aaeaec8d0e0775ac54d0",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.5.11.tgz",
        "fileCount": 29,
        "unpackedSize": 2500517,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQCGmuwHPtG/JbPgO1gKFUlOGMHY+JVoIqTziz2x7I4uowIgbHJEKB7+f3qU6ztqdRMJ0DFbspqPizeAvRtC7PvWW7M="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.5.11_1704491050884_0.512459360730739"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.4338bd0": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.4338bd0",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.1",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your [Prettier config](https://prettier.io/docs/en/configuration.html):\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "4338bd000863c8e8f63e4559d54ae23ffb3b2004",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.4338bd0",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-c3q5uHxTGS/v2texiHyZXA1JPLRezD0/5iy5//g+uR5Zce2WvlmGUHNN6hn95ub5HvNqD8TjAWOr5Ib0YuI9vQ==",
        "shasum": "07b71b9faaf1aadd1ab6fbddc1ba587bca3a8a49",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.4338bd0.tgz",
        "fileCount": 29,
        "unpackedSize": 2500583,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIERb1KOzt6oCx/RNqt9ZFVaLheRU/JnRx898b7MCHbOdAiEAtiibQh5UJyUILOZBxTcVunejUlR2wT9d1w3f2hmGBZU="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.4338bd0_1704745625492_0.7293223121758245"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.1fa24c2": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.1fa24c2",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "prettier": "^3.2",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-sort-imports": "^1.8.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-sort-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your [Prettier config](https://prettier.io/docs/en/configuration.html):\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-sort-imports`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "1fa24c2d33f17c9729e3f4a2018518a55699969d",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.1fa24c2",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-dxTGBQoG/IAKWLVUL2CawW3krdl4l3wFFt4B8i1sI47AjNPB+JArhN0JM0pghthNRxH+C2bgXhDCz1pc0bjfkA==",
        "shasum": "9c1ca0f7dbb27ef56fb02d89b79f9000ba48450b",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.1fa24c2.tgz",
        "fileCount": 30,
        "unpackedSize": 2505091,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEQCIGgKmhUrzPrgn6aT/fbQTEV4c1zvrvGKrLYARoz4cclJAiBcrPm4WpjZYNEHaX0tM+ke1e2ZQZcRGJUN2U6wnWRR5g=="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.1fa24c2_1705091246365_0.10921156357403028"
      },
      "_hasShrinkwrap": false
    },
    "0.0.0-insiders.81c446e": {
      "name": "prettier-plugin-tailwindcss",
      "version": "0.0.0-insiders.81c446e",
      "description": "A Prettier plugin for sorting Tailwind CSS classes.",
      "license": "MIT",
      "main": "dist/index.mjs",
      "module": "dist/index.mjs",
      "types": "dist/index.d.ts",
      "repository": {
        "type": "git",
        "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
      },
      "bugs": {
        "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
      },
      "scripts": {
        "_pre": "rimraf dist && cpy 'node_modules/tailwindcss/lib/css/*' dist/css",
        "_esbuild": "node build.mjs",
        "prebuild": "npm run _pre",
        "build": "npm run _esbuild -- --minify",
        "predev": "npm run _pre",
        "dev": "npm run _esbuild -- --watch",
        "pretest": "node scripts/install-fixture-deps.js",
        "test": "NODE_OPTIONS=--experimental-vm-modules jest",
        "prepublishOnly": "npm run build && node scripts/copy-licenses.js",
        "format": "prettier \"src/**/*.js\" \"scripts/**/*.js\" \"tests/test.js\" --write --print-width 100 --single-quote --no-semi --plugin-search-dir ./tests",
        "release-channel": "node ./scripts/release-channel.js",
        "release-notes": "node ./scripts/release-notes.js"
      },
      "devDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "^4.1.0",
        "@prettier/plugin-pug": "^3.0",
        "@shopify/prettier-plugin-liquid": "^1.4.0",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "clear-module": "^4.1.2",
        "cpy-cli": "^5.0.0",
        "esbuild": "^0.19.8",
        "escalade": "^3.1.1",
        "import-sort-style-module": "^6.0.0",
        "jest": "^29.6.2",
        "jsesc": "^2.5.2",
        "license-checker": "^25.0.1",
        "line-column": "^1.0.2",
        "marko": "^5.31.18",
        "postcss": "^8.4.35",
        "postcss-import": "^16.0.1",
        "prettier": "^3.2",
        "prettier-plugin-astro": "^0.12.2",
        "prettier-plugin-css-order": "^2.0.0",
        "prettier-plugin-import-sort": "^0.0.7",
        "prettier-plugin-jsdoc": "^1.0.1",
        "prettier-plugin-marko": "^3.1.1",
        "prettier-plugin-organize-attributes": "^1.0.0",
        "prettier-plugin-organize-imports": "^3.2.4",
        "prettier-plugin-sort-imports": "^1.8.1",
        "prettier-plugin-style-order": "^0.2.2",
        "prettier-plugin-svelte": "^3.1.2",
        "recast": "0.20.5",
        "resolve-from": "^5.0.0",
        "rimraf": "^5.0.5",
        "svelte": "^4.2.8",
        "tailwindcss": "^3.4.1"
      },
      "peerDependencies": {
        "@ianvs/prettier-plugin-sort-imports": "*",
        "@prettier/plugin-pug": "*",
        "@shopify/prettier-plugin-liquid": "*",
        "@trivago/prettier-plugin-sort-imports": "*",
        "prettier": "^3.0",
        "prettier-plugin-astro": "*",
        "prettier-plugin-css-order": "*",
        "prettier-plugin-import-sort": "*",
        "prettier-plugin-jsdoc": "*",
        "prettier-plugin-marko": "*",
        "prettier-plugin-organize-attributes": "*",
        "prettier-plugin-organize-imports": "*",
        "prettier-plugin-sort-imports": "*",
        "prettier-plugin-style-order": "*",
        "prettier-plugin-svelte": "*"
      },
      "peerDependenciesMeta": {
        "@ianvs/prettier-plugin-sort-imports": {
          "optional": true
        },
        "@prettier/plugin-pug": {
          "optional": true
        },
        "@shopify/prettier-plugin-liquid": {
          "optional": true
        },
        "@trivago/prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-astro": {
          "optional": true
        },
        "prettier-plugin-css-order": {
          "optional": true
        },
        "prettier-plugin-import-sort": {
          "optional": true
        },
        "prettier-plugin-jsdoc": {
          "optional": true
        },
        "prettier-plugin-marko": {
          "optional": true
        },
        "prettier-plugin-organize-attributes": {
          "optional": true
        },
        "prettier-plugin-organize-imports": {
          "optional": true
        },
        "prettier-plugin-sort-imports": {
          "optional": true
        },
        "prettier-plugin-style-order": {
          "optional": true
        },
        "prettier-plugin-svelte": {
          "optional": true
        },
        "prettier-plugin-twig-melody": {
          "optional": true
        }
      },
      "engines": {
        "node": ">=14.21.3"
      },
      "importSort": {
        ".js, .jsx, .ts, .tsx": {
          "style": "module"
        }
      },
      "jest": {
        "testTimeout": 15000
      },
      "readme": "<img src=\"https://raw.githubusercontent.com/tailwindlabs/prettier-plugin-tailwindcss/main/.github/banner.jpg\" alt=\"prettier-plugin-tailwindcss\" />\n\nA [Prettier v3+](https://prettier.io/) plugin for Tailwind CSS v3.0+ that automatically sorts classes based on [our recommended class order](https://tailwindcss.com/blog/automatic-class-sorting-with-prettier#how-classes-are-sorted).\n\n## Installation\n\nTo get started, install `prettier-plugin-tailwindcss` as a dev-dependency:\n\n```sh\nnpm install -D prettier prettier-plugin-tailwindcss\n```\n\nThen add the plugin to your [Prettier config](https://prettier.io/docs/en/configuration.html):\n\n```js\n// prettier.config.js\nmodule.exports = {\n  plugins: ['prettier-plugin-tailwindcss'],\n}\n```\n\n## Upgrading to v0.5.x\n\nAs of v0.5.x, this plugin now requires Prettier v3 and is ESM-only. This means it cannot be loaded via `require()`. For more information see our [upgrade guide](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/207#issuecomment-1698071122).\n\n## Options\n\n### Customizing your Tailwind config path\n\nTo ensure that the class sorting takes into consideration any of your project's Tailwind customizations, it needs access to your [Tailwind configuration file](https://tailwindcss.com/docs/configuration) (`tailwind.config.js`).\n\nBy default the plugin will look for this file in the same directory as your Prettier configuration file. However, if your Tailwind configuration is somewhere else, you can specify this using the `tailwindConfig` option in your Prettier configuration.\n\nNote that paths are resolved relative to the Prettier configuration file.\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindConfig: './styles/tailwind.config.js',\n}\n```\n\nIf a local configuration file cannot be found the plugin will fallback to the default Tailwind configuration.\n\n## Sorting non-standard attributes\n\nBy default this plugin only sorts classes in the `class` attribute as well as any framework-specific equivalents like `class`, `className`, `:class`, `[ngClass]`, etc.\n\nYou can sort additional attributes using the `tailwindAttributes` option, which takes an array of attribute names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindAttributes: ['myClassList'],\n}\n```\n\nWith this configuration, any classes found in the `myClassList` attribute will be sorted:\n\n```jsx\nfunction MyButton({ children }) {\n  return (\n    <button myClassList=\"rounded bg-blue-500 px-4 py-2 text-base text-white\">\n      {children}\n    </button>\n  );\n}\n```\n\n## Sorting classes in function calls\n\nIn addition to sorting classes in attributes, you can also sort classes in strings provided to function calls. This is useful when working with libraries like [clsx](https://github.com/lukeed/clsx) or [cva](https://cva.style/).\n\nYou can sort classes in function calls using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['clsx'],\n}\n```\n\nWith this configuration, any classes in `clsx()` function calls will be sorted:\n\n```jsx\nimport clsx from 'clsx'\n\nfunction MyButton({ isHovering, children }) {\n  let classes = clsx(\n    'rounded bg-blue-500 px-4 py-2 text-base text-white',\n    {\n      'bg-blue-700 text-gray-100': isHovering,\n    },\n  )\n\n  return (\n    <button className={classes}>\n      {children}\n    </button>\n  )\n}\n```\n\n## Sorting classes in template literals\n\nThis plugin also enables sorting of classes in tagged template literals.\n\nYou can sort classes in template literals using the `tailwindFunctions` option, which takes a list of function names:\n\n```js\n// prettier.config.js\nmodule.exports = {\n  tailwindFunctions: ['tw'],\n}\n```\n\nWith this configuration, any classes in template literals tagged with `tw` will automatically be sorted:\n\n```jsx\nimport { View, Text } from 'react-native'\nimport tw from 'twrnc'\n\nfunction MyScreen() {\n  return (\n    <View style={tw`bg-white p-4 dark:bg-black`}>\n      <Text style={tw`text-md text-black dark:text-white`}>Hello World</Text>\n    </View>\n  )\n}\n```\n\nThis feature can be used with third-party libraries like `twrnc` or you can create your own tagged template by defining this \"identity\" function:\n\n```js\nconst tw = (strings, ...values) => String.raw({ raw: strings }, ...values)\n```\n\nOnce added, tag your strings with the function and the plugin will sort them:\n\n```js\nconst mySortedClasses = tw`bg-white p-4 dark:bg-black`\n```\n\n## Compatibility with other Prettier plugins\n\nThis plugin uses Prettier APIs that can only be used by one plugin at a time, making it incompatible with other Prettier plugins implemented the same way. To solve this we've added explicit per-plugin workarounds that enable compatibility with the following Prettier plugins:\n\n- `@ianvs/prettier-plugin-sort-imports`\n- `@prettier/plugin-pug`\n- `@shopify/prettier-plugin-liquid`\n- `@trivago/prettier-plugin-sort-imports`\n- `prettier-plugin-astro`\n- `prettier-plugin-css-order`\n- `prettier-plugin-import-sort`\n- `prettier-plugin-jsdoc`\n- `prettier-plugin-organize-attributes`\n- `prettier-plugin-organize-imports`\n- `prettier-plugin-style-order`\n- `prettier-plugin-svelte`\n- `prettier-plugin-sort-imports`\n\nOne limitation with this approach is that `prettier-plugin-tailwindcss` *must* be loaded last.\n\n```json5\n// .prettierrc\n{\n  // ..\n  \"plugins\": [\n    \"prettier-plugin-svelte\",\n    \"prettier-plugin-organize-imports\",\n    \"prettier-plugin-tailwindcss\" // MUST come last\n  ]\n}\n```\n",
      "readmeFilename": "README.md",
      "gitHead": "81c446ed83eb59d019ede8ecdc60b4648a8990f8",
      "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
      "_id": "prettier-plugin-tailwindcss@0.0.0-insiders.81c446e",
      "_nodeVersion": "16.20.2",
      "_npmVersion": "8.19.4",
      "dist": {
        "integrity": "sha512-+vO450Xu2d2DJXkgdlqk0rPdgjuwe6P6SlaxdsRfGuav5DmfYM3tQZHGKUFRHFyEEEVcy5X8l35RTh2lhlx5og==",
        "shasum": "455f409729e22109494a9acdcb75d3a4e9529ff7",
        "tarball": "https://registry.npmjs.org/prettier-plugin-tailwindcss/-/prettier-plugin-tailwindcss-0.0.0-insiders.81c446e.tgz",
        "fileCount": 32,
        "unpackedSize": 2545077,
        "signatures": [
          {
            "keyid": "SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA",
            "sig": "MEUCIQC/FF0NfLu+GqEJ7G6eHrd1uJxaFe8Wi3oL/tDNNkqPgAIgbsaJj+wGj/pD8tSRGeAuOfRPbXU4l6CLp1N0jDOv8zE="
          }
        ]
      },
      "_npmUser": {
        "name": "thecrypticace",
        "email": "thecrypticace@gmail.com"
      },
      "directories": {},
      "maintainers": [
        {
          "name": "malfaitrobin",
          "email": "malfait.robin@gmail.com"
        },
        {
          "name": "bradlc",
          "email": "bradlc41@gmail.com"
        },
        {
          "name": "adamwathan",
          "email": "adam@adamwathan.me"
        },
        {
          "name": "reinink",
          "email": "jonathan@reinink.ca"
        },
        {
          "name": "thecrypticace",
          "email": "thecrypticace@gmail.com"
        }
      ],
      "_npmOperationalInternal": {
        "host": "s3://npm-registry-packages",
        "tmp": "tmp/prettier-plugin-tailwindcss_0.0.0-insiders.81c446e_1709145435539_0.4260810551023686"
      },
      "_hasShrinkwrap": false
    }
  },
  "time": {
    "created": "2022-01-18T11:38:23.390Z",
    "0.0.1-security": "2022-01-18T11:38:23.543Z",
    "modified": "2024-02-28T18:37:16.343Z",
    "0.1.0": "2022-01-21T01:15:34.067Z",
    "0.1.1": "2022-01-21T02:27:28.357Z",
    "0.1.2": "2022-01-24T20:56:13.612Z",
    "0.1.3": "2022-01-24T21:44:45.671Z",
    "0.1.4": "2022-01-25T13:24:04.716Z",
    "0.1.5": "2022-02-04T16:59:39.554Z",
    "0.1.6": "2022-02-08T11:27:29.586Z",
    "0.1.7": "2022-02-09T10:48:20.196Z",
    "0.1.8": "2022-02-24T17:47:55.492Z",
    "0.1.9": "2022-04-19T19:25:43.175Z",
    "0.1.10": "2022-04-20T08:19:34.512Z",
    "0.1.11": "2022-05-16T10:31:08.293Z",
    "0.1.12": "2022-07-07T14:54:50.998Z",
    "0.1.13": "2022-07-25T16:19:34.308Z",
    "0.2.0-beta.1": "2022-11-11T20:30:40.676Z",
    "0.2.0-beta.2": "2022-11-17T19:46:24.831Z",
    "0.2.0-beta.3": "2022-11-22T21:51:40.352Z",
    "0.2.0": "2022-11-25T20:47:39.187Z",
    "0.2.1": "2022-12-08T21:48:40.952Z",
    "0.2.2": "2023-01-24T20:40:26.577Z",
    "0.2.3": "2023-02-15T14:01:44.647Z",
    "0.2.4": "2023-03-02T14:44:44.684Z",
    "0.2.5": "2023-03-17T15:20:23.703Z",
    "0.0.0-insiders.6533049": "2023-03-22T16:09:02.322Z",
    "0.0.0-insiders.dfadcf7": "2023-03-29T12:09:12.499Z",
    "0.0.0-insiders.7878ea1": "2023-03-29T12:11:45.949Z",
    "0.0.0-insiders.41c7738": "2023-03-29T12:43:03.382Z",
    "0.0.0-insiders.2aabc3c": "2023-03-29T12:50:17.622Z",
    "0.0.0-insiders.4815839": "2023-03-29T12:56:03.104Z",
    "0.0.0-insiders.134c19b": "2023-03-29T12:56:40.562Z",
    "0.2.6": "2023-03-29T12:58:52.613Z",
    "0.0.0-insiders.70ea7aa": "2023-03-29T12:59:21.336Z",
    "0.0.0-insiders.af16880": "2023-03-31T21:31:55.058Z",
    "0.0.0-insiders.d539a72": "2023-04-05T13:29:45.704Z",
    "0.2.7": "2023-04-05T13:37:50.763Z",
    "0.0.0-insiders.df84d8f": "2023-04-27T19:10:12.549Z",
    "0.0.0-insiders.dfc4f64": "2023-04-28T15:02:10.528Z",
    "0.2.8": "2023-04-28T15:02:53.265Z",
    "0.0.0-insiders.5f9db4b": "2023-04-28T15:03:37.100Z",
    "0.0.0-insiders.c5ff418": "2023-04-28T15:03:55.171Z",
    "0.0.0-insiders.a78dd6e": "2023-04-28T15:06:24.129Z",
    "0.0.0-insiders.fcbe554": "2023-05-01T15:59:48.428Z",
    "0.0.0-insiders.71f41a4": "2023-05-01T18:43:56.006Z",
    "0.0.0-insiders.474c344": "2023-05-03T14:35:08.985Z",
    "0.0.0-insiders.78bd35b": "2023-05-03T15:38:14.332Z",
    "0.0.0-insiders.6ba6faa": "2023-05-09T19:35:41.188Z",
    "0.0.0-insiders.d3f787d": "2023-05-12T15:02:19.835Z",
    "0.0.0-insiders.cc1b192": "2023-05-15T14:11:38.943Z",
    "0.3.0": "2023-05-15T14:15:29.794Z",
    "0.0.0-insiders.59d8f46": "2023-05-19T14:53:39.610Z",
    "0.0.0-insiders.46d60d5": "2023-05-19T15:44:32.927Z",
    "0.0.0-insiders.0a1b1a6": "2023-05-26T19:20:02.845Z",
    "0.0.0-insiders.4443561": "2023-05-30T22:00:58.272Z",
    "0.0.0-insiders.fe49d70": "2023-07-11T15:18:26.794Z",
    "0.0.0-insiders.17ceff1": "2023-07-11T15:30:42.605Z",
    "0.0.0-insiders.6ea4491": "2023-07-11T15:46:55.214Z",
    "0.0.0-insiders.f713976": "2023-07-11T15:49:21.992Z",
    "0.0.0-insiders.0184e34": "2023-07-11T15:51:27.076Z",
    "0.0.0-insiders.532a996": "2023-07-11T15:53:20.759Z",
    "0.4.0": "2023-07-11T15:55:03.996Z",
    "0.0.0-insiders.dfc23a8": "2023-07-11T16:27:24.236Z",
    "0.0.0-insiders.a13d661": "2023-07-14T14:19:40.579Z",
    "0.0.0-insiders.f667b21": "2023-07-14T14:22:02.276Z",
    "0.4.1": "2023-07-14T14:23:08.387Z",
    "0.0.0-insiders.1bc4f3e": "2023-07-17T10:02:10.440Z",
    "0.0.0-insiders.e642c31": "2023-07-27T14:28:28.198Z",
    "0.0.0-insiders.ad48889": "2023-07-28T17:20:51.612Z",
    "0.0.0-insiders.36f92f3": "2023-07-28T17:24:19.876Z",
    "0.0.0-insiders.121f4fa": "2023-08-09T15:56:37.108Z",
    "0.0.0-insiders.ac70a66": "2023-08-09T16:10:40.811Z",
    "0.0.0-insiders.7dab79c": "2023-08-10T14:19:27.717Z",
    "0.5.0": "2023-08-10T14:26:15.227Z",
    "0.0.0-insiders.f365a2b": "2023-08-10T15:50:24.123Z",
    "0.0.0-insiders.4b768f7": "2023-08-10T15:51:54.059Z",
    "0.5.1": "2023-08-10T15:56:51.405Z",
    "0.0.0-insiders.985302f": "2023-08-10T19:31:37.494Z",
    "0.0.0-insiders.72cbb6b": "2023-08-11T12:23:49.553Z",
    "0.5.2": "2023-08-11T12:28:51.120Z",
    "0.0.0-insiders.dad4b36": "2023-08-14T15:30:38.051Z",
    "0.0.0-insiders.468d3bf": "2023-08-15T12:21:05.545Z",
    "0.0.0-insiders.b062544": "2023-08-15T12:21:40.810Z",
    "0.0.0-insiders.3c4989c": "2023-08-15T12:22:22.375Z",
    "0.5.3": "2023-08-15T12:38:06.854Z",
    "0.0.0-insiders.14979f4": "2023-08-22T00:58:14.788Z",
    "0.0.0-insiders.e5605ec": "2023-08-22T00:59:33.869Z",
    "0.0.0-insiders.be81958": "2023-08-29T20:24:40.177Z",
    "0.0.0-insiders.7694e65": "2023-08-31T13:52:18.879Z",
    "0.0.0-insiders.3ebd2f9": "2023-08-31T13:57:55.341Z",
    "0.0.0-insiders.93fd16d": "2023-08-31T14:00:17.866Z",
    "0.5.4": "2023-08-31T14:02:08.847Z",
    "0.0.0-insiders.38fed86": "2023-08-31T14:02:53.998Z",
    "0.0.0-insiders.b300077": "2023-09-18T14:23:14.766Z",
    "0.0.0-insiders.047d591": "2023-10-03T17:25:48.749Z",
    "0.0.0-insiders.12d175e": "2023-10-03T17:26:32.859Z",
    "0.5.5": "2023-10-03T17:31:54.382Z",
    "0.0.0-insiders.b5a251e": "2023-10-04T14:49:50.266Z",
    "0.0.0-insiders.2968765": "2023-10-13T00:46:55.344Z",
    "0.0.0-insiders.c51df4d": "2023-10-13T00:56:50.462Z",
    "0.5.6": "2023-10-13T00:59:24.372Z",
    "0.0.0-insiders.15c1196": "2023-11-08T16:01:26.943Z",
    "0.0.0-insiders.92f10af": "2023-11-08T16:02:59.964Z",
    "0.0.0-insiders.38f2be3": "2023-11-08T16:03:30.910Z",
    "0.5.7": "2023-11-08T16:05:24.330Z",
    "0.0.0-insiders.cf301ca": "2023-12-05T14:19:09.867Z",
    "0.0.0-insiders.4cc6319": "2023-12-05T14:26:27.937Z",
    "0.0.0-insiders.dd4bfce": "2023-12-05T14:30:35.122Z",
    "0.5.8": "2023-12-05T14:33:02.460Z",
    "0.0.0-insiders.fa38999": "2023-12-05T22:44:13.949Z",
    "0.0.0-insiders.e3229c2": "2023-12-05T22:45:32.108Z",
    "0.5.9": "2023-12-05T22:48:48.263Z",
    "0.0.0-insiders.9f8780c": "2023-12-19T18:30:02.744Z",
    "0.0.0-insiders.885b14f": "2023-12-28T17:03:47.473Z",
    "0.5.10": "2023-12-28T17:05:03.286Z",
    "0.0.0-insiders.08f5c4c": "2024-01-05T21:41:34.349Z",
    "0.0.0-insiders.bf40417": "2024-01-05T21:43:09.562Z",
    "0.5.11": "2024-01-05T21:44:11.136Z",
    "0.0.0-insiders.4338bd0": "2024-01-08T20:27:05.754Z",
    "0.0.0-insiders.1fa24c2": "2024-01-12T20:27:26.584Z",
    "0.0.0-insiders.81c446e": "2024-02-28T18:37:15.716Z"
  },
  "maintainers": [
    {
      "name": "malfaitrobin",
      "email": "malfait.robin@gmail.com"
    },
    {
      "name": "bradlc",
      "email": "bradlc41@gmail.com"
    },
    {
      "name": "adamwathan",
      "email": "adam@adamwathan.me"
    },
    {
      "name": "reinink",
      "email": "jonathan@reinink.ca"
    },
    {
      "name": "thecrypticace",
      "email": "thecrypticace@gmail.com"
    }
  ],
  "description": "A Prettier plugin for sorting Tailwind CSS classes.",
  "readme": "",
  "readmeFilename": "",
  "homepage": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tailwindlabs/prettier-plugin-tailwindcss.git"
  },
  "bugs": {
    "url": "https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues"
  },
  "license": "MIT",
  "users": {
    "flumpus-dev": true
  }
}